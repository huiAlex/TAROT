/**
 * Used for managing information related to personnel: HCPs, UAPs, Admins
 * 
 * DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 * one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 * added. DAOs can assume that all data has been validated and is correct.
 * 
 * DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 * accessed by DAOFactory ( * connections and/or accessing other DAOs.
 * 
 *  * 
 */

/**
	 * The typical constructor.
	 * @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.
	 */

/**
	 * Returns the name for a given MID
	 * 
	 * @param mid The MID of the personnel in question.
	 * @return A String representing the name of the personnel.
	 * 	 * 	 */

/**
	 * Adds an empty personnel, and returns the MID.
	 * 
	 * @return A long indicating the new MID.
	 * @param role A {@link Role} enum indicating the personnel's specific role.
	 * 	 * 	 */

/**
	 * Retrieves a PersonnelBean with all of the specific information for a given employee.
	 * 
	 * @param mid The MID of the personnel in question.
	 * @return A PersonnelBean representing the employee.
	 * 	 */

/**
	 * Updates the demographics for a personnel.
	 * 
	 * @param p The personnel bean with the updated information.
	 * 	 */

/**
	 * Indicates whether a certain personnel is in the database.
	 * 
	 * @param pid The MID of the personnel in question.
	 * @return A boolean indicating whether this personnel exists.
	 * 	 */

/**
	 * Returns all of the hospitals this LHCP is associated with.
	 * 
	 * @param mid The MID of the personnel in question.
	 * @return A java.util.List of HospitalBeans.
	 * 	 */

/**
	 * Returns all personnel in the database.
	 * 
	 * @return A java.util.List of personnel.
	 * 	 */

/**
	 * Returns a list of UAPs who work for this LHCP.
	 * 
	 * @param hcpid The MID of the personnel in question.
	 * @return A java.util.List of UAPs.
	 * 	 */

/**
	 * Given a prescription that has been given, this method returns all the information for the
	 * doctor who authorized that prescription.
	 * 
	 * @param prescription The PrescriptionBean describing the prescription in question.
	 * @return The PersonnelBean describing the doctor who authorized it.
	 * 	 */

/**
	 * Matches all personnel who have names LIKE (as in SQL) the first and last names passed in.
	 * 
	 * @param first The first name to be searched for.
	 * @param last The last name to be searched for.
	 * @return A java.util.List of personnel who match these names.
	 * 	 */

/**
	 * Returns list of personnel who are Lab Techs.
	 * @return List of personnel beans.
	 * 	 */

