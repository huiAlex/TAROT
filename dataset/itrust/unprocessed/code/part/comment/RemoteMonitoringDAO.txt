/**
 * Used for the keeping track of remote monitoring data.
 * 
 * DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 * one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 * added. DAOs can assume that all data has been validated and is correct.
 * 
 * DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 * accessed by DAOFactory ( * connections and/or accessing other DAOs.
 * 
 */

/**
	 * The typical constructor.
	 * @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.
	 */

/**
	 * Return remote monitoring list data for a given patient.
	 * 
	 * @param patientMID Patient to retrieve data for.
	 * @return List of TelemedicineBeans
	 * 	 */

/**
	 * Returns patient data for a given HCP
	 * 
	 * @return
	 * 	 */

/**
	 * Get the requested type of data for the specified patient.
	 * 
	 * @param patientMID The MID of the patient
	 * @param dataType The type of telemedicine data to return
	 * @return A list of beans which all contain information of the requested type
	 * 	 */

/**
	 * Store pedometer reading and height/weight data for a given patient in the RemoteMonitoringData table
	 * 
	 * @param patientMID The MID of the patient
	 * @param height The height of the patient
	 * @param weight The weight of the patient
	 * @param pedometerReading The pedometer reading of the patient
	 * @param reporterRole  The role of the person that reported these monitoring stats
	 * @param reporterMID  The MID of the person that reported these monitoring stats
	 * 	 */

/**
	 * Private method to get the number of entries for a certain patientID for today.
	 * @param patientMID
	 * @return the number of entries
	 * 	 */

/**
	 * Private method to get the number of entries for a certain patientID and a certain
	 * data type for today.
	 * @param patientMID
	 * @param dataType
	 * @return the number of entries
	 * 	 */

/**
	 * Show the list of HCPs monitoring this patient
	 * 
	 * @param patientMID The MID of the patient
	 * @return list of HCPs monitoring the provided patient
	 */

/**
	 * Add a patient to the list of HCPs' monitoring lists of Patients
	 * 
	 * @param patientMID The MID of the patient
	 * @param HCPMID The MID of the HCP
	 * @param tBean The TelemedicineBean indicating what telemedicine data the patient is allowed to enter.
	 * @return true if added successfully, false if already in list
	 */

/**
	 * Remove a patient from the list of HCPs' monitoring lists of Patients
	 * 
	 * @param patientMID The MID of the patient
	 * @param HCPMID The MID of the HCP
	 * @return true if removed successfully, false if not in list
	 */

