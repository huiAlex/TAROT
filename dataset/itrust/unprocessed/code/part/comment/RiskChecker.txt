/**
 * An abstract class which has a number of utlity methods for checking risks.
 * 
 * When extending this class, use the methods to fill in all of the necessary information. Then use isAtRisk
 * and getPatientRiskFactors to get the actual risks. See the known subclasses for an example
 * 
 *  * 
 */

/**
	 * @return The name of the disease being checked.
	 */

/**
	 * @return A java.util.List of the risk factors increasing this patients disease risk.
	 */

/**
	 * @return A boolean indicating whether the patient is at increased risk.
	 */

/**
	 * This method exists purely for performance - just stop once you hit the threshold. 
	 * 
	 * Also, the risk factors should be cached in the RiskFactor implementors - in getPatientRiskFactors there
	 * should be no double-querying
	 * 
	 * @return isAtRisk
	 */

/**
	 * @return A java.util.List of patient risk factors associated with this disease.
	 */

