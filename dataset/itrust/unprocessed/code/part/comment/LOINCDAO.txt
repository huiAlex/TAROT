/**
 * DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 * one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 * added. DAOs can assume that all data has been validated and is correct.
 * 
 * DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 * accessed by DAOFactory ( * connections and/or accessing other DAOs.
 * 
 * Logical Observation Identifiers Names and Codes (LOINC) is a database and universal
 *  standard for identifying medical laboratory observations. 
 *  
 *  *  */

/**
	 * The typical constructor.
	 * @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.
	 */

/**
	 * Adds a LOINC
	 * 
	 * @param hosp The LOINCbean representing the new code to be added.
	 * 	 * 	 */

/**
	 * Returns all LOINCs associated with LaboratoryProcedureCode
	 * 
	 * @param visitID The code of the Laboratory Procedure Code as a String.
	 * @return A java.util.List of LOINCBeans matching the Laboratory Procedure Code.
	 * 	 */

/**
	 * Updates the information in LOINC.
	 * 
	 * @param ov
	 * 	 */

/**
	 * Returns all LOINCs as a list.
	 * 
	 * @return A java.util.List of LOINCbeans.
	 * 	 */

