<Class>
    <Id>110</Id>
    <Package>edu.ncsu.csc.itrust.dao.fakeemail</Package>
    <ClassName>EmailTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TestDataGenerator [gen=new TestDataGenerator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;clearFakeEmail;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;fakeEmail;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testListAllEmails</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Email&gt; [emails=factory.getFakeEmailDAO().getAllEmails()]</InnerVar>
                <InnerVar>Email [email=getTestEmail()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[4, emails.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>new EmailUtil(factory);sendEmail;[email]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[5, emails.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[getTestEmail(), emails.get(0)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testListEmailsByPerson</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [email="gstormcrow@iTrust.org"]</InnerVar>
                <InnerVar>List&lt;Email&gt; [emails=factory.getFakeEmailDAO().getEmailsByPerson(email)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[2, emails.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["this is an email", emails.get(0).getSubject()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["this is another email", emails.get(1).getSubject()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testFindWithString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Email [other=getTestEmail()]</InnerVar>
                <InnerVar>List&lt;Email&gt; [emails=factory.getFakeEmailDAO().getEmailWithBody("is the")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>factory.getFakeEmailDAO();sendEmailRecord;[getTestEmail()]</InnerMethodInvoke>
                <InnerMethodInvoke>factory.getFakeEmailDAO();sendEmailRecord;[getTestEmail()]</InnerMethodInvoke>
                <InnerMethodInvoke>other;setBody;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>factory.getFakeEmailDAO();sendEmailRecord;[other]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[2, emails.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[getTestEmail(), emails.get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[getTestEmail(), emails.get(1)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTestEmail</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Email</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Email [email=new Email()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>email;setBody;["this is the body"]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setFrom;["ncsucsc326@gmail.com"]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setSubject;["this is the subject"]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setToList;[Arrays.asList("ncsucsc326@gmail.com")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>