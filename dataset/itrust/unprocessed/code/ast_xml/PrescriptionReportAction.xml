<Class>
    <Id>495</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>PrescriptionReportAction</ClassName>
    <SuperClass>PatientBaseAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PrescriptionReportAction  /** 
 * Handles Prescription Reports for the given pid Used by hcp-uap/getPrescriptionReport.jsp, hcp-uap/viewPrescriptionRecord.jsp, patient/getMyPrescriptionReport.jsp, &amp; patient/viewMyPrescriptionRecord.jsp
 * @author laurenhayward
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>isRepresenting</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>ovDAO</FieldName>
            <FieldType>OfficeVisitDAO</FieldType>
        </Field>
        <Field>
            <FieldName>prDAO</FieldName>
            <FieldType>PrescriptionReportDAO</FieldType>
        </Field>
        <Field>
            <FieldName>patientDAO</FieldName>
            <FieldType>PatientDAO</FieldType>
        </Field>
        <Field>
            <FieldName>loggedInMID</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>PrescriptionReportAction</MethodName>
            <MethodComment>/** 
 * Super class validates pidString
 * @param factory The DAOFactory used to create the DAOs used in this action.
 * @param loggedInMID The MID of the user who is making a prescription report.
 * @param pidString The MID of the patient in question.
 * @throws iTrustException
 * @throws DBException
 * @throws NoHealthRecordsException
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
                <ParameterType>String pidString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>NoHealthRecordsException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>representPatient</MethodName>
            <MethodComment>/** 
 * Takes the patient's representee as a param and returns it as a long if the patient represents the input param
 * @param input the patient's representee mid
 * @return representee's mid as a long
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>String input</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllOfficeVisits</MethodName>
            <MethodComment>/** 
 * Returns a list of all office visits for the pid
 * @return list of OfficeVisitBeans for the pid
 * @throws DBException
 */
</MethodComment>
            <ReturnType>OfficeVisitBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrescriptionReports</MethodName>
            <MethodComment>/** 
 * Used by the JSP, passes a Map from the html form and a list of OfficeVisitBeans Returns a list of PrescriptionReportBeans
 * @param params A java.util.HashMap containing the parameter map.
 * @param officeVisits A java.util.List of OfficeVisitBeans for the visits.
 * @return list of PrescriptionReportBeans
 * @throws DBException
 */
</MethodComment>
            <ReturnType>PrescriptionReportBean</ReturnType>
            <ParameterList>
                <ParameterType>String params</ParameterType>
                <ParameterType>OfficeVisitBean officeVisits</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HashMap&lt;String,String&gt; [myParams=ParameterUtil.convertMap(params)]</InnerVar>
                <InnerVar>List&lt;Long&gt; [ovIDs=new ArrayList&lt;Long&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPatient</MethodName>
            <MethodComment>/** 
 * Returns a PatientBean for the pid
 * @return PatientBean
 * @throws DBException
 */
</MethodComment>
            <ReturnType>PatientBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getQueryString</MethodName>
            <MethodComment>/** 
 * Used by the JSP, which passes the param map from the html form and a list of OfficeVisitBeans Returns a string that will be used to create a new url. The JSP will pull params from this url to create the prescription report.
 * @param paramMap A java.util.HashMap of the parameters.
 * @param officeVisits A java.util.List of OfficeVisitBeans.
 * @return the string that will be used in the new url
 * @throws FormValidationException
 * @throws DBException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>Map paramMap</ParameterType>
                <ParameterType>OfficeVisitBean officeVisits</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HashMap&lt;String,String&gt; [myParams=ParameterUtil.convertMap(paramMap)]</InnerVar>
                <InnerVar>List&lt;Integer&gt; [ovOffsets=checkOfficeVisits(myParams,officeVisits)]</InnerVar>
                <InnerVar>String [queryString=buildQueryString(ovOffsets)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkOfficeVisits</MethodName>
            <MethodComment>/** 
 * Checks office visits
 * @param myParams list of parameters
 * @param officeVisits list of office visits
 * @return Returns a java.util.ArrayList of Integers for the given office visits.
 */
</MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList>
                <ParameterType>String myParams</ParameterType>
                <ParameterType>OfficeVisitBean officeVisits</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArrayList&lt;Integer&gt; [list=new ArrayList&lt;Integer&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildQueryString</MethodName>
            <MethodComment>/** 
 * Builds a query string for office visits
 * @param ovOffsets offsets for the office visits
 * @return A SQL query in a Java String.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>Integer ovOffsets</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [n=ovOffsets.size()]</InnerVar>
                <InnerVar>String [str="&amp;n=" + n]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>