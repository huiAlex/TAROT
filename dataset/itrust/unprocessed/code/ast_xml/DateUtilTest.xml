<Class>
    <Id>171</Id>
    <Package>edu.ncsu.csc.itrust</Package>
    <ClassName>DateUtilTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>testYearsAgo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [yearsAgo=50]</InnerVar>
                <InnerVar>SimpleDateFormat [formatter=new SimpleDateFormat("yyyy")]</InnerVar>
                <InnerVar>String [year="" + (Integer.valueOf(formatter.format(new Date())) - yearsAgo)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[year, DateUtil.yearsAgo(yearsAgo).split("/")[2]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testYearsFromNow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=new GregorianCalendar()]</InnerVar>
                <InnerVar>Long [twoYearsAgo=cal.getTimeInMillis()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Date should be within 5s: ", twoYearsAgo, DateUtil.getSQLdateXyearsAgoFromNow(2).getTime(), 5000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSetSQLMonthRange0</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>java.sql.Date [month1=new java.sql.Date(0l)]</InnerVar>
                <InnerVar>java.sql.Date [month2=new java.sql.Date(0l)]</InnerVar>
                <InnerVar>int [year1=new GregorianCalendar().get(Calendar.YEAR)]</InnerVar>
                <InnerVar>int [year2=new GregorianCalendar().get(Calendar.YEAR)]</InnerVar>
                <InnerVar>GregorianCalendar [cal=new GregorianCalendar()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>DateUtil;setSQLMonthRange;[month1, 8, 0, month2, 11, 0]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;setTime;[month1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.YEAR), year2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.MONTH), 8]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.DAY_OF_MONTH), 1]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;setTime;[month2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.YEAR), year2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.MONTH), 11]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.DAY_OF_MONTH), 31]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSetSQLMonthRange1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>java.sql.Date [month1=new java.sql.Date(0l)]</InnerVar>
                <InnerVar>java.sql.Date [month2=new java.sql.Date(0l)]</InnerVar>
                <InnerVar>int [year1=new GregorianCalendar().get(Calendar.YEAR)]</InnerVar>
                <InnerVar>int [year2=new GregorianCalendar().get(Calendar.YEAR)]</InnerVar>
                <InnerVar>GregorianCalendar [cal=new GregorianCalendar()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>DateUtil;setSQLMonthRange;[month1, 8, 1, month2, 11, 1]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;setTime;[month1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.YEAR), year2 - 1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.MONTH), 8]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.DAY_OF_MONTH), 1]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;setTime;[month2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.YEAR), year2 - 1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.MONTH), 11]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[cal.get(Calendar.DAY_OF_MONTH), 31]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>