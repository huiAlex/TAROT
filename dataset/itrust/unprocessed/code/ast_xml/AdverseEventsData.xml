<Class>
    <Id>438</Id>
    <Package>edu.ncsu.csc.itrust.charts</Package>
    <ClassName>AdverseEventsData</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>DatasetProducer</SuperInterface>
        <SuperInterface>CategoryToolTipGenerator</SuperInterface>
        <SuperInterface>CategoryItemLinkGenerator</SuperInterface>
        <SuperInterface>Serializable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AdverseEventsData  /** 
 * This class handles the data for charting in CeWolf/JFreeChart. This class implements DatasetProducer, CategoryToolTipGenerator, CategoryItemLinkGenerator, and Serializable.
 * @author Jason
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>months</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>values</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>adverseEvents</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>adverseEvents</FieldName>
            <FieldType>AdverseEventBean</FieldType>
        </Field>
        <Field>
            <FieldName>codeName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setAdverseEventsList</MethodName>
            <MethodComment>/** 
 * Called from the JSP page to initialize the list of Adverse Events needed to produce the desired chart.
 * @param adEvents
 * @param name
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>AdverseEventBean adEvents</ParameterType>
                <ParameterType>String name</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>produceDataset</MethodName>
            <MethodComment>/** 
 * This method parses the list of Adverse Event Beans to initialize the chart dataset.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <ParameterType>Map params</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DefaultCategoryDataset [dataset=new DefaultCategoryDataset(){
  /** 
 * The generated serializable ID.
 */
  private static final long serialVersionUID=-8238489914590553747L;
  /** 
 * @see java.lang.Object#finalize()
 */
  @Override protected void finalize() throws Throwable {
    super.finalize();
  }
}
]</InnerVar>
                <InnerVar>SimpleDateFormat [sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DatasetProduceException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finalize</MethodName>
            <MethodComment>/** 
 * @see java.lang.Object#finalize()
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasExpired</MethodName>
            <MethodComment>/** 
 * This producer's data is invalidated after 5 seconds. By this method the producer can influence Cewolf's caching behaviour the way it wants to.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>Map params</ParameterType>
                <ParameterType>Date since</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProducerId</MethodName>
            <MethodComment>/** 
 * Returns a unique ID for this DatasetProducer
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateLink</MethodName>
            <MethodComment>/** 
 * Returns a link target for a special data item.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>Object data</ParameterType>
                <ParameterType>int series</ParameterType>
                <ParameterType>Object category</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finalize</MethodName>
            <MethodComment>/** 
 * @see java.lang.Object#finalize()
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateToolTip</MethodName>
            <MethodComment>/** 
 * @see org.jfree.chart.tooltips.CategoryToolTipGenerator#generateToolTip(CategoryDataset,int,int)
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>CategoryDataset arg0</ParameterType>
                <ParameterType>int series</ParameterType>
                <ParameterType>int arg2</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>