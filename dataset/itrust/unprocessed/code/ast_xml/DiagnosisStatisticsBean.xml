<Class>
    <Id>549</Id>
    <Package>edu.ncsu.csc.itrust.beans</Package>
    <ClassName>DiagnosisStatisticsBean</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DiagnosisStatisticsBean  /** 
 * A bean for storing data about diagnosis counts A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean  (with the exception of minor formatting such as concatenating phone numbers together).  A bean must only have Getters and Setters (Eclipse Hint: Use Source &gt; Generate Getters and Settersï¿½  to create these easily)
 * @author student
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>zipCode</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>zipStats</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>regionStats</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>startDate</FieldName>
            <FieldType>Date</FieldType>
        </Field>
        <Field>
            <FieldName>endDate</FieldName>
            <FieldType>Date</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DiagnosisStatisticsBean</MethodName>
            <MethodComment>/** 
 * Constructor for an empty bean 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DiagnosisStatisticsBean</MethodName>
            <MethodComment>/** 
 * Constructor for the bean. Accepts stats and zip code
 * @param zipCode The zip code analyzed
 * @param zipStats The count of diagnoses for the zip code
 * @param regionStats The count of diagnoses for the region
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>String zipCode</ParameterType>
                <ParameterType>long zipStats</ParameterType>
                <ParameterType>long regionStats</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DiagnosisStatisticsBean</MethodName>
            <MethodComment>/** 
 * Constructor for the bean. Accepts stats and zip code
 * @param zipCode The zip code analyzed
 * @param zipStats The count of diagnoses for the zip code
 * @param regionStats The count of diagnoses for the region
 * @param startDate The beginning of the data's time period
 * @param endDate The end of the data's time period
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>String zipCode</ParameterType>
                <ParameterType>long zipStats</ParameterType>
                <ParameterType>long regionStats</ParameterType>
                <ParameterType>Date startDate</ParameterType>
                <ParameterType>Date endDate</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getZipCode</MethodName>
            <MethodComment>/** 
 * Getter for Zip code
 * @return The stored Zip code
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setZipCode</MethodName>
            <MethodComment>/** 
 * Setter for Zip code
 * @param zipCode The zip code to be stored
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>String zipCode</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getZipStats</MethodName>
            <MethodComment>/** 
 * Getter for Zip code count
 * @return The count of diagnoses for the zip code
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setZipStats</MethodName>
            <MethodComment>/** 
 * Setter for Zip code count
 * @param zipStats The count of diagnoses to be stored
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>long zipStats</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRegionStats</MethodName>
            <MethodComment>/** 
 * Getter for Region count
 * @return The count of diagnoses for the region
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setRegionStats</MethodName>
            <MethodComment>/** 
 * Setter for Region count
 * @param regionStats The count of regional diagnoses to be stored
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>long regionStats</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStartDate</MethodName>
            <MethodComment>/** 
 * Getter for Start Date
 * @return The start date for the data
 */
</MethodComment>
            <ReturnType>Date</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStartDate</MethodName>
            <MethodComment>/** 
 * Setter for Start Date
 * @param startDate The data's start date
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>Date startDate</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEndDate</MethodName>
            <MethodComment>/** 
 * Getter for End Date
 * @return The end date for the data
 */
</MethodComment>
            <ReturnType>Date</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setEndDate</MethodName>
            <MethodComment>/** 
 * Setter for the End Date
 * @param endDate
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>Date endDate</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>