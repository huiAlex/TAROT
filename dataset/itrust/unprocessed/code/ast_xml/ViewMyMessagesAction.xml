<Class>
    <Id>477</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>ViewMyMessagesAction</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ViewMyMessagesAction  /** 
 * Action class for ViewMyMessages.jsp
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>loggedInMID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>patientDAO</FieldName>
            <FieldType>PatientDAO</FieldType>
        </Field>
        <Field>
            <FieldName>personnelDAO</FieldName>
            <FieldType>PersonnelDAO</FieldType>
        </Field>
        <Field>
            <FieldName>messageDAO</FieldName>
            <FieldType>MessageDAO</FieldType>
        </Field>
        <Field>
            <FieldName>referralDAO</FieldName>
            <FieldType>ReferralDAO</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ViewMyMessagesAction</MethodName>
            <MethodComment>/** 
 * Set up defaults
 * @param factory The DAOFactory used to create the DAOs used in this action.
 * @param loggedInMID The MID of the user who is viewing their messages.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMyMessages</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMyMessagesTimeAscending</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user and sorts by ascending time
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMyMessagesNameAscending</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user and sorts names in ascending order
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMyMessagesNameDescending</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user and sorts name in descending order
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMySentMessages</MethodName>
            <MethodComment>/** 
 * Gets all the sent messages for the logged in user
 * @return a list of all the user's sent messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMySentMessagesTimeAscending</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user and sorts by ascending time
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMySentMessagesNameAscending</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user and sorts names in ascending order
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllMySentMessagesNameDescending</MethodName>
            <MethodComment>/** 
 * Gets all the messages for the logged in user and sorts name in descending order
 * @return a list of all the user's messages
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateAndCreateFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>String filter</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [f=filter.split(",",-1)]</InnerVar>
                <InnerVar>DateFormat [format=new SimpleDateFormat("MM/dd/yyyy")]</InnerVar>
                <InnerVar>Date [s=null]</InnerVar>
                <InnerVar>Date [en=null]</InnerVar>
                <InnerVar>String [nf=f[0] + "," + f[1]+ ","+ f[2]+ ","+ f[3]+ ","+ f[4]+ ","+ f[5]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>filterMessages</MethodName>
            <MethodComment>/** 
 * Gets a list of messages for a user based on their filter criteria.
 * @param messages List of all of a user's MessageBeans
 * @param filter String containing a user's filter criteria.
 * @return a List of MessageBeans that meet the criteria of the filter.
 * @throws iTrustException
 * @throws ParseException
 */
</MethodComment>
            <ReturnType>MessageBean</ReturnType>
            <ParameterList>
                <ParameterType>MessageBean messages</ParameterType>
                <ParameterType>String filter</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;MessageBean&gt; [filtered=new ArrayList&lt;MessageBean&gt;()]</InnerVar>
                <InnerVar>String[] [f=filter.split(",",-1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment>/** 
 * Gets a patient's name from their MID
 * @param mid the MID of the patient
 * @return the patient's name
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPersonnelName</MethodName>
            <MethodComment>/** 
 * Gets a personnel's name from their MID
 * @param mid the MID of the personnel
 * @return the personnel's name
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setRead</MethodName>
            <MethodComment>/** 
 * Set the state of the MessageBean to read, after  it is read by a user.
 * @param mBean MessageBean to be read
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>MessageBean mBean</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnreadCount</MethodName>
            <MethodComment>/** 
 * Get the number of unread messages that the current user has.
 * @return The number of unread messages.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;MessageBean&gt; [messages=getAllMyMessages()]</InnerVar>
                <InnerVar>int [count=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>linkedToReferral</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>long id</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>