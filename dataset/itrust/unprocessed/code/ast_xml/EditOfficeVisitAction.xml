<Class>
    <Id>490</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>EditOfficeVisitAction</ClassName>
    <SuperClass>EditOfficeVisitBaseAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EditOfficeVisitAction  /** 
 * Edits the office visits of a patient Used by editOfficeVisit.jsp.  This  exists in two states: saved and unsaved.  If unsaved, data cannot be saved  to sub actions (if this is attempted, exceptions will be raised).  Once it  is saved, however, the sub actions can be saved.  
 * @author laurenhayward
 * @author student
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>validator</FieldName>
            <FieldType>EditOfficeVisitValidator</FieldType>
        </Field>
        <Field>
            <FieldName>personnelDAO</FieldName>
            <FieldType>PersonnelDAO</FieldType>
        </Field>
        <Field>
            <FieldName>hospitalDAO</FieldName>
            <FieldType>HospitalsDAO</FieldType>
        </Field>
        <Field>
            <FieldName>ovDAO</FieldName>
            <FieldType>OfficeVisitDAO</FieldType>
        </Field>
        <Field>
            <FieldName>patDAO</FieldName>
            <FieldType>PatientDAO</FieldType>
        </Field>
        <Field>
            <FieldName>prescriptionsAction</FieldName>
            <FieldType>EditPrescriptionsAction</FieldType>
        </Field>
        <Field>
            <FieldName>proceduresAction</FieldName>
            <FieldType>EditProceduresAction</FieldType>
        </Field>
        <Field>
            <FieldName>immunizationsAction</FieldName>
            <FieldType>EditImmunizationsAction</FieldType>
        </Field>
        <Field>
            <FieldName>diagnosesAction</FieldName>
            <FieldType>EditDiagnosesAction</FieldType>
        </Field>
        <Field>
            <FieldName>labProceduresAction</FieldName>
            <FieldType>EditLabProceduresAction</FieldType>
        </Field>
        <Field>
            <FieldName>patientInstructionsAction</FieldName>
            <FieldType>EditPatientInstructionsAction</FieldType>
        </Field>
        <Field>
            <FieldName>referralsAction</FieldName>
            <FieldType>EditReferralsAction</FieldType>
        </Field>
        <Field>
            <FieldName>loggingAction</FieldName>
            <FieldType>EventLoggingAction</FieldType>
        </Field>
        <Field>
            <FieldName>loggedInMID</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EditOfficeVisitAction</MethodName>
            <MethodComment>/** 
 * Patient id and office visit id validated by super class
 * @param factory The DAOFactory to be used in creating the DAOs for this action.
 * @param loggedInMID The MID of the user who is authorizing this action.
 * @param pidString The patient who this action is performed on.
 * @param ovIDString The ID of the office visit in play.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
                <ParameterType>String pidString</ParameterType>
                <ParameterType>String ovIDString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>EditOfficeVisitAction</MethodName>
            <MethodComment>/** 
 * Create an OfficeVisitAction that is not yet associated with an actual  office visit.  When update() is called, it will be saved.  Until then,  any attempt to save prescriptions, procedures, lab procedures,  immunizations, or diagnoses will raise an exception.
 * @param factory
 * @param loggedInMID
 * @param pidString
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
                <ParameterType>String pidString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reinitializeSubActions</MethodName>
            <MethodComment>/** 
 * Used to update the sub actions once a office visit is saved.  Until this  is called, attempting to save sub actions will raise an exception.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DAOFactory [factory=getFactory()]</InnerVar>
                <InnerVar>String [pidString="" + getPid()]</InnerVar>
                <InnerVar>String [ovIDString="" + getOvID()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOfficeVisit</MethodName>
            <MethodComment>/** 
 * Returns the office visit bean for the office visit
 * @return the OfficeVisitBean of the office visit
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>OfficeVisitBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prescriptions</MethodName>
            <MethodComment>/** 
 * @return The EditPrescriptionsAction sub action associated with this office visit.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>EditPrescriptionsAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>procedures</MethodName>
            <MethodComment>/** 
 * @return The EditProceduresAction sub action associated with this office visit.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>EditProceduresAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>immunizations</MethodName>
            <MethodComment>/** 
 * @return The EditImmunizationsAction sub action associated with this office visit.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>EditImmunizationsAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diagnoses</MethodName>
            <MethodComment>/** 
 * @return The EditDiagnosesAction sub action associated with this office visit.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>EditDiagnosesAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>labProcedures</MethodName>
            <MethodComment>/** 
 * @return The EditLabProceduresAction sub action associated with this office visit.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>EditLabProceduresAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>patientInstructions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EditPatientInstructionsAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>referrals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EditReferralsAction</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHospitals</MethodName>
            <MethodComment>/** 
 * This is a list of all hospitals, ordered by the office visit's hcp FIRST
 * @param hcpID
 * @return
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>HospitalBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;HospitalBean&gt; [hcpsHospitals=personnelDAO.getHospitals(getHcpid())]</InnerVar>
                <InnerVar>List&lt;HospitalBean&gt; [allHospitals=hospitalDAO.getAllHospitals()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>combineLists</MethodName>
            <MethodComment>/** 
 * Combines two lists of hospitals
 * @param hcpsHospitals hospitals the HCP is assigned to
 * @param allHospitals all hospitals
 * @return the combined list
 */
</MethodComment>
            <ReturnType>HospitalBean</ReturnType>
            <ParameterList>
                <ParameterType>HospitalBean hcpsHospitals</ParameterType>
                <ParameterType>HospitalBean allHospitals</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateInformation</MethodName>
            <MethodComment>/** 
 * Updates the office visit with information from the form passed in.  If  the office visit has not yet been saved, calling this method will save  it as well as make the sub actions able to be saved.
 * @param form information to update
 * @return "success" or exception's message
 * @throws FormValidationException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>EditOfficeVisitForm form</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [confirm=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>logOfficeVisitEvent</MethodName>
            <MethodComment>/** 
 * Helper that logs an office visit event.  The associated patient id, HCP  id, and office visit id are automatically included.
 * @param trans Transaction type for the log.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>TransactionType trans</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>loggingAction;logEvent;[trans, loggedInMID, getPid(), "Office visit ID: " + getOvID()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeEmailApp</MethodName>
            <MethodComment>/** 
 * Sends e-mail regarding the prescribed dangerous drug.
 * @param hcpID HCP the prescription is made by
 * @param patID ID of the patient prescription is for
 * @param problem The allergy and/or interaction that is the problem
 * @return the sent e-mail
 * @throws DBException
 */
</MethodComment>
            <ReturnType>Email</ReturnType>
            <ParameterList>
                <ParameterType>long hcpID</ParameterType>
                <ParameterType>String patID</ParameterType>
                <ParameterType>String problem</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PatientBean [p=patDAO.getPatient(Long.parseLong(patID))]</InnerVar>
                <InnerVar>String [hcpName=personnelDAO.getName(hcpID)]</InnerVar>
                <InnerVar>Email [email=new Email()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>email;setFrom;["no-reply@itrust.com"]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setToList;[Arrays.asList(p.getEmail())]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setSubject;["HCP has prescribed you a potentially dangerous medication"]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setBody;[String.format("%s has prescribed a medication that you are allergic to or that has a known interaction with a drug you are currently taking. %s",hcpName,problem)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateOv</MethodName>
            <MethodComment>/** 
 * Updates the office visit.
 * @param form form with all the information
 * @throws DBException
 * @throws FormValidationException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>EditOfficeVisitForm form</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>OfficeVisitBean [ov=getBean()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>validator;validate;[form]</InnerMethodInvoke>
                <InnerMethodInvoke>ov;setNotes;[form.getNotes()]</InnerMethodInvoke>
                <InnerMethodInvoke>ov;setVisitDateStr;[form.getVisitDate()]</InnerMethodInvoke>
                <InnerMethodInvoke>ov;setHcpID;[Long.valueOf(form.getHcpID())]</InnerMethodInvoke>
                <InnerMethodInvoke>ov;setPatientID;[Long.valueOf(form.getPatientID())]</InnerMethodInvoke>
                <InnerMethodInvoke>ov;setHospitalID;[form.getHospitalID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;updateBean;[ov]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>FormValidationException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBean</MethodName>
            <MethodComment>/** 
 * @return The OfficeVisitBean associated with this office visit, or if it has not been saved, a default OfficeVisitBean with the HCP id and  patient id filled in.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>OfficeVisitBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateBean</MethodName>
            <MethodComment>/** 
 * Update the office visit with the given data.  If the office visit has  not yet been saved, this will save it and reinitialize the sub actions.
 * @param bean The data with which to update the office visit.
 * @throws DBException
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>OfficeVisitBean bean</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>