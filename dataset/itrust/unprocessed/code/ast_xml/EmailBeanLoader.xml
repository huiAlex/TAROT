<Class>
    <Id>572</Id>
    <Package>edu.ncsu.csc.itrust.beans.loaders</Package>
    <ClassName>EmailBeanLoader</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BeanLoader</SuperInterface>
        <SuperInterface>Email</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EmailBeanLoader  /** 
 * A loader for Fake Emails. Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.  For details on the paradigm for a loader (and what its methods do), see  {@link BeanLoader}
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>loadList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Email</ReturnType>
            <ParameterList>
                <ParameterType>ResultSet rs</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Email&gt; [list=new ArrayList&lt;Email&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadParameters</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PreparedStatement</ReturnType>
            <ParameterList>
                <ParameterType>PreparedStatement ps</ParameterType>
                <ParameterType>Email email</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ps;setString;[1, email.getToListStr()]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;setString;[2, email.getFrom()]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;setString;[3, email.getSubject()]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;setString;[4, email.getBody()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadSingle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Email</ReturnType>
            <ParameterList>
                <ParameterType>ResultSet rs</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Email [email=new Email()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>email;setFrom;[rs.getString("FromAddr")]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setToList;[Arrays.asList(rs.getString("ToAddr").split(","))]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setBody;[rs.getString("Body")]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setSubject;[rs.getString("Subject")]</InnerMethodInvoke>
                <InnerMethodInvoke>email;setTimeAdded;[rs.getTimestamp("AddedDate")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>