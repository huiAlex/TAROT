<Class>
    <Id>451</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>ManageHospitalAssignmentsAction</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ManageHospitalAssignmentsAction  /** 
 * Manages the assignment of HCPs to hospitals Used by hospitalAssignments.jsp
 * @author laurenhayward
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>personnelDAO</FieldName>
            <FieldType>PersonnelDAO</FieldType>
        </Field>
        <Field>
            <FieldName>hospitalsDAO</FieldName>
            <FieldType>HospitalsDAO</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ManageHospitalAssignmentsAction</MethodName>
            <MethodComment>/** 
 * Set up defaults
 * @param factory The DAOFactory used to create the DAOs used in this action.
 * @param loggedInMID The MID of the user managing hospitals.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAvailableHospitals</MethodName>
            <MethodComment>/** 
 * Returns a list of hospitals to which the given mid is not currently assigned
 * @param midString
 * @return list of HospitalBeans
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>HospitalBean</ReturnType>
            <ParameterList>
                <ParameterType>String midString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAssignedHospitals</MethodName>
            <MethodComment>/** 
 * Returns a list of hospitals to which the given mid is currently assigned
 * @param midString
 * @return list of HosptialBeans
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>HospitalBean</ReturnType>
            <ParameterList>
                <ParameterType>String midString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assignHCPToHospital</MethodName>
            <MethodComment>/** 
 * Assigns the mid to the hospital
 * @param midString The MID of the person assigned to the hospital as a String.
 * @param hospitalID The ID of the hospital.
 * @return message indicating the status of the assignment
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>String midString</ParameterType>
                <ParameterType>String hospitalID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeHCPAssignmentToHospital</MethodName>
            <MethodComment>/** 
 * Removes HCPs assignment to the designated hospital
 * @param midString the HCP's mid
 * @param hospitalID the hospital id to be removed
 * @return Status message
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>String midString</ParameterType>
                <ParameterType>String hospitalID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeAllAssignmentsFromHCP</MethodName>
            <MethodComment>/** 
 * Removes all hospital assignments for the given hcp mid
 * @param midString HCP's mid
 * @return status message
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <ParameterType>String midString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkHCPID</MethodName>
            <MethodComment>/** 
 * Checks if the hcpID param is a HCP
 * @param hcpID the String to be checked
 * @return the mid as a long if the hcpID is a HCP's mid
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>String hcpID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkLTHospital</MethodName>
            <MethodComment>/** 
 * Checks if the HCP is a LT if it is then check to see if a hospital is assigned to them
 * @param hcpID the String to be checked
 * @return true If the LT has an assigned hospital
 * @return false If the LT does not have an assigned hospital
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>String hcpID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>