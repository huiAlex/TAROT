<Class>
    <Id>246</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>ResetPasswordActionTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>evil</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>feDAO</FieldName>
            <FieldType>FakeEmailDAO</FieldType>
        </Field>
        <Field>
            <FieldName>action</FieldName>
            <FieldType>ResetPasswordAction</FieldType>
        </Field>
        <Field>
            <FieldName>gen</FieldName>
            <FieldType>TestDataGenerator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;clearAllTables;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCheckMID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["empty", 0, action.checkMID("")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["null", 0, action.checkMID(null)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["not a number", 0, action.checkMID("a")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["non-existant", 0, action.checkMID("200")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["existant", 1, action.checkMID("1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["existant", 9000000000L, action.checkMID("9000000000")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCheckMIDEvil</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[0l, action.checkMID("")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCheckMIDEvil2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[0l, action.checkMID("a")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCheckRole</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient2;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;uap1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["patient", action.checkRole(2L,"patient")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["hcp", action.checkRole(9000000000L,"hcp")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["uap", action.checkRole(8000000009L,"uap")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[null, action.checkRole(0L,"admin")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[null, action.checkRole(0L,"HCP")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCheckWrongRole</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCheckAnswerNull</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["empty", null, action.checkAnswerNull("")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["null", null, action.checkAnswerNull(null)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["answer", action.checkAnswerNull("answer")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetSecurityQuestion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["what is your favorite color?", action.getSecurityQuestion(1l)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["first letter?", action.getSecurityQuestion(9000000000L)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["first letter?", action.getSecurityQuestion(9000000000L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetSecurityQuestionEvil</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["", action.getSecurityQuestion(1l)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testResetPassword</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Email&gt; [list=feDAO.getAllEmails()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Answer did not match", action.resetPassword(1L,"patient","wrong","12345678","12345678","127.0.0.1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Answer did not match", action.resetPassword(9000000000L,"hcp","wrong","12345678","12345678","127.0.0.1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Invalid role", action.resetPassword(9000000000L,"a","a","12345678","12345678","127.0.0.1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Password changed", action.resetPassword(1L,"patient","blue","12345678","12345678","127.0.0.1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Dear Random Person, \n You have chosen to change your iTrust password for user 1", list.get(0).getBody()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Role mismatch", action.resetPassword(9000000000L,"uap","a","12345678","12345678","127.0.0.1")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testResetForHCP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Email&gt; [list=feDAO.getAllEmails()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Password changed", action.resetPassword(9000000000L,"hcp","a","12345678","12345678","127.0.0.1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Dear Kelly Doctor, \n You have chosen to change your iTrust password for user 9000000000", list.get(0).getBody()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testValidatePasswordNull</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testValidatePasswordEmpty</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testValidatePasswordWrong</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>