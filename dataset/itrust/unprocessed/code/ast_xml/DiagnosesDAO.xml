<Class>
    <Id>425</Id>
    <Package>edu.ncsu.csc.itrust.dao.mysql</Package>
    <ClassName>DiagnosesDAO</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DiagnosesDAO  /** 
 * Used for managing diagnoses given during a particular office visit. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see  {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
 * @author student 
 * @author student
 * @author student
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>loader</FieldName>
            <FieldType>DiagnosisBeanLoader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DiagnosesDAO</MethodName>
            <MethodComment>/** 
 * @param factory
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getList</MethodName>
            <MethodComment>/** 
 * @param visitID
 * @return
 * @throws DBException
 */
</MethodComment>
            <ReturnType>DiagnosisBean</ReturnType>
            <ParameterList>
                <ParameterType>long visitID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDiagnosisCounts</MethodName>
            <MethodComment>/** 
 * Gets a local zip code count and regional count of a specified diagnosis code
 * @param icdCode The diagnosis code
 * @param zipCode The zip code to evaluate
 * @param lower The starting date
 * @param upper The ending date
 * @return A bean containing the local and regional counts
 * @throws DBException
 */
</MethodComment>
            <ReturnType>DiagnosisStatisticsBean</ReturnType>
            <ParameterList>
                <ParameterType>String icdCode</ParameterType>
                <ParameterType>String zipCode</ParameterType>
                <ParameterType>java.util.Date lower</ParameterType>
                <ParameterType>java.util.Date upper</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
                <InnerVar>DiagnosisStatisticsBean [dsBean=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWeeklyCounts</MethodName>
            <MethodComment>/** 
 * Gets a weekly local zip code count and regional count of a specified diagnosis code over a time period
 * @param icdCode The diagnosis code
 * @param zipCode The zip code to evaluate
 * @param lower The starting date
 * @param upper The ending date
 * @return A list of beans containing the local and regional count for each week in the time period
 * @throws DBException
 */
</MethodComment>
            <ReturnType>DiagnosisStatisticsBean</ReturnType>
            <ParameterList>
                <ParameterType>String icdCode</ParameterType>
                <ParameterType>String zipCode</ParameterType>
                <ParameterType>java.util.Date lower</ParameterType>
                <ParameterType>java.util.Date upper</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
                <InnerVar>Date [lowerDate=cal.getTime()]</InnerVar>
                <InnerVar>Date [upperDate=cal.getTime()]</InnerVar>
                <InnerVar>ArrayList&lt;DiagnosisStatisticsBean&gt; [weekStats=new ArrayList&lt;DiagnosisStatisticsBean&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cal;setTime;[lower]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;set;[Calendar.DAY_OF_WEEK, Calendar.MONDAY]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, 24 * 6]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCountForWeekOf</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DiagnosisStatisticsBean</ReturnType>
            <ParameterList>
                <ParameterType>String icdCode</ParameterType>
                <ParameterType>String zipCode</ParameterType>
                <ParameterType>java.util.Date lower</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
                <InnerVar>Date [lowerDate=cal.getTime()]</InnerVar>
                <InnerVar>Date [upperDate=cal.getTime()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cal;setTime;[lower]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;set;[Calendar.DAY_OF_WEEK, Calendar.MONDAY]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, 24 * 6]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findEarliestIncident</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Date</ReturnType>
            <ParameterList>
                <ParameterType>String icdCode</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>add</MethodName>
            <MethodComment>/** 
 * Adds a diagnosis bean to the database.
 * @param pres The prescription bean to be added.
 * @return The unique ID of the newly added bean.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>DiagnosisBean bean</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>edit</MethodName>
            <MethodComment>/** 
 * Edits an existing prescription bean.
 * @param pres The newly updated prescription bean.
 * @return A long indicating the ID of the newly updated prescription bean.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>DiagnosisBean bean</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment>/** 
 * Removes the given diagnosis from its office visit
 * @param ovMedicationID The unique ID of the medication to be removed.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>long ovDiagnosisID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>