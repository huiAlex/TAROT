<Class>
    <Id>410</Id>
    <Package>edu.ncsu.csc.itrust.dao.mysql</Package>
    <ClassName>NDCodesDAO</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>NDCodesDAO  /** 
 * Used for managing the ND Codes. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see  {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. The National Drug Code (NDC) is a universal product identifier used in the United States for drugs intended for human use.
 * @see http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm
 * @author Andy
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>medicationLoader</FieldName>
            <FieldType>MedicationBeanLoader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>NDCodesDAO</MethodName>
            <MethodComment>/** 
 * The typical constructor.
 * @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllNDCodes</MethodName>
            <MethodComment>/** 
 * Returns a list of all ND codes
 * @return A java.util.List of MedicationBeans.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>MedicationBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNDCode</MethodName>
            <MethodComment>/** 
 * Returns a particular description for a given code.
 * @param code The ND code to be looked up.
 * @return A bean representing the Medication that was looked up.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>MedicationBean</ReturnType>
            <ParameterList>
                <ParameterType>String code</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addNDCode</MethodName>
            <MethodComment>/** 
 * Adds a new ND code, returns whether or not the change was made. If the code already exists, an iTrustException is thrown.
 * @param med The medication bean to be added.
 * @return A boolean indicating success or failure.
 * @throws DBException
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>MedicationBean med</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateCode</MethodName>
            <MethodComment>/** 
 * Updates a particular code's description
 * @param med A bean representing the particular medication to be updated.
 * @return An int representing the number of updated rows.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <ParameterType>MedicationBean med</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeNDCode</MethodName>
            <MethodComment>/** 
 * Removes a ND code, returns whether or not the change was made.
 * @param med The medication bean to be removed.
 * @return A boolean indicating success or failure.
 * @throws DBException
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>MedicationBean med</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>