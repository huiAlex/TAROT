<Class>
    <Id>131</Id>
    <Package>edu.ncsu.csc.itrust.dao.officevisit</Package>
    <ClassName>OVDiagnosesTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OVDiagnosesTest  /** 
 * Test client diagnoses
 * @author student
 * @ author student
 * @author student
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>diagDAO</FieldName>
            <FieldType>DiagnosesDAO</FieldType>
        </Field>
        <Field>
            <FieldName>thisYear</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TestDataGenerator [gen=new TestDataGenerator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;clearAllTables;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;patient_hcp_vists;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp_diagnosis_data;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testAddRemoveOneOVDiagnosis</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DiagnosisBean [bean=new DiagnosisBean()]</InnerVar>
                <InnerVar>long [ovDID=diagDAO.add(bean)]</InnerVar>
                <InnerVar>List&lt;DiagnosisBean&gt; [diagnoses=diagDAO.getList(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["no current diagnoses on office vist 1", 0, diagDAO.getList(1).size()]</InnerMethodInvoke>
                <InnerMethodInvoke>bean;setICDCode;["250.1"]</InnerMethodInvoke>
                <InnerMethodInvoke>bean;setVisitID;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["now there's 1", 1, diagnoses.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["test the description", "Diabetes with ketoacidosis", diagnoses.get(0).getDescription()]</InnerMethodInvoke>
                <InnerMethodInvoke>diagDAO;remove;[ovDID]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["now there's none", 0, diagDAO.getList(1).size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testAddBadDiagnosis</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DiagnosisBean [bean=new DiagnosisBean()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bean;setVisitID;[-1]</InnerMethodInvoke>
                <InnerMethodInvoke>bean;setICDCode;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testEditBadDiagnosis</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DiagnosisBean [bean=new DiagnosisBean()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bean;setVisitID;[-1]</InnerMethodInvoke>
                <InnerMethodInvoke>bean;setICDCode;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetStatisticsValid</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Date [lower=new SimpleDateFormat("MM/dd/yyyy").parse("06/28/2011")]</InnerVar>
                <InnerVar>Date [upper=new SimpleDateFormat("MM/dd/yyyy").parse("09/28/2011")]</InnerVar>
                <InnerVar>DiagnosisStatisticsBean [dsBean=diagDAO.getDiagnosisCounts("487.00","27607",lower,upper)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[3, dsBean.getZipStats()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[5, dsBean.getRegionStats()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetWeeklyStatisticsValid</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Date [lower=new SimpleDateFormat("MM/dd/yyyy").parse("06/28/2011")]</InnerVar>
                <InnerVar>Date [upper=new SimpleDateFormat("MM/dd/yyyy").parse("09/28/2011")]</InnerVar>
                <InnerVar>List&lt;DiagnosisStatisticsBean&gt; [db=diagDAO.getWeeklyCounts("487.00","27607",lower,upper)]</InnerVar>
                <InnerVar>long [totalRegion=0]</InnerVar>
                <InnerVar>long [totalRegionNonsplit=diagDAO.getDiagnosisCounts("487.00","27607",lower,upper).getRegionStats()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[new SimpleDateFormat("MM/dd/yyyy").parse("06/27/2011"), db.get(0).getStartDate()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[new SimpleDateFormat("MM/dd/yyyy").parse("07/03/2011"), db.get(0).getEndDate()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[new SimpleDateFormat("MM/dd/yyyy").parse("09/26/2011"), db.get(db.size() - 1).getStartDate()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[totalRegionNonsplit, totalRegion]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testFindEarliestIncident</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Date [earliest=diagDAO.findEarliestIncident("487.00")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[new SimpleDateFormat("MM/dd/yyyy").parse("10/10/2005"), earliest]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testMalaria</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DAOFactory [factory=TestDAOFactory.getTestInstance()]</InnerVar>
                <InnerVar>TestDataGenerator [gen=new TestDataGenerator()]</InnerVar>
                <InnerVar>ViewDiagnosisStatisticsAction [a=new ViewDiagnosisStatisticsAction(factory)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;malaria_epidemic;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[a.isMalariaEpidemic("11/02/" + thisYear,"27607","110")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>