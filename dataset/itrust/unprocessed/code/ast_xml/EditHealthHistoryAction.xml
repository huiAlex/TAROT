<Class>
    <Id>471</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>EditHealthHistoryAction</ClassName>
    <SuperClass>PatientBaseAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EditHealthHistoryAction  /** 
 * Edits the health history of a patient, used by editBasicHealth.jsp
 * @author laurenhayward
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>hrDAO</FieldName>
            <FieldType>HealthRecordsDAO</FieldType>
        </Field>
        <Field>
            <FieldName>authDAO</FieldName>
            <FieldType>AuthDAO</FieldType>
        </Field>
        <Field>
            <FieldName>loggedInMID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>validator</FieldName>
            <FieldType>HealthRecordFormValidator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EditHealthHistoryAction</MethodName>
            <MethodComment>/** 
 * The patient ID is validated by the superclass
 * @param factory The DAOFactory which will be used to generate the DAOs used for this action.
 * @param loggedInMID The user authorizing this action.
 * @param pidString The patient (or other user) who is being edited.
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
                <ParameterType>String pidString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPatientName</MethodName>
            <MethodComment>/** 
 * returns the patient name
 * @return patient name
 * @throws DBException
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addHealthRecord</MethodName>
            <MethodComment>/** 
 * Adds a health record for the given patient
 * @param pid  The patient record who is being edited.
 * @param hr  The filled out health record form to be added.
 * @return message - "Information Recorded" or exception's message
 * @throws FormValidationException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>long pid</ParameterType>
                <ParameterType>HealthRecordForm hr</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HealthRecord [record=transferForm(pid,hr)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>validator;validate;[hr]</InnerMethodInvoke>
                <InnerMethodInvoke>hrDAO;add;[record]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transferForm</MethodName>
            <MethodComment>/** 
 * Moves the information from the form to a HealthRecord
 * @param pid Patient of interest
 * @param form Form to be translated
 * @return a HealthRecord containing all the information in the form
 * @throws FormValidationException
 */
</MethodComment>
            <ReturnType>HealthRecord</ReturnType>
            <ParameterList>
                <ParameterType>long pid</ParameterType>
                <ParameterType>HealthRecordForm form</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HealthRecord [record=new HealthRecord()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>record;setPatientID;[pid]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setPersonnelID;[loggedInMID]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setBloodPressureD;[Integer.valueOf(form.getBloodPressureD())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setBloodPressureN;[Integer.valueOf(form.getBloodPressureN())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setCholesterolHDL;[Integer.valueOf(form.getCholesterolHDL())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setCholesterolLDL;[Integer.valueOf(form.getCholesterolLDL())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setCholesterolTri;[Integer.valueOf(form.getCholesterolTri())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setHeight;[Double.valueOf(form.getHeight())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setWeight;[Double.valueOf(form.getWeight())]</InnerMethodInvoke>
                <InnerMethodInvoke>record;setSmoker;[Integer.valueOf(form.getIsSmoker())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllHealthRecords</MethodName>
            <MethodComment>/** 
 * Returns a list of all HealthRecords for the given patient
 * @param pid  The ID of the patient to look up
 * @return list of HealthRecords
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>HealthRecord</ReturnType>
            <ParameterList>
                <ParameterType>long pid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>