<Class>
    <Id>414</Id>
    <Package>edu.ncsu.csc.itrust.dao.mysql</Package>
    <ClassName>ReferralDAO</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReferralDAO  /** 
 * Used to update referrals, and fetch lists of referrals sent to and from HCPs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see  {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>referralLoader</FieldName>
            <FieldType>ReferralBeanLoader</FieldType>
        </Field>
        <Field>
            <FieldName>verboseLoader</FieldName>
            <FieldType>VerboseReferralBeanLoader</FieldType>
        </Field>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>userid</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>sortColumns</FieldName>
            <FieldType>HashMap</FieldType>
        </Field>
        <Field>
            <FieldName>sortColumns</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ReferralDAO</MethodName>
            <MethodComment>/** 
 * The typical constructor.
 * @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsFromOV</MethodName>
            <MethodComment>/** 
 * Get all referrals associated with a particular office visit.
 * @param ovid The office visit id.
 * @return A list of ReferralBeans.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long ovid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsSentFrom</MethodName>
            <MethodComment>/** 
 * Gets a list of all referrals sent from an HCP
 * @param mid The HCP's mid.
 * @return The list of the referrals they sent.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferral</MethodName>
            <MethodComment>/** 
 * Get a specific referral.
 * @param id The id of the referral to retrieve.
 * @return A ReferralBean.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long id</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setReferralMessage</MethodName>
            <MethodComment>/** 
 * Set referral message.
 * @param id The id of the referral to retrieve.
 * @return A ReferralBean.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>long messageID</ParameterType>
                <ParameterType>long referralID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isReferralMessage</MethodName>
            <MethodComment>/** 
 * Set referral message.
 * @param id The id of the referral to retrieve.
 * @return A ReferralBean.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>long messageID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsSentTo</MethodName>
            <MethodComment>/** 
 * Gets a list of all referrals sent to an HCP
 * @param mid The HCP's mid.
 * @return The list of the referrals sent to them.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsForReceivingHCP</MethodName>
            <MethodComment>/** 
 * Gets a list of all referrals a HCP has received
 * @param mid The patients's mid.
 * @return The list of the referrals they received.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsForPatient</MethodName>
            <MethodComment>/** 
 * Gets a list of all referrals sent to a patient.
 * @param mid The patients's mid.
 * @return The list of the referrals they received.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsForReceivingHCPUnread</MethodName>
            <MethodComment>/** 
 * Gets a list of all referrals sent to a patient
 * @param mid The patients's mid.
 * @return The list of the referrals they received that were unread.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferralsForPatientUnread</MethodName>
            <MethodComment>/** 
 * Gets a list of all referrals sent to a patient
 * @param mid The patients's mid.
 * @return The list of the referrals they received that were unread.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>editReferral</MethodName>
            <MethodComment>/** 
 * Updates a given referral in the database.
 * @param r The referral to update.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>ReferralBean r</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addReferral</MethodName>
            <MethodComment>/** 
 * Adds a given referral to the database.
 * @param r The referral to add.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType>ReferralBean r</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeReferral</MethodName>
            <MethodComment>/** 
 * Removes the given referral.
 * @param id The unique ID of the referral to be removed.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>long id</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReferralListQuery</MethodName>
            <MethodComment>/** 
 * Create a new ReferralListQuery object.
 * @param factory
 * @param userid
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long userid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sortColumns;put;["patientName", "CONCAT(patients.lastName, ' ', patients.firstName)"]</InnerMethodInvoke>
                <InnerMethodInvoke>sortColumns;put;["receiverName", "CONCAT(preceiver.lastName, preceiver.firstName)"]</InnerMethodInvoke>
                <InnerMethodInvoke>sortColumns;put;["senderName", "CONCAT(psender.lastName, psender.firstName)"]</InnerMethodInvoke>
                <InnerMethodInvoke>sortColumns;put;["timestamp", "referrals.timestamp"]</InnerMethodInvoke>
                <InnerMethodInvoke>sortColumns;put;["priority", "referrals.PriorityCode"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doquery</MethodName>
            <MethodComment>/** 
 * Perform the query.
 * @param sortField The pseudo-field name in which to sort.
 * @param dir The direction of the desired sort (ascending or descending)
 * @return A list of VerboseReferralBeans.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>VerboseReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>String sortField</ParameterType>
                <ParameterType>SortDirection dir</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [stmt="SELECT " + "CONCAT(psender.firstName,' ',psender.lastName) AS senderName, " + "CONCAT(preceiver.firstName,' ',preceiver.lastName) AS receiverName, "+ "referrals.*, "+ "officevisits.visitDate, "+ "CONCAT(patients.firstName,' ',patients.lastName) AS patientName "+ "FROM "+ "referrals, "+ "personnel AS psender, "+ "personnel AS preceiver, "+ "patients, "+ "officevisits "+ "WHERE "+ "referrals.SenderID=psender.mid "+ "AND referrals.ReceiverID=preceiver.mid "+ "AND referrals.PatientID=patients.mid "+ "AND referrals.ovid=officevisits.id "]</InnerVar>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>query</MethodName>
            <MethodComment>/** 
 * Perform the query.
 * @param sortField The pseudo-field name in which to sort.
 * @param dir The direction of the desired sort (ascending or descending)
 * @return A list of VerboseReferralBeans.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>VerboseReferralBean</ReturnType>
            <ParameterList>
                <ParameterType>String sortField</ParameterType>
                <ParameterType>SortDirection dir</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;VerboseReferralBean&gt; [beans=doquery(sortField,dir)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserField</MethodName>
            <MethodComment>/** 
 * Get the name of the user pseudo-field which is used to limit the  query.  Only referrals where this field equals a specific user id  will be returned.  This must be overridden by derived classes.
 * @return The user field as a string.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildSort</MethodName>
            <MethodComment>/** 
 * Builds the sort portion of the SQL query (i.e. the ORDER BY... portion).
 * @param sortField The pseudo-field to sort on.
 * @param dir The sort direction.
 * @return A string which can be a part of an SQL query.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>String sortField</ParameterType>
                <ParameterType>SortDirection dir</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [sortexp=sortColumns.get(sortField)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SenderReferralListQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long userid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReceiverReferralListQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long userid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PatientReferralListQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long userid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSenderQuery</MethodName>
            <MethodComment>/** 
 * Get a referral query for a sending HCP.
 * @param mid The HCP id.
 * @return A ReferralListQuery object.
 */
</MethodComment>
            <ReturnType>ReferralListQuery</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReceiverQuery</MethodName>
            <MethodComment>/** 
 * Get a referral query for a receiving HCP.
 * @param mid The HCP id.
 * @return A ReferralListQuery object.
 */
</MethodComment>
            <ReturnType>ReferralListQuery</ReturnType>
            <ParameterList>
                <ParameterType>long mid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPatientQuery</MethodName>
            <MethodComment>/** 
 * Get a referral query for a patient.
 * @param mid The patient id.
 * @return A ReferralListQuery object.
 */
</MethodComment>
            <ReturnType>ReferralListQuery</ReturnType>
            <ParameterList>
                <ParameterType>long pid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>