<Class>
    <Id>259</Id>
    <Package>edu.ncsu.csc.itrust.serverutils</Package>
    <ClassName>CustomJSPTagsTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CustomJSPTagsTest  /** 
 * @author andy
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>mockContext</FieldName>
            <FieldType>PageContext</FieldType>
        </Field>
        <Field>
            <FieldName>ctrl</FieldName>
            <FieldType>IMocksControl</FieldType>
        </Field>
        <Field>
            <FieldName>mockWriter</FieldName>
            <FieldType>JspWriter</FieldType>
        </Field>
        <Field>
            <FieldName>mockParent</FieldName>
            <FieldType>Tag</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expect(mockContext.getOut()).andReturn(mockWriter);anyTimes;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPatientNavHappy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PatientNavigation [nav=new PatientNavigation()]</InnerVar>
                <InnerVar>String [str="Health Records"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>nav;setPageContext;[mockContext]</InnerMethodInvoke>
                <InnerMethodInvoke>mockWriter;write;[(String)anyObject()]</InnerMethodInvoke>
                <InnerMethodInvoke>expectLastCall();anyTimes;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;replay;[]</InnerMethodInvoke>
                <InnerMethodInvoke>nav;setThisTitle;[str]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[str, nav.getThisTitle()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, nav.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, nav.doEndTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>nav;setParent;[mockParent]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[mockParent, nav.getParent()]</InnerMethodInvoke>
                <InnerMethodInvoke>nav;release;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;verify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPatientNavException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PatientNavigation [nav=new PatientNavigation()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>nav;setPageContext;[mockContext]</InnerMethodInvoke>
                <InnerMethodInvoke>mockWriter;write;[(String)anyObject()]</InnerMethodInvoke>
                <InnerMethodInvoke>expectLastCall();andThrow;[new IOException()]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;replay;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, nav.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;verify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testICD9CMLink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ICD9CMLink [tag=new ICD9CMLink()]</InnerVar>
                <InnerVar>String [code="100.1"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tag;setPageContext;[mockContext]</InnerMethodInvoke>
                <InnerMethodInvoke>mockWriter;write;[(String)anyObject()]</InnerMethodInvoke>
                <InnerMethodInvoke>expectLastCall();anyTimes;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;replay;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doEndTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setParent;[mockParent]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[mockParent, tag.getParent()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setCode;[code]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[code, tag.getCode()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setCode;[100.1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[code, tag.getCode()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;release;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;verify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testICD9CMLinkException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ICD9CMLink [tag=new ICD9CMLink()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tag;setPageContext;[mockContext]</InnerMethodInvoke>
                <InnerMethodInvoke>mockWriter;write;[(String)anyObject()]</InnerMethodInvoke>
                <InnerMethodInvoke>expectLastCall();andThrow;[new IOException()]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;replay;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;verify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testStateSelect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StateSelect [tag=new StateSelect()]</InnerVar>
                <InnerVar>String [name="Something!"]</InnerVar>
                <InnerVar>String [value="Something!!"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tag;setPageContext;[mockContext]</InnerMethodInvoke>
                <InnerMethodInvoke>mockWriter;write;[(String)anyObject()]</InnerMethodInvoke>
                <InnerMethodInvoke>expectLastCall();anyTimes;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;replay;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doEndTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setParent;[mockParent]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[mockParent, tag.getParent()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setName;[name]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[name, tag.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setValue;[value]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertSame;[value, tag.getValue()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setName;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;setValue;["NC"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>tag;release;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;verify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testStateSelectException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StateSelect [tag=new StateSelect()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tag;setPageContext;[mockContext]</InnerMethodInvoke>
                <InnerMethodInvoke>mockWriter;write;[(String)anyObject()]</InnerMethodInvoke>
                <InnerMethodInvoke>expectLastCall();andThrow;[new IOException()]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;replay;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[Tag.SKIP_BODY, tag.doStartTag()]</InnerMethodInvoke>
                <InnerMethodInvoke>ctrl;verify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>