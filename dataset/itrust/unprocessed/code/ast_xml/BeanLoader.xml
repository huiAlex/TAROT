<Class>
    <Id>575</Id>
    <Package>edu.ncsu.csc.itrust.beans.loaders</Package>
    <ClassName>BeanLoader</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BeanLoader  /** 
 * This interface helps enforce the paradigm of what should be contained in a loader. The generic type &lt;T&gt; specifies the type of bean that the loader is responsible for extacting from a result set.
 * @param &lt; T &gt; A type for the bean that will be loaded with this class.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>loadList</MethodName>
            <MethodComment>/** 
 * Loads a list of the bean of type T from a result set.  Typically makes iterated calls to loadSingle.
 * @param rs The java.sql.ResultSet we are extracting.
 * @return A java.util.List&lt;T&gt; where T is the type for this loader.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <ParameterType>ResultSet rs</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadSingle</MethodName>
            <MethodComment>/** 
 * Contains the instructions for mapping the rows in this java.sql.ResultSet into beans of type &lt;T&gt;.
 * @param rs The java.sql.ResultSet to be loaded.
 * @return A Bean of type T containing the loaded information, typically of the first (or next) item in the result set.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <ParameterType>ResultSet rs</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadParameters</MethodName>
            <MethodComment>/** 
 * Used for an insert or update, this method contains the instructions for mapping the fields within a bean of type T into a prepared statement which modifies the appropriate table.
 * @param ps The prepared statement to be loaded.
 * @param bean The bean containing the data to be placed.
 * @return A prepared statement with the appropriately loaded parameters.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>PreparedStatement</ReturnType>
            <ParameterList>
                <ParameterType>PreparedStatement ps</ParameterType>
                <ParameterType>T bean</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>