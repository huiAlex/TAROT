<Class>
    <Id>416</Id>
    <Package>edu.ncsu.csc.itrust.dao.mysql</Package>
    <ClassName>CPTCodesDAO</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CPTCodesDAO  /** 
 * Used for managing CPT codes. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see  {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. The CPT code set accurately describes medical, surgical, and diagnostic services  and is designed to communicate uniform information about medical services and procedures  among physicians, coders, patients, accreditation organizations, and payers for administrative,  financial, and analytical purposes.
 * @see http://www.ama-assn.org/ama/pub/physician-resources/solutions-managing-your-practice/coding-billing-insurance/cpt/about-cpt.shtml
 * @author Andy
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>procedureBeanLoader</FieldName>
            <FieldType>ProcedureBeanLoader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CPTCodesDAO</MethodName>
            <MethodComment>/** 
 * The typical constructor.
 * @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllCPTCodes</MethodName>
            <MethodComment>/** 
 * Returns a list of all CPT codes.
 * @return A java.util.List of ProcedureBeans for the CPT codes.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ProcedureBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getImmunizationCPTCodes</MethodName>
            <MethodComment>/** 
 * Returns a list of all immunization CPT codes.
 * @return A java.util.List of all Immunization-related CPT codes.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ProcedureBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProcedureCPTCodes</MethodName>
            <MethodComment>/** 
 * Returns a list of all non-immunization CPT codes.
 * @return A java.util.List of all Immunization-related CPT codes.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ProcedureBean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCPTCode</MethodName>
            <MethodComment>/** 
 * Returns a particular procedure description for a code.
 * @param code The string representation of the code.
 * @return The textual description of the code.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>ProcedureBean</ReturnType>
            <ParameterList>
                <ParameterType>String code</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addCPTCode</MethodName>
            <MethodComment>/** 
 * Adds a new CPT code, returns that it was added successfully
 * @param proc A ProcedureBean representing the new code information.
 * @return A boolean for whether the operation was successful.
 * @throws DBException
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>ProcedureBean proc</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateCode</MethodName>
            <MethodComment>/** 
 * Change the procedure description for a particular CPT code
 * @param proc A ProcedureBean representing the new code information.
 * @return A boolean for whether the operation was successful.
 * @throws DBException
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <ParameterType>ProcedureBean proc</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>PreparedStatement [ps=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>