<Class>
    <Id>508</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>MonitorAdverseEventAction</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>loggedInMID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>emailer</FieldName>
            <FieldType>EmailUtil</FieldType>
        </Field>
        <Field>
            <FieldName>patientDAO</FieldName>
            <FieldType>PatientDAO</FieldType>
        </Field>
        <Field>
            <FieldName>adverseEventDAO</FieldName>
            <FieldType>AdverseEventDAO</FieldType>
        </Field>
        <Field>
            <FieldName>messenger</FieldName>
            <FieldType>SendMessageAction</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MonitorAdverseEventAction</MethodName>
            <MethodComment>/** 
 * Constructor 
 * @param factory
 * @param loggedInMID
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReports</MethodName>
            <MethodComment>/** 
 * Returns a list of reports between specified dates
 * @param isPrescription Boolean to return prescriptions or immunizations
 * @param start The starting date
 * @param end The ending date
 * @return the list of events
 * @throws iTrustException
 * @throws FormValidationException
 * @throws SQLException
 * @throws ParseException
 */
</MethodComment>
            <ReturnType>AdverseEventBean</ReturnType>
            <ParameterList>
                <ParameterType>boolean isPrescription</ParameterType>
                <ParameterType>String start</ParameterType>
                <ParameterType>String end</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>FormValidationException</ExceptionType>
                <ExceptionType>SQLException</ExceptionType>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment>/** 
 * Returns the patient's name
 * @param MID the MID of the patient to return the name for.
 * @return
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>long MID</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendEmail</MethodName>
            <MethodComment>/** 
 * Sends an e-mail to a patient requesting more information
 * @param patientMID The patient to receive the message
 * @param message The message
 * @return string for testing purposes
 * @throws DBException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType>long patientMID</ParameterType>
                <ParameterType>String message</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [rValue]</InnerVar>
                <InnerVar>List&lt;String&gt; [toList=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>PatientBean [receiver=patientDAO.getPatient(patientMID)]</InnerVar>
                <InnerVar>Email [mail=new Email()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>toList;add;[receiver.getEmail()]</InnerMethodInvoke>
                <InnerMethodInvoke>mail;setBody;[message]</InnerMethodInvoke>
                <InnerMethodInvoke>mail;setFrom;[loggedInMID + ""]</InnerMethodInvoke>
                <InnerMethodInvoke>mail;setToList;[toList]</InnerMethodInvoke>
                <InnerMethodInvoke>emailer;sendEmail;[mail]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment>/** 
 * Method used to remove an adverse event report
 * @param id the id of the report to be removed
 * @throws DBException
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>int id</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [HCPMID]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>FormValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>