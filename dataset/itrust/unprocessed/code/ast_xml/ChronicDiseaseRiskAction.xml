<Class>
    <Id>489</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>ChronicDiseaseRiskAction</ClassName>
    <SuperClass>PatientBaseAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ChronicDiseaseRiskAction  /** 
 * Used for chronicDiseaseRisks.jsp. Passes most of the logic off to  {@link ChronicDiseaseMediator}, and the various subclasses of  {@link RiskChecker}.
 * @author Andy Meneely
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>authDAO</FieldName>
            <FieldType>AuthDAO</FieldType>
        </Field>
        <Field>
            <FieldName>diseaseMediator</FieldName>
            <FieldType>ChronicDiseaseMediator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ChronicDiseaseRiskAction</MethodName>
            <MethodComment>/** 
 * @param factory
 * @param loggedInMID
 * @param pidString The patient ID to be validated and used
 * @throws iTrustException
 * @throws DBException
 * @throws NoHealthRecordsException This is thrown if a patient is added without any health records to be checked. Try to avoid having this exception be thrown in a normal flow of events.
 * @author Andy Meneely
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>long loggedInMID</ParameterType>
                <ParameterType>String pidString</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>NoHealthRecordsException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPatientID</MethodName>
            <MethodComment>/** 
 * Returns the ID of the patient to be checked.
 * @return patient ID whose risk we are checking
 * @author Andy Meneely
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserName</MethodName>
            <MethodComment>/** 
 * Gives the full name of the patient
 * @return Full name of the patient who we are checking
 * @throws DBException
 * @throws iTrustException
 * @author Andy Meneely
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDiseasesAtRisk</MethodName>
            <MethodComment>/** 
 * Returns the risks for which this patient is at risk for. All logic has been passed to {@link ChronicDiseaseMediator} and the subclasses of {@link RiskChecker}.
 * @return List of risks
 * @throws iTrustException
 * @throws DBException
 * @author Andy Meneely
 */
</MethodComment>
            <ReturnType>RiskChecker</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>DBException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>