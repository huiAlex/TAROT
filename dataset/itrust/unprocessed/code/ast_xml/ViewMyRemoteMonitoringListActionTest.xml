<Class>
    <Id>176</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>ViewMyRemoteMonitoringListActionTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>action</FieldName>
            <FieldType>ViewMyRemoteMonitoringListAction</FieldType>
        </Field>
        <Field>
            <FieldName>gen</FieldName>
            <FieldType>TestDataGenerator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;clearAllTables;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetPatientData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;RemoteMonitoringDataBean&gt; [data=action.getPatientsData()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;remoteMonitoring3;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(0).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[160, data.get(0).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[110, data.get(0).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[60, data.get(0).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(0).getTime().toString().contains("08:00:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(1).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[100, data.get(1).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[70, data.get(1).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[90, data.get(1).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(1).getTime().toString().contains("07:15:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(2).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[90, data.get(2).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[60, data.get(2).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[80, data.get(2).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(2).getTime().toString().contains("05:30:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[5L, data.get(3).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, data.get(3).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, data.get(3).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, data.get(3).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNull;[data.get(3).getTime()]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;remoteMonitoring3;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(0).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[160, data.get(0).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[110, data.get(0).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[60, data.get(0).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(0).getTime().toString().contains("08:00:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(1).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[100, data.get(1).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[70, data.get(1).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[90, data.get(1).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(1).getTime().toString().contains("07:15:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(2).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[90, data.get(2).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[60, data.get(2).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[80, data.get(2).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(2).getTime().toString().contains("05:30:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[5L, data.get(3).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, data.get(3).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, data.get(3).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, data.get(3).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNull;[data.get(3).getTime()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetPatientDataByDate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DateFormat [dateFormat=new SimpleDateFormat("MM/dd/yyyy")]</InnerVar>
                <InnerVar>java.util.Date [date=new java.util.Date()]</InnerVar>
                <InnerVar>String [currentDate=dateFormat.format(date)]</InnerVar>
                <InnerVar>List&lt;RemoteMonitoringDataBean&gt; [data=action.getPatientDataByDate(1L,currentDate,currentDate)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;remoteMonitoring3;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(0).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[160, data.get(0).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[110, data.get(0).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[60, data.get(0).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(0).getTime().toString().contains("08:00:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[2L, data.get(0).getReporterMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(1).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[100, data.get(1).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[70, data.get(1).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[90, data.get(1).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(1).getTime().toString().contains("07:15:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[8000000009L, data.get(1).getReporterMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(2).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[90, data.get(2).getSystolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[60, data.get(2).getDiastolicBloodPressure()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[80, data.get(2).getGlucoseLevel()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(2).getTime().toString().contains("05:30:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(2).getReporterMID()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetPatientDataByType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;RemoteMonitoringDataBean&gt; [data=action.getPatientDataByType(1L,"weight")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;remoteMonitoring5;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(0).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[180.0f, data.get(0).getWeight()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(0).getTime().toString().contains("08:19:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(0).getReporterMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(1).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[177.0f, data.get(1).getWeight()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(1).getTime().toString().contains("07:48:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[2L, data.get(1).getReporterMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(2).getPatientMID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[186.5f, data.get(2).getWeight()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[data.get(2).getTime().toString().contains("07:17:00")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1L, data.get(2).getReporterMID()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testIllegalGetPatientDataByDate1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DateFormat [dateFormat=new SimpleDateFormat("MM/dd/yyyy")]</InnerVar>
                <InnerVar>java.util.Date [date=new java.util.Date()]</InnerVar>
                <InnerVar>String [currentDate=dateFormat.format(date)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetPatientName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Random Person", action.getPatientName(1L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>