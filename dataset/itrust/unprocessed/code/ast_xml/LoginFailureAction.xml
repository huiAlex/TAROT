<Class>
    <Id>445</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>LoginFailureAction</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LoginFailureAction  /** 
 * Please note that this is not the best mitigation for Denial of Service attacks. The better way would be to keep track of password failure attempts per user account, NOT with easily spoofable ip addresses. The reason this feature is implemented with ip addresses is a limitation in Tomcat authentication (actually, it's technically JSP's fault for not specifying a form of account lockout). &lt;br /&gt; &lt;br /&gt; All authentication in this application is done by the container (Tomcat), which doesn't support account lockout. So our options would be (a) to implement our own authentication (yuck!), or (2) to extend the JDBCRealm class in the Tomcat source code and add the logic. I've looked into this and it's actually pretty easy. The ONLY reason it's not implemented here is that the code would be buried in a jar in your Tomcat installation - not very educational for those who want to learn about authentication in webapps. Feel free to change this; extending this would be perfectly acceptable.
 * @author Andy
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>MAX_LOGIN_ATTEMPTS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>authDAO</FieldName>
            <FieldType>AuthDAO</FieldType>
        </Field>
        <Field>
            <FieldName>ipAddr</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>validCaptcha</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>hasAttempts</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LoginFailureAction</MethodName>
            <MethodComment>/** 
 * Set up defaults
 * @param factory The DAOFactory used to create the DAOs used in this action.
 * @param ipAddr The IP address of the user making the login attempt.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType>DAOFactory factory</ParameterType>
                <ParameterType>String ipAddr</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>recordLoginFailure</MethodName>
            <MethodComment>/** 
 * Calls authDAO to record the login failure in the database
 * @return How many login failure attempts or a DBException message
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isValidForLogin</MethodName>
            <MethodComment>/** 
 * Checks to see if the current user can login (#failures&lt;3)
 * @return true if the user is valid to login
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>needsCaptcha</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetFailures</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DBException</ExceptionType>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCaptcha</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>boolean val</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFailureCount</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>