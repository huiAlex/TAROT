<Class>
    <Id>248</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>GetVisitRemindersActionTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>action</FieldName>
            <FieldType>GetVisitRemindersAction</FieldType>
        </Field>
        <Field>
            <FieldName>gen</FieldName>
            <FieldType>TestDataGenerator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;clearAllTables;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNormalReturn</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>action;getVisitReminders;[GetVisitRemindersAction.ReminderType.DIAGNOSED_CARE_NEEDERS]</InnerMethodInvoke>
                <InnerMethodInvoke>action;getVisitReminders;[GetVisitRemindersAction.ReminderType.FLU_SHOT_NEEDERS]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetVisitReminders_AlivePatients</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;aliveRecurringPatients;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, action.getVisitReminders(ReminderType.FLU_SHOT_NEEDERS).size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, action.getVisitReminders(ReminderType.DIAGNOSED_CARE_NEEDERS).size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, action.getVisitReminders(ReminderType.IMMUNIZATION_NEEDERS).size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetVisitReminders_DeadPatients</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;deadRecurringPatients;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, action.getVisitReminders(ReminderType.FLU_SHOT_NEEDERS).size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, action.getVisitReminders(ReminderType.DIAGNOSED_CARE_NEEDERS).size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, action.getVisitReminders(ReminderType.IMMUNIZATION_NEEDERS).size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetVisitReminders_Diagnosed_OldAndRecentVisit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;diagnosedPatient_OldAndNewVisit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, action.getVisitReminders(ReminderType.DIAGNOSED_CARE_NEEDERS).size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetVisitReminders_CorrectDateOfRecentVisit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SimpleDateFormat [sdf=new SimpleDateFormat("yyyy-MM-dd")]</InnerVar>
                <InnerVar>Calendar [twoYrsAgo=Calendar.getInstance()]</InnerVar>
                <InnerVar>List&lt;VisitReminderReturnForm&gt; [vReminders=action.getVisitReminders(ReminderType.DIAGNOSED_CARE_NEEDERS)]</InnerVar>
                <InnerVar>String [date=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;aliveRecurringPatients;[]</InnerMethodInvoke>
                <InnerMethodInvoke>twoYrsAgo;add;[Calendar.YEAR, -2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[sdf.format(twoYrsAgo.getTime()), date]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNoSubAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[4, action.getVisitReminders(GetVisitRemindersAction.ReminderType.FLU_SHOT_NEEDERS).size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetReminderType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[GetVisitRemindersAction.ReminderType.DIAGNOSED_CARE_NEEDERS, GetVisitRemindersAction.ReminderType.getReminderType("Diagnosed Care Needers")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testBadReminderType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetImmunizationNeeders</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;VisitReminderReturnForm&gt; [vrList=action.getVisitReminders(GetVisitRemindersAction.ReminderType.IMMUNIZATION_NEEDERS)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[2, vrList.size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
                <ExceptionType>FormValidationException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestHPV</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -9]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90649 Human Papillomavirus (9 years), ", GetVisitRemindersAction.testHPV(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90649 Human Papillomavirus (9 years), ", GetVisitRemindersAction.testHPV(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90649 Human Papillomavirus (9 years, 2 months), ", GetVisitRemindersAction.testHPV(1,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90649 Human Papillomavirus (9 years, 6 months), ", GetVisitRemindersAction.testHPV(2,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestHepA</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90633 Hepatits A (12 months), ", GetVisitRemindersAction.testHepA(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -6]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90633 Hepatits A (18 months), ", GetVisitRemindersAction.testHepA(1,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestVaricella</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90396 Varicella (12 months), ", GetVisitRemindersAction.testVaricella(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -3]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90396 Varicella (4 years), ", GetVisitRemindersAction.testVaricella(1,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestMeasles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90707 Measles, Mumps, Rubekka (12 months), ", GetVisitRemindersAction.testMeasles(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -3]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90707 Measles, Mumps, Rubekka (4 years), ", GetVisitRemindersAction.testMeasles(1,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestPolio</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, -6 * 7 * 24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90712 Poliovirus (6 weeks), ", GetVisitRemindersAction.testPolio(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90712 Poliovirus (4 months), ", GetVisitRemindersAction.testPolio(1,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90712 Poliovirus (6 months), ", GetVisitRemindersAction.testPolio(2,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestPneumo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, -6 * 7 * 24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90669 Pneumococcal (6 weeks), ", GetVisitRemindersAction.testPneumo(0,cal.getTime(),0L,0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90669 Pneumococcal (4 months), ", GetVisitRemindersAction.testPneumo(1,cal.getTime(),0L,0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestHaemoFlu</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, -6 * 7 * 24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90645 Haemophilus influenzae (6 weeks), ", GetVisitRemindersAction.testHaemoFlu(0,cal.getTime(),0L,0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90645 Haemophilus influenzae (4 months), ", GetVisitRemindersAction.testHaemoFlu(1,cal.getTime(),0L,0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90645 Haemophilus influenzae (6 months), ", GetVisitRemindersAction.testHaemoFlu(2,cal.getTime(),0L,0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestDipTet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, -6 * 7 * 24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90696 Diphtheria, Tetanus, Pertussis (6 weeks), ", GetVisitRemindersAction.testDipTet(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90696 Diphtheria, Tetanus, Pertussis (4 months), ", GetVisitRemindersAction.testDipTet(1,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90696 Diphtheria, Tetanus, Pertussis (6 months), ", GetVisitRemindersAction.testDipTet(2,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, -15 * 7 * 24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90696 Diphtheria, Tetanus, Pertussis (15 weeks), ", GetVisitRemindersAction.testDipTet(3,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90696 Diphtheria, Tetanus, Pertussis (4 years), ", GetVisitRemindersAction.testDipTet(4,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.YEAR, -7]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90696 Diphtheria, Tetanus, Pertussis (11 years), ", GetVisitRemindersAction.testDipTet(5,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestRotaVirus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.HOUR, -6 * 7 * 24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90681 Rotavirus (6 weeks), ", GetVisitRemindersAction.testRotaVirus(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -4]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90681 Rotavirus (4 months), ", GetVisitRemindersAction.testRotaVirus(1,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90681 Rotavirus (6 months), ", GetVisitRemindersAction.testRotaVirus(2,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTestHepB</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [cal=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;standardData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90371 Hepatitis B (birth), ", GetVisitRemindersAction.testHepB(0,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90371 Hepatitis B (1 month), ", GetVisitRemindersAction.testHepB(1,cal.getTime(),0L)]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;add;[Calendar.MONTH, -5]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["90371 Hepatitis B (6 months), ", GetVisitRemindersAction.testHepB(2,cal.getTime(),0L)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>