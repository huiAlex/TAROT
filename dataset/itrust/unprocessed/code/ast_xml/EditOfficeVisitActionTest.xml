<Class>
    <Id>229</Id>
    <Package>edu.ncsu.csc.itrust.action</Package>
    <ClassName>EditOfficeVisitActionTest</ClassName>
    <SuperClass>TestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EditOfficeVisitActionTest  /** 
 * Test all office visit by doctors
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>DAOFactory</FieldType>
        </Field>
        <Field>
            <FieldName>gen</FieldName>
            <FieldType>TestDataGenerator</FieldType>
        </Field>
        <Field>
            <FieldName>action</FieldName>
            <FieldType>EditOfficeVisitAction</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;clearAllTables;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hospitals;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;patient1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;admin1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;officeVisit1;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;ndCodes;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testOVID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testEvilDatabase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testOVDoesntExist</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetHospitals</MethodName>
            <MethodComment>/** 
 * Test Hospital location
 * @throws Exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;HospitalBean&gt; [hospitals=action.getHospitals()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[7, hospitals.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Test Hospital 8181818181", hospitals.get(0).getHospitalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Test Hospital 9191919191", hospitals.get(1).getHospitalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Central Hospital", hospitals.get(2).getHospitalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Eastern Hospital", hospitals.get(3).getHospitalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Northern Hospital", hospitals.get(4).getHospitalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Test Hospital 1", hospitals.get(5).getHospitalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Z Empty Hospital", hospitals.get(6).getHospitalName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGetOfficeVisit</MethodName>
            <MethodComment>/** 
 * Test patient office visit
 * @throws iTrustException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>OfficeVisitBean [ovb=action.getOfficeVisit()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[1l, action.getOvID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Generated for Death for Patient: 1", ovb.getNotes()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[9000000000l, ovb.getHcpID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1l, ovb.getID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, ovb.getVisitID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["1", ovb.getHospitalID()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[0, action.prescriptions().getPrescriptions().size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>iTrustException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdateInformationEmptyForm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdateInformation</MethodName>
            <MethodComment>/** 
 * Test if patient information is update test update information semicolon test updateInformation Octothorpe
 * @throws FormValidationException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EditOfficeVisitForm [frm=new EditOfficeVisitForm()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>frm;setHcpID;["9000000000"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setPatientID;["1"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setVisitDate;["05/02/2001"]</InnerMethodInvoke>
                <InnerMethodInvoke>action;updateInformation;[frm]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdateInformationSemicolon</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EditOfficeVisitForm [frm=new EditOfficeVisitForm()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>frm;setHcpID;["9000000000"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setPatientID;["1"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setVisitDate;["05/02/2001"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setNotes;["semicolon test ;"]</InnerMethodInvoke>
                <InnerMethodInvoke>action;updateInformation;[frm]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdateInformationOctothorpe</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EditOfficeVisitForm [frm=new EditOfficeVisitForm()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>frm;setHcpID;["9000000000"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setPatientID;["1"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setVisitDate;["05/02/2001"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setNotes;["semicolon test #"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdateInformationNewOfficeVisit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EditOfficeVisitForm [frm=new EditOfficeVisitForm()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;[true, action.isUnsaved()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[-1, action.getOvID()]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setHcpID;["9000000001"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setPatientID;["1"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setVisitDate;["05/02/2001"]</InnerMethodInvoke>
                <InnerMethodInvoke>frm;setNotes;["That was a doctor's visit"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[false, action.isUnsaved()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;[-1 == action.getOvID()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testMakeEmailApp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Email [testEmail=action.makeEmailApp(9000000000L,"2","You are allergic.")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gen;patient2;[]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;hcp0;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["no-reply@itrust.com", testEmail.getFrom()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["andy.programmer@gmail.com", testEmail.getToListStr()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["HCP has prescribed you a potentially dangerous medication", testEmail.getSubject()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Kelly Doctor has prescribed a medication that you are allergic to or that has a known interaction with a drug you are currently taking. You are allergic.", testEmail.getBody()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FormValidationException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>