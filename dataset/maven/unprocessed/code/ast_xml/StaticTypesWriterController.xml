<Class>
    <Id>491</Id>
    <Package>org.codehaus.groovy.classgen.asm.sc</Package>
    <ClassName>StaticTypesWriterController</ClassName>
    <SuperClass>DelegatingController</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StaticTypesWriterController  /** 
 * An alternative  {@link org.codehaus.groovy.classgen.asm.WriterController} which handles static types and methoddispatch. In case of a "mixed mode" where only some methods are annotated with  {@link groovy.transform.TypeChecked}then this writer will delegate to the classic writer controller.
 * @author Cedric Champeau
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>indyBinHelper</FieldName>
            <FieldType>Constructor</FieldType>
        </Field>
        <Field>
            <FieldName>isInStaticallyCheckedMethod</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>callSiteWriter</FieldName>
            <FieldType>StaticTypesCallSiteWriter</FieldType>
        </Field>
        <Field>
            <FieldName>statementWriter</FieldName>
            <FieldType>StaticTypesStatementWriter</FieldType>
        </Field>
        <Field>
            <FieldName>typeChooser</FieldName>
            <FieldType>StaticTypesTypeChooser</FieldType>
        </Field>
        <Field>
            <FieldName>invocationWriter</FieldName>
            <FieldType>StaticInvocationWriter</FieldType>
        </Field>
        <Field>
            <FieldName>binaryExprHelper</FieldName>
            <FieldType>BinaryExpressionMultiTypeDispatcher</FieldType>
        </Field>
        <Field>
            <FieldName>unaryExpressionHelper</FieldName>
            <FieldType>UnaryExpressionHelper</FieldType>
        </Field>
        <Field>
            <FieldName>closureWriter</FieldName>
            <FieldType>ClosureWriter</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StaticTypesWriterController</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>normalController</ParamName>
                    <FieldType>WriterController</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>asmClassGenerator</ParamName>
                    <FieldType>AsmClassGenerator</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>gcon</ParamName>
                    <FieldType>GeneratorContext</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>cv</ParamName>
                    <FieldType>ClassVisitor</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>cn</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [useIndy=getBytecodeVersion() &gt; Opcodes.V1_6 &amp;&amp; indyBinHelper != null]</InnerVar>
                <InnerVar>boolean [binHelperSet=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setMethodNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mn</ParamName>
                    <FieldType>MethodNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;updateStaticCompileFlag;[mn]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateStaticCompileFlag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mn</ParamName>
                    <FieldType>MethodNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassNode [classNode=getClassNode()]</InnerVar>
                <InnerVar>AnnotatedNode [node=mn]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setConstructorNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cn</ParamName>
                    <FieldType>ConstructorNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;updateStaticCompileFlag;[cn]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFastPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCallSiteWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CallSiteWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MethodNode [methodNode=getMethodNode()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRegularCallSiteWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CallSiteWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatementWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StatementWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeChooser</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeChooser</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInvocationWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InvocationWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRegularInvocationWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InvocationWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBinaryExpressionHelper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BinaryExpressionHelper</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnaryExpressionHelper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UnaryExpressionHelper</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClosureWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClosureWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>