<Class>
    <Id>307</Id>
    <Package>org.codehaus.groovy.vmplugin.v7</Package>
    <ClassName>IndyInterface</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IndyInterface  /** 
 * Bytecode level interface for bootstrap methods used by invokedynamic. This class provides a logging ability by using the boolean system property groovy.indy.logging. Other than that this class contains the  interfacing methods with bytecode for invokedynamic as well as some helper methods and classes.
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen "blackdrag" Theodorou&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>SAFE_NAVIGATION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>THIS_CALL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GROOVY_OBJECT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IMPLICIT_THIS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SPREAD_CALL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UNCACHED_CALL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>LOG_ENABLED</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>LOOKUP</FieldName>
            <FieldType>MethodHandles.Lookup</FieldType>
        </Field>
        <Field>
            <FieldName>SELECT_METHOD</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>switchPoint</FieldName>
            <FieldType>SwitchPoint</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CALL_TYPES</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>callSiteName</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCallSiteName</MethodName>
            <MethodComment>/** 
 * Returns the name of the call site type 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateConstantMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cmcu</ParamName>
                    <FieldType>MetaClassRegistryChangeEvent</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;invalidateSwitchPoints;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invalidateSwitchPoints</MethodName>
            <MethodComment>/** 
 * Callback for constant meta class update change
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SwitchPoint [old=switchPoint]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootstrap</MethodName>
            <MethodComment>/** 
 * bootstrap method for method calls from Groovy compiled code with indy  enabled. This method gets a flags parameter which uses the following  encoding:&lt;ul&gt; &lt;li&gt; {@value #SAFE_NAVIGATION} is the flag value for safe navigation see {@link #SAFE_NAVIGATION}&lt;li/&gt; &lt;li&gt; {@value #THIS_CALL} is the flag value for a call on this see {@link #THIS_CALL}&lt;/li&gt; &lt;/ul&gt; 
 * @param caller - the caller
 * @param callType - the type of the call
 * @param type - the call site type
 * @param name - the real method name
 * @param flags - call flags
 * @return the produced CallSite
 * @since Groovy 2.1.0
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caller</ParamName>
                    <FieldType>Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>callType</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>flags</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [safe=(flags &amp; SAFE_NAVIGATION) != 0]</InnerVar>
                <InnerVar>boolean [thisCall=(flags &amp; THIS_CALL) != 0]</InnerVar>
                <InnerVar>boolean [spreadCall=(flags &amp; SPREAD_CALL) != 0]</InnerVar>
                <InnerVar>int [callID]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootstrapCurrent</MethodName>
            <MethodComment>/** 
 * bootstrap method for method calls with "this" as receiver
 * @deprecated since Groovy 2.1.0
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caller</ParamName>
                    <FieldType>Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootstrapCurrentSafe</MethodName>
            <MethodComment>/** 
 * bootstrap method for method calls with "this" as receiver safe
 * @deprecated since Groovy 2.1.0
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caller</ParamName>
                    <FieldType>Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootstrap</MethodName>
            <MethodComment>/** 
 * bootstrap method for standard method calls
 * @deprecated since Groovy 2.1.0
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caller</ParamName>
                    <FieldType>Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootstrapSafe</MethodName>
            <MethodComment>/** 
 * bootstrap method for null safe standard method calls
 * @deprecated since Groovy 2.1.0
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caller</ParamName>
                    <FieldType>Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>realBootstrap</MethodName>
            <MethodComment>/** 
 * backing bootstrap method with all parameters
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caller</ParamName>
                    <FieldType>Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>callID</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>safe</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>thisCall</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>spreadCall</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MutableCallSite [mc=new MutableCallSite(type)]</InnerVar>
                <InnerVar>MethodHandle [mh=makeFallBack(mc,caller.lookupClass(),name,callID,type,safe,thisCall,spreadCall)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mc;setTarget;[mh]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeFallBack</MethodName>
            <MethodComment>/** 
 * Makes a fallback method for an invalidated method selection
 */
</MethodComment>
            <ReturnType>MethodHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mc</ParamName>
                    <FieldType>MutableCallSite</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>sender</ParamName>
                    <FieldType>?</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>callID</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>safeNavigation</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>thisCall</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>spreadCall</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodHandle [mh=MethodHandles.insertArguments(SELECT_METHOD,0,mc,sender,name,callID,safeNavigation,thisCall,spreadCall,1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>selectMethod</MethodName>
            <MethodComment>/** 
 * Core method for indy method selection using runtime types.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>callSite</ParamName>
                    <FieldType>MutableCallSite</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>sender</ParamName>
                    <FieldType>Class</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>callID</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>safeNavigation</ParamName>
                    <FieldType>Boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>thisCall</ParamName>
                    <FieldType>Boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>spreadCall</ParamName>
                    <FieldType>Boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>dummyReceiver</ParamName>
                    <FieldType>Object</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>arguments</ParamName>
                    <FieldType>Object[]</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Selector [selector=Selector.getSelector(callSite,sender,methodName,callID,safeNavigation,thisCall,spreadCall,arguments)]</InnerVar>
                <InnerVar>MethodHandle [call=selector.handle.asSpreader(Object[].class,arguments.length)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>selector;setCallSiteTarget;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>staticArrayAccess</MethodName>
            <MethodComment>/** 
 * @since 2.5.0
 */
</MethodComment>
            <ReturnType>CallSite</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lookup</ParamName>
                    <FieldType>MethodHandles.Lookup</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <FieldType>MethodType</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodHandle [handle]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>