<Class>
    <Id>403</Id>
    <Package>org.codehaus.groovy.transform.trait</Package>
    <ClassName>TraitReceiverTransformer</ClassName>
    <SuperClass>ClassCodeExpressionTransformer</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TraitReceiverTransformer  /** 
 * This expression transformer is used internally by the  {@link org.codehaus.groovy.transform.trait.TraitASTTransformation trait}AST transformation to change the receiver of a message on "this" into a static method call on the trait helper class. &lt;p&gt;&lt;/p&gt; In a nutshell, code like this one in a trait:&lt;p&gt;&lt;/p&gt; &lt;code&gt;void foo() { this.bar() }&lt;/code&gt; is transformed into: &lt;code&gt;void foo() { TraitHelper$bar(this) }&lt;/code&gt;
 * @author Cedric Champeau
 * @since 2.3.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>INVOKERHELPER_CLASSNODE</FieldName>
            <FieldType>ClassNode</FieldType>
        </Field>
        <Field>
            <FieldName>weaved</FieldName>
            <FieldType>VariableExpression</FieldType>
        </Field>
        <Field>
            <FieldName>unit</FieldName>
            <FieldType>SourceUnit</FieldType>
        </Field>
        <Field>
            <FieldName>traitClass</FieldName>
            <FieldType>ClassNode</FieldType>
        </Field>
        <Field>
            <FieldName>fieldHelper</FieldName>
            <FieldType>ClassNode</FieldType>
        </Field>
        <Field>
            <FieldName>knownFields</FieldName>
            <FieldType>Collection</FieldType>
        </Field>
        <Field>
            <FieldName>knownFields</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TraitReceiverTransformer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>thisObject</ParamName>
                    <FieldType>VariableExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>unit</ParamName>
                    <FieldType>SourceUnit</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>traitClass</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldHelper</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>knownFields</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSourceUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SourceUnit</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exp</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassNode [weavedType=weaved.getOriginType()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformFieldExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exp</ParamName>
                    <FieldType>FieldExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldNode [field=exp.getField()]</InnerVar>
                <InnerVar>MethodCallExpression [mce=new MethodCallExpression(createFieldHelperReceiver(),Traits.helperGetterName(field),ArgumentListExpression.EMPTY_ARGUMENTS)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mce;setSourcePosition;[exp]</InnerMethodInvoke>
                <InnerMethodInvoke>mce;setImplicitThis;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>null;markDynamicCall;[mce, field, field.isStatic()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformBinaryExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exp</ParamName>
                    <FieldType>BinaryExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>weavedType</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Expression [leftExpression=exp.getLeftExpression()]</InnerVar>
                <InnerVar>Expression [rightExpression=exp.getRightExpression()]</InnerVar>
                <InnerVar>Token [operation=exp.getOperation()]</InnerVar>
                <InnerVar>Expression [leftTransform=transform(leftExpression)]</InnerVar>
                <InnerVar>Expression [rightTransform=transform(rightExpression)]</InnerVar>
                <InnerVar>Expression [ret=exp instanceof DeclarationExpression ? new DeclarationExpression(leftTransform,operation,rightTransform) : new BinaryExpression(leftTransform,operation,rightTransform)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ret;setSourcePosition;[exp]</InnerMethodInvoke>
                <InnerMethodInvoke>ret;copyNodeMetaData;[exp]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>markDynamicCall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mce</ParamName>
                    <FieldType>MethodCallExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>fn</ParamName>
                    <FieldType>FieldNode</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>isStatic</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createStaticReceiver</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TernaryExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receiver</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createAssignmentToField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BinaryExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rightExpression</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <FieldType>Token</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tryGetFieldNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FieldNode</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>weavedType</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldNode [fn=weavedType.getDeclaredField(fieldName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>throwSuperError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <FieldType>ASTNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>unit;addError;[new SyntaxException("Call to super is not allowed in a trait",node.getLineNumber(),node.getColumnNumber())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformSuperMethodCall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>call</ParamName>
                    <FieldType>MethodCallExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [method=call.getMethodAsString()]</InnerVar>
                <InnerVar>Expression [arguments=transform(call.getArguments())]</InnerVar>
                <InnerVar>ArgumentListExpression [superCallArgs=new ArgumentListExpression()]</InnerVar>
                <InnerVar>MethodCallExpression [transformed=new MethodCallExpression(weaved,Traits.getSuperTraitMethodName(traitClass,method),superCallArgs)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>transformed;setSourcePosition;[call]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setSafe;[call.isSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setSpreadSafe;[call.isSpreadSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setImplicitThis;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformMethodCallOnThis</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>call</ParamName>
                    <FieldType>MethodCallExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Expression [method=call.getMethod()]</InnerVar>
                <InnerVar>Expression [arguments=call.getArguments()]</InnerVar>
                <InnerVar>MethodCallExpression [transformed=new MethodCallExpression(weaved,method,transform(arguments))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>transformed;setSourcePosition;[call]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setSafe;[call.isSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setSpreadSafe;[call.isSpreadSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setImplicitThis;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformPrivateMethodCall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>call</ParamName>
                    <FieldType>MethodCallExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>arguments</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArgumentListExpression [newArgs=createArgumentList(arguments)]</InnerVar>
                <InnerVar>MethodCallExpression [transformed=new MethodCallExpression(new VariableExpression("this"),methodName,newArgs)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>transformed;setSourcePosition;[call]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setSafe;[call.isSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setSpreadSafe;[call.isSpreadSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>transformed;setImplicitThis;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createFieldHelperReceiver</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createArgumentList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ArgumentListExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>origCallArgs</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArgumentListExpression [newArgs=new ArgumentListExpression()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>newArgs;addExpression;[new VariableExpression(weaved)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>