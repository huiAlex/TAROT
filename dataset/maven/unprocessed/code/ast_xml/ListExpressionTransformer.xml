<Class>
    <Id>465</Id>
    <Package>org.codehaus.groovy.transform.sc.transformers</Package>
    <ClassName>ListExpressionTransformer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>transformer</FieldName>
            <FieldType>StaticCompilationTransformer</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ListExpressionTransformer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>staticCompilationTransformer</ParamName>
                    <FieldType>StaticCompilationTransformer</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformListExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>ListExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodNode [target=expr.getNodeMetaData(StaticTypesMarker.DIRECT_METHOD_CALL_TARGET)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformArrayConstructor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>ListExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <FieldType>MethodNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArrayExpression [aex=new ArrayExpression(target.getDeclaringClass().getComponentType(),transformArguments(expr))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>aex;setSourcePosition;[expr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformRegularConstructor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>ListExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <FieldType>MethodNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Expression&gt; [transformedArgs=transformArguments(expr)]</InnerVar>
                <InnerVar>ConstructorCallExpression [cce=new ConstructorCallExpression(target.getDeclaringClass(),new ArgumentListExpression(transformedArgs))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cce;setSourcePosition;[expr]</InnerMethodInvoke>
                <InnerMethodInvoke>cce;putNodeMetaData;[DIRECT_METHOD_CALL_TARGET, target]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformArguments</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>ListExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Expression&gt; [expressions=expr.getExpressions()]</InnerVar>
                <InnerVar>List&lt;Expression&gt; [transformedArgs=new LinkedList&lt;Expression&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>