<Class>
    <Id>178</Id>
    <Package>org.codehaus.groovy.classgen.asm.sc</Package>
    <ClassName>StaticPropertyAccessHelper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StaticPropertyAccessHelper  /** 
 * Contains helper methods aimed at facilitating the generation of statically compiled bytecode for property access.
 * @author CÃ©dric Champeau
 * @since 2.4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>tmp</FieldName>
            <FieldType>TemporaryVariableExpression</FieldType>
        </Field>
        <Field>
            <FieldName>call</FieldName>
            <FieldType>PoppingMethodCallExpression</FieldType>
        </Field>
        <Field>
            <FieldName>receiver</FieldName>
            <FieldType>Expression</FieldType>
        </Field>
        <Field>
            <FieldName>setter</FieldName>
            <FieldType>MethodNode</FieldType>
        </Field>
        <Field>
            <FieldName>tmp</FieldName>
            <FieldType>TemporaryVariableExpression</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>transformToSetterCall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receiver</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>setterMethod</ParamName>
                    <FieldType>MethodNode</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>arguments</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>implicitThis</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>safe</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>spreadSafe</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>requiresReturnValue</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>location</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PoppingListOfExpressionsExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tmp</ParamName>
                    <FieldType>TemporaryVariableExpression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>call</ParamName>
                    <FieldType>PoppingMethodCallExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transformer</ParamName>
                    <FieldType>ExpressionTransformer</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PoppingMethodCallExpression [tcall=(PoppingMethodCallExpression)call.transformExpression(transformer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>visitor</ParamName>
                    <FieldType>GroovyCodeVisitor</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PoppingMethodCallExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receiver</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>setterMethod</ParamName>
                    <FieldType>MethodNode</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>tmp</ParamName>
                    <FieldType>TemporaryVariableExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setMethodTarget;[setterMethod]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transformer</ParamName>
                    <FieldType>ExpressionTransformer</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PoppingMethodCallExpression [trn=new PoppingMethodCallExpression(receiver.transformExpression(transformer),setter,(TemporaryVariableExpression)tmp.transformExpression(transformer))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>trn;copyNodeMetaData;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>trn;setImplicitThis;[isImplicitThis()]</InnerMethodInvoke>
                <InnerMethodInvoke>trn;setSafe;[isSafe()]</InnerMethodInvoke>
                <InnerMethodInvoke>trn;setSpreadSafe;[isSpreadSafe()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>visitor</ParamName>
                    <FieldType>GroovyCodeVisitor</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>