<Class>
    <Id>206</Id>
    <Package>org.codehaus.groovy.tools.javac</Package>
    <ClassName>JavaAwareCompilationUnit</ClassName>
    <SuperClass>CompilationUnit</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JavaAwareCompilationUnit  /** 
 * Compilation Unit capable of compiling Java source files.
 * @author Alex.Tkachman
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>javaSources</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>javaSources</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>stubGenerator</FieldName>
            <FieldType>JavaStubGenerator</FieldType>
        </Field>
        <Field>
            <FieldName>compilerFactory</FieldName>
            <FieldType>JavaCompilerFactory</FieldType>
        </Field>
        <Field>
            <FieldName>generationGoal</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>keepStubs</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>JavaAwareCompilationUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <FieldType>CompilerConfiguration</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JavaAwareCompilationUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <FieldType>CompilerConfiguration</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>groovyClassLoader</ParamName>
                    <FieldType>GroovyClassLoader</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JavaAwareCompilationUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <FieldType>CompilerConfiguration</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>groovyClassLoader</ParamName>
                    <FieldType>GroovyClassLoader</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>transformClassLoader</ParamName>
                    <FieldType>GroovyClassLoader</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map [options=configuration.getJointCompilationOptions()]</InnerVar>
                <InnerVar>boolean [useJava5=CompilerConfiguration.isPostJDK5(configuration.getTargetBytecode())]</InnerVar>
                <InnerVar>String [encoding=configuration.getSourceEncoding()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addPhaseOperation;[new PrimaryClassNodeOperation(){
  public void call(  SourceUnit source,  GeneratorContext context,  ClassNode node) throws CompilationFailedException {
    if (javaSources.size() != 0) {
      VariableScopeVisitor scopeVisitor=new VariableScopeVisitor(source);
      scopeVisitor.visitClass(node);
      new JavaAwareResolveVisitor(JavaAwareCompilationUnit.this).startResolving(node,source);
      AnnotationConstantsVisitor acv=new AnnotationConstantsVisitor();
      acv.visitClass(node,source);
    }
  }
}
, Phases.CONVERSION]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addPhaseOperation;[new CompilationUnit.PrimaryClassNodeOperation(){
  public void call(  SourceUnit source,  GeneratorContext context,  ClassNode classNode) throws CompilationFailedException {
    ASTTransformationCollectorCodeVisitor collector=new ASTTransformationCollectorCodeVisitor(source,JavaAwareCompilationUnit.this.getTransformLoader());
    collector.visitClass(classNode);
  }
}
, Phases.CONVERSION]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addPhaseOperation;[new PrimaryClassNodeOperation(){
  public void call(  SourceUnit source,  GeneratorContext context,  ClassNode classNode) throws CompilationFailedException {
    try {
      if (javaSources.size() != 0)       stubGenerator.generateClass(classNode);
    }
 catch (    FileNotFoundException fnfe) {
      source.addException(fnfe);
    }
  }
}
, Phases.CONVERSION]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>source</ParamName>
                    <FieldType>SourceUnit</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <FieldType>GeneratorContext</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CompilationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>source</ParamName>
                    <FieldType>SourceUnit</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <FieldType>GeneratorContext</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>classNode</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ASTTransformationCollectorCodeVisitor [collector=new ASTTransformationCollectorCodeVisitor(source,JavaAwareCompilationUnit.this.getTransformLoader())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>collector;visitClass;[classNode]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CompilationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>source</ParamName>
                    <FieldType>SourceUnit</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <FieldType>GeneratorContext</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>classNode</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CompilationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>gotoPhase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>phase</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CompilationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configure</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <FieldType>CompilerConfiguration</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [targetDir=configuration.getTargetDirectory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addJavaSource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>file</ParamName>
                    <FieldType>File</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [path=file.getAbsolutePath()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>javaSources;add;[path]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addSources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>paths</ParamName>
                    <FieldType>String[]</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addSources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>files</ParamName>
                    <FieldType>File[]</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCompilerFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaCompilerFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCompilerFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>compilerFactory</ParamName>
                    <FieldType>JavaCompilerFactory</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>