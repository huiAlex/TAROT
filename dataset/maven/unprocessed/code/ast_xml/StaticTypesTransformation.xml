<Class>
    <Id>420</Id>
    <Package>org.codehaus.groovy.transform</Package>
    <ClassName>StaticTypesTransformation</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ASTTransformation</SuperInterface>
        <SuperInterface>CompilationUnitAware</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StaticTypesTransformation  /** 
 * Handles the implementation of the  {@link groovy.transform.TypeChecked} transformation.
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen "blackdrag" Theodorou&lt;/a&gt;
 * @author Cedric Champeau
 * @author Guillaume Laforge
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>STATIC_ERROR_PREFIX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>compilationUnit</FieldName>
            <FieldType>CompilationUnit</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodes</ParamName>
                    <FieldType>ASTNode[]</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <FieldType>SourceUnit</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AnnotationNode [annotationInformation=(AnnotationNode)nodes[0]]</InnerVar>
                <InnerVar>Map&lt;String,Expression&gt; [members=annotationInformation.getMembers()]</InnerVar>
                <InnerVar>Expression [extensions=members.get("extensions")]</InnerVar>
                <InnerVar>AnnotatedNode [node=(AnnotatedNode)nodes[1]]</InnerVar>
                <InnerVar>StaticTypeCheckingVisitor [visitor=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addTypeCheckingExtensions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>visitor</ParamName>
                    <FieldType>StaticTypeCheckingVisitor</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>extensions</ParamName>
                    <FieldType>Expression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newVisitor</MethodName>
            <MethodComment>/** 
 * Allows subclasses to provide their own visitor. This is useful for example for transformations relying on the static type checker.
 * @param unit the source unit
 * @param node the current classnode
 * @return a static type checking visitor
 */
</MethodComment>
            <ReturnType>StaticTypeCheckingVisitor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>unit</ParamName>
                    <FieldType>SourceUnit</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <FieldType>ClassNode</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCompilationUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>unit</ParamName>
                    <FieldType>CompilationUnit</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>