<Class>
    <Id>48</Id>
    <Package>org.codehaus.groovy.transform.sc.transformers</Package>
    <ClassName>VariableExpressionTransformer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>VariableExpressionTransformer  /** 
 * Transformer for VariableExpression the bytecode backend wouldn't be able to handle otherwise.
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen "blackdrag" Theodorou&lt;/a&gt;
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>transformVariableExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>VariableExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Expression [trn=tryTransformPrivateFieldAccess(expr)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tryTransformDelegateToProperty</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>VariableExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [val=expr.getNodeMetaData(StaticTypesMarker.IMPLICIT_RECEIVER)]</InnerVar>
                <InnerVar>VariableExpression [implicitThis=new VariableExpression("this")]</InnerVar>
                <InnerVar>PropertyExpression [pexp=new PropertyExpression(implicitThis,expr.getName())]</InnerVar>
                <InnerVar>ClassNode [owner=expr.getNodeMetaData(StaticCompilationMetadataKeys.PROPERTY_OWNER)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pexp;copyNodeMetaData;[expr]</InnerMethodInvoke>
                <InnerMethodInvoke>pexp;setImplicitThis;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tryTransformPrivateFieldAccess</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <FieldType>VariableExpression</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldNode [field=expr.getNodeMetaData(StaticTypesMarker.PV_FIELDS_ACCESS)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>