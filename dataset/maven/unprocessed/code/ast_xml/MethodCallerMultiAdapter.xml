<Class>
    <Id>135</Id>
    <Package>org.codehaus.groovy.classgen.asm</Package>
    <ClassName>MethodCallerMultiAdapter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>methods</FieldName>
            <FieldType>MethodCaller[]</FieldType>
        </Field>
        <Field>
            <FieldName>skipSpreadSafeAndSafe</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_ARGS</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>newStatic</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MethodCallerMultiAdapter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>theClass</ParamName>
                    <FieldType>Class</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>baseName</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>createNArgs</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>skipSpreadSafeAndSafe</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodCallerMultiAdapter [mcma=new MethodCallerMultiAdapter()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment>/** 
 * @param methodVisitor
 * @param numberOfArguments a value &gt;0 describing how many arguments are additionally used for the method call
 * @param safe
 * @param spreadSafe
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>methodVisitor</ParamName>
                    <FieldType>MethodVisitor</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>numberOfArguments</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>safe</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>spreadSafe</ParamName>
                    <FieldType>boolean</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [offset=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>methods[offset];call;[methodVisitor]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>numberOfBaseMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>