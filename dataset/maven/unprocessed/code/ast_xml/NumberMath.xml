<Class>
    <Id>652</Id>
    <Package>org.codehaus.groovy.runtime.typehandling</Package>
    <ClassName>NumberMath</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>NumberMath  /** 
 * Stateless objects used to perform math on the various Number subclasses. Instances are required so that polymorphic calls work properly, but each subclass creates a singleton instance to minimize garbage.  All methods must be thread-safe. The design goals of this class are as follows: &lt;ol&gt; &lt;li&gt;Support a 'least surprising' math model to scripting language users.  This means that exact, or decimal math should be used for default calculations.  This scheme assumes that by default, groovy literals with decimal points are instantiated as BigDecimal objects rather than binary floating points (Float, Double).  &lt;li&gt;Do not force the appearance of exactness on a number that is by definition not  guaranteed to be exact.  In particular this means that if an operand in a NumberMath  operation is a binary floating point number, ensure that the result remains a binary floating point  number (i.e. never automatically promote a binary floating point number to a BigDecimal).   This has the effect of preserving the expectations of binary floating point users and helps performance. &lt;li&gt;Provide an implementation that is as close as practical to the Java 1.5 BigDecimal math model  which implements precision based floating point decimal math (ANSI X3.274-1996 and  ANSI X3.274-1996/AM 1-2000 (section 7.4).   &lt;/ol&gt;
 * @author Steve Goetze
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>abs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>add</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>subtract</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>multiply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>divide</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareTo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>or</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>and</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>xor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>intdiv</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>leftShift</MethodName>
            <MethodComment>/** 
 * For this operation, consider the operands independently.  Throw an exception if the right operand (shift distance) is not an integral type.  For the left operand (shift value) also require an integral type, but do NOT promote from Integer to Long.  This is consistent with Java, and makes sense for the shift operators.
 */
</MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rightShift</MethodName>
            <MethodComment>/** 
 * For this operation, consider the operands independently.  Throw an exception if the right operand (shift distance) is not an integral type.  For the left operand (shift value) also require an integral type, but do NOT promote from Integer to Long.  This is consistent with Java, and makes sense for the shift operators.
 */
</MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rightShiftUnsigned</MethodName>
            <MethodComment>/** 
 * For this operation, consider the operands independently.  Throw an exception if the right operand (shift distance) is not an integral type.  For the left operand (shift value) also require an integral type, but do NOT promote from Integer to Long.  This is consistent with Java, and makes sense for the shift operators.
 */
</MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bitwiseNegate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unaryMinus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unaryPlus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFloatingPoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isInteger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLong</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBigDecimal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBigInteger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toBigDecimal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BigDecimal</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>n</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toBigInteger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BigInteger</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>n</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMath</MethodName>
            <MethodComment>/** 
 * Determine which NumberMath instance to use, given the supplied operands.  This method implements the type promotion rules discussed in the documentation.  Note that by the time this method is called, any Byte, Character or Short operands will have been promoted to Integer.  For reference, here is the promotion matrix: bD bI  D  F  L  I bD bD bD  D  D bD bD bI bD bI  D  D bI bI D  D  D  D  D  D  D F  D  D  D  D  D  D L bD bI  D  D  L  L I bD bI  D  D  L  I Note that for division, if either operand isFloatingPoint, the result will be floating.  Otherwise, the result is BigDecimal
 */
</MethodComment>
            <ReturnType>NumberMath</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NumberMath</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>absImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>subtractImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>multiplyImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>divideImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareToImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unaryMinusImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unaryPlusImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bitwiseNegateImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>andImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>xorImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>modImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>intdivImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>leftShiftImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rightShiftImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rightShiftUnsignedImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Number</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createUnsupportedException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UnsupportedOperationException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <FieldType>String</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>left</ParamName>
                    <FieldType>Number</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>