<Class>
    <Id>331</Id>
    <Package>org.codehaus.groovy.vmplugin.v7</Package>
    <ClassName>TypeTransformers</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TypeTransformers  /** 
 * This class contains several transformers for used during method invocation.
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen "blackdrag" Theodorou&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOOKUP</FieldName>
            <FieldType>MethodHandles.Lookup</FieldType>
        </Field>
        <Field>
            <FieldName>TO_STRING</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_BYTE</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_INT</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_LONG</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_SHORT</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_FLOAT</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_DOUBLE</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_BIG_INT</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_BIG_DEC</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>AS_ARRAY</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_REFLECTIVE_PROXY</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_GENERATED_PROXY</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>TO_SAMTRAIT_PROXY</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>addTransformer</MethodName>
            <MethodComment>/** 
 * Adds a type transformer applied at runtime. This method handles transformations to String from GString, array transformations and number based transformations
 */
</MethodComment>
            <ReturnType>MethodHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handle</ParamName>
                    <FieldType>MethodHandle</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <FieldType>Object</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>parameter</ParamName>
                    <FieldType>Class</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodHandle [transformer=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createSAMTransform</MethodName>
            <MethodComment>/** 
 * creates a method handle able to transform the given Closure into a SAM type if the given parameter is a SAM type 
 */
</MethodComment>
            <ReturnType>MethodHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <FieldType>Object</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>parameter</ParamName>
                    <FieldType>Class</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Method [method=CachedSAMClass.getSAMMethod(parameter)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyUnsharpFilter</MethodName>
            <MethodComment>/** 
 * Apply a transformer as filter. The filter may not match exactly in the types. In this case needed additional type transformations are done by  {@link MethodHandle#asType(MethodType)} 
 */
</MethodComment>
            <ReturnType>MethodHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handle</ParamName>
                    <FieldType>MethodHandle</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <FieldType>int</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>transformer</ParamName>
                    <FieldType>MethodHandle</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodType [type=transformer.type()]</InnerVar>
                <InnerVar>Class [given=handle.type().parameterType(pos)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>selectNumberTransformer</MethodName>
            <MethodComment>/** 
 * returns a transformer later applied as filter to transform one number into another
 */
</MethodComment>
            <ReturnType>MethodHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>param</ParamName>
                    <FieldType>Class</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <FieldType>Object</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>