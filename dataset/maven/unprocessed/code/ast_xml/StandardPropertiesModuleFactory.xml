<Class>
    <Id>82</Id>
    <Package>org.codehaus.groovy.runtime.m12n</Package>
    <ClassName>StandardPropertiesModuleFactory</ClassName>
    <SuperClass>PropertiesModuleFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StandardPropertiesModuleFactory  /** 
 * This is the standard Groovy module factory. This factory will build a module using the  {@link MetaInfExtensionModule} by default, unless a key named"factory" is found in the properties file. If this is the case, then a new factory is instantiated and used instead of this factory.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>MODULE_FACTORY_KEY</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>newModule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExtensionModule</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <FieldType>Properties</FieldType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <FieldType>ClassLoader</FieldType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [factoryName=properties.getProperty(MODULE_FACTORY_KEY)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>