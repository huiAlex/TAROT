Creating multiple caches from a CacheManager configured with a JdbcXXXCacheStore results in unpredicted behaviour:
After creating a CacheManger that persists its entries with a JdbcXXXCacheStore one will see strange behaviour like this:
Cache fooCache = cacheManager.getCache( foo );
Cache barCache = cacheManager.getCache( bar );
// single put:
fooCache.put(42,  Hello World );
After restart :
fooCache.contains(42); // true
barCache.contains(42); // true !!!!
To circumvent this behaviour the only solution is to create one CacheStore per Cache. So one migth end up using a lot of different CacheManagers.
The best solution IMHO would be to add sopport for a  cacheName  column to  TableManipulation . So different caches could share the same table.
