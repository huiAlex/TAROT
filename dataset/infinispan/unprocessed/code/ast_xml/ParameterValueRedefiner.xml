<Class>
    <Id>1190</Id>
    <Package>org.infinispan.cdi.common.util</Package>
    <ClassName>ParameterValueRedefiner</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ParameterValueRedefiner  /** 
 * Provides the ability to redefine the value of a parameter on an {@link InjectableMethod} via the{@link #redefineParameterValue(ParameterValue)} callback.
 * @author Pete Muir
 * @see InjectableMethod
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>position</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>injectionPoint</FieldName>
            <FieldType>InjectionPoint</FieldType>
        </Field>
        <Field>
            <FieldName>beanManager</FieldName>
            <FieldType>BeanManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ParameterValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>position</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>injectionPoint</ParamName>
                    <ParamType>InjectionPoint</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>beanManager</ParamName>
                    <ParamType>BeanManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPosition</MethodName>
            <MethodComment>/** 
 * Get the position of the parameter in the member's parameter list.
 * @return the position of the parameter
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInjectionPoint</MethodName>
            <MethodComment>/** 
 * Get the  {@link InjectionPoint} for the parameter.
 * @return the injection point
 */
</MethodComment>
            <ReturnType>InjectionPoint</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDefaultValue</MethodName>
            <MethodComment>/** 
 * Get the default value of the parameter. The default value is that which would be injected according to the CDI type safe resolution rules.
 * @param creationalContext the creationalContext to use to obtain theinjectable reference.
 * @return the default value
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>creationalContext</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>redefineParameterValue</MethodName>
            <MethodComment>/** 
 * Callback allowing the default parameter value (that which would be injected according to the CDI type safe resolution rules) to be overridden.
 * @param value the default value
 * @return the overridden value
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>ParameterValue</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>