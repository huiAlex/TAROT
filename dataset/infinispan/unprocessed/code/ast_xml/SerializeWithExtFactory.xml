<Class>
    <Id>389</Id>
    <Package>org.infinispan.commons.marshall.jboss</Package>
    <ClassName>SerializeWithExtFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ClassExternalizerFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SerializeWithExtFactory  /** 
 * JBoss Marshalling plugin class for  {@link ClassExternalizerFactory} thatallows for Infinispan annotations to be used instead of JBoss Marshalling ones in order to discover which classes are serializable with Infinispan externalizers.
 * @author Galder Zamarre√±o
 * @since 5.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>jbmarExtFactory</FieldName>
            <FieldType>ClassExternalizerFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getExternalizer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Externalizer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SerializeWith [serialWithAnn=type.getAnnotation(SerializeWith.class)]</InnerVar>
                <InnerVar>SerializeFunctionWith [lambdaSerialWithAnn=type.getAnnotation(SerializeFunctionWith.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>