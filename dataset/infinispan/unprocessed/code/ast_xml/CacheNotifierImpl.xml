<Class>
    <Id>3159</Id>
    <Package>org.infinispan.notifications.cachelistener</Package>
    <ClassName>CacheNotifierImpl</ClassName>
    <SuperClass>AbstractListenerImpl</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ClusterCacheNotifier</SuperInterface>
        <SuperInterface>K</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheNotifierImpl  /** 
 * Helper class that handles all notifications to registered listeners.
 * @author Manik Surtani (manik AT infinispan DOT org)
 * @author Mircea.Markus@jboss.com
 * @author William Burns
 * @author anistor@redhat.com
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>allowedListeners</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>allowedListeners</FieldName>
            <FieldType>Class&lt;? extends Annotation&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>clusterAllowedListeners</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>clusterAllowedListeners</FieldName>
            <FieldType>Class&lt;? extends Annotation&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryCreatedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryCreatedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryRemovedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryRemovedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryVisitedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryVisitedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryModifiedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryModifiedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryActivatedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryActivatedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryPassivatedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryPassivatedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryLoadedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryLoadedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryInvalidatedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryInvalidatedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryExpiredListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntryExpiredListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntriesEvictedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cacheEntriesEvictedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>transactionRegisteredListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>transactionRegisteredListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>transactionCompletedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>transactionCompletedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>dataRehashedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>dataRehashedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>topologyChangedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>topologyChangedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>partitionChangedListeners</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>partitionChangedListeners</FieldName>
            <FieldType>CacheEntryListenerInvocation&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Cache</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>clusteringDependentLogic</FieldName>
            <FieldType>ClusteringDependentLogic</FieldType>
        </Field>
        <Field>
            <FieldName>transactionManager</FieldName>
            <FieldType>TransactionManager</FieldType>
        </Field>
        <Field>
            <FieldName>distExecutorService</FieldName>
            <FieldType>DistributedExecutorService</FieldType>
        </Field>
        <Field>
            <FieldName>config</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>distributionManager</FieldName>
            <FieldType>DistributionManager</FieldType>
        </Field>
        <Field>
            <FieldName>entryFactory</FieldName>
            <FieldType>InternalEntryFactory</FieldType>
        </Field>
        <Field>
            <FieldName>eventManager</FieldName>
            <FieldType>ClusterEventManager</FieldType>
        </Field>
        <Field>
            <FieldName>eventManager</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>componentRegistry</FieldName>
            <FieldType>ComponentRegistry</FieldType>
        </Field>
        <Field>
            <FieldName>clusterListenerIDs</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>clusterListenerIDs</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>defaultEncoder</FieldName>
            <FieldType>Encoder</FieldType>
        </Field>
        <Field>
            <FieldName>defaultWrapper</FieldName>
            <FieldType>Wrapper</FieldType>
        </Field>
        <Field>
            <FieldName>filterIndexingServiceProviders</FieldName>
            <FieldType>Collection</FieldType>
        </Field>
        <Field>
            <FieldName>filterIndexingServiceProviders</FieldName>
            <FieldType>FilterIndexingServiceProvider</FieldType>
        </Field>
        <Field>
            <FieldName>segmentHandler</FieldName>
            <FieldType>ConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>segmentHandler</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>CacheEventFilter</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>CacheEventConverter</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>onlyPrimary</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>clustered</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>includeCurrentState</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>identifier</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>keyDataConversion</FieldName>
            <FieldType>DataConversion</FieldType>
        </Field>
        <Field>
            <FieldName>valueDataConversion</FieldName>
            <FieldType>DataConversion</FieldType>
        </Field>
        <Field>
            <FieldName>observation</FieldName>
            <FieldType>Listener.Observation</FieldType>
        </Field>
        <Field>
            <FieldName>filterAnnotations</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>filterAnnotations</FieldName>
            <FieldType>Class&lt;? extends Annotation&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>provider</FieldName>
            <FieldType>FilterIndexingServiceProvider</FieldType>
        </Field>
        <Field>
            <FieldName>listeners</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>listeners</FieldName>
            <FieldType>Class&lt;? extends Annotation&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>handler</FieldName>
            <FieldType>QueueingSegmentListener</FieldType>
        </Field>
        <Field>
            <FieldName>handler</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>handler</FieldName>
            <FieldType>QueueingSegmentListener</FieldType>
        </Field>
        <Field>
            <FieldName>handler</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>invocation</FieldName>
            <FieldType>ListenerInvocation</FieldType>
        </Field>
        <Field>
            <FieldName>invocation</FieldName>
            <FieldType>Event&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>CacheEventFilter</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>CacheEventConverter</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>keyDataConversion</FieldName>
            <FieldType>DataConversion</FieldType>
        </Field>
        <Field>
            <FieldName>valueDataConversion</FieldName>
            <FieldType>DataConversion</FieldType>
        </Field>
        <Field>
            <FieldName>onlyPrimary</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>clustered</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>identifier</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>annotation</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>annotation</FieldName>
            <FieldType>? extends Annotation</FieldType>
        </Field>
        <Field>
            <FieldName>sync</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>filterAndConvert</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>observation</FieldName>
            <FieldType>Listener.Observation</FieldType>
        </Field>
        <Field>
            <FieldName>filterAnnotations</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>filterAnnotations</FieldName>
            <FieldType>Class&lt;? extends Annotation&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheNotifierImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CacheNotifierImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryCreated.class, cacheEntryCreatedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryRemoved.class, cacheEntryRemovedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryVisited.class, cacheEntryVisitedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryModified.class, cacheEntryModifiedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryActivated.class, cacheEntryActivatedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryPassivated.class, cacheEntryPassivatedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryLoaded.class, cacheEntryLoadedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntriesEvicted.class, cacheEntriesEvictedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryExpired.class, cacheEntryExpiredListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[TransactionRegistered.class, transactionRegisteredListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[TransactionCompleted.class, transactionCompletedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[CacheEntryInvalidated.class, cacheEntryInvalidatedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[DataRehashed.class, dataRehashedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[TopologyChanged.class, topologyChangedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenersMap;put;[PartitionStatusChanged.class, partitionChangedListeners]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>injectDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clusteringDependentLogic</ParamName>
                    <ParamType>ClusteringDependentLogic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>transactionManager</ParamName>
                    <ParamType>TransactionManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>distributionManager</ParamName>
                    <ParamType>DistributionManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entryFactory</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>componentRegistry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AsyncInterceptorChain [interceptorChain=SecurityActions.getAsyncInterceptorChain(cache)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Log</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllowedMethodAnnotations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends Annotation&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>l</ParamName>
                    <ParamType>Listener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convertKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Wrapper [wrp=keyDataConversion != null ? keyDataConversion.getWrapper() : defaultWrapper]</InnerVar>
                <InnerVar>Encoder [enc=keyDataConversion != null ? keyDataConversion.getEncoder() : defaultEncoder]</InnerVar>
                <InnerVar>Object [unwrappedKey=wrp.unwrap(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convertValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Wrapper [wrp=valueDataConversion != null ? valueDataConversion.getWrapper() : defaultWrapper]</InnerVar>
                <InnerVar>Encoder [enc=valueDataConversion != null ? valueDataConversion.getEncoder() : defaultEncoder]</InnerVar>
                <InnerVar>Object [unwrappedValue=wrp.unwrap(value)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suspendIfNeeded</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resumeIfNeeded</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transaction</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryCreated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryModified</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousValue</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousMetadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryRemoved</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousValue</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousMetadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configureEvent</MethodName>
            <MethodComment>/** 
 * Configure event data. Currently used for 'created', 'modified', 'removed', 'invalidated' events.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousValue</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousMetadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>e;setOriginLocal;[ctx.isOriginLocal()]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setValue;[pre ? previousValue : value]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setPre;[pre]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setOldValue;[previousValue]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setOldMetadata;[previousMetadata]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setMetadata;[metadata]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setKey;[key]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setTx;[ctx, e]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configureEvent</MethodName>
            <MethodComment>/** 
 * Configure event data. Currently used for 'activated', 'loaded', 'visited' events.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>e;setPre;[pre]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setKey;[convertKey(keyDataConversion,key)]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setValue;[convertValue(valueDataConversion,value)]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setOriginLocal;[ctx.isOriginLocal()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setTx;[ctx, e]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configureEvent</MethodName>
            <MethodComment>/** 
 * Configure event data. Currently used for 'expired' events.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>e;setKey;[convertKey(keyDataConversion,key)]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setValue;[convertValue(valueDataConversion,value)]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setMetadata;[metadata]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setOriginLocal;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>e;setPre;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryVisited</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntriesEvicted</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entries</ParamName>
                    <ParamType>InternalCacheEntry&lt;? extends K,? extends V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryExpired</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryInvalidated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryLoaded</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryActivated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTx</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyCacheEntryPassivated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyTransactionCompleted</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transaction</ParamName>
                    <ParamType>GlobalTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>successful</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyTransactionRegistered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>globalTransaction</ParamName>
                    <ParamType>GlobalTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isOriginLocal</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyDataRehashed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oldCH</ParamName>
                    <ParamType>ConsistentHash</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newCH</ParamName>
                    <ParamType>ConsistentHash</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>unionCH</ParamName>
                    <ParamType>ConsistentHash</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newTopologyId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyTopologyChanged</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oldTopology</ParamName>
                    <ParamType>CacheTopology</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newTopology</ParamName>
                    <ParamType>CacheTopology</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newTopologyId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyPartitionStatusChanged</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mode</ParamName>
                    <ParamType>AvailabilityMode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pre</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyClusterListeners</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>events</ParamName>
                    <ParamType>? extends CacheEntryEvent&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>uuid</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>retrieveClusterListenerCallablesToInstall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DistributedCallable</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;Object&gt; [enlistedAlready=new HashSet&lt;&gt;()]</InnerVar>
                <InnerVar>Set&lt;DistributedCallable&gt; [callables=new HashSet&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;registerClusterListenerCallablesToInstall;[enlistedAlready, callables, cacheEntryModifiedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerClusterListenerCallablesToInstall;[enlistedAlready, callables, cacheEntryCreatedListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerClusterListenerCallablesToInstall;[enlistedAlready, callables, cacheEntryRemovedListeners]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerClusterListenerCallablesToInstall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enlistedAlready</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callables</ParamName>
                    <ParamType>DistributedCallable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listenerInvocations</ParamName>
                    <ParamType>CacheEntryListenerInvocation&lt;K,V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isNotificationAllowed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cmd</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listeners</ParamName>
                    <ParamType>CacheEntryListenerInvocation&lt;K,V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListener;[listener, null, null, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListener;[listener, null, null, classLoader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListener;[listener, new KeyFilterAsCacheEventFilter&lt;&gt;(filter), null, classLoader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListenerInternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Listener [l=testListenerClassValidity(listener.getClass())]</InnerVar>
                <InnerVar>UUID [generatedId=UUID.randomUUID()]</InnerVar>
                <InnerVar>CacheMode [cacheMode=config.clustering().cacheMode()]</InnerVar>
                <InnerVar>FilterIndexingServiceProvider [indexingProvider=null]</InnerVar>
                <InnerVar>boolean [foundMethods=false]</InnerVar>
                <InnerVar>DataConversion [keyConversion=keyDataConversion == null ? DataConversion.DEFAULT : keyDataConversion]</InnerVar>
                <InnerVar>DataConversion [valueConversion=valueDataConversion == null ? DataConversion.DEFAULT : valueDataConversion]</InnerVar>
                <InnerVar>QueueingSegmentListener [handler=segmentHandler.remove(generatedId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment>/** 
 * Adds the listener using the provided filter converter and class loader.  The provided builder is used to add additional configuration including (clustered, onlyPrimary &amp; identifier) which can be used after this method is completed to see what values were used in the addition of this listener
 * @param listener
 * @param filter
 * @param converter
 * @param classLoader
 * @param &lt; C &gt;
 * @return
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListenerInternal;[listener, null, null, filter, converter, classLoader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findIndexingServiceProvider</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterIndexingServiceProvider</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexedFilter</ParamName>
                    <ParamType>IndexedFilter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;noFilterIndexingServiceProviderFound;[indexedFilter.getClass().getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getListenerCollectionForAnnotation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntryListenerInvocation&lt;K,V&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>raiseEventForInitialTransfer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entry</ParamName>
                    <ParamType>CacheEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clustered</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EventImpl [preEvent]</InnerVar>
                <InnerVar>EventImpl [postEvent=EventImpl.createEvent(cache,CACHE_ENTRY_CREATED)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>postEvent;setKey;[entry.getKey()]</InnerMethodInvoke>
                <InnerMethodInvoke>postEvent;setValue;[entry.getValue()]</InnerMethodInvoke>
                <InnerMethodInvoke>postEvent;setMetadata;[entry.getMetadata()]</InnerMethodInvoke>
                <InnerMethodInvoke>postEvent;setPre;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListener;[listener, filter, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListener;[listener, filter, converter, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addFilteredListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addFilteredListenerInternal;[listener, null, null, filter, converter, filterAnnotations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listenerHolder</ParamName>
                    <ParamType>ListenerHolder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListenerInternal;[listenerHolder.getListener(), listenerHolder.getKeyDataConversion(), listenerHolder.getValueDataConversion(), filter, converter, classLoader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addFilteredListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listenerHolder</ParamName>
                    <ParamType>ListenerHolder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addFilteredListenerInternal;[listenerHolder.getListener(), listenerHolder.getKeyDataConversion(), listenerHolder.getValueDataConversion(), filter, converter, filterAnnotations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addFilteredListenerInternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Listener [l=testListenerClassValidity(listener.getClass())]</InnerVar>
                <InnerVar>UUID [generatedId=UUID.randomUUID()]</InnerVar>
                <InnerVar>CacheMode [cacheMode=config.clustering().cacheMode()]</InnerVar>
                <InnerVar>FilterIndexingServiceProvider [indexingProvider=null]</InnerVar>
                <InnerVar>boolean [foundMethods=false]</InnerVar>
                <InnerVar>DataConversion [keyConversion=keyDataConversion == null ? DataConversion.DEFAULT : keyDataConversion]</InnerVar>
                <InnerVar>DataConversion [valueConversion=valueDataConversion == null ? DataConversion.DEFAULT : valueDataConversion]</InnerVar>
                <InnerVar>QueueingSegmentListener [handler=segmentHandler.remove(generatedId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConverter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setConverter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isOnlyPrimary</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setOnlyPrimary</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>onlyPrimary</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isClustered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setClustered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clustered</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIdentifier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setIdentifier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setKeyDataConversion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setValueDataConversion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isIncludeCurrentState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setIncludeCurrentState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>includeCurrentState</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObservation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Listener.Observation</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setObservation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>observation</ParamName>
                    <ParamType>Listener.Observation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setFilterAnnotations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheInvocationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ListenerInvocation&lt;Event&lt;K,V&gt;&gt; [invocation=new ListenerInvocationImpl(target,method,sync,classLoader,subject)]</InnerVar>
                <InnerVar>CacheEntryListenerInvocation&lt;K,V&gt; [returnValue]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;wireDependencies;[filter, converter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>wireDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DelegatingCacheInvocationBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>provider</ParamName>
                    <ParamType>FilterIndexingServiceProvider</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DelegatingCacheEntryListenerInvocation&lt;K,V&gt; [invocation=provider.interceptListenerInvocation(super.build())]</InnerVar>
                <InnerVar>List&lt;DelegatingCacheEntryListenerInvocation&lt;K,V&gt;&gt; [invocations=listeners.get(invocation.getAnnotation())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>invocations;add;[invocation]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerListenerInvocations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonClusteredListenerInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>Event&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onlyPrimary</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sync</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>observation</ParamName>
                    <ParamType>Listener.Observation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doRealInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ClusteredListenerInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>Event&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onlyPrimary</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sync</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>observation</ParamName>
                    <ParamType>Listener.Observation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doRealInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wrapped</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BaseCacheEntryListenerInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>Event&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onlyPrimary</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clustered</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sync</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>observation</ParamName>
                    <ParamType>Listener.Observation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAnnotations</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invoke</MethodName>
            <MethodComment>/** 
 * This is the entry point for local listeners firing events
 * @param wrapped
 * @param isLocalNodePrimaryOwner
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wrapped</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLocalNodePrimaryOwner</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheEntryEvent&lt;K,V&gt; [resultingEvent=shouldInvoke(wrapped.getEvent(),isLocalNodePrimaryOwner)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeNoChecks</MethodName>
            <MethodComment>/** 
 * This is the entry point for remote listener events being fired
 * @param wrapped
 * @param skipQueue
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wrapped</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>skipQueue</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>skipConverter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doRealInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doRealInvocation;[event.getEvent()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doRealInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>invocation;invoke;[event]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldInvoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldInvoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLocalNodePrimaryOwner</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EventType</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTarget</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFilterAnnotations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends Annotation&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKeyDataConversion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataConversion</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValueDataConversion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataConversion</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConverter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isClustered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIdentifier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObservation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Listener.Observation</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAnnotation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends Annotation</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convertValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheEntryEvent&lt;K,V&gt; [returnedEvent]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSync</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UUID [id=clusterListenerIDs.remove(listener)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeListenerInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntryListenerInvocation&lt;K,V&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;CacheEntryListenerInvocation&lt;K,V&gt;&gt; [markedForRemoval=super.removeListenerInvocation(annotation,listener)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>