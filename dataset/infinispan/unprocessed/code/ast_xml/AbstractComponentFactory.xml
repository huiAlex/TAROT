<Class>
    <Id>496</Id>
    <Package>org.infinispan.factories</Package>
    <ClassName>AbstractComponentFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AbstractComponentFactory  /** 
 * Factory that creates components used internally within Infinispan, and also wires dependencies into the components. &lt;p/&gt; The  {@link InternalCacheFactory} is a special subclass of this, which bootstraps the construction of othercomponents. When this class is loaded, it maintains a static list of known default factories for known components, which it then delegates to, when actually performing the construction. &lt;p/&gt;
 * @author Manik Surtani (&lt;a href="mailto:manik@jboss.org"&gt;manik@jboss.org&lt;/a&gt;)
 * @see Inject
 * @see ComponentRegistry
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>globalComponentRegistry</FieldName>
            <FieldType>GlobalComponentRegistry</FieldType>
        </Field>
        <Field>
            <FieldName>globalConfiguration</FieldName>
            <FieldType>GlobalConfiguration</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>AbstractComponentFactory</MethodName>
            <MethodComment>/** 
 * Constructs a new ComponentFactory.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>injectGlobalDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>globalConfiguration</ParamName>
                    <ParamType>GlobalConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>globalComponentRegistry</ParamName>
                    <ParamType>GlobalComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>construct</MethodName>
            <MethodComment>/** 
 * Constructs a component.
 * @param componentType type of component
 * @return a component
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>componentType</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertTypeConstructable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>requestedType</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ableToConstruct</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [canConstruct=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>