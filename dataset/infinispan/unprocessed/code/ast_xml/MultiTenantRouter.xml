<Class>
    <Id>3624</Id>
    <Package>org.infinispan.server.router</Package>
    <ClassName>MultiTenantRouter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MultiTenantRouter  /** 
 * The main entry point for the router.
 * @author Sebastian ≈Åaskawiec
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>RouterLogger</FieldType>
        </Field>
        <Field>
            <FieldName>routerConfiguration</FieldName>
            <FieldType>MultiTenantRouterConfiguration</FieldType>
        </Field>
        <Field>
            <FieldName>routers</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>routers</FieldName>
            <FieldType>Router</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MultiTenantRouter</MethodName>
            <MethodComment>/** 
 * Creates new  {@link MultiTenantRouter} based on {@link MultiTenantRouterConfiguration}.
 * @param routerConfiguration {@link MultiTenantRouterConfiguration} object.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>routerConfiguration</ParamName>
                    <ParamType>MultiTenantRouterConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment>/** 
 * Starts the router.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>routers;forEach;[r -&gt; r.start(routerConfiguration.getRoutingTable())]</InnerMethodInvoke>
                <InnerMethodInvoke>logger;printOutRoutingTable;[routerConfiguration.getRoutingTable()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Stops the router.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>routers;forEach;[r -&gt; r.stop()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRouter</MethodName>
            <MethodComment>/** 
 * Gets internal  {@link Router} implementation for given protocol.
 * @param protocol Protocol for obtaining the router.
 * @return The {@link Router} implementation.
 */
</MethodComment>
            <ReturnType>Router</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>protocol</ParamName>
                    <ParamType>Router.Protocol</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>