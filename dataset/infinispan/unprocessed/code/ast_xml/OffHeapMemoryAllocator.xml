<Class>
    <Id>2721</Id>
    <Package>org.infinispan.container.offheap</Package>
    <ClassName>OffHeapMemoryAllocator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OffHeapMemoryAllocator  /** 
 * Allows for allocation of memory outside of the heap as well additional functionality surrounding it if necessary.
 * @author wburns
 * @since 9.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>allocate</MethodName>
            <MethodComment>/** 
 * Allocates a new chunk of memory sized to the given length.
 * @param memoryLength the size of memory to allocate
 * @return the memory address where the memory resides
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>memoryLength</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deallocate</MethodName>
            <MethodComment>/** 
 * Deallocates the memory allocated at the given address
 * @param memoryAddress the address returned from the allocator to deallocate
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>memoryAddress</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deallocate</MethodName>
            <MethodComment>/** 
 * Deallocates the memory at the given address assuming a given size
 * @param memoryAddress the address to deallocate from
 * @param size the total size
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>memoryAddress</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>size</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllocatedAmount</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>