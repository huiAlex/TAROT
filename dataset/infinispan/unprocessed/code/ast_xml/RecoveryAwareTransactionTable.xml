<Class>
    <Id>203</Id>
    <Package>org.infinispan.transaction.xa.recovery</Package>
    <ClassName>RecoveryAwareTransactionTable</ClassName>
    <SuperClass>XaTransactionTable</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RecoveryAwareTransactionTable  /** 
 * Transaction table that delegates prepared transaction's management to the  {@link RecoveryManager}.
 * @author Mircea.Markus@jboss.com
 * @since 5.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>remoteTransactionPrepared</MethodName>
            <MethodComment>/** 
 * Marks the transaction as prepared. If at a further point the originator fails, the transaction is removed form the "normal" transactions collection and moved into the cache that holds in-doubt transactions. See  {@link #cleanupLeaverTransactions(java.util.List)}
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gtx</ParamName>
                    <ParamType>GlobalTransaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RecoveryAwareRemoteTransaction [remoteTransaction=(RecoveryAwareRemoteTransaction)getRemoteTransaction(gtx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remoteTransaction;setPrepared;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>localTransactionPrepared</MethodName>
            <MethodComment>/** 
 * @see #localTransactionPrepared(org.infinispan.transaction.impl.LocalTransaction)
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>localTransaction</ParamName>
                    <ParamType>LocalTransaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>((RecoveryAwareLocalTransaction)localTransaction);setPrepared;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanupLeaverTransactions</MethodName>
            <MethodComment>/** 
 * First moves the prepared transactions originated on the leavers into the recovery cache and then cleans up the transactions that are not yet prepared.
 * @param members The list of cluster members
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>members</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Iterator&lt;RemoteTransaction&gt; [it=getRemoteTransactions().iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRemoteTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RemoteTransaction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>txId</ParamName>
                    <ParamType>GlobalTransaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RemoteTransaction [remoteTransaction=super.getRemoteTransaction(txId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remoteTransactionRollback</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gtx</ParamName>
                    <ParamType>GlobalTransaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>recoveryManager;removeRecoveryInformation;[((RecoverableTransactionIdentifier)gtx).getXid()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remoteTransactionCommitted</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gtx</ParamName>
                    <ParamType>GlobalTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onePc</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RecoveryAwareRemoteTransaction [remoteTransaction=(RecoveryAwareRemoteTransaction)getRemoteTransaction(gtx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remoteTransaction;markCompleted;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLocalPreparedXids</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Xid</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Xid&gt; [result=new LinkedList&lt;Xid&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>failureCompletingTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tx</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RecoveryAwareLocalTransaction [localTx=(RecoveryAwareLocalTransaction)getLocalTransaction(tx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>localTx;setCompletionFailed;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>log;tracef;["Marked as completion failed %s", localTx]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLocalTxThatFailedToComplete</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RecoveryAwareLocalTransaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;RecoveryAwareLocalTransaction&gt; [result=new HashSet&lt;RecoveryAwareLocalTransaction&gt;(4)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRemoteTransactionXid</MethodName>
            <MethodComment>/** 
 * Iterates over the remote transactions and returns the XID of the one that has an internal id equal with the supplied internal Id.
 */
</MethodComment>
            <ReturnType>Xid</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>internalId</ParamName>
                    <ParamType>Long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeRemoteTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RemoteTransaction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>xid</ParamName>
                    <ParamType>Xid</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>