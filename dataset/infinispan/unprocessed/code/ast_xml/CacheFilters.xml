<Class>
    <Id>3524</Id>
    <Package>org.infinispan.filter</Package>
    <ClassName>CacheFilters</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheFilters  /** 
 * Static factory class that contains utility methods that can be used for performing proper transformations from {@link KeyValueFilter},  {@link Converter} &amp; {@link KeyValueFilterConverter} to appropriate distributed streaminstances.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>KeyValueFilter</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>Converter</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>InternalEntryFactory</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>KeyValueFilterConverter</FieldType>
        </Field>
        <Field>
            <FieldName>converter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>InternalEntryFactory</FieldType>
        </Field>
        <Field>
            <FieldName>KEY_VALUE_FILTER_PREDICATE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CONVERTER_FUNCTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FILTER_CONVERTER_FUNCTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>objects</FieldName>
            <FieldType>IdentityIntMap</FieldType>
        </Field>
        <Field>
            <FieldName>objects</FieldName>
            <FieldType>Class&lt;?&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheFilters</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>predicate</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link Predicate} using the provided key value filter as a basis for the operation.  This is usefulfor when using  {@link Stream#filter(Predicate)} method on distributed streams.  The key,value and metadata are all used to determine if the predicate returns true or not.
 * @param filter the filter to utilize
 * @param &lt; K &gt; key type
 * @param &lt; V &gt; value type
 * @return predicate based on the filter
 */
</MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>function</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link Function} using the provided converter as a basis for the operation.  This is usefulfor when using  {@link Stream#map(Function)} method on distributed streams.  The key,value and metadata are all used to determine the converted value.
 * @param converter the converter to utilize
 * @param &lt; K &gt; key type
 * @param &lt; V &gt; value type
 * @param &lt; C &gt; convertered value type
 * @return function based on the converter
 */
</MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>filterAndConvert</MethodName>
            <MethodComment>/** 
 * Adds needed intermediate operations to the provided stream, returning a possibly new stream as a result of the operations.  This method keeps the contract of filter and conversion being performed in only 1 call as the {@link KeyValueFilterConverter} was designed to do.  The key,value and metadata are all used to determine whether the value is returned and the converted value.
 * @param stream stream to perform the operations on
 * @param filterConverter converter to apply
 * @param &lt; K &gt;
 * @param &lt; V &gt;
 * @param &lt; C &gt;
 * @return
 */
</MethodComment>
            <ReturnType>CacheEntry&lt;K,C&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>CacheEntry&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterConverter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>filterAndConvert</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,C&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>CacheEntry&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterConverter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>KeyValueFilterAsPredicate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Objects;nonNull;[filter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>test</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kvCacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>registry;wireDependencies;[filter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ConverterAsCacheEntryFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Objects;nonNull;[converter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factory</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>registry;wireDependencies;[converter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kvCacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>K [key=kvCacheEntry.getKey()]</InnerVar>
                <InnerVar>V [value=kvCacheEntry.getValue()]</InnerVar>
                <InnerVar>Metadata [metadata=kvCacheEntry.getMetadata()]</InnerVar>
                <InnerVar>C [converted=converter.convert(key,value,metadata)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FilterConverterAsCacheEntryFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>converter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Objects;nonNull;[converter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factory</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>registry;wireDependencies;[converter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kvCacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>K [key=kvCacheEntry.getKey()]</InnerVar>
                <InnerVar>V [value=kvCacheEntry.getValue()]</InnerVar>
                <InnerVar>Metadata [metadata=kvCacheEntry.getMetadata()]</InnerVar>
                <InnerVar>C [converted=converter.filterAndConvert(key,value,metadata)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CacheFiltersExternalizer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>objects;put;[KeyValueFilterAsPredicate.class, KEY_VALUE_FILTER_PREDICATE]</InnerMethodInvoke>
                <InnerMethodInvoke>objects;put;[ConverterAsCacheEntryFunction.class, CONVERTER_FUNCTION]</InnerMethodInvoke>
                <InnerMethodInvoke>objects;put;[FilterConverterAsCacheEntryFunction.class, FILTER_CONVERTER_FUNCTION]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;?&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>output</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [number=objects.get(object.getClass(),-1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>output;writeByte;[number]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [number=input.readUnsignedByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>