<Class>
    <Id>2601</Id>
    <Package>org.infinispan.rest</Package>
    <ClassName>InfinispanRequest</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanRequest  /** 
 * Representation of a HTTP request tailed for Infinispan-specific requests.
 * @author Sebastian ≈Åaskawiec
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>request</FieldName>
            <FieldType>FullHttpRequest</FieldType>
        </Field>
        <Field>
            <FieldName>streamId</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>streamId</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>nettyChannelContext</FieldName>
            <FieldType>ChannelHandlerContext</FieldType>
        </Field>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>context</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>key</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>key</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>queryStringDecoder</FieldName>
            <FieldType>QueryStringDecoder</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>InfinispanRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>FullHttpRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>ChannelHandlerContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringTokenizer [pathTokenizer=new StringTokenizer(queryStringDecoder.path(),"/")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newRequest</MethodName>
            <MethodComment>/** 
 * Creates new  {@link InfinispanRequest} based on Netty types.
 * @param request Netty request.
 * @param ctx Netty Context.
 * @return New {@link InfinispanRequest}.
 */
</MethodComment>
            <ReturnType>InfinispanRequest</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>FullHttpRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>ChannelHandlerContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStreamId</MethodName>
            <MethodComment>/** 
 * Returns HTTP/2.0 Stream Id.
 * @return HTTP/2.0 Stream Id.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawRequest</MethodName>
            <MethodComment>/** 
 * Returns Netty request.
 * @return Netty request.
 */
</MethodComment>
            <ReturnType>FullHttpRequest</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawContext</MethodName>
            <MethodComment>/** 
 * Returns Netty context.
 * @return Netty context.
 */
</MethodComment>
            <ReturnType>ChannelHandlerContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheName</MethodName>
            <MethodComment>/** 
 * Returns cache name.
 * @return cache name.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKey</MethodName>
            <MethodComment>/** 
 * Returns key.
 * @return key.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUseAsync</MethodName>
            <MethodComment>/** 
 * Returns whether request should be done asynchronously.
 * @return &lt;code&gt;true&lt;/code&gt; if client wishes to perform request asynchronously.
 */
</MethodComment>
            <ReturnType>Boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [performAsync=request.headers().get("performAsync")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAcceptContentType</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;Accepts&lt;/code&gt; header value.
 * @return &lt;code&gt;Accepts&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getContentType</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;Content-Type&lt;/code&gt; header value.
 * @return &lt;code&gt;Content-Type&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAuthorization</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;Authorization&lt;/code&gt; header value.
 * @return &lt;code&gt;Authorization&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>data</MethodName>
            <MethodComment>/** 
 * Returns request's payload.
 * @return request's payload.
 */
</MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTimeToLiveSeconds</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;timeToLiveSeconds&lt;/code&gt; header value.
 * @return &lt;code&gt;timeToLiveSeconds&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>Long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [timeToLiveSeconds=request.headers().get("timeToLiveSeconds")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMaxIdleTimeSeconds</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;maxIdleTimeSeconds&lt;/code&gt; header value.
 * @return &lt;code&gt;maxIdleTimeSeconds&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>Long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [maxIdleTimeSeconds=request.headers().get("maxIdleTimeSeconds")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEtagIfNoneMatch</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;If-None-Match&lt;/code&gt; header value.
 * @return &lt;code&gt;If-None-Match&lt;/code&gt; header value.
 * @see https://en.wikipedia.org/wiki/HTTP_ETag
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEtagIfUnmodifiedSince</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;If-Unmodified-Since&lt;/code&gt; header value.
 * @return &lt;code&gt;If-Unmodified-Since&lt;/code&gt; header value.
 * @see https://en.wikipedia.org/wiki/HTTP_ETag
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEtagIfModifiedSince</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;If-Modified-Since&lt;/code&gt; header value.
 * @return &lt;code&gt;If-Modified-Since&lt;/code&gt; header value.
 * @see https://en.wikipedia.org/wiki/HTTP_ETag
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEtagIfMatch</MethodName>
            <MethodComment>/** 
 * Returns &lt;code&gt;If-Match&lt;/code&gt; header value.
 * @return &lt;code&gt;If-Match&lt;/code&gt; header value.
 * @see https://en.wikipedia.org/wiki/HTTP_ETag
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheControl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExtended</MethodName>
            <MethodComment>/** 
 * Returns whether client wishes to return 'Extended Headers'.
 * @return &lt;code&gt;true&lt;/code&gt; if client wishes to return 'Extended Headers'.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;String&gt; [extendedParameters=queryStringDecoder.parameters().get("extended")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getContext</MethodName>
            <MethodComment>/** 
 * Returns Netty context.
 * @return Netty context.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>