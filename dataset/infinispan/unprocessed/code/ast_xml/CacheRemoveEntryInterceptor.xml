<Class>
    <Id>1447</Id>
    <Package>org.infinispan.jcache.annotation</Package>
    <ClassName>CacheRemoveEntryInterceptor</ClassName>
    <SuperClass>AbstractCacheRemoveEntryInterceptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheRemoveEntryInterceptor  /** 
 * &lt;p&gt; {@link javax.cache.annotation.CacheRemove} interceptor implementation.This interceptor uses the following algorithm describes inJSR-107.&lt;/p&gt; &lt;p&gt;The interceptor that intercepts method annotated with  {@code @CacheRemoveEntry} must do the following, generate akey based on InvocationContext using the specified  {@link javax.cache.annotation.CacheKeyGenerator}, use this key to remove the entry in the cache. The remove occurs after the method body is executed. This can be overridden by specifying a afterInvocation attribute value of false. If afterInvocation is true and the annotated method throws an exception the remove will not happen.&lt;/p&gt;
 * @author Kevin Pollet &lt;kevin.pollet@serli.com&gt; (C) 2011 SERLI
 * @author Galder Zamarre√±o
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheRemoveEntryInterceptor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheResolver</ParamName>
                    <ParamType>DefaultCacheResolver</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>contextFactory</ParamName>
                    <ParamType>CacheKeyInvocationContextFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheRemoveEntry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocationContext</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Log</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>