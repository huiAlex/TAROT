<Class>
    <Id>698</Id>
    <Package>org.infinispan.query.dsl.impl</Package>
    <ClassName>BaseQueryBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>QueryBuilder</SuperInterface>
        <SuperInterface>Visitable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BaseQueryBuilder  /** 
 * @author anistor@redhat.com
 * @since 6.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>queryFactory</FieldName>
            <FieldType>QueryFactory</FieldType>
        </Field>
        <Field>
            <FieldName>rootTypeName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>projection</FieldName>
            <FieldType>Expression[]</FieldType>
        </Field>
        <Field>
            <FieldName>groupBy</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>filterCondition</FieldName>
            <FieldType>BaseCondition</FieldType>
        </Field>
        <Field>
            <FieldName>whereFilterCondition</FieldName>
            <FieldType>BaseCondition</FieldType>
        </Field>
        <Field>
            <FieldName>havingFilterCondition</FieldName>
            <FieldType>BaseCondition</FieldType>
        </Field>
        <Field>
            <FieldName>sortCriteria</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>sortCriteria</FieldName>
            <FieldType>SortCriteria</FieldType>
        </Field>
        <Field>
            <FieldName>startOffset</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>maxResults</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BaseQueryBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryFactory</ParamName>
                    <ParamType>QueryFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rootTypeName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRootTypeName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pathExpression</ParamName>
                    <ParamType>Expression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pathExpression</ParamName>
                    <ParamType>Expression</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortOrder</ParamName>
                    <ParamType>SortOrder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sortCriteria;add;[new SortCriteria(pathExpression,sortOrder)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortOrder</ParamName>
                    <ParamType>SortOrder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSortCriteria</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SortCriteria</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>select</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Expression[] [projection=new Expression[attributePath.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>select</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>projection</ParamName>
                    <ParamType>Expression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProjection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProjectionPaths</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String[] [_projection=new String[projection.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>groupBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>groupBy</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGroupBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startOffset</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>startOffset</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxResults</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>maxResults</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWhereFilterCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BaseCondition</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHavingFilterCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BaseCondition</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>having</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterConditionEndContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>Expression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AttributeCondition [attributeCondition=new AttributeCondition(queryFactory,expression)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributeCondition;setQueryBuilder;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setFilterCondition;[attributeCondition]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>having</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterConditionEndContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setFilterCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filterCondition</ParamName>
                    <ParamType>BaseCondition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>not</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BaseCondition</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>IncompleteCondition [incompleteCondition=new IncompleteCondition(queryFactory)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>incompleteCondition;setQueryBuilder;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setFilterCondition;[incompleteCondition]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>not</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BaseCondition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fcc</ParamName>
                    <ParamType>FilterConditionContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BaseCondition [baseCondition=((BaseCondition)fcc).getRoot()]</InnerVar>
                <InnerVar>NotCondition [notCondition=new NotCondition(queryFactory,baseCondition)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>notCondition;setQueryBuilder;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setFilterCondition;[notCondition]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>accept</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ReturnType</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>visitor</ParamName>
                    <ParamType>ReturnType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>