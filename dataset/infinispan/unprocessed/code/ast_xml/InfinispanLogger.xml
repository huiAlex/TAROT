<Class>
    <Id>2093</Id>
    <Package>org.jboss.as.clustering.infinispan</Package>
    <ClassName>InfinispanLogger</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BasicLogger</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanLogger  /** 
 * InfinispanLogger
 * @author &lt;a href="mailto:jperkins@redhat.com"&gt;James R. Perkins&lt;/a&gt;
 * @author Tristan Tarrant
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ROOT_LOGGER_CATEGORY</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ROOT_LOGGER</FieldName>
            <FieldType>InfinispanLogger</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>activatingSubsystem</MethodName>
            <MethodComment>/** 
 * Logs an informational message indicating the Infinispan subsystem is being activated.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheStarted</MethodName>
            <MethodComment>/** 
 * Logs an informational message indicating that a cache is being started.
 * @param cacheName     the name of the cache.
 * @param containerName the name of the cache container.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheStopped</MethodName>
            <MethodComment>/** 
 * Logs an informational message indicating that a cache is being stopped.
 * @param cacheName     the name of the cache.
 * @param containerName the name of the cache container.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>eagerAttributeDeprecated</MethodName>
            <MethodComment>/** 
 * Logs a warning message indicating that the eager attribute of the transactional element is no longer valid
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>topologyAttributeDeprecated</MethodName>
            <MethodComment>/** 
 * Logs a warning message indicating that the specified topology attribute of the transport element is no longer valid
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheContainerInstalled</MethodName>
            <MethodComment>/** 
 * Logs a debug message indicating that named cache container has been installed.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>containerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>virtualNodesAttributeDeprecated</MethodName>
            <MethodComment>/** 
 * Logs a warning message stating that the 'virtual-nodes' attribute is deprecated.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>installDeployedCacheStore</MethodName>
            <MethodComment>/** 
 * Logs an info message about installing implementation service.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>implementationClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deployedStoreStarted</MethodName>
            <MethodComment>/** 
 * Logs debug message when starting Deployed Cache service.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deployedStoreStopped</MethodName>
            <MethodComment>/** 
 * Logs debug message when stopping Deployed Cache service.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deprecatedExecutor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>executorAttribute</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threadPoolElement</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>installingDeployedTaskService</MethodName>
            <MethodComment>/** 
 * Logs an info message about installing implementation service.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>implementationClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registeringDeployedTask</MethodName>
            <MethodComment>/** 
 * Logs debug message when starting deployed task.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregisteringDeployedTask</MethodName>
            <MethodComment>/** 
 * Logs debug message when stopping deployed task.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flushLockTimeoutDeprecated</MethodName>
            <MethodComment>/** 
 * Logs a warning message indicating that the flush-lock-timeout attribute of the write-behind element is no longer valid
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shutdownTimeoutDeprecated</MethodName>
            <MethodComment>/** 
 * Logs a warning message indicating that the flush-lock-timeout attribute of the write-behind element is no longer valid
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadingCustomCacheStoreTimeout</MethodName>
            <MethodComment>/** 
 * Logs an error when requested cache store is not loaded within 1 minute
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>customStoreClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheModuleDeprecated</MethodName>
            <MethodComment>/** 
 * Logs a warning message indicating that the module attribute of the cache element is no longer valid.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>col</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>