<Class>
    <Id>1396</Id>
    <Package>org.infinispan.hibernate.cache.access</Package>
    <ClassName>NonTxPutFromLoadInterceptor</ClassName>
    <SuperClass>BaseCustomAsyncInterceptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>NonTxPutFromLoadInterceptor  /** 
 * Non-transactional counterpart of  {@link TxPutFromLoadInterceptor}. Invokes  {@link PutFromLoadValidator#beginInvalidatingKey(Object,Object)} for each invalidation fromremote node ( {@link BeginInvalidationCommand} and sends {@link EndInvalidationCommand} after the transactionis complete, with help of  {@link InvalidationSynchronization};
 * @author Radim Vansa &amp;lt;rvansa@redhat.com&amp;gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>InfinispanMessageLogger</FieldType>
        </Field>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>ByteString</FieldType>
        </Field>
        <Field>
            <FieldName>putFromLoadValidator</FieldName>
            <FieldType>PutFromLoadValidator</FieldType>
        </Field>
        <Field>
            <FieldName>commandInitializer</FieldName>
            <FieldType>CacheCommandInitializer</FieldType>
        </Field>
        <Field>
            <FieldName>rpcManager</FieldName>
            <FieldType>RpcManager</FieldType>
        </Field>
        <Field>
            <FieldName>stateTransferManager</FieldName>
            <FieldType>StateTransferManager</FieldType>
        </Field>
        <Field>
            <FieldName>asyncUnordered</FieldName>
            <FieldType>RpcOptions</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>NonTxPutFromLoadInterceptor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>putFromLoadValidator</ParamName>
                    <ParamType>PutFromLoadValidator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>ByteString</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>injectDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>commandInitializer</ParamName>
                    <ParamType>CacheCommandInitializer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rpcManager</ParamName>
                    <ParamType>RpcManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stateTransferManager</ParamName>
                    <ParamType>StateTransferManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitInvalidateCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>InvalidateCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endInvalidating</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lockOwner</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>successful</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EndInvalidationCommand [endInvalidationCommand=commandInitializer.buildEndInvalidationCommand(cacheName,new Object[]{key},lockOwner)]</InnerVar>
                <InnerVar>List&lt;Address&gt; [members=stateTransferManager.getCacheTopology().getMembers()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rpcManager;invokeRemotely;[members, endInvalidationCommand, asyncUnordered]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>