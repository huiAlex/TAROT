<Class>
    <Id>342</Id>
    <Package>org.infinispan.hibernate.search.spi</Package>
    <ClassName>InfinispanDirectoryProvider</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>org.hibernate.search.store.DirectoryProvider</SuperInterface>
        <SuperInterface>Directory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanDirectoryProvider  /** 
 * A DirectoryProvider using Infinispan to store the Index. This depends on the CacheManagerServiceProvider to get a reference to the Infinispan  {@link EmbeddedCacheManager}.
 * @author Sanne Grinovero
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>serviceManager</FieldName>
            <FieldType>ServiceManager</FieldType>
        </Field>
        <Field>
            <FieldName>directoryProviderName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>metadataCacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dataCacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>lockingCacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>chunkSize</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>directory</FieldName>
            <FieldType>Directory</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManager</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>deletesExecutor</FieldName>
            <FieldType>AsyncDeleteExecutorService</FieldType>
        </Field>
        <Field>
            <FieldName>writeFileListAsync</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>indexWriterLockFactory</FieldName>
            <FieldType>LockFactory</FieldType>
        </Field>
        <Field>
            <FieldName>affinityId</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>isAsync</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>InfinispanDirectoryProvider</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>affinityId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>InfinispanDirectoryProvider</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>directoryProviderName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLockFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LockFactory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexDir</ParamName>
                    <ParamType>Path</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWriteFileListAsync</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configurationExplicitlySetsLockFactory</MethodName>
            <MethodComment>/** 
 * @param dirConfiguration the properties representing the configuration for this index
 * @return {@code true} if the configuration contains an override for the locking_strategy
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dirConfiguration</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isNativeLockingStrategy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dirConfiguration</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexManager</ParamName>
                    <ParamType>DirectoryBasedIndexManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cache&lt;?,?&gt; [metadataCache=cacheManager.getCache(metadataCacheName)]</InnerVar>
                <InnerVar>Cache&lt;?,?&gt; [dataCache=cacheManager.getCache(dataCacheName)]</InnerVar>
                <InnerVar>Cache&lt;?,?&gt; [lockingCache=cacheManager.getCache(lockingCacheName)]</InnerVar>
                <InnerVar>org.infinispan.lucene.directory.BuildContext [directoryBuildContext=DirectoryBuilder.newDirectoryInstance(metadataCache,dataCache,lockingCache,directoryProviderName).writeFileListAsynchronously(writeFileListAsync).deleteOperationsExecutor(isAsync ? new WithinThreadExecutor() : deletesExecutor.getExecutor())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["Starting InfinispanDirectory"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;validateCacheManagerConfiguration;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheManager;startCaches;[metadataCacheName, dataCacheName, lockingCacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>DirectoryHelper;initializeIndexIfNeeded;[directory]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debugf;["Initialized Infinispan index: '%s'", directoryProviderName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateCacheManagerConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeleteOperationsExecutor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AsyncDeleteExecutorService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pendingDeleteTasks</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>deletesExecutor;closeAndFlush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceManager;releaseService;[AsyncDeleteExecutorService.class]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceManager;releaseService;[CacheManagerService.class]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debug;["Stopped InfinispanDirectory"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDirectory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Directory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLockOwner</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>affinityId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lockName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FileCacheKey [fileCacheKey=new FileCacheKey(indexName,lockName,affinityId)]</InnerVar>
                <InnerVar>Cache&lt;?,Address&gt; [lockCache=cacheManager.getCache(lockingCacheName)]</InnerVar>
                <InnerVar>Address [address=lockCache.get(fileCacheKey)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debugf;["Lock owner for %s: %s", fileCacheKey, address]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>