<Class>
    <Id>858</Id>
    <Package>org.infinispan.notifications.cachelistener.cluster</Package>
    <ClassName>ClusterEventManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>addEvents</MethodName>
            <MethodComment>/** 
 * Adds additional cluster events that need to be sent remotely for an event originating locally. These events are not sent at time of registering but rather after the  {@link ClusterEventManager#sendEvents()} is invoked.These events are gathered on a per thread basis and batched to reduce number of RPCs required.
 * @param target The target node this event was meant for
 * @param identifier The cluster listener that is identified for these events
 * @param events The events that were generated
 * @param sync Whether these events need to be sent synchronously or not
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>events</ParamName>
                    <ParamType>ClusterEvent&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sync</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendEvents</MethodName>
            <MethodComment>/** 
 * Sends all previously added events on this thread
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>CacheException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dropEvents</MethodName>
            <MethodComment>/** 
 * Drops and ignores all previously added events on this thread.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>