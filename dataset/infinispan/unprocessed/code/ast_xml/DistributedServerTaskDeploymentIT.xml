<Class>
    <Id>3668</Id>
    <Package>org.infinispan.server.test.task</Package>
    <ClassName>DistributedServerTaskDeploymentIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DistributedServerTaskDeploymentIT  /** 
 * Testing the jar task deployment/undeploy.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>server1</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>server2</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>deployer</FieldName>
            <FieldType>Deployer</FieldType>
        </Field>
        <Field>
            <FieldName>rcm1</FieldName>
            <FieldType>RemoteCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>exceptionRule</FieldName>
            <FieldType>ExpectedException</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>create1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaArchive</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JavaArchive [jar=ShrinkWrap.create(JavaArchive.class,"custom-task-deployment.jar")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jar;addClass;[DistributedDeploymentTestServerTask.class]</InnerMethodInvoke>
                <InnerMethodInvoke>jar;addAsServiceProvider;[ServerTask.class, DistributedDeploymentTestServerTask.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaArchive</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JavaArchive [jar=ShrinkWrap.create(JavaArchive.class,"custom-task-deployment.jar")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jar;addClass;[DistributedDeploymentTestServerTask.class]</InnerMethodInvoke>
                <InnerMethodInvoke>jar;addAsServiceProvider;[ServerTask.class, DistributedDeploymentTestServerTask.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testDeploy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>deployer;deploy;["node1"]</InnerMethodInvoke>
                <InnerMethodInvoke>deployer;deploy;["node2"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldGatherNodeNamesInRemoteTasks</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Object [resultObject=rcm1.getCache().execute(DistributedDeploymentTestServerTask.NAME,Collections.emptyMap())]</InnerVar>
                <InnerVar>List&lt;String&gt; [result=(List&lt;String&gt;)resultObject]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;[resultObject]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[2, result.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["result list does not contain expected items.", result.containsAll(asList("node0","node1"))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testTaskUndeploy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>deployer;undeploy;["node1"]</InnerMethodInvoke>
                <InnerMethodInvoke>deployer;undeploy;["node2"]</InnerMethodInvoke>
                <InnerMethodInvoke>exceptionRule;expect;[HotRodClientException.class]</InnerMethodInvoke>
                <InnerMethodInvoke>exceptionRule;expectMessage;["ISPN027002"]</InnerMethodInvoke>
                <InnerMethodInvoke>rcm1.getCache();execute;[DistributedDeploymentTestServerTask.NAME, Collections.emptyMap()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>