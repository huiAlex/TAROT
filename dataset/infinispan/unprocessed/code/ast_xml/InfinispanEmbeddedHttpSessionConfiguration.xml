<Class>
    <Id>3478</Id>
    <Package>org.infinispan.spring.session.configuration</Package>
    <ClassName>InfinispanEmbeddedHttpSessionConfiguration</ClassName>
    <SuperClass>SpringHttpSessionConfiguration</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ImportAware</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>maxInactiveIntervalInSeconds</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>sessionRepository</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InfinispanEmbeddedSessionRepository</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheManager</ParamName>
                    <ParamType>SpringEmbeddedCacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventPublisher</ParamName>
                    <ParamType>ApplicationEventPublisher</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SpringCache [cacheForSessions=cacheManager.getCache(cacheName)]</InnerVar>
                <InnerVar>InfinispanEmbeddedSessionRepository [sessionRepository=new InfinispanEmbeddedSessionRepository(cacheForSessions){
  @Override public MapSession createSession(){
    MapSession session=super.createSession();
    session.setMaxInactiveIntervalInSeconds(maxInactiveIntervalInSeconds);
    return session;
  }
}
]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Objects;requireNonNull;[cacheName, "Cache name can not be null"]</InnerMethodInvoke>
                <InnerMethodInvoke>Objects;requireNonNull;[cacheManager, "Cache Manager can not be null"]</InnerMethodInvoke>
                <InnerMethodInvoke>Objects;requireNonNull;[eventPublisher, "Event Publisher can not be null"]</InnerMethodInvoke>
                <InnerMethodInvoke>sessionRepository;setApplicationEventPublisher;[eventPublisher]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MapSession</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MapSession [session=super.createSession()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setMaxInactiveIntervalInSeconds;[maxInactiveIntervalInSeconds]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setImportMetadata</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>importMetadata</ParamName>
                    <ParamType>AnnotationMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;String,Object&gt; [enableAttrMap=importMetadata.getAnnotationAttributes(EnableInfinispanEmbeddedHttpSession.class.getName())]</InnerVar>
                <InnerVar>AnnotationAttributes [annotationAttributes=AnnotationAttributes.fromMap(enableAttrMap)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>