<Class>
    <Id>3876</Id>
    <Package>org.infinispan.commands.tx.totalorder</Package>
    <ClassName>TotalOrderPrepareCommand</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>TransactionBoundaryCommand</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TotalOrderPrepareCommand  /** 
 * Interface with the utilities methods that the prepare command must have when Total Order based protocol is used
 * @author Pedro Ruivo
 * @since 5.3
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>markAsOnePhaseCommit</MethodName>
            <MethodComment>/** 
 * marks the prepare phase as 1PC to apply immediately the modifications. It is used when the  {@code org.infinispan.commands.tx.CommitCommand} is received before the {@code org.infinispan.commands.tx.PrepareCommand}.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>markSkipWriteSkewCheck</MethodName>
            <MethodComment>/** 
 * it signals that the write skew check is not needed (for versioned entries). It is used when the  {@code org.infinispan.commands.tx.CommitCommand} is received before the {@code org.infinispan.commands.tx.PrepareCommand}.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>skipWriteSkewCheck</MethodName>
            <MethodComment>/** 
 * @return {@code true} when the write skew check is not needed.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModifications</MethodName>
            <MethodComment>/** 
 * @return the modifications performed by this transaction
 */
</MethodComment>
            <ReturnType>WriteCommand[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOrCreateState</MethodName>
            <MethodComment>/** 
 * returns the  {@link TotalOrderRemoteTransactionState} associated with this transaction, creating one if no one wasassociated to this transaction.
 * @return returns the {@link TotalOrderRemoteTransactionState} associated with this transaction.
 */
</MethodComment>
            <ReturnType>TotalOrderRemoteTransactionState</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>