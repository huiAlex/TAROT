<Class>
    <Id>1417</Id>
    <Package>org.jboss.as.clustering.infinispan.subsystem</Package>
    <ClassName>InfinispanSubsystemAdd</ClassName>
    <SuperClass>AbstractAddStepHandler</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanSubsystemAdd  /** 
 * @author Paul Ferraro
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>InfinispanSubsystemAdd</FieldType>
        </Field>
        <Field>
            <FieldName>POST_MODULE_PRIORITY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DEPENDENCIES_PRIORITY_PRIORITY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INFINISPAN_SUBSYSTEM_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ModelNode</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>existing</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [operation=Util.getEmptyOperation(ModelDescriptionConstants.ADD,address)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;populate;[existing, operation]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>target.get(ModelKeys.CACHE_CONTAINER);setEmptyObject;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populateModel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;populate;[operation, model]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performRuntime</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ROOT_LOGGER;activatingSubsystem;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addDeployableExtensionProcessors;[context]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addDeployableExtensionProcessors</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;addStep;[new AbstractDeploymentChainStep(){
  @Override protected void execute(  DeploymentProcessorTarget processorTarget){
    int basePriority=POST_MODULE_PRIORITY;
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new AdvancedCacheLoaderExtensionProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new AdvancedCacheWriterExtensionProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new AdvancedLoadWriteStoreExtensionProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new CacheLoaderExtensionProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new CacheWriterExtensionProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new ExternalStoreExtensionProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.POST_MODULE,++basePriority,new ServerTaskProcessor());
    processorTarget.addDeploymentProcessor(INFINISPAN_SUBSYSTEM_NAME,Phase.DEPENDENCIES,DEPENDENCIES_PRIORITY_PRIORITY,new ServerExtensionDependenciesProcessor());
  }
}
, OperationContext.Stage.RUNTIME]</InnerMethodInvoke>
                <InnerMethodInvoke>context.getServiceTarget().addService(DeployedCacheStoreFactoryService.SERVICE_NAME,new DeployedCacheStoreFactoryService());install;[]</InnerMethodInvoke>
                <InnerMethodInvoke>context.getServiceTarget().addService(ServerTaskRegistryService.SERVICE_NAME,new ServerTaskRegistryService());install;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>processorTarget</ParamName>
                    <ParamType>DeploymentProcessorTarget</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [basePriority=POST_MODULE_PRIORITY]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new AdvancedCacheLoaderExtensionProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new AdvancedCacheWriterExtensionProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new AdvancedLoadWriteStoreExtensionProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new CacheLoaderExtensionProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new CacheWriterExtensionProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new ExternalStoreExtensionProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.POST_MODULE, ++basePriority, new ServerTaskProcessor()]</InnerMethodInvoke>
                <InnerMethodInvoke>processorTarget;addDeploymentProcessor;[INFINISPAN_SUBSYSTEM_NAME, Phase.DEPENDENCIES, DEPENDENCIES_PRIORITY_PRIORITY, new ServerExtensionDependenciesProcessor()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresRuntimeVerification</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>