<Class>
    <Id>553</Id>
    <Package>org.infinispan.functional.impl</Package>
    <ClassName>WriteOnlyMapImpl</ClassName>
    <SuperClass>AbstractFunctionalMap</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>WriteOnlyMap</SuperInterface>
        <SuperInterface>K</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>WriteOnlyMapImpl  /** 
 * Write-only map implementation.
 * @since 8.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>WriteOnlyMapImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>params</ParamName>
                    <ParamType>Params</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>functionalMap</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>functionalMap</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>params</ParamName>
                    <ParamType>Params</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>functionalMap</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>eval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>WriteEntryView&lt;V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [keyEncoded=keyDataConversion.toStorage(key)]</InnerVar>
                <InnerVar>WriteOnlyKeyCommand [cmd=fmap.commandsFactory.buildWriteOnlyKeyCommand(keyEncoded,f,params,keyDataConversion,valueDataConversion)]</InnerVar>
                <InnerVar>InvocationContext [ctx=getInvocationContext(true,1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Invoked eval(k=%s, %s)", key, params]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>eval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [keyEncoded=keyDataConversion.toStorage(key)]</InnerVar>
                <InnerVar>Object [valueEncoded=valueDataConversion.toStorage(value)]</InnerVar>
                <InnerVar>WriteOnlyKeyValueCommand [cmd=fmap.commandsFactory.buildWriteOnlyKeyValueCommand(keyEncoded,valueEncoded,(BiConsumer)f,params,keyDataConversion,valueDataConversion)]</InnerVar>
                <InnerVar>InvocationContext [ctx=getInvocationContext(true,1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Invoked eval(k=%s, v=%s, %s)", key, value, params]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evalMany</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entries</ParamName>
                    <ParamType>? extends K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map [encodedEntries=encodeEntries(entries)]</InnerVar>
                <InnerVar>WriteOnlyManyEntriesCommand [cmd=fmap.commandsFactory.buildWriteOnlyManyEntriesCommand(encodedEntries,f,params,keyDataConversion,valueDataConversion)]</InnerVar>
                <InnerVar>InvocationContext [ctx=getInvocationContext(true,entries.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Invoked evalMany(entries=%s, %s)", entries, params]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evalMany</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keys</ParamName>
                    <ParamType>? extends K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>WriteEntryView&lt;V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set [encodedKeys=encodeKeys(keys)]</InnerVar>
                <InnerVar>WriteOnlyManyCommand [cmd=fmap.commandsFactory.buildWriteOnlyManyCommand(encodedKeys,f,params,keyDataConversion,valueDataConversion)]</InnerVar>
                <InnerVar>InvocationContext [ctx=getInvocationContext(true,keys.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Invoked evalMany(keys=%s, %s)", keys, params]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evalAll</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>WriteEntryView&lt;V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;K&gt; [keys=new HashSet&lt;&gt;(fmap.cache.keySet())]</InnerVar>
                <InnerVar>Set&lt;K&gt; [encodedKeys=encodeKeys(keys)]</InnerVar>
                <InnerVar>WriteOnlyManyCommand [cmd=fmap.commandsFactory.buildWriteOnlyManyCommand(encodedKeys,f,params,keyDataConversion,valueDataConversion)]</InnerVar>
                <InnerVar>InvocationContext [ctx=getInvocationContext(true,encodedKeys.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Invoked evalAll(%s)", params]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>truncate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Invoked truncate(%s)", params]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withParams</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ps</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listeners</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>