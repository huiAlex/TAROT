<Class>
    <Id>2437</Id>
    <Package>org.infinispan.test.integration.security.embedded</Package>
    <ClassName>KrbLdapAuthenticationIT</ClassName>
    <SuperClass>AbstractAuthentication</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>KrbLdapAuthenticationIT  /** 
 * @author &lt;a href="mailto:vjuranek@redhat.com"&gt;Vojtech Juranek&lt;/a&gt;
 * @author &lt;a href="mailto:vchepeli@redhat.com"&gt;Vitalii Chepeliuk&lt;/a&gt;
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TRUE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ADMIN_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>WRITER_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>READER_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>UNPRIVILEGED_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>krbLdapServer</FieldName>
            <FieldType>ApacheDsKrbLdap</FieldType>
        </Field>
        <Field>
            <FieldName>ADMIN_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>WRITER_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>READER_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>UNPRIV_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDeployment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WebArchive</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRolePermissionMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;String,AuthorizationPermission[]&gt; [roles=new HashMap&lt;String,AuthorizationPermission[]&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>roles;put;[ADMIN_ROLE, new AuthorizationPermission[]{AuthorizationPermission.ALL}]</InnerMethodInvoke>
                <InnerMethodInvoke>roles;put;[WRITER_ROLE, new AuthorizationPermission[]{AuthorizationPermission.WRITE}]</InnerMethodInvoke>
                <InnerMethodInvoke>roles;put;[READER_ROLE, new AuthorizationPermission[]{AuthorizationPermission.READ}]</InnerMethodInvoke>
                <InnerMethodInvoke>roles;put;[UNPRIVILEGED_ROLE, new AuthorizationPermission[]{AuthorizationPermission.NONE}]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrincipalRoleMapper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PrincipalRoleMapper</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSecurityDomainName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAdminSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWriterSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReaderSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnprivilegedSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSecurityDomains</MethodName>
            <MethodComment>/** 
 * Returns SecurityDomains configuration for this testcase.
 */
</MethodComment>
            <ReturnType>SecurityDomain[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [host=Utils.getCannonicalHost(managementClient)]</InnerVar>
                <InnerVar>SecurityDomain [krbLdapServiceDomain=getKrbSecurityDomain("ldap-service","ldap/" + host,true)]</InnerVar>
                <InnerVar>SecurityDomain [krbAdminDomain=getKrbSecurityDomain("admin","admin",false)]</InnerVar>
                <InnerVar>SecurityDomain [krbWriterDomain=getKrbSecurityDomain("writer","writer",false)]</InnerVar>
                <InnerVar>SecurityDomain [krbReaderDomain=getKrbSecurityDomain("reader","reader",false)]</InnerVar>
                <InnerVar>SecurityDomain [krbUnprivDomain=getKrbSecurityDomain("unprivileged","unprivileged",false)]</InnerVar>
                <InnerVar>SecurityDomain [spnegoAdminDomain=getSpnegoSecurityDomain("admin",managementClient,10389,"ldap-service")]</InnerVar>
                <InnerVar>SecurityDomain [spnegoWriterDomain=getSpnegoSecurityDomain("writer",managementClient,10389,"ldap-service")]</InnerVar>
                <InnerVar>SecurityDomain [spnegoReaderDomain=getSpnegoSecurityDomain("reader",managementClient,10389,"ldap-service")]</InnerVar>
                <InnerVar>SecurityDomain [spnegoUnprivDomain=getSpnegoSecurityDomain("unprivileged",managementClient,10389,"ldap-service")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKrbSecurityDomain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityDomain</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>principal</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isService</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SecurityModule.Builder [krbModuleBuilder=new SecurityModule.Builder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>krbModuleBuilder.putOption("principal",principal + "@INFINISPAN.ORG");putOption;["debug", TRUE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSpnegoSecurityDomain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityDomain</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ldapPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ldapServiceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [host=Utils.getCannonicalHost(managementClient)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSystemProperties</MethodName>
            <MethodComment>/** 
 * Returns "java.security.krb5.conf" and "sun.security.krb5.debug" properties.
 * @return Kerberos properties
 */
</MethodComment>
            <ReturnType>SystemProperty[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;String,String&gt; [map=new HashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>map;put;["java.security.krb5.conf", "${java.io.tmpdir}" + File.separator + "krb5.conf"]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["java.security.krb5.debug", TRUE]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;[SecurityConstants.DISABLE_SECDOMAIN_OPTION, TRUE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCategories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [hostname=Utils.getCannonicalHost(managementClient)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System;setProperty;["java.security.krb5.conf", Utils.getResource("krb5.conf").getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>krbLdapServer;start;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>krbLdapServer;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>kerberosUsers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UserForKeyTab</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;UserForKeyTab&gt; [users=new ArrayList&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("admin@INFINISPAN.ORG","strongPassword",ADMIN_KEYTAB_FILE)]</InnerMethodInvoke>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("writer@INFINISPAN.ORG","somePassword",WRITER_KEYTAB_FILE)]</InnerMethodInvoke>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("reader@INFINISPAN.ORG","password",READER_KEYTAB_FILE)]</InnerMethodInvoke>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("unprivileged@INFINISPAN.ORG","weakPassword",UNPRIV_KEYTAB_FILE)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>