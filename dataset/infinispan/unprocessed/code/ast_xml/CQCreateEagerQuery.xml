<Class>
    <Id>3354</Id>
    <Package>org.infinispan.query.clustered.commandworkers</Package>
    <ClassName>CQCreateEagerQuery</ClassName>
    <SuperClass>ClusteredQueryCommandWorker</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CQCreateEagerQuery  /** 
 * CQCreateEagerQuery. Returns the results of a node to create a eager distributed iterator.
 * @author Israel Lacerra &lt;israeldl@gmail.com&gt;
 * @since 5.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>perform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryResponse</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DocumentExtractor [extractor=query.queryDocumentExtractor()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>query;afterDeserialise;[getSearchFactory()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>collectKeys</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NodeTopDocs</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>extractor</ParamName>
                    <ParamType>DocumentExtractor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TopDocs [topDocs=extractor.getTopDocs()]</InnerVar>
                <InnerVar>Object[] [keys=new Object[topDocs.scoreDocs.length]]</InnerVar>
                <InnerVar>KeyTransformationHandler [keyTransformationHandler=KeyTransformationHandler.getInstance(cache.getAdvancedCache())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>