<Class>
    <Id>3407</Id>
    <Package>org.infinispan.commands</Package>
    <ClassName>RemoteCommandsFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RemoteCommandsFactory  /** 
 * Specifically used to create un-initialized  {@link org.infinispan.commands.ReplicableCommand}s from a byte stream. This is a  {@link Scopes#GLOBAL} component and doesn't have knowledge of initializing a command by injectingcache-specific components into it. &lt;p /&gt; Usually a second step to unmarshalling a command from a byte stream (after creating an un-initialized version using this factory) is to pass the command though  {@link CommandsFactory#initializeReplicableCommand(ReplicableCommand,boolean)}.
 * @see CommandsFactory#initializeReplicableCommand(ReplicableCommand,boolean)
 * @author Manik Surtani
 * @author Mircea.Markus@jboss.com
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cacheManager</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>commandFactories</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>commandFactories</FieldName>
            <FieldType>Byte</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>inject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheManager</ParamName>
                    <ParamType>EmbeddedCacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>commandFactories</ParamName>
                    <ParamType>Byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fromStream</MethodName>
            <MethodComment>/** 
 * Creates an un-initialized command.  Un-initialized in the sense that parameters will be set, but any components specific to the cache in question will not be set. &lt;p/&gt; You would typically set these parameters using  {@link CommandsFactory#initializeReplicableCommand(ReplicableCommand,boolean)}&lt;p/&gt;
 * @param id id of the command
 * @param type type of the command
 * @return a replicable command
 */
</MethodComment>
            <ReturnType>ReplicableCommand</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ReplicableCommand [command]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fromStream</MethodName>
            <MethodComment>/** 
 * Resolve an  {@link CacheRpcCommand} from the stream.
 * @param id            id of the command
 * @param type          type of command (whether internal or user defined)
 * @param cacheName     cache name at which this command is directed
 * @return              an instance of {@link CacheRpcCommand}
 */
</MethodComment>
            <ReturnType>CacheRpcCommand</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>ByteString</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheRpcCommand [command]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>