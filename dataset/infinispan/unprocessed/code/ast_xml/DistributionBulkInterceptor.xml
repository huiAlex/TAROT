<Class>
    <Id>2656</Id>
    <Package>org.infinispan.interceptors.distribution</Package>
    <ClassName>DistributionBulkInterceptor</ClassName>
    <SuperClass>DDAsyncInterceptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DistributionBulkInterceptor  /** 
 * Interceptor that handles bulk entrySet and keySet commands when using in a distributed/replicated environment. This interceptor produces backing collections for either method and a distributed stream for either which leverages distributed processing through the cluster.
 * @param &lt; K &gt; The key type of entries
 * @param &lt; V &gt; The value type of entries
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Cache</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>entrySet</FieldName>
            <FieldType>CacheSet</FieldType>
        </Field>
        <Field>
            <FieldName>entrySet</FieldName>
            <FieldType>CacheEntry&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>command</FieldName>
            <FieldType>FlagAffectedCommand</FieldType>
        </Field>
        <Field>
            <FieldName>ctx</FieldName>
            <FieldType>LocalTxInvocationContext</FieldType>
        </Field>
        <Field>
            <FieldName>entrySet</FieldName>
            <FieldType>CacheSet</FieldType>
        </Field>
        <Field>
            <FieldName>entrySet</FieldName>
            <FieldType>CacheEntry&lt;K,V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>command</FieldName>
            <FieldType>FlagAffectedCommand</FieldType>
        </Field>
        <Field>
            <FieldName>ctx</FieldName>
            <FieldType>LocalTxInvocationContext</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>inject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitEntrySetCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>EntrySetCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>supplier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheStream&lt;CacheEntry&lt;K,V&gt;&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>streamSupplier</ParamName>
                    <ParamType>CacheStream&lt;CacheEntry&lt;K,V&gt;&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BackingEntrySet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>Cache</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entrySet</ParamName>
                    <ParamType>CacheEntry&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>spliterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>contains</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map.Entry [entry=toEntry(o)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map.Entry [entry=toEntry(o)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toEntry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
                <InnerVar>CacheStream&lt;CacheEntry&lt;K,V&gt;&gt; [cacheStream=new DistributedCacheStream&lt;CacheEntry&lt;K,V&gt;&gt;(cache.getCacheManager().getAddress(),false,advancedCache.getDistributionManager(),supplier(cache,entrySet::stream),registry.getComponent(ClusterStreamManager.class),!command.hasAnyFlag(FlagBitSets.SKIP_CACHE_LOAD),cache.getCacheConfiguration().clustering().stateTransfer().chunkSize(),registry.getComponent(Executor.class,ASYNC_OPERATIONS_EXECUTOR),registry){
  @Override public Iterator&lt;CacheEntry&lt;K,V&gt;&gt; iterator(){
    int size=intermediateOperations.size();
    if (size == 0) {
      return new RemovableIterator&lt;&gt;(super.iterator(),e -&gt; cache.remove(e.getKey(),e.getValue()));
    }
 else     if (size == 1) {
      IntermediateOperation intOp=intermediateOperations.peek();
      if (intOp instanceof MapOperation) {
        MapOperation map=(MapOperation)intOp;
        if (map.getFunction() instanceof RemovableFunction) {
          return new RemovableIterator&lt;&gt;(super.iterator(),e -&gt; cache.remove(e.getKey(),e.getValue()));
        }
      }
    }
    return super.iterator();
  }
}
]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [size=intermediateOperations.size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parallelStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
                <InnerVar>CacheStream&lt;CacheEntry&lt;K,V&gt;&gt; [cacheStream=new DistributedCacheStream&lt;&gt;(cache.getCacheManager().getAddress(),true,advancedCache.getDistributionManager(),supplier(cache,entrySet::parallelStream),registry.getComponent(ClusterStreamManager.class),!command.hasAnyFlag(FlagBitSets.SKIP_CACHE_LOAD),cache.getCacheConfiguration().clustering().stateTransfer().chunkSize(),registry.getComponent(Executor.class,ASYNC_OPERATIONS_EXECUTOR),registry)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TxBackingEntrySet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>Cache</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entrySet</ParamName>
                    <ParamType>CacheEntry&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>LocalTxInvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>DistributionManager [dm=advancedCache.getDistributionManager()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
                <InnerVar>ClusterStreamManager&lt;K&gt; [realManager=registry.getComponent(ClusterStreamManager.class)]</InnerVar>
                <InnerVar>TxClusterStreamManager&lt;K&gt; [txManager=new TxClusterStreamManager&lt;&gt;(realManager,ctx,dm.getWriteConsistentHash())]</InnerVar>
                <InnerVar>CacheStream&lt;CacheEntry&lt;K,V&gt;&gt; [cacheStream=new TxDistributedCacheStream&lt;&gt;(cache.getCacheManager().getAddress(),false,dm,entrySet::stream,txManager,!command.hasAnyFlag(FlagBitSets.SKIP_CACHE_LOAD),cache.getCacheConfiguration().clustering().stateTransfer().chunkSize(),registry.getComponent(Executor.class,ASYNC_OPERATIONS_EXECUTOR),registry,ctx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parallelStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,V&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>DistributionManager [dm=advancedCache.getDistributionManager()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
                <InnerVar>ClusterStreamManager&lt;K&gt; [realManager=registry.getComponent(ClusterStreamManager.class)]</InnerVar>
                <InnerVar>TxClusterStreamManager&lt;K&gt; [txManager=new TxClusterStreamManager&lt;&gt;(realManager,ctx,dm.getWriteConsistentHash())]</InnerVar>
                <InnerVar>CacheStream&lt;CacheEntry&lt;K,V&gt;&gt; [cacheStream=new TxDistributedCacheStream&lt;&gt;(cache.getCacheManager().getAddress(),true,dm,entrySet::parallelStream,txManager,!command.hasAnyFlag(FlagBitSets.SKIP_CACHE_LOAD),cache.getCacheConfiguration().clustering().stateTransfer().chunkSize(),registry.getComponent(Executor.class,ASYNC_OPERATIONS_EXECUTOR),registry,ctx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyTimeOut</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>C</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>C</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitKeySetCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>KeySetCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheSet&lt;K&gt; [keySet]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BackingKeySet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entrySet</ParamName>
                    <ParamType>CacheEntry&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>contains</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>spliterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [size=intermediateOperations.size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parallelStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TxBackingKeySet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entrySet</ParamName>
                    <ParamType>CacheEntry&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>FlagAffectedCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>LocalTxInvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>DistributionManager [dm=advancedCache.getDistributionManager()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
                <InnerVar>ClusterStreamManager&lt;K&gt; [realManager=registry.getComponent(ClusterStreamManager.class)]</InnerVar>
                <InnerVar>TxClusterStreamManager&lt;K&gt; [txManager=new TxClusterStreamManager&lt;&gt;(realManager,ctx,dm.getWriteConsistentHash())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parallelStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AdvancedCache&lt;K,V&gt; [advancedCache=cache.getAdvancedCache()]</InnerVar>
                <InnerVar>DistributionManager [dm=advancedCache.getDistributionManager()]</InnerVar>
                <InnerVar>ComponentRegistry [registry=advancedCache.getComponentRegistry()]</InnerVar>
                <InnerVar>ClusterStreamManager&lt;K&gt; [realManager=registry.getComponent(ClusterStreamManager.class)]</InnerVar>
                <InnerVar>TxClusterStreamManager&lt;K&gt; [txManager=new TxClusterStreamManager&lt;&gt;(realManager,ctx,dm.getWriteConsistentHash())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>