<Class>
    <Id>244</Id>
    <Package>org.infinispan.lucene.testutils</Package>
    <ClassName>RepeatableLongByteSequence</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RepeatableLongByteSequence  /** 
 * RepeatableLongByteSequence is a testing utility to get a source of bytes. Use nextByte() to produce them. The generated sequence is similar to a random generated sequence, but will always generate the same sequence and avoid immediate repetitions of bytes and close repetitive patterns (they might occur in large scale). After having written such a stream from one instance, create a second instance to assert equality of contents (see test) as the source is not random and will generate the same sequence.
 * @author Sanne Grinovero
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>lastUsedValue</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>currentMax</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>currentMin</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>rising</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>nextByte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>byte [next]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextBytes</MethodName>
            <MethodComment>/** 
 * @param buffer is going to be modified: a new series of bytes is going to be written into
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reset</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>