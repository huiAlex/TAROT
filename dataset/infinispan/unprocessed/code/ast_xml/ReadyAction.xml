<Class>
    <Id>333</Id>
    <Package>org.infinispan.remoting.inboundhandler.action</Package>
    <ClassName>ReadyAction</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReadyAction  /** 
 * An interface that allows the  {@link org.infinispan.remoting.inboundhandler.PerCacheInboundInvocationHandler} to checkwhen this action is ready.
 * @author Pedro Ruivo
 * @since 8.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>isReady</MethodName>
            <MethodComment>/** 
 * @return {@code true} if ready.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment>/** 
 * It adds a listener that is invoked when this action is ready.
 * @param listener the listener to invoke.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>ActionListener</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onException</MethodName>
            <MethodComment>/** 
 * Cleanup when the command throws an exception while executing.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onFinally</MethodName>
            <MethodComment>/** 
 * Invoked always after the command is executed and the reply is sent.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>