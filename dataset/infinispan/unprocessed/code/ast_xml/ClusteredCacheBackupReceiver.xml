<Class>
    <Id>2459</Id>
    <Package>org.infinispan.xsite</Package>
    <ClassName>ClusteredCacheBackupReceiver</ClassName>
    <SuperClass>BaseBackupReceiver</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ClusteredCacheBackupReceiver  /** 
 * {@link org.infinispan.xsite.BackupReceiver} implementation for clustered caches.
 * @author Pedro Ruivo
 * @since 7.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>chunk</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>chunk</FieldName>
            <FieldType>XSiteState</FieldType>
        </Field>
        <Field>
            <FieldName>address</FieldName>
            <FieldType>Address</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>AdvancedCache</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>remoteFuture</FieldName>
            <FieldType>Future</FieldType>
        </Field>
        <Field>
            <FieldName>remoteFuture</FieldName>
            <FieldType>Map&lt;Address,Response&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ClusteredCacheBackupReceiver</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleStateTransferControl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>XSiteStateTransferControlCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>XSiteStateTransferControlCommand [invokeCommand=command]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>invokeCommand;setSiteName;[command.getOriginSite()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;invokeRemotelyInLocalSite;[invokeCommand]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleStateTransferState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cmd</ParamName>
                    <ParamType>XSiteStatePushCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [endTime=timeService.expectedEndTime(cmd.getTimeout(),TimeUnit.MILLISECONDS)]</InnerVar>
                <InnerVar>ClusteringDependentLogic [clusteringDependentLogic=cache.getComponentRegistry().getComponent(ClusteringDependentLogic.class)]</InnerVar>
                <InnerVar>Map&lt;Address,List&lt;XSiteState&gt;&gt; [primaryOwnersChunks=new HashMap&lt;&gt;()]</InnerVar>
                <InnerVar>Address [localAddress=clusteringDependentLogic.getAddress()]</InnerVar>
                <InnerVar>List&lt;XSiteState&gt; [localChunks=primaryOwnersChunks.remove(localAddress)]</InnerVar>
                <InnerVar>List&lt;StatePushTask&gt; [tasks=new ArrayList&lt;&gt;(primaryOwnersChunks.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertAllowInvocation;[]</InnerMethodInvoke>
                <InnerMethodInvoke>primaryOwnersChunks;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertAllowInvocation;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>awaitRemoteTask</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>StatePushTask</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeRemotelyInLocalSite</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>CacheRpcCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RpcManager [rpcManager=cache.getRpcManager()]</InnerVar>
                <InnerVar>CompletableFuture&lt;Map&lt;Address,Response&gt;&gt; [remoteFuture=rpcManager.invokeRemotelyAsync(null,command,rpcManager.getDefaultRpcOptions(true,DeliverOrder.NONE))]</InnerVar>
                <InnerVar>Map&lt;Address,Response&gt; [responseMap=new HashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>responseMap;put;[rpcManager.getAddress(), LocalInvocation.newInstanceFromCache(cache,command).call()]</InnerMethodInvoke>
                <InnerMethodInvoke>responseMap;putAll;[remoteFuture.get()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StatePushTask</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chunk</ParamName>
                    <ParamType>XSiteState</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeRemote</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>RpcManager [rpcManager=cache.getRpcManager()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeLocal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>awaitResponse</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Response</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Future&lt;Map&lt;Address,Response&gt;&gt; [future=remoteFuture]</InnerVar>
                <InnerVar>Map&lt;Address,Response&gt; [responseMap=future.get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>