<Class>
    <Id>3906</Id>
    <Package>org.infinispan.spring.provider.sample.dao</Package>
    <ClassName>JdbcBookDao</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BaseBookDao</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JdbcBookDao  /** 
 * &lt;p&gt; {@link org.infinispan.spring.provider.sample.dao.BaseBookDao &lt;code&gt;BookDao&lt;/code&gt;} implementation that fronts a relational database, using{@code JDBC} to store and retrieve {@link org.infinispan.spring.provider.sample.entity.Book &lt;code&gt;books&lt;/code&gt;}. Serves as an example of how to use &lt;a href="http://www.springframework.org"&gt;Spring&lt;/a&gt;'s {@link org.springframework.cache.annotation.Cacheable &lt;code&gt;@Cacheable&lt;/code&gt;} and{@link org.springframework.cache.annotation.CacheEvict &lt;code&gt;@CacheEvict&lt;/code&gt;}. &lt;/p&gt;
 * @author &lt;a href="mailto:olaf DOT bergner AT gmx DOT de"&gt;Olaf Bergner&lt;/a&gt;
 * @since 5.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>jdbcTemplate</FieldName>
            <FieldType>NamedParameterJdbcTemplate</FieldType>
        </Field>
        <Field>
            <FieldName>bookInsert</FieldName>
            <FieldType>SimpleJdbcInsert</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dataSource</ParamName>
                    <ParamType>DataSource</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findBook</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Book</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bookId</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mapRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Book</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rs</ParamName>
                    <ParamType>ResultSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Book [mappedBook=new Book()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mappedBook;setId;[rs.getInt("id")]</InnerMethodInvoke>
                <InnerMethodInvoke>mappedBook;setIsbn;[rs.getString("isbn")]</InnerMethodInvoke>
                <InnerMethodInvoke>mappedBook;setAuthor;[rs.getString("author")]</InnerMethodInvoke>
                <InnerMethodInvoke>mappedBook;setTitle;[rs.getString("title")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deleteBook</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bookId</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.log;infof;["Deleting book [ID = %d]", bookId]</InnerMethodInvoke>
                <InnerMethodInvoke>this.jdbcTemplate;update;["DELETE FROM books WHERE id = :id", new MapSqlParameterSource("id",bookId)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBooks</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Book</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateBook</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Book</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bookToUpdate</ParamName>
                    <ParamType>Book</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.log;infof;["Updating book [%s]", bookToUpdate]</InnerMethodInvoke>
                <InnerMethodInvoke>this.jdbcTemplate;update;["UPDATE books SET isbn = :isbn WHERE id = :id", createParameterSourceFor(bookToUpdate)]</InnerMethodInvoke>
                <InnerMethodInvoke>this.log;infof;["Book [%s] updated", bookToUpdate]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createBook</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Book</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bookToCreate</ParamName>
                    <ParamType>Book</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Number [newBookId=this.bookInsert.executeAndReturnKey(createParameterSourceFor(bookToCreate))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bookToCreate;setId;[newBookId.intValue()]</InnerMethodInvoke>
                <InnerMethodInvoke>this.log;infof;["Book [%s] persisted for the first time", bookToCreate]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createParameterSourceFor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SqlParameterSource</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>book</ParamName>
                    <ParamType>Book</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>