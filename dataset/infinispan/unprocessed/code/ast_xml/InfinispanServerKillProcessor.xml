<Class>
    <Id>312</Id>
    <Package>org.infinispan.server.test.util.arquillian.extensions</Package>
    <ClassName>InfinispanServerKillProcessor</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ServerKillProcessor</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanServerKillProcessor  /** 
 * Handles calls to   {@link org.jboss.arquillian.container.test.api.ContainerController#kill(String)}
 * @author &lt;a href="mailto:mgencur@redhat.com"&gt;Martin Gencur&lt;/a&gt;
 * @author &lt;a href="mailto:tsykora@redhat.com"&gt;Tomas Sykora&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>TIMEOUT</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>kill</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>container</ParamName>
                    <ParamType>Container</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [osName=System.getProperty("os.name","")]</InnerVar>
                <InnerVar>String [killSequence=null]</InnerVar>
                <InnerVar>Process [p=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeKill</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Process</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logKillSequence</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["Issuing kill sequence (on " + System.getProperty("os.name") + "): "+ logKillSequence]</InnerMethodInvoke>
                <InnerMethodInvoke>p;waitFor;[]</InnerMethodInvoke>
                <InnerMethodInvoke>Thread;sleep;[TIMEOUT]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["Kill sequence successfully completed. \n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPidForKill</MethodName>
            <MethodComment>/** 
 * Get ID of process listening on 127.0.0.1:8080 (or 8180 or 8280). Used on Windows. Note! This method is closing InputStream.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [line=null]</InnerVar>
                <InnerVar>String [lineForSplit=null]</InnerVar>
                <InnerVar>BufferedReader [in=new BufferedReader(new InputStreamReader(is))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["Getting process id from: " + lineForSplit]</InnerMethodInvoke>
                <InnerMethodInvoke>in;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>