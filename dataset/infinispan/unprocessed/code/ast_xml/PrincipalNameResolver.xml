<Class>
    <Id>2423</Id>
    <Package>org.infinispan.spring.session</Package>
    <ClassName>PrincipalNameResolver</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PrincipalNameResolver  /** 
 * Extracts Principal Name from Session. This needs to be done separately since Spring Session is not aware of any authentication mechanism (it is application developer's responsibility to implement it).
 * @author Sebastian ≈Åaskawiec
 * @see org.springframework.session.FindByIndexNameSessionRepository
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>SPRING_SECURITY_CONTEXT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>parser</FieldName>
            <FieldType>SpelExpressionParser</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>resolvePrincipal</MethodName>
            <MethodComment>/** 
 * Resolves Principal Name (e.g. user name) based on session.
 * @param session Session to be checked.
 * @return Extracted Principal Name
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>Session</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [principalName=session.getAttribute(PRINCIPAL_NAME_INDEX_NAME)]</InnerVar>
                <InnerVar>Object [authentication=session.getAttribute(SPRING_SECURITY_CONTEXT)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>