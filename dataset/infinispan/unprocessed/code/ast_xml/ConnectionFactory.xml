<Class>
    <Id>3321</Id>
    <Package>org.infinispan.persistence.jdbc.connectionfactory</Package>
    <ClassName>ConnectionFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConnectionFactory  /** 
 * Defines the functionality a connection factory should implement.
 * @author Mircea.Markus@jboss.com
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getConnectionFactory</MethodName>
            <MethodComment>/** 
 * Constructs a  {@link ConnectionFactory} based on the supplied classname.
 */
</MethodComment>
            <ReturnType>ConnectionFactory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connectionFactoryClass</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PersistenceException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConnectionFactory</MethodName>
            <MethodComment>/** 
 * Constructs a  {@link ConnectionFactory} based on the supplied classname.
 */
</MethodComment>
            <ReturnType>ConnectionFactory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connectionFactoryClass</ParamName>
                    <ParamType>? extends ConnectionFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PersistenceException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment>/** 
 * Starts the connection factory. A pooled factory might be create connections here.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factoryConfiguration</ParamName>
                    <ParamType>ConnectionFactoryConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>PersistenceException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Closes the connection factory, including all allocated connections etc.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConnection</MethodName>
            <MethodComment>/** 
 * Fetches a connection from the factory.
 */
</MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>PersistenceException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>releaseConnection</MethodName>
            <MethodComment>/** 
 * Destroys a connection. Important: null might be passed in, as an valid argument.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>