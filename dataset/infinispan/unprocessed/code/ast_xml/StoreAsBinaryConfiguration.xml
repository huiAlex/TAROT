<Class>
    <Id>2905</Id>
    <Package>org.infinispan.configuration.cache</Package>
    <ClassName>StoreAsBinaryConfiguration</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StoreAsBinaryConfiguration  /** 
 * Controls whether when stored in memory, keys and values are stored as references to their original objects, or in a serialized, binary format.  There are benefits to both approaches, but often if used in a clustered mode, storing objects as binary means that the cost of serialization happens early on, and can be amortized.  Further, deserialization costs are incurred lazily which improves throughput. &lt;p /&gt; It is possible to control this on a fine-grained basis: you can choose to just store keys or values as binary, or both. &lt;p /&gt;
 * @see StoreAsBinaryConfigurationBuilder
 * @deprecated Use {@link MemoryConfiguration} instead
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ENABLED</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>ENABLED</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>STORE_KEYS_AS_BINARY</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>STORE_KEYS_AS_BINARY</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>STORE_VALUES_AS_BINARY</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>STORE_VALUES_AS_BINARY</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>enabled</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>enabled</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>storeKeysAsBinary</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>storeKeysAsBinary</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>storeValuesAsBinary</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>storeValuesAsBinary</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>attributes</FieldName>
            <FieldType>AttributeSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>attributeDefinitionSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AttributeSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StoreAsBinaryConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributes</ParamName>
                    <ParamType>AttributeSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enabled</MethodName>
            <MethodComment>/** 
 * Enables storing both keys and values as binary.
 * @deprecated use {@link MemoryConfiguration#storageType()} instead
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enabled</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StoreAsBinaryConfiguration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.enabled;set;[enabled]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>storeKeysAsBinary</MethodName>
            <MethodComment>/** 
 * Enables storing keys as binary.
 * @deprecated when store as binary is enabled, keys are always stored as binary
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>storeValuesAsBinary</MethodName>
            <MethodComment>/** 
 * Enables storing values as binary.
 * @deprecated when store as binary is enabled, values are always stored as binary
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>defensive</MethodName>
            <MethodComment>/** 
 * Enables defensive copies.
 * @deprecated Store as binary configuration is always defensive now.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>attributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AttributeSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StoreAsBinaryConfiguration [other=(StoreAsBinaryConfiguration)obj]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [prime=31]</InnerVar>
                <InnerVar>int [result=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>