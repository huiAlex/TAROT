<Class>
    <Id>1299</Id>
    <Package>org.infinispan.configuration.cache</Package>
    <ClassName>DataContainerConfigurationBuilder</ClassName>
    <SuperClass>AbstractConfigurationChildBuilder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Builder</SuperInterface>
        <SuperInterface>DataContainerConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DataContainerConfigurationBuilder  /** 
 * Controls the data container for the cache.
 * @author pmuir
 * @deprecated Please use {@link MemoryConfiguration}
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>attributes</FieldName>
            <FieldType>AttributeSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DataContainerConfigurationBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>ConfigurationBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dataContainer</MethodName>
            <MethodComment>/** 
 * Specify the data container in use
 * @param dataContainer
 * @return
 * @deprecated data container is no longer to exposed via configuration at a later point
 */
</MethodComment>
            <ReturnType>DataContainerConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dataContainer</ParamName>
                    <ParamType>DataContainer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(DATA_CONTAINER);set;[dataContainer]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addProperty</MethodName>
            <MethodComment>/** 
 * Add key/value property pair to this data container configuration
 * @param key   property key
 * @param value property value
 * @return previous value if exists, null otherwise
 */
</MethodComment>
            <ReturnType>DataContainerConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypedProperties [properties=attributes.attribute(PROPERTIES).get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>properties;put;[key, value]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(PROPERTIES);set;[TypedProperties.toTypedProperties(properties)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withProperties</MethodName>
            <MethodComment>/** 
 * Set key/value properties to this  {@link DataContainer} configuration
 * @param props Properties
 * @return this ExecutorFactoryConfig
 */
</MethodComment>
            <ReturnType>DataContainerConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>props</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(PROPERTIES);set;[TypedProperties.toTypedProperties(props)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>keyEquivalence</MethodName>
            <MethodComment>/** 
 * Set the  {@link org.infinispan.commons.equivalence.Equivalence} instance to use to compare keys stored indata container.  {@link org.infinispan.commons.equivalence.Equivalence} implementations allow for customcomparisons to be provided when the JDK, or external libraries, do not provide adequate comparison implementations, i.e. arrays.
 * @param keyEquivalence instance of {@link org.infinispan.commons.equivalence.Equivalence} used to comparekey types.
 * @return this configuration builder
 * @deprecated Equivalence is to be removed (byte[] are directly supported)
 */
</MethodComment>
            <ReturnType>DataContainerConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyEquivalence</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>valueEquivalence</MethodName>
            <MethodComment>/** 
 * Set the  {@link org.infinispan.commons.equivalence.Equivalence} instance to use to compare values stored indata container.  {@link org.infinispan.commons.equivalence.Equivalence} implementations allow for customcomparisons to be provided when the JDK, or external libraries, do not provide adequate comparison implementations, i.e. arrays.
 * @param valueEquivalence instance of {@link org.infinispan.commons.equivalence.Equivalence} used to comparevalue types.
 * @return this configuration builder
 * @deprecated Equivalence is to be removed (byte[] are directly supported)
 */
</MethodComment>
            <ReturnType>DataContainerConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>valueEquivalence</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>globalConfig</ParamName>
                    <ParamType>GlobalConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataContainerConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataContainerConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>DataContainerConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes;read;[template.attributes()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>