<Class>
    <Id>62</Id>
    <Package>org.infinispan.client.hotrod.impl.consistenthash</Package>
    <ClassName>ConsistentHashV2</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ConsistentHash</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConsistentHashV2  /** 
 * Version 2 of the ConsistentHash function.  Uses MurmurHash3.
 * @author manik
 * @see org.infinispan.commons.hash.MurmurHash3
 * @since 5.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>BasicLogger</FieldType>
        </Field>
        <Field>
            <FieldName>positions</FieldName>
            <FieldType>SortedMap</FieldType>
        </Field>
        <Field>
            <FieldName>positions</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>hashes</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>addresses</FieldName>
            <FieldType>SocketAddress[]</FieldType>
        </Field>
        <Field>
            <FieldName>hashSpace</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>hashSpaceIsMaxInt</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>hash</FieldName>
            <FieldType>Hash</FieldType>
        </Field>
        <Field>
            <FieldName>numKeyOwners</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>rnd</FieldName>
            <FieldType>Random</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ConsistentHashV2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rnd</ParamName>
                    <ParamType>Random</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ConsistentHashV2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>servers2Hash</ParamName>
                    <ParamType>SocketAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numKeyOwners</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hashSpace</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [hashWheelSize=positions.size()]</InnerVar>
                <InnerVar>Iterator&lt;Integer&gt; [it=positions.keySet().iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;tracef;["Positions (%d entries) are: %s", hashWheelSize, positions]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SocketAddress</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [normalisedHashForKey]</InnerVar>
                <InnerVar>int [mainOwner=getHashIndex(normalisedHashForKey)]</InnerVar>
                <InnerVar>int [indexToReturn=mainOwner % hashes.length]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHashIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>normalisedHashForKey</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [result=Arrays.binarySearch(hashes,normalisedHashForKey)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setHash</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hash</ParamName>
                    <ParamType>Hash</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNormalizedHash</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSegmentsByServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SocketAddress</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>