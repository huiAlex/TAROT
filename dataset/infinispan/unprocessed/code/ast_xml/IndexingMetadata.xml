<Class>
    <Id>331</Id>
    <Package>org.infinispan.query.remote.impl.indexing</Package>
    <ClassName>IndexingMetadata</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IndexingMetadata  /** 
 * All fields of Protobuf types are indexed and stored by default if no indexing annotations are present. This behaviour exists only for compatibility with first release of remote query; it is deprecated and will be removed in Infinispan 10.0 (the lack of annotations on your message/field definition will imply no indexing support in this future release, but you will still be able to perform unindexed query). Indexing all fields is sometimes acceptable but it can become a performance problem if there are many or very large fields. To avoid such problems Infinispan allows and encourages you to specify which fields to index and store by means of two annotations ( {@literal @}Indexed and {@literal @}Field) that behave very similarly to the identically named Hibernate Search annotations and which can be directly added to your Protobuf schema files in the documentation comments of your message type definitions as demonstrated in the example below: &lt;p/&gt; &lt;b&gt;Example:&lt;/b&gt; &lt;p/&gt; &lt;pre&gt; / * This message type is indexed, but not all of its fields are. * {@literal @}Indexed * {@literal /}message Note { / * This field is indexed and analyzed but not stored. It can be full-text queried but cannot be used for projections. * {@literal @}Field(index=Index.YES, store=Store.NO, analyze=Analyze.YES) * {@literal /}optional string text = 1; / * A field that is both indexed and stored but not analyzed (the defaults - if no attributes are specified). It can be * queried with relational operators but not with full-text operators (since it is not analyzed). * {@literal @}Field * {@literal /}optional string author = 2; /** @Field(index=Index.NO, store=Store.YES)  {@literal /}optional bool isRead = 3; /** This field is not annotated, so it is neither indexed nor stored.  {@literal /}optional int32 priority = 4; } &lt;/pre&gt; &lt;p&gt; Documentation annotations can be added after the human-readable text on the last lines of the documentation comment that precedes the element to be annotated (a message type definition or a field definition). The syntax for defining these pseudo-annotations is identical to the one use by the Java language. &lt;p&gt; The ' {@literal @}Indexed' annotation applies to message types only, has a boolean value that defaults to 'true', so ' {@literal @}Indexed' is equivalent to ' {@literal @}Indexed(true)'. The presence of this annotation indicates the type is to be indexed and we intend to selectively specify which of the fields of this message type are to be indexed. '@Indexed(false)' turns off indexing for this type so the eventual '@Field' annotations present at field level will be ignored. The usage of '@Indexed(false)' is temporarily allowed, it is currently deprecated, and will no longer be supported in Infinispan 10.0 in which the only official way to turn off indexing for a type will be to not annotate it at all. The  {@literal @}Indexed annotation also has an optional 'index' attribute which allow you to specify the name of the index for this message type. If left unspecified it defaults to the fully qualified type name. &lt;p&gt; The ' {@literal @}Field' annotation applies to fields only and has three attributes, 'index', 'store' and 'analyze', which default to  {@literal @}Field(index=Index.YES, store=Store.NO, analyze=Analyze.NO). The 'index' attribute indicates whether the field will be indexed, so it can be used for indexed queries, while the 'store' attribute indicates whether the field value is to be stored in the index too, so it becomes useable for projections. The analyze attribute control analysis. Analyzing must be turned on in order to use the field in full-text searches. &lt;p&gt; The ' {@literal @}Analyzer' annotation applies to messages and fields and allows you to specify which analyzer to use if analysis was enabled. If has a single attribute name 'definition' which must contain a valid analyzer definition name specified as a String. &lt;p&gt; &lt;b&gt;NOTE:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;1. The  {@literal @}Field and  {@literal @}Analyzer annotations have effect only if the containing message type was annotated as ' {@literal @}Indexed' or ' {@literal @}Indexed(true)', otherwise they are ignored. &lt;/li&gt; &lt;li&gt;2. Unindexed fields can still be queried in non-indexed mode or with hybrid queries.&lt;/li&gt; &lt;ul/&gt;
 * @author anistor@redhat.com
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>INDEXED_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEXED_INDEX_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEXED_FIELD_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEXED_FIELD_INDEX_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEXED_FIELD_STORE_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELDS_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_NAME_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_INDEX_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_BOOST_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_ANALYZE_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_STORE_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_ANALYZER_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_INDEX_NULL_AS_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEX_YES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEX_NO</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ANALYZE_YES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ANALYZE_NO</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>STORE_YES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>STORE_NO</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_NULL_TOKEN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DO_NOT_INDEX_NULL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ANALYZER_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ANALYZER_DEFINITION_ATTRIBUTE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SORTABLE_FIELD_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SORTABLE_FIELDS_ANNOTATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>NO_INDEXING</FieldName>
            <FieldType>IndexingMetadata</FieldType>
        </Field>
        <Field>
            <FieldName>isIndexed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>indexName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>analyzer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>fields</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>fields</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>sortableFields</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>sortableFields</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>IndexingMetadata</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>isIndexed</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>analyzer</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fields</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>indexName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>analyzer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFieldIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldMapping [fieldMapping=fields.get(fieldName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFieldAnalyzed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldMapping [fieldMapping=fields.get(fieldName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFieldStored</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldMapping [fieldMapping=fields.get(fieldName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFieldMapping</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FieldMapping</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSortableFields</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configure</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Configuration.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.annotationsConfig().annotation(INDEXED_ANNOTATION,AnnotationElement.AnnotationTarget.MESSAGE).attribute(AnnotationElement.Annotation.VALUE_DEFAULT_ATTRIBUTE).type(AnnotationElement.AttributeType.BOOLEAN).defaultValue(true).attribute(INDEXED_INDEX_ATTRIBUTE).type(AnnotationElement.AttributeType.STRING).defaultValue("").metadataCreator(new IndexingMetadataCreator()).parentBuilder().annotation(ANALYZER_ANNOTATION,AnnotationElement.AnnotationTarget.MESSAGE,AnnotationElement.AnnotationTarget.FIELD).attribute(ANALYZER_DEFINITION_ATTRIBUTE).type(AnnotationElement.AttributeType.STRING).defaultValue("").parentBuilder().annotation(INDEXED_FIELD_ANNOTATION,AnnotationElement.AnnotationTarget.FIELD).attribute(INDEXED_FIELD_INDEX_ATTRIBUTE).type(AnnotationElement.AttributeType.BOOLEAN).defaultValue(true).attribute(INDEXED_FIELD_STORE_ATTRIBUTE).type(AnnotationElement.AttributeType.BOOLEAN).defaultValue(true).parentBuilder().annotation(FIELD_ANNOTATION,AnnotationElement.AnnotationTarget.FIELD).repeatable(FIELDS_ANNOTATION).attribute(FIELD_NAME_ATTRIBUTE).type(AnnotationElement.AttributeType.STRING).defaultValue("").attribute(FIELD_INDEX_ATTRIBUTE).type(AnnotationElement.AttributeType.IDENTIFIER).allowedValues(INDEX_YES,INDEX_NO).defaultValue(INDEX_YES).attribute(FIELD_BOOST_ATTRIBUTE).type(AnnotationElement.AttributeType.FLOAT).defaultValue(1.0f).attribute(FIELD_ANALYZE_ATTRIBUTE).type(AnnotationElement.AttributeType.IDENTIFIER).allowedValues(ANALYZE_YES,ANALYZE_NO).defaultValue(ANALYZE_NO).attribute(FIELD_STORE_ATTRIBUTE).type(AnnotationElement.AttributeType.IDENTIFIER).allowedValues(STORE_YES,STORE_NO).defaultValue(STORE_NO).attribute(FIELD_ANALYZER_ATTRIBUTE).type(AnnotationElement.AttributeType.ANNOTATION).allowedValues(ANALYZER_ANNOTATION).defaultValue("@Analyzer(definition=\"\")").attribute(FIELD_INDEX_NULL_AS_ATTRIBUTE).type(AnnotationElement.AttributeType.STRING).defaultValue(DO_NOT_INDEX_NULL).parentBuilder().annotation(SORTABLE_FIELD_ANNOTATION,AnnotationElement.AnnotationTarget.FIELD);repeatable;[SORTABLE_FIELDS_ANNOTATION]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>