<Class>
    <Id>3373</Id>
    <Package>org.infinispan.test.integration.as</Package>
    <ClassName>InfinispanStoreRocksDBIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanStoreRocksDBIT  /** 
 * Test the Infinispan RocksDB CacheStore AS module integration
 * @author Tristan Tarrant
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>baseDir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dataDir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>expiredDir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>cm</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>deployment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>manifest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Asset</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [manifest=Descriptors.create(ManifestDescriptor.class).attribute("Dependencies","org.infinispan:" + Version.getModuleSlot() + " services, org.infinispan.persistence.rocksdb:"+ Version.getModuleSlot()+ " services").exportAsString()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeDataFilesIfExists</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Util;recursiveFileRemove;[baseDir]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tmpDirectory</MethodName>
            <MethodComment>/** 
 * To avoid pulling in TestingUtil and its plethora of dependencies
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>test</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [prefix=System.getProperty("infinispan.test.tmpdir",System.getProperty("java.io.tmpdir"))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCacheManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>GlobalConfigurationBuilder [gcb=new GlobalConfigurationBuilder()]</InnerVar>
                <InnerVar>ConfigurationBuilder [builder=new ConfigurationBuilder()]</InnerVar>
                <InnerVar>Cache&lt;String,String&gt; [cache=cm.getCache()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gcb.globalJmxStatistics();allowDuplicateDomains;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>builder.persistence().addStore(RocksDBStoreConfigurationBuilder.class).location(dataDir);expiredLocation;[expiredDir]</InnerMethodInvoke>
                <InnerMethodInvoke>cache;put;["a", "a"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["a", cache.get("a")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>