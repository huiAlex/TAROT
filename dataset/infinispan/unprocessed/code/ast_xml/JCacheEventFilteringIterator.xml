<Class>
    <Id>450</Id>
    <Package>org.infinispan.jcache</Package>
    <ClassName>JCacheEventFilteringIterator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Iterator</SuperInterface>
        <SuperInterface>CacheEntryEvent&lt;? extends K,? extends V&gt;</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JCacheEventFilteringIterator  /** 
 * A adapter to  {@link Iterator}s to allow filtering of  {@link CacheEntryEvent}s
 * @author Galder Zamarre√±o
 * @param &lt; K &gt; the type of keys
 * @param &lt; V &gt; the type of value
 * @see Class based on the JSR-107 reference implementation (RI) of{@link Iterator&lt;CacheEntryEvent&lt;? extends K, ? extends V&gt;&gt;}
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>iterator</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>iterator</FieldName>
            <FieldType>CacheEntryEvent&lt;? extends K,? extends V&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>CacheEntryEventFilter</FieldType>
        </Field>
        <Field>
            <FieldName>filter</FieldName>
            <FieldType>? super K</FieldType>
        </Field>
        <Field>
            <FieldName>nextEntry</FieldName>
            <FieldType>CacheEntryEvent</FieldType>
        </Field>
        <Field>
            <FieldName>nextEntry</FieldName>
            <FieldType>? extends K</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>JCacheEventFilteringIterator</MethodName>
            <MethodComment>/** 
 * Constructs an  {@link JCacheEventFilteringIterator}.
 * @param iterator the underlying iterator to filter
 * @param filter   the filter to apply to entries in the iterator
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>iterator</ParamName>
                    <ParamType>CacheEntryEvent&lt;? extends K,? extends V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>? super K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fetch</MethodName>
            <MethodComment>/** 
 * Fetches the next available, entry that satisfies the filter from the underlying iterator
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasNext</MethodName>
            <MethodComment>/** 
 * {@inheritDoc}
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment>/** 
 * {@inheritDoc}
 */
</MethodComment>
            <ReturnType>? extends K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment>/** 
 * {@inheritDoc}
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>iterator;remove;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>