<Class>
    <Id>21</Id>
    <Package>org.infinispan.objectfilter.impl</Package>
    <ClassName>BaseMatcher</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Matcher</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BaseMatcher  /** 
 * @author anistor@redhat.com
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>readWriteLock</FieldName>
            <FieldType>ReentrantReadWriteLock</FieldType>
        </Field>
        <Field>
            <FieldName>read</FieldName>
            <FieldType>Lock</FieldType>
        </Field>
        <Field>
            <FieldName>write</FieldName>
            <FieldType>Lock</FieldType>
        </Field>
        <Field>
            <FieldName>filtersByType</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>filtersByType</FieldName>
            <FieldType>TypeMetadata</FieldType>
        </Field>
        <Field>
            <FieldName>deltaFiltersByType</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>deltaFiltersByType</FieldName>
            <FieldType>TypeMetadata</FieldType>
        </Field>
        <Field>
            <FieldName>propertyHelper</FieldName>
            <FieldType>ObjectPropertyHelper</FieldType>
        </Field>
        <Field>
            <FieldName>propertyHelper</FieldName>
            <FieldType>TypeMetadata</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BaseMatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propertyHelper</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPropertyHelper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>match</MethodName>
            <MethodComment>/** 
 * Executes the registered filters and notifies each one of them whether it was satisfied or not by the given instance.
 * @param userContext an optional user provided object to be passed to matching subscribers along with the matchinginstance; can be  {@code null}
 * @param eventType   on optional event type discriminator that is matched against the even type specified when thefilter was registered; can be  {@code null}
 * @param instance    the object to test against the registered filters; never {@code null}
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userContext</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>read;lock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>matchDelta</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userContext</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instanceOld</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instanceNew</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>joiningEvent</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>updatedEvent</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leavingEvent</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>read;lock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ObjectFilter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>Query</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ObjectFilter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ObjectFilter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>acc</ParamName>
                    <ParamType>FieldAccumulator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IckleParsingResult&lt;TypeMetadata&gt; [parsingResult=IckleParser.parse(queryString,propertyHelper)]</InnerVar>
                <InnerVar>MetadataAdapter&lt;TypeMetadata,AttributeMetadata,AttributeId&gt; [metadataAdapter=createMetadataAdapter(parsingResult.getTargetEntityMetadata())]</InnerVar>
                <InnerVar>FieldAccumulator[] [accumulators=acc != null ? acc.toArray(new FieldAccumulator[acc.size()]) : null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;disallowGroupingAndAggregations;[parsingResult]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ObjectFilter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filterSubscription</ParamName>
                    <ParamType>FilterSubscription</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FilterSubscriptionImpl&lt;TypeMetadata,AttributeMetadata,AttributeId&gt; [filterSubscriptionImpl=(FilterSubscriptionImpl&lt;TypeMetadata,AttributeMetadata,AttributeId&gt;)filterSubscription]</InnerVar>
                <InnerVar>ObjectFilter [objectFilter=getObjectFilter(filterSubscriptionImpl.getQueryString())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterSubscription</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>Query</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callback</ParamName>
                    <ParamType>FilterCallback</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterSubscription</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>Query</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callback</ParamName>
                    <ParamType>FilterCallback</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isDeltaFilter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BaseQuery [baseQuery=(BaseQuery)query]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterSubscription</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callback</ParamName>
                    <ParamType>FilterCallback</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterSubscription</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callback</ParamName>
                    <ParamType>FilterCallback</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isDeltaFilter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterSubscription</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>namedParameters</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callback</ParamName>
                    <ParamType>FilterCallback</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterSubscription</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>namedParameters</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>callback</ParamName>
                    <ParamType>FilterCallback</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isDeltaFilter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IckleParsingResult&lt;TypeMetadata&gt; [parsingResult=IckleParser.parse(queryString,propertyHelper)]</InnerVar>
                <InnerVar>Map&lt;TypeMetadata,FilterRegistry&lt;TypeMetadata,AttributeMetadata,AttributeId&gt;&gt; [filterMap=isDeltaFilter ? deltaFiltersByType : filtersByType]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;disallowGroupingAndAggregations;[parsingResult]</InnerMethodInvoke>
                <InnerMethodInvoke>null;disallowFullText;[parsingResult]</InnerMethodInvoke>
                <InnerMethodInvoke>write;lock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disallowFullText</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parsingResult</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disallowGroupingAndAggregations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parsingResult</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregisterFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filterSubscription</ParamName>
                    <ParamType>FilterSubscription</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FilterSubscriptionImpl&lt;TypeMetadata,AttributeMetadata,AttributeId&gt; [filterSubscriptionImpl=(FilterSubscriptionImpl&lt;TypeMetadata,AttributeMetadata,AttributeId&gt;)filterSubscription]</InnerVar>
                <InnerVar>Map&lt;TypeMetadata,FilterRegistry&lt;TypeMetadata,AttributeMetadata,AttributeId&gt;&gt; [filterMap=filterSubscription.isDeltaFilter() ? deltaFiltersByType : filtersByType]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>write;lock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startMultiTypeContext</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link MatcherEvalContext} capable of dealing with multiple filters. The context is created only ifthe given instance is recognized to be of a type that has some filters registered. If there are no filters,  {@code null} is returned to signal this condition and make the evaluation faster. This method must be called whileholding the internal write lock.
 * @param isDelta     indicates if this is a delta match of not
 * @param userContext an opaque value, possibly null, the is received from the caller and is to be handed to the{@link FilterCallback} in case a match is detected
 * @param eventType   on optional event type discriminator
 * @param instance    the instance to filter; never {@code null}
 * @return the MatcherEvalContext or {@code null} if no filter was registered for the instance
 */
</MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>isDelta</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>userContext</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startSingleTypeContext</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link MatcherEvalContext} capable of dealing with a single filter for a single type. The context iscreated only if the given instance is recognized to be of a type that has some filters registered. If there are no filters,  {@code null} is returned to signal this condition and make the evaluation faster. This method must becalled while holding the internal write lock.
 * @param userContext     an opaque value, possibly null, the is received from the caller and is to be handed to the{@link FilterCallback} in case a match is detected
 * @param instance        the instance to filter; never {@code null}
 * @param metadataAdapter the metadata adapter of expected instance type
 * @return the MatcherEvalContext or {@code null} if no filter was registered for the instance
 */
</MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userContext</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadataAdapter</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createMetadataAdapter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entityType</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFilterRegistryForType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>isDeltaFilter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entityType</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convert</MethodName>
            <MethodComment>/** 
 * Decorates a matching instance before it is presented to the caller of the  {@link ObjectFilter#filter(Object)}.
 * @param instance never null
 * @return the converted/decorated instance
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>