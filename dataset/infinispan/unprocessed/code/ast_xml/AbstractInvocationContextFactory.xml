<Class>
    <Id>1766</Id>
    <Package>org.infinispan.context</Package>
    <ClassName>AbstractInvocationContextFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>InvocationContextFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AbstractInvocationContextFactory  /** 
 * Base class for InvocationContextFactory implementations.
 * @author Mircea Markus
 * @author Dan Berindei
 * @deprecated Since 9.0, this class is going to be moved to an internal package.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>config</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>interceptorChain</FieldName>
            <FieldType>AsyncInterceptorChain</FieldType>
        </Field>
        <Field>
            <FieldName>keyEq</FieldName>
            <FieldType>Equivalence</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>interceptorChain</ParamName>
                    <ParamType>AsyncInterceptorChain</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRemoteInvocationContextForCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InvocationContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheCommand</ParamName>
                    <ParamType>VisitableCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>origin</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createClearNonTxInvocationContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InvocationContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createClearInvocationContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClearInvocationContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>origin</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClearInvocationContext [context=new ClearInvocationContext(origin,interceptorChain)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>