<Class>
    <Id>3230</Id>
    <Package>org.infinispan.stream.impl.termop</Package>
    <ClassName>BaseTerminalOperation</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BaseTerminalOperation  /** 
 * Abstract instance that provides common code needed for all terminal operations.  Note this class doesn't extend any interface due to the fact that different terminal operations have possibly different interfaces to implement however all of them require the information stored here.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>intermediateOperations</FieldName>
            <FieldType>Iterable</FieldType>
        </Field>
        <Field>
            <FieldName>intermediateOperations</FieldName>
            <FieldType>IntermediateOperation</FieldType>
        </Field>
        <Field>
            <FieldName>supplier</FieldName>
            <FieldType>Supplier</FieldType>
        </Field>
        <Field>
            <FieldName>supplier</FieldName>
            <FieldType>? extends BaseStream&lt;?,?&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BaseTerminalOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>intermediateOperations</ParamName>
                    <ParamType>IntermediateOperation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>supplier</ParamName>
                    <ParamType>? extends BaseStream&lt;?,?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIntermediateOperations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IntermediateOperation</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSupplier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>supplier</ParamName>
                    <ParamType>? extends Stream&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleInjection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>intermediateOperations;forEach;[i -&gt; i.handleInjection(registry)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>