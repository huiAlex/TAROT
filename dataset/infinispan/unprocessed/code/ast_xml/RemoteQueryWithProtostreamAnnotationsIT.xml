<Class>
    <Id>1693</Id>
    <Package>org.infinispan.server.test.query</Package>
    <ClassName>RemoteQueryWithProtostreamAnnotationsIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RemoteQueryWithProtostreamAnnotationsIT  /** 
 * Tests for remote queries over HotRod using Protobuf annotations.
 * @author Adrian Nistor
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCacheManager</FieldName>
            <FieldType>RemoteCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCache</FieldName>
            <FieldType>RemoteCache</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCache</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>rcmFactory</FieldName>
            <FieldType>RemoteCacheManagerFactory</FieldType>
        </Field>
        <Field>
            <FieldName>server</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>address</FieldName>
            <FieldType>AnnotatedAddress</FieldType>
        </Field>
        <Field>
            <FieldName>street</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>postCode</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAddress</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AnnotatedAddress</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setAddress</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>AnnotatedAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStreet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStreet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>street</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPostCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setPostCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>postCode</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ConfigurationBuilder [clientBuilder=new ConfigurationBuilder()]</InnerVar>
                <InnerVar>SerializationContext [serializationContext=ProtoStreamMarshaller.getSerializationContext(remoteCacheManager)]</InnerVar>
                <InnerVar>ProtoSchemaBuilder [protoSchemaBuilder=new ProtoSchemaBuilder()]</InnerVar>
                <InnerVar>String [protoFile=protoSchemaBuilder.fileName("test.proto").addClass(AnnotatedUser.class).build(serializationContext)]</InnerVar>
                <InnerVar>RemoteCache&lt;String,String&gt; [metadataCache=remoteCacheManager.getCache(ProtobufMetadataManagerConstants.PROTOBUF_METADATA_CACHE_NAME)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>clientBuilder.addServer().host(server.getHotrodEndpoint().getInetAddress().getHostName()).port(server.getHotrodEndpoint().getPort());marshaller;[new ProtoStreamMarshaller()]</InnerMethodInvoke>
                <InnerMethodInvoke>metadataCache;put;["test.proto", protoFile]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;[metadataCache.containsKey(ProtobufMetadataManagerConstants.ERRORS_KEY_SUFFIX)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testAttributeQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AnnotatedUser [fromCache=remoteCache.get(1)]</InnerVar>
                <InnerVar>QueryFactory [qf=Search.getQueryFactory(remoteCache)]</InnerVar>
                <InnerVar>Query [query=qf.from(AnnotatedUser.class).having("name").eq("Tom").build()]</InnerVar>
                <InnerVar>List&lt;AnnotatedUser&gt; [list=query.list()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remoteCache;put;[1, createUser1()]</InnerMethodInvoke>
                <InnerMethodInvoke>remoteCache;put;[2, createUser2()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertUser1;[fromCache]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNotNull;[list]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, list.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[AnnotatedUser.class, list.get(0).getClass()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertUser1;[list.get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNotNull;[list]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, list.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[AnnotatedUser.class, list.get(0).getClass()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertUser2;[list.get(0)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createUser1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AnnotatedUser</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AnnotatedUser [user=new AnnotatedUser()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>user;setId;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setName;["Tom"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createUser2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AnnotatedUser</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>AnnotatedAddress [address=new AnnotatedAddress()]</InnerVar>
                <InnerVar>AnnotatedUser [user=new AnnotatedUser()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>address;setStreet;["North street"]</InnerMethodInvoke>
                <InnerMethodInvoke>address;setPostCode;["Xyz"]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setId;[2]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setName;["Adrian"]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setAddress;[address]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertUser1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>AnnotatedUser</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;[user]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, user.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Tom", user.getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertUser2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>AnnotatedUser</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;[user]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[2, user.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Adrian", user.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNotNull;[user.getAddress()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["North street", user.getAddress().getStreet()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Xyz", user.getAddress().getPostCode()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>