<Class>
    <Id>282</Id>
    <Package>org.infinispan.rest.profiling</Package>
    <ClassName>BenchmarkHttpClient</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BenchmarkHttpClient  /** 
 * Benchmarking HTTP/1.1 and HTTP/2 is always comparing apples to bananas. Those protocols are totally different and it doesn't really whether we will use the same or other clients. Unfortunately currently there is no good support for HTTP/2 with TLS/ALPN clients. The only implementation which was reasonably good in testing was Netty (even though a lot of boilerplate code had to be generated). On the other hand HTTP/1.1 is tested using Jetty client. This client unifies the API for both of them.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>http2Client</FieldName>
            <FieldType>Http2Client</FieldType>
        </Field>
        <Field>
            <FieldName>http1Client</FieldName>
            <FieldType>HttpClient</FieldType>
        </Field>
        <Field>
            <FieldName>executorCompletionService</FieldName>
            <FieldType>ExecutorCompletionService</FieldType>
        </Field>
        <Field>
            <FieldName>address</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>port</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>http2</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>usesTLS</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>executor</FieldName>
            <FieldType>ExecutorService</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BenchmarkHttpClient</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keystorePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keystorePassword</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trustStorePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trustStorePassword</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SslContextFactory [sslContextFactory=new SslContextFactory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sslContextFactory;setTrustStorePassword;[trustStorePath]</InnerMethodInvoke>
                <InnerMethodInvoke>sslContextFactory;setTrustStorePassword;[trustStorePassword]</InnerMethodInvoke>
                <InnerMethodInvoke>sslContextFactory;setKeyStorePath;[keystorePath]</InnerMethodInvoke>
                <InnerMethodInvoke>sslContextFactory;setKeyStorePassword;[keystorePassword]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BenchmarkHttpClient</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performGets</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pertentageOfMisses</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numberOfGets</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>existingKey</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nonExistingKey</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Random [r=ThreadLocalRandom.current()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performPuts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>numberOfInserts</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>port</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threads</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>http2</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>executor;shutdownNow;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>