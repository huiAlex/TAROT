<Class>
    <Id>2841</Id>
    <Package>org.infinispan.util</Package>
    <ClassName>EntryWrapper</ClassName>
    <SuperClass>ForwardingCacheEntry</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EntryWrapper  /** 
 * Wrapper for CacheEntry(s) that can be used to update the cache when it's value is set.
 * @param &lt; K &gt; The key type
 * @param &lt; V &gt; The value type
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Cache</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>entry</FieldName>
            <FieldType>CacheEntry</FieldType>
        </Field>
        <Field>
            <FieldName>entry</FieldName>
            <FieldType>K</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EntryWrapper</MethodName>
            <MethodComment>/** 
 * Creates a new entry wrapper given the cache and entry. If the entry is itself an EntryWrapper then the inner entry is instead wrapped to prevent double cache.put operations. Also we then we can use the cache given as this could have different flags etc.
 * @param cache the cache to use on setValue
 * @param entry the actual entry
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>delegate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cache;put;[entry.getKey(), value]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>