<Class>
    <Id>1572</Id>
    <Package>org.infinispan.client.hotrod.impl.transport.tcp</Package>
    <ClassName>SaslTransportObjectFactory</ClassName>
    <SuperClass>TransportObjectFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SaslTransportObjectFactory  /** 
 * AuthenticatedTransportObjectFactory.
 * @author Tristan Tarrant
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTY_BYTES</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>AUTH_INT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>AUTH_CONF</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>NoOpCallbackHandler</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SaslTransportObjectFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codec</ParamName>
                    <ParamType>Codec</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tcpTransportFactory</ParamName>
                    <ParamType>TcpTransportFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultCacheTopologyId</ParamName>
                    <ParamType>AtomicInteger</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TcpTransport</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>SocketAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TcpTransport [tcpTransport=new TcpTransport(address,tcpTransportFactory)]</InnerVar>
                <InnerVar>AuthenticationConfiguration [authentication=configuration.security().authentication()]</InnerVar>
                <InnerVar>List&lt;String&gt; [serverMechs=mechList(tcpTransport,defaultCacheTopologyId)]</InnerVar>
                <InnerVar>SaslClient [saslClient]</InnerVar>
                <InnerVar>byte [response[]=saslClient.hasInitialResponse() ? evaluateChallenge(saslClient,EMPTY_BYTES,authentication.clientSubject()) : EMPTY_BYTES]</InnerVar>
                <InnerVar>byte [challenge[]=auth(tcpTransport,defaultCacheTopologyId,authentication.saslMechanism(),response)]</InnerVar>
                <InnerVar>String [qop=(String)saslClient.getNegotiatedProperty(Sasl.QOP)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SaslClient</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CallbackHandler [callbackHandler=authentication.callbackHandler()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateChallenge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>saslClient</ParamName>
                    <ParamType>SaslClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>challenge</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientSubject</ParamName>
                    <ParamType>Subject</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SaslException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mechList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tcpTransport</ParamName>
                    <ParamType>TcpTransport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyId</ParamName>
                    <ParamType>AtomicInteger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AuthMechListOperation [op=new AuthMechListOperation(codec,topologyId,configuration,tcpTransport)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>auth</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tcpTransport</ParamName>
                    <ParamType>TcpTransport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyId</ParamName>
                    <ParamType>AtomicInteger</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mech</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AuthOperation [op=new AuthOperation(codec,topologyId,configuration,tcpTransport,mech,response)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>callbacks</ParamName>
                    <ParamType>Callback[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>UnsupportedCallbackException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>