<Class>
    <Id>3175</Id>
    <Package>org.infinispan.jcache.annotation</Package>
    <ClassName>CacheKeyInvocationContextFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheKeyInvocationContextFactory  /** 
 * @author Kevin Pollet &lt;kevin.pollet@serli.com&gt; (C) 2011 SERLI
 * @author Galder Zamarre√±o
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>beanManager</FieldName>
            <FieldType>BeanManager</FieldType>
        </Field>
        <Field>
            <FieldName>methodMetaDataCache</FieldName>
            <FieldType>ConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>methodMetaDataCache</FieldName>
            <FieldType>Method</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheKeyInvocationContextFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>beanManager</ParamName>
                    <ParamType>BeanManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CacheKeyInvocationContextFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheKeyInvocationContext</MethodName>
            <MethodComment>/** 
 * Returns the cache key invocation context corresponding to the given invocation context.
 * @param invocationContext the {@link javax.interceptor.InvocationContext}.
 * @return an instance of {@link javax.cache.annotation.CacheKeyInvocationContext} corresponding to the given {@link javax.interceptor.InvocationContext}.
 */
</MethodComment>
            <ReturnType>A</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocationContext</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodMetaData&lt;A&gt; [methodMetaData=(MethodMetaData&lt;A&gt;)getMethodMetaData(invocationContext.getMethod())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;[invocationContext, "invocationContext parameter must not be null"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMethodMetaData</MethodName>
            <MethodComment>/** 
 * Returns the method meta data for the given method.
 * @param method the method.
 * @return an instance of {@link MethodMetaData}.
 */
</MethodComment>
            <ReturnType>? extends Annotation</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>method</ParamName>
                    <ParamType>Method</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MethodMetaData&lt;? extends Annotation&gt; [methodMetaData=methodMetaDataCache.get(method)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAggregatedParameterMetaData</MethodName>
            <MethodComment>/** 
 * Returns the aggregated parameter meta data for the given method.
 * @param method            the method.
 * @param cacheValueAllowed {@code true} if the {@link javax.cache.annotation.CacheValue} annotation is allowed on a method parameter.
 * @return an instance of {@link AggregatedParameterMetaData}.
 */
</MethodComment>
            <ReturnType>AggregatedParameterMetaData</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>method</ParamName>
                    <ParamType>Method</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheValueAllowed</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class&lt;?&gt;[] [parameterTypes=method.getParameterTypes()]</InnerVar>
                <InnerVar>Annotation[][] [parameterAnnotations=method.getParameterAnnotations()]</InnerVar>
                <InnerVar>List&lt;ParameterMetaData&gt; [parameters=new ArrayList&lt;ParameterMetaData&gt;()]</InnerVar>
                <InnerVar>List&lt;ParameterMetaData&gt; [keyParameters=new ArrayList&lt;ParameterMetaData&gt;()]</InnerVar>
                <InnerVar>ParameterMetaData [valueParameter=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>