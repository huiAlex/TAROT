<Class>
    <Id>1600</Id>
    <Package>org.infinispan.test.jndi</Package>
    <ClassName>DummyContextFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>InitialContextFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>instance</FieldName>
            <FieldType>Context</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getInitialContext</MethodName>
            <MethodComment>/** 
 * Creates an Initial Context for beginning name resolution. Special requirements of this context are supplied using &lt;code&gt;environment&lt;/code&gt;. &lt;p/&gt; The environment parameter is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.
 * @param environment The possibly null environment specifying information to be used in the creation of the initialcontext.
 * @return A non-null initial context object that implements the Context interface.
 * @throws javax.naming.NamingException If cannot create an initial context.
 */
</MethodComment>
            <ReturnType>Context</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>environment</ParamName>
                    <ParamType>Hashtable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NamingException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>