<Class>
    <Id>107</Id>
    <Package>org.infinispan.topology</Package>
    <ClassName>PersistentUUIDManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PersistentUUIDManager  /** 
 * PersistentUUIDManager maintains a mapping of  {@link PersistentUUID}s present in the cluster
 * @author Tristan Tarrant
 * @since 9.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>addPersistentAddressMapping</MethodName>
            <MethodComment>/** 
 * Adds a mapping between an  {@link Address} and a {@link PersistentUUID}
 * @param address
 * @param persistentUUID
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>persistentUUID</ParamName>
                    <ParamType>PersistentUUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPersistentUuid</MethodName>
            <MethodComment>/** 
 * Retrieves the  {@link PersistentUUID} of a node given its {@link Address}
 * @param address the address to lookup
 * @return the persistentuuid of the node, null if no mapping is present
 */
</MethodComment>
            <ReturnType>PersistentUUID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAddress</MethodName>
            <MethodComment>/** 
 * Retrieves the  {@link Address} of a node given its {@link PersistentUUID}
 * @param persistentUUID the persistent uuid to lookup
 * @return the address of the node, null if no mapping is present
 */
</MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>persistentUUID</ParamName>
                    <ParamType>PersistentUUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removePersistentAddressMapping</MethodName>
            <MethodComment>/** 
 * Removes any address mapping for the specified  {@link PersistentUUID}
 * @param persistentUUID the {@link PersistentUUID} for which to remove mappings
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>persistentUUID</ParamName>
                    <ParamType>PersistentUUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removePersistentAddressMapping</MethodName>
            <MethodComment>/** 
 * Removes any address mapping for the specified  {@link Address}
 * @param address the {@link Address} for which to remove mappings
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mapAddresses</MethodName>
            <MethodComment>/** 
 * Returns a list of  {@link PersistentUUID}s for the supplied  {@link Address}es
 * @param addresses
 * @return
 */
</MethodComment>
            <ReturnType>PersistentUUID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>addresses</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addressToPersistentUUID</MethodName>
            <MethodComment>/** 
 * Provides a remapping operator which translates addresses to persistentuuids
 */
</MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>persistentUUIDToAddress</MethodName>
            <MethodComment>/** 
 * Provides a remapping operator which translates persistentuuids to addresses
 */
</MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>