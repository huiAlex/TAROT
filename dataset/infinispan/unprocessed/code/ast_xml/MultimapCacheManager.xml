<Class>
    <Id>2716</Id>
    <Package>org.infinispan.multimap.api</Package>
    <ClassName>MultimapCacheManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>defineConfiguration</MethodName>
            <MethodComment>/** 
 * Defines a named multimap cache's configuration by using the provided configuration If this cache was already configured either declaritively or programmatically this method will throw a {@link org.infinispan.commons.CacheConfigurationException}. Currenly, the MultimapCache with the given name "foo" can be also accessed as a regular cache named "foo".
 * @param name          name of multimap cache whose configuration is being defined
 * @param configuration configuration overrides to use
 * @return a cloned configuration instance
 */
</MethodComment>
            <ReturnType>Configuration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>get</MethodName>
            <MethodComment>/** 
 * Retrieves a named multimap cache from the system.
 * @param name, name of multimap cache to retrieve
 * @return null if no configuration exists as per rules set above, otherwise returns a multimap cache instanceidentified by cacheName
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>