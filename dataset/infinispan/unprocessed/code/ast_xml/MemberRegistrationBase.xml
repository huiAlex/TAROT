<Class>
    <Id>3810</Id>
    <Package>org.infinispan.test.integration.as.wildfly</Package>
    <ClassName>MemberRegistrationBase</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>GD_LATITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>GD_LONGITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>CH_LATITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>CH_LONGITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>CBGB_LATITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>CBGB_LONGITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>KD_LATITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>KD_LONGITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>BG_LATITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>BG_LONGITUDE</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>memberRegistration</FieldName>
            <FieldType>MemberRegistration</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>testRegister</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Member [newMember=memberRegistration.getNewMember()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Index size isn't correct", 0, memberRegistration.indexSize()]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setName;["Davide D'Alto"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setEmail;["davide@mailinator.com"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setPhoneNumber;["2125551234"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setLatitude;[CH_LATITUDE]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setLongitude;[CH_LONGITUDE]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;register;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNotNull;[newMember.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Index size isn't correct", 1, memberRegistration.indexSize()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testRegisterConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Member [newMember=memberRegistration.getNewMember()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>newMember;setName;["Davide D'Altoe"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setEmail;["davide@mailinator.com"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setPhoneNumber;["2125551235"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setLatitude;[CH_LATITUDE]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setLongitude;[CH_LONGITUDE]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;register;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSearch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Member [newMember=memberRegistration.getNewMember()]</InnerVar>
                <InnerVar>List&lt;Member&gt; [search=memberRegistration.search("Peter")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>newMember;setName;["Peter O'Tall"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setEmail;["peter@mailinator.com"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setPhoneNumber;["4643646643"]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setLatitude;[KD_LATITUDE]</InnerMethodInvoke>
                <InnerMethodInvoke>newMember;setLongitude;[KD_LONGITUDE]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;register;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;["Expected at least one result after the indexing", search.isEmpty()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Search hasn't found a new member", newMember.getName(), search.get(0).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Index size isn't correct", 2, memberRegistration.indexSize()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberLuceneSearch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [search=memberRegistration.luceneSearch("Peter")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertFalse;["Expected at least one result after the indexing", search.isEmpty()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Lucene search hasn't found a member", "Peter O'Tall", search.get(0).getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberIndexSearch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Document&gt; [search=memberRegistration.indexSearch("Peter")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertFalse;["Expected at least one result after the indexing", search.isEmpty()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Lucene search hasn't found a member", "Peter O'Tall", search.get(0).get("name")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNonExistingMember</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [search=memberRegistration.search("TotallyInventedName")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;["Search should never return null", search]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Search results should be empty", search.isEmpty()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testLuceneNonExistingMember</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [search=memberRegistration.luceneSearch("TotallyInventedName")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;["Search should never return null", search]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Search results should be empty", search.isEmpty()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testIndexNonExistingMember</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Document&gt; [search=memberRegistration.indexSearch("TotallyInventedName")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;["Search should never return null", search]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Search results should be empty", search.isEmpty()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPurgeIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [search=memberRegistration.search("Peter")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>memberRegistration;purgeMemberIndex;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNotNull;["Search should never return null", search]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Search results should be empty", search.isEmpty()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Index size isn't correct", 0, memberRegistration.indexSize()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [search=memberRegistration.search("Peter")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>memberRegistration;indexMembers;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;["Expected at least one result after the indexing", search.isEmpty()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Search hasn't found a new member after reindex", "Peter O'Tall", search.get(0).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Index size isn't correct", 2, memberRegistration.indexSize()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchNearGD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [members=memberRegistration.spatialSearch(GD_LATITUDE,GD_LONGITUDE,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 1, members.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Davide D'Alto", members.get(0).getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchNearGDWithDistance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Object[]&gt; [membersWithDistance=memberRegistration.spatialSearchWithDistance(GD_LATITUDE,GD_LONGITUDE,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 1, membersWithDistance.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Davide D'Alto", ((Member)membersWithDistance.get(0)[1]).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Distance was not greater than zero", (Double)membersWithDistance.get(0)[0] &gt; 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchNearCBGB</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [members=memberRegistration.spatialSearch(CBGB_LATITUDE,CBGB_LONGITUDE,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 1, members.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Peter O'Tall", members.get(0).getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchNearCBGBWithDistance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Object[]&gt; [membersWithDistance=memberRegistration.spatialSearchWithDistance(CBGB_LATITUDE,CBGB_LONGITUDE,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 1, membersWithDistance.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Peter O'Tall", ((Member)membersWithDistance.get(0)[1]).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Distance was not greater than zero", (Double)membersWithDistance.get(0)[0] &gt; 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchNearBG</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [members=memberRegistration.spatialSearch(BG_LATITUDE,BG_LONGITUDE,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 0, members.size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchNearBGWithDistance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Object[]&gt; [membersWithDistance=memberRegistration.spatialSearchWithDistance(BG_LATITUDE,BG_LONGITUDE,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 0, membersWithDistance.size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchLongDistance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Member&gt; [members=memberRegistration.spatialSearch(GD_LATITUDE,GD_LONGITUDE,5000)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 2, members.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Davide D'Alto", members.get(0).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Peter O'Tall", members.get(1).getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testNewMemberSpatialSearchLongDistanceWithDistance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Object[]&gt; [membersWithDistance=memberRegistration.spatialSearchWithDistance(GD_LATITUDE,GD_LONGITUDE,5000)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Expected one result from spatial search", 2, membersWithDistance.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Davide D'Alto", ((Member)membersWithDistance.get(0)[1]).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Distance was not greater than zero", (Double)membersWithDistance.get(0)[0] &gt; 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Spatial search did not find the correct member", "Peter O'Tall", ((Member)membersWithDistance.get(1)[1]).getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Distance was not greater than zero", (Double)membersWithDistance.get(1)[0] &gt; 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>