<Class>
    <Id>3079</Id>
    <Package>org.infinispan.factories.components</Package>
    <ClassName>ComponentMetadataPersister</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ComponentMetadataPersister  /** 
 * A utility class used by the Infinispan build process to scan metadata and persist it.  Should be used by all Infinispan modules that define components decorated with  {@link Inject},  {@link Start},  {@link Stop}, etc.
 * @author Manik Surtani
 * @see ComponentMetadataRepo
 * @see ComponentMetadata
 * @since 5.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment>/** 
 * Usage: ComponentMetadataPersister [path containing .class files to scan] [output file to generate]
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [startTime=System.nanoTime()]</InnerVar>
                <InnerVar>String [path=args[0]]</InnerVar>
                <InnerVar>String [outputFile=args[1]]</InnerVar>
                <InnerVar>ComponentMetadataRepo [repo=new ComponentMetadataRepo()]</InnerVar>
                <InnerVar>File [f=new File(path)]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [dependencies=new HashMap&lt;&gt;(128)]</InnerVar>
                <InnerVar>ClassLoader [cl=ComponentMetadataRepo.class.getClassLoader()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;printf;[" [ComponentMetadataPersister] Starting component metadata generation.  Scanning classes in %s%n", path]</InnerMethodInvoke>
                <InnerMethodInvoke>null;process;[repo, path, f]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeMetadata;[repo, outputFile]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;printf;[" [ComponentMetadataPersister] %s components and %s factories.%n%n", repo.componentMetadataMap.size(), repo.factories.size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>repo</ParamName>
                    <ParamType>ComponentMetadataRepo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isValidClassFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>repo</ParamName>
                    <ParamType>ComponentMetadataRepo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clazz</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MBean [mbean=ReflectionUtil.getAnnotation(clazz,MBean.class)]</InnerVar>
                <InnerVar>boolean [survivesRestarts]</InnerVar>
                <InnerVar>boolean [isGlobal]</InnerVar>
                <InnerVar>List&lt;Method&gt; [injectMethods=ReflectionUtil.getAllMethods(clazz,Inject.class)]</InnerVar>
                <InnerVar>List&lt;Method&gt; [startMethods=ReflectionUtil.getAllMethods(clazz,Start.class)]</InnerVar>
                <InnerVar>List&lt;Method&gt; [postStartMethods=ReflectionUtil.getAllMethods(clazz,PostStart.class)]</InnerVar>
                <InnerVar>List&lt;Method&gt; [stopMethods=ReflectionUtil.getAllMethods(clazz,Stop.class)]</InnerVar>
                <InnerVar>ComponentMetadata [metadata=null]</InnerVar>
                <InnerVar>DefaultFactoryFor [dff=ReflectionUtil.getAnnotation(clazz,DefaultFactoryFor.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>extractFqcn</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeMetadata</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>repo</ParamName>
                    <ParamType>ComponentMetadataRepo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadataFile</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [file=new File(metadataFile)]</InnerVar>
                <InnerVar>File [parent=file.getParentFile()]</InnerVar>
                <InnerVar>FileOutputStream [fileOutputStream=new FileOutputStream(file)]</InnerVar>
                <InnerVar>BufferedOutputStream [bufferedOutputStream=new BufferedOutputStream(fileOutputStream)]</InnerVar>
                <InnerVar>ObjectOutputStream [objectOutputStream=new ObjectOutputStream(bufferedOutputStream)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>objectOutputStream;writeObject;[repo.componentMetadataMap]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutputStream;writeObject;[repo.factories]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutputStream;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutputStream;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>bufferedOutputStream;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>bufferedOutputStream;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>fileOutputStream;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>fileOutputStream;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;printf;[" [ComponentMetadataPersister] Persisted metadata in %s%n", metadataFile]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>