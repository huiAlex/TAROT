<Class>
    <Id>1436</Id>
    <Package>org.infinispan.plugins.maven.defaults</Package>
    <ClassName>DefaultsExtractorMojo</ClassName>
    <SuperClass>AbstractMojo</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DefaultsExtractorMojo  /** 
 * A maven plugin to extract default values from various AtributeDefinitions, output them to a specified properties/asciidoc file and process xsd files so that placeholders are replaced with the extracted defaults.
 * @author Ryan Emerson
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>defaultsFile</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>attributeDefType</FieldName>
            <FieldType>AttributeDefType</FieldType>
        </Field>
        <Field>
            <FieldName>outputAscii</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>filterXsd</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>xsdSrcPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>xsdTargetPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jars</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>jars</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mavenProject</FieldName>
            <FieldType>MavenProject</FieldType>
        </Field>
        <Field>
            <FieldName>mavenSession</FieldName>
            <FieldType>MavenSession</FieldType>
        </Field>
        <Field>
            <FieldName>pluginManager</FieldName>
            <FieldType>BuildPluginManager</FieldType>
        </Field>
        <Field>
            <FieldName>ispnResovler</FieldName>
            <FieldType>DefaultsResolver</FieldType>
        </Field>
        <Field>
            <FieldName>serverResovler</FieldName>
            <FieldType>DefaultsResolver</FieldType>
        </Field>
        <Field>
            <FieldName>classPaths</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>classPaths</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classLoader</FieldName>
            <FieldType>ClassLoader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;Class&gt; [configClasses=new HashSet&lt;&gt;()]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [defaults=extractDefaults(configClasses)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;getClassesFromClasspath;[configClasses]</InnerMethodInvoke>
                <InnerMethodInvoke>jars;forEach;[jar -&gt; getClassesFromJar(jar,configClasses)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeDefaultsToFile;[defaults]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MojoExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isValidClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>extractDefaults</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classes</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [separator=outputAscii ? "-" : "."]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [defaults=new HashMap&lt;&gt;()]</InnerVar>
                <InnerVar>boolean [extractAll=attributeDefType == AttributeDefType.ALL]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pathToUrl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>Path</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassesFromClasspath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classes</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MojoExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassesInPackage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classes</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassesFromJar</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jarName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classes</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Optional&lt;String&gt; [jarPath=classPaths.stream().filter(str -&gt; str.contains(jarName)).findFirst()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDefaultsToFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>defaults</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [file=new File(defaultsFile)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MojoExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>formatOutput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entry</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>filterXsdSchemas</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;executeMojo;[plugin(groupId("org.apache.maven.plugins"),artifactId("maven-resources-plugin"),version("2.6")), goal("copy-resources"), configuration(element("overwrite","true"),element("outputDirectory",defaultsFile),element("resources",element("resource",element("directory",xsdSrcPath),element("targetPath",xsdTargetPath),element("includes",element("include","*.xsd")),element("filtering","true"))),element("filters",element("filter",defaultsFile))), executionEnvironment(mavenProject,mavenSession,pluginManager)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MojoExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>