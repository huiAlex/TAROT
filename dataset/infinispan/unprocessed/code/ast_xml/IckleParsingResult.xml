<Class>
    <Id>1134</Id>
    <Package>org.infinispan.objectfilter.impl.syntax.parser</Package>
    <ClassName>IckleParsingResult</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IckleParsingResult  /** 
 * @param &lt; TypeMetadata &gt; is either {@link java.lang.Class} or {@link org.infinispan.protostream.descriptors.Descriptor}
 * @author anistor@redhat.com
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>path</FieldName>
            <FieldType>PropertyPath</FieldType>
        </Field>
        <Field>
            <FieldName>path</FieldName>
            <FieldType>TypeDescriptor&lt;TypeMetadata&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>isAscending</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>queryString</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>parameterNames</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>parameterNames</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>whereClause</FieldName>
            <FieldType>BooleanExpr</FieldType>
        </Field>
        <Field>
            <FieldName>havingClause</FieldName>
            <FieldType>BooleanExpr</FieldType>
        </Field>
        <Field>
            <FieldName>targetEntityName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>targetEntityMetadata</FieldName>
            <FieldType>TypeMetadata</FieldType>
        </Field>
        <Field>
            <FieldName>projectedPaths</FieldName>
            <FieldType>PropertyPath[]</FieldType>
        </Field>
        <Field>
            <FieldName>projectedTypes</FieldName>
            <FieldType>Class&lt;?&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>groupBy</FieldName>
            <FieldType>PropertyPath[]</FieldType>
        </Field>
        <Field>
            <FieldName>sortFields</FieldName>
            <FieldType>SortField[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SortFieldImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>TypeDescriptor&lt;TypeMetadata&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isAscending</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor&lt;TypeMetadata&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isAscending</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>IckleParsingResult</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameterNames</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>whereClause</ParamName>
                    <ParamType>BooleanExpr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>havingClause</ParamName>
                    <ParamType>BooleanExpr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetEntityName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetEntityMetadata</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>projectedPaths</ParamName>
                    <ParamType>PropertyPath[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>projectedTypes</ParamName>
                    <ParamType>Class&lt;?&gt;[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>groupBy</ParamName>
                    <ParamType>PropertyPath[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortFields</ParamName>
                    <ParamType>SortField[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getQueryString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getParameterNames</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWhereClause</MethodName>
            <MethodComment>/** 
 * Returns the filter created while walking the parse tree.
 * @return the filter created while walking the parse tree
 */
</MethodComment>
            <ReturnType>BooleanExpr</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHavingClause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BooleanExpr</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTargetEntityName</MethodName>
            <MethodComment>/** 
 * Returns the original entity name as given in the query
 * @return the entity name of the query
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTargetEntityMetadata</MethodName>
            <MethodComment>/** 
 * Returns the entity type of the parsed query.
 * @return the entity type of the parsed query
 */
</MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProjections</MethodName>
            <MethodComment>/** 
 * Returns the projections of the parsed query, represented as dot paths in case of references to fields of embedded entities, e.g.  {@code ["foo", "bar.qaz"]}.
 * @return an array with the projections of the parsed query or null if the query has no projections
 */
</MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String[] [projections=new String[projectedPaths.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProjectedPaths</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PropertyPath[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProjectedTypes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;?&gt;[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasGroupingOrAggregations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGroupBy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PropertyPath[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSortFields</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SortField[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>