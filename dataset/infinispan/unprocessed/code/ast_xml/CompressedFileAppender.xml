<Class>
    <Id>33</Id>
    <Package>org.infinispan.util.logging.log4j</Package>
    <ClassName>CompressedFileAppender</ClassName>
    <SuperClass>AbstractOutputStreamAppender</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CompressedFileAppender  /** 
 * CompressedFile Appender.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DEFAULT_BUFFER_SIZE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>fileName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>advertiser</FieldName>
            <FieldType>Advertiser</FieldType>
        </Field>
        <Field>
            <FieldName>advertisement</FieldName>
            <FieldType>Object</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CompressedFileAppender</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>layout</ParamName>
                    <ParamType>? extends Serializable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>Filter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>manager</ParamName>
                    <ParamType>FileManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filename</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ignoreExceptions</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>immediateFlush</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>advertiser</ParamName>
                    <ParamType>Advertiser</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timeout</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timeUnit</ParamName>
                    <ParamType>TimeUnit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>changeLifeCycleState</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFileName</MethodName>
            <MethodComment>/** 
 * Returns the file name this appender is associated with.
 * @return The File name.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createAppender</MethodName>
            <MethodComment>/** 
 * Create a File Appender.
 * @param fileName The name and path of the file.
 * @param append "True" if the file should be appended to, "false" if it should be overwritten.The default is "true".
 * @param locking "True" if the file should be locked. The default is "false".
 * @param name The name of the Appender.
 * @param immediateFlush "true" if the contents should be flushed on every write, "false" otherwise. The defaultis "true".
 * @param ignore If {@code "true"} (default) exceptions encountered when appending events are logged; otherwisethey are propagated to the caller.
 * @param bufferedIo "true" if I/O should be buffered, "false" otherwise. The default is "true".
 * @param bufferSizeStr buffer size for buffered IO (default is 8192).
 * @param layout The layout to use to format the event. If no layout is provided the default PatternLayoutwill be used.
 * @param filter The filter, if any, to use.
 * @param advertise "true" if the appender configuration should be advertised, "false" otherwise.
 * @param advertiseUri The advertised URI which can be used to retrieve the file contents.
 * @param config The Configuration
 * @return The FileAppender.
 */
</MethodComment>
            <ReturnType>CompressedFileAppender</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>append</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>locking</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>immediateFlush</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ignore</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bufferedIo</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bufferSizeStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>layout</ParamName>
                    <ParamType>? extends Serializable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>Filter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>advertise</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>advertiseUri</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [isAppend=Booleans.parseBoolean(append,true)]</InnerVar>
                <InnerVar>boolean [isLocking=Boolean.parseBoolean(locking)]</InnerVar>
                <InnerVar>boolean [isBuffered=Booleans.parseBoolean(bufferedIo,true)]</InnerVar>
                <InnerVar>boolean [isAdvertise=Boolean.parseBoolean(advertise)]</InnerVar>
                <InnerVar>int [bufferSize=Integers.parseInt(bufferSizeStr,DEFAULT_BUFFER_SIZE)]</InnerVar>
                <InnerVar>boolean [isFlush=Booleans.parseBoolean(immediateFlush,true)]</InnerVar>
                <InnerVar>boolean [ignoreExceptions=Booleans.parseBoolean(ignore,true)]</InnerVar>
                <InnerVar>CompressedFileManager [manager=CompressedFileManager.getFileManager(fileName,isAppend,isLocking,isBuffered,advertiseUri,layout,bufferSize)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>