<Class>
    <Id>1061</Id>
    <Package>org.infinispan.counter.impl.manager</Package>
    <ClassName>EmbeddedCounterManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CounterManager</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EmbeddedCounterManager  /** 
 * A  {@link CounterManager} implementation for embedded cache manager.
 * @author Pedro Ruivo
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>WAIT_CACHES_TIMEOUT</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>counters</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>counters</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>future</FieldName>
            <FieldType>CompletableFuture</FieldType>
        </Field>
        <Field>
            <FieldName>future</FieldName>
            <FieldType>CacheHolder</FieldType>
        </Field>
        <Field>
            <FieldName>allowPersistence</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>notificationManager</FieldName>
            <FieldType>CounterManagerNotificationManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EmbeddedCounterManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>future</ParamName>
                    <ParamType>CacheHolder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>allowPersistence</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>injectExecutor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>Executor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>notificationManager;useExecutor;[executor]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tClass</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>retVal</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class&lt;?&gt; [rClass=retVal.getClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>extractCacheHolder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheHolder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>future</ParamName>
                    <ParamType>CacheHolder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createWeakCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WeakCounter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>CounterConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>holder</ParamName>
                    <ParamType>CacheHolder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>notificationManager</ParamName>
                    <ParamType>CounterManagerNotificationManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>WeakCounterImpl [counter=new WeakCounterImpl(counterName,holder.getCounterCache(configuration),configuration,notificationManager)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>counter;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createBoundedStrongCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StrongCounter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>CounterConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>holder</ParamName>
                    <ParamType>CacheHolder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>notificationManager</ParamName>
                    <ParamType>CounterManagerNotificationManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BoundedStrongCounter [counter=new BoundedStrongCounter(counterName,holder.getCounterCache(configuration),configuration,notificationManager)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>counter;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createUnboundedStrongCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StrongCounter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>CounterConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>holder</ParamName>
                    <ParamType>CacheHolder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>notificationManager</ParamName>
                    <ParamType>CounterManagerNotificationManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UnboundedStrongCounter [counter=new UnboundedStrongCounter(counterName,holder.getCounterCache(configuration),configuration,notificationManager)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>counter;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStrongCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StrongCounter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [counter=counters.computeIfAbsent(name,this::createCounter)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWeakCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WeakCounter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [counter=counters.computeIfAbsent(name,this::createCounter)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>defineCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>CounterConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheHolder [holder=extractCacheHolder(future)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;validateConfiguration;[configuration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDefined</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheHolder [holder=extractCacheHolder(future)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CounterConfiguration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheHolder [holder=extractCacheHolder(future)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheHolder [holder=extractCacheHolder(future)]</InnerVar>
                <InnerVar>CounterConfiguration [configuration=holder.getConfiguration(counterName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>holder;registerNotificationManager;[notificationManager]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>CounterConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>