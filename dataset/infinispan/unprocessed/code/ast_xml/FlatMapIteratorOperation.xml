<Class>
    <Id>3472</Id>
    <Package>org.infinispan.stream.impl.termop.object</Package>
    <ClassName>FlatMapIteratorOperation</ClassName>
    <SuperClass>BaseTerminalOperation</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>KeyTrackingTerminalOperation</SuperInterface>
        <SuperInterface>K</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FlatMapIteratorOperation  /** 
 * Terminal rehash aware operation that handles an iterator when a flat map intermediate operation was performed on the stream.  This is important due to the fact that we need to track what keys have been processed for the iterator. Since flat map can produce multiple values for the same key we need to handle that special so we can guarantee we are returning the keys properly and a rehash wouldn't lose some. This class assumes the stream is composed of  {@link java.util.Map.Entry} instances where the key is typed the sameas defined K type.
 * @param &lt; K &gt; key type
 * @param &lt; V &gt; resulting value type
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>batchSize</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FlatMapIteratorOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>intermediateOperations</ParamName>
                    <ParamType>IntermediateOperation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>supplier</ParamName>
                    <ParamType>Stream&lt;CacheEntry&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>batchSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lostSegment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stopIfLost</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>Collection&lt;V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performOperationRehashAware</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheEntry&lt;K,Collection&lt;V&gt;&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>Collection&lt;CacheEntry&lt;K,Collection&lt;V&gt;&gt;&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BaseStream&lt;?,?&gt; [stream=supplier.get().sequential()]</InnerVar>
                <InnerVar>List&lt;CacheEntry&lt;K,Collection&lt;V&gt;&gt;&gt; [collectedValues=new ArrayList(batchSize)]</InnerVar>
                <InnerVar>ByRef&lt;List&lt;V&gt;&gt; [currentList=new ByRef&lt;&gt;(new ArrayList&lt;&gt;())]</InnerVar>
                <InnerVar>ByRef&lt;K&gt; [currentKey=new ByRef&lt;&gt;(null)]</InnerVar>
                <InnerVar>Stream&lt;V&gt; [convertedStream=((Stream&lt;V&gt;)stream)]</InnerVar>
                <InnerVar>List&lt;V&gt; [lastList=currentList.get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>convertedStream;forEach;[v -&gt; {
  currentList.get().add(v);
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBatchSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>