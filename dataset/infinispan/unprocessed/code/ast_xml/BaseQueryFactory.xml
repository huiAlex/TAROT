<Class>
    <Id>2027</Id>
    <Package>org.infinispan.query.dsl.impl</Package>
    <ClassName>BaseQueryFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>QueryFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BaseQueryFactory  /** 
 * @author anistor@redhat.com
 * @since 6.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>having</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterConditionEndContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>having</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterConditionEndContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>Expression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>not</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterConditionBeginContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>not</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FilterConditionContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fcc</ParamName>
                    <ParamType>FilterConditionContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BaseCondition [baseCondition=((BaseCondition)fcc).getRoot()]</InnerVar>
                <InnerVar>NotCondition [notCondition=new NotCondition(this,baseCondition)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>baseCondition;setParent;[notCondition]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>