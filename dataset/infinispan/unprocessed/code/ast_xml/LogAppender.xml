<Class>
    <Id>3859</Id>
    <Package>org.infinispan.persistence.sifs</Package>
    <ClassName>LogAppender</ClassName>
    <SuperClass>Thread</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LogAppender  /** 
 * This component has the only thread that polls the queue with requests to write some entry into the cache store. It writes the records to append-only log files, inserts the entry position into TemporaryTable and queues the position to be persisted in Index.
 * @author Radim Vansa &amp;lt;rvansa@redhat.com&amp;gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>queue</FieldName>
            <FieldType>SyncProcessingQueue</FieldType>
        </Field>
        <Field>
            <FieldName>queue</FieldName>
            <FieldType>LogRequest</FieldType>
        </Field>
        <Field>
            <FieldName>indexQueue</FieldName>
            <FieldType>BlockingQueue</FieldType>
        </Field>
        <Field>
            <FieldName>indexQueue</FieldName>
            <FieldType>IndexRequest</FieldType>
        </Field>
        <Field>
            <FieldName>syncWrites</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>temporaryTable</FieldName>
            <FieldType>TemporaryTable</FieldType>
        </Field>
        <Field>
            <FieldName>maxFileSize</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>compactor</FieldName>
            <FieldType>Compactor</FieldType>
        </Field>
        <Field>
            <FieldName>fileProvider</FieldName>
            <FieldType>FileProvider</FieldType>
        </Field>
        <Field>
            <FieldName>pausedRequest</FieldName>
            <FieldType>LogRequest</FieldType>
        </Field>
        <Field>
            <FieldName>seqId</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LogAppender</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inboundQueue</ParamName>
                    <ParamType>LogRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexQueue</ParamName>
                    <ParamType>IndexRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>temporaryTable</ParamName>
                    <ParamType>TemporaryTable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compactor</ParamName>
                    <ParamType>Compactor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileProvider</ParamName>
                    <ParamType>FileProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>syncWrites</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxFileSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;setDaemon;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>null;start;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSeqId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seqId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogRequest [pause=LogRequest.pauseRequest()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>queue;pushAndWait;[pause]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearAndPause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogRequest [clear=LogRequest.clearRequest()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>queue;pushAndWait;[clear]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resumeAfterPause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pausedRequest;resume;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>raw</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextSeqId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stopOperations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>queue;pushAndWait;[LogRequest.stopRequest()]</InnerMethodInvoke>
                <InnerMethodInvoke>this;join;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>