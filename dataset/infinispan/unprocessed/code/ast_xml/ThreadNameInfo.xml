<Class>
    <Id>2744</Id>
    <Package>org.infinispan.factories.threads</Package>
    <ClassName>ThreadNameInfo</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ThreadNameInfo  /** 
 * @author Galder Zamarre√±o
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>globalThreadSequenceNum</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>perFactoryThreadSequenceNum</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>factorySequenceNum</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>node</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>component</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>searchPattern</FieldName>
            <FieldType>Pattern</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ThreadNameInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>globalThreadSequenceNum</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perFactoryThreadSequenceNum</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>factorySequenceNum</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>format</MethodName>
            <MethodComment>/** 
 * Format the thread name string. &lt;ul&gt; &lt;li&gt; {@code %%} - emit a percent sign&lt;/li&gt;&lt;li&gt; {@code %t} - emit the per-factory thread sequence number&lt;/li&gt;&lt;li&gt; {@code %g} - emit the global thread sequence number&lt;/li&gt;&lt;li&gt; {@code %f} - emit the factory sequence number&lt;/li&gt;&lt;li&gt; {@code %p} - emit the {@code ":"}-separated thread group path&lt;/li&gt; &lt;li&gt; {@code %i} - emit the thread ID&lt;/li&gt;&lt;li&gt; {@code %G} - emit the thread group name&lt;/li&gt;&lt;li&gt; {@code %n} - emit the node name&lt;/li&gt;&lt;li&gt; {@code %c} - emit the component name&lt;/li&gt;&lt;/ul&gt;
 * @param thread the thread
 * @param formatString the format string
 * @return the thread name string
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>thread</ParamName>
                    <ParamType>Thread</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>formatString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [builder=new StringBuilder(formatString.length() * 5)]</InnerVar>
                <InnerVar>ThreadGroup [group=thread.getThreadGroup()]</InnerVar>
                <InnerVar>Matcher [matcher=searchPattern.matcher(formatString)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>appendGroupPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>group</ParamName>
                    <ParamType>ThreadGroup</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ThreadGroup [parent=group.getParent()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder;append;[group.getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>