<Class>
    <Id>1838</Id>
    <Package>org.infinispan.commons.util</Package>
    <ClassName>RemovableIterator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Iterator</SuperInterface>
        <SuperInterface>C</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RemovableIterator  /** 
 * An Iterator implementation that allows for a Iterator that doesn't allow remove operations to implement remove by delegating the call to the provided consumer to remove the previously read value.
 * @author wburns
 * @since 9.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>realIterator</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>realIterator</FieldName>
            <FieldType>C</FieldType>
        </Field>
        <Field>
            <FieldName>consumer</FieldName>
            <FieldType>Consumer</FieldType>
        </Field>
        <Field>
            <FieldName>consumer</FieldName>
            <FieldType>? super C</FieldType>
        </Field>
        <Field>
            <FieldName>previousValue</FieldName>
            <FieldType>C</FieldType>
        </Field>
        <Field>
            <FieldName>currentValue</FieldName>
            <FieldType>C</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RemovableIterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>realIterator</ParamName>
                    <ParamType>C</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>consumer</ParamName>
                    <ParamType>? super C</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextFromIterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>C</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasNext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>C</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>consumer;accept;[previousValue]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>