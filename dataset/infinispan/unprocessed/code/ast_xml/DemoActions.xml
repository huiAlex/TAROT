<Class>
    <Id>1967</Id>
    <Package>org.infinispan.lucenedemo</Package>
    <ClassName>DemoActions</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DemoActions  /** 
 * DemoActions does some basic operations on the Lucene index, to be used by DemoDriver to show base operations on Lucene.
 * @author Sanne Grinovero
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>MAIN_FIELD</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>luceneVersion</FieldName>
            <FieldType>Version</FieldType>
        </Field>
        <Field>
            <FieldName>analyzer</FieldName>
            <FieldType>Analyzer</FieldType>
        </Field>
        <Field>
            <FieldName>index</FieldName>
            <FieldType>Directory</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Cache</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>?</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DemoActions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>Directory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listStoredValuesMatchingQuery</MethodName>
            <MethodComment>/** 
 * Runs a Query and returns the stored field for each matching document
 * @throws IOException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>Query</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listAllDocuments</MethodName>
            <MethodComment>/** 
 * Returns a list of the values of all stored fields
 * @throws IOException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MatchAllDocsQuery [q=new MatchAllDocsQuery()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addNewDocument</MethodName>
            <MethodComment>/** 
 * Creates a new document having just one field containing a string
 * @param line The text snippet to add
 * @throws IOException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>line</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IndexWriterConfig [config=makeIndexWriterConfig()]</InnerVar>
                <InnerVar>IndexWriter [iw=new IndexWriter(index,config)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeIndexWriterConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IndexWriterConfig</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseQuery</MethodName>
            <MethodComment>/** 
 * Parses a query using the single field as default
 * @throws ParseException
 */
</MethodComment>
            <ReturnType>Query</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryLine</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>QueryParser [parser=new QueryParser(MAIN_FIELD,analyzer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listAllMembers</MethodName>
            <MethodComment>/** 
 * Returns a list of Addresses of all members in the cluster
 */
</MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>EmbeddedCacheManager [cacheManager=cache.getCacheManager()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>