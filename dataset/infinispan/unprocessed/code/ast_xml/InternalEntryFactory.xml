<Class>
    <Id>604</Id>
    <Package>org.infinispan.container</Package>
    <ClassName>InternalEntryFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InternalEntryFactory  /** 
 * A factory for  {@link InternalCacheEntry} and {@link InternalCacheValue} instances.
 * @author Manik Surtani
 * @since 5.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link InternalCacheEntry} instance based on the key, value, version and timestamp/lifespaninformation reflected in the  {@link CacheEntry} instance passed in.
 * @param cacheEntry cache entry to copy
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link InternalCacheEntry} instance based on the version and timestamp/lifespaninformation reflected in the  {@link CacheEntry} instance passed in.  Key and value are both passed inexplicitly.
 * @param key key to use
 * @param value value to use
 * @param cacheEntry cache entry to retrieve version and timestamp/lifespan information from
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheEntry</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link InternalCacheEntry} instance
 * @param key key to use
 * @param value value to use
 * @param metadata metadata for entry
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link InternalCacheEntry} instance
 * @param key key to use
 * @param value value to use
 * @param metadata metadata for entry
 * @param lifespan lifespan to use
 * @param maxIdle maxIdle to use
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lifespan</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxIdle</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link InternalCacheEntry} instance
 * @param key key to use
 * @param value value to use
 * @param metadata metadata for entry
 * @param created creation timestamp to use
 * @param lifespan lifespan to use
 * @param lastUsed lastUsed timestamp to use
 * @param maxIdle maxIdle to use
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>created</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lifespan</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lastUsed</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxIdle</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Creates a new  {@link InternalCacheEntry} instance
 * @param key key to use
 * @param value value to use
 * @param version version to use
 * @param created creation timestamp to use
 * @param lifespan lifespan to use
 * @param lastUsed lastUsed timestamp to use
 * @param maxIdle maxIdle to use
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>version</ParamName>
                    <ParamType>EntryVersion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>created</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lifespan</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lastUsed</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxIdle</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>update</MethodName>
            <MethodComment>/** 
 * TODO: Adjust javadoc Updates an existing  {@link InternalCacheEntry} with new metadata.  This may result in a new{@link InternalCacheEntry} instance being created, as a different {@link InternalCacheEntry} implementationmay be more appropriate to suit the new metadata values.  As such, one should consider the  {@link InternalCacheEntry}passed in as a parameter as passed by value and not by reference.
 * @param cacheEntry original internal cache entry
 * @param metadata new metadata
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry instance
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>update</MethodName>
            <MethodComment>/** 
 * Similar to  {@link #update(org.infinispan.container.entries.InternalCacheEntry,org.infinispan.metadata.Metadata)}but it also updates the  {@link org.infinispan.container.entries.InternalCacheEntry} value.&lt;p/&gt; If the same internal cache entry is returned and if it is a mortal cache entry, the returned instance needs to be reincarnated.
 * @param cacheEntry original internal cache entry
 * @param value      new value
 * @param metadata   new metadata
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return a new InternalCacheEntry instance or the existing original
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createValue</MethodName>
            <MethodComment>/** 
 * Creates an  {@link InternalCacheValue} based on the {@link InternalCacheEntry} passed in.
 * @param cacheEntry to use to generate a {@link InternalCacheValue}
 * @param &lt; V &gt; The value type
 * @return an {@link InternalCacheValue}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheEntry</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>copy</MethodName>
            <MethodComment>/** 
 * Creates a copy of this cache entry and synchronizes serializes the copy process with the  {@link #update(org.infinispan.container.entries.InternalCacheEntry,org.infinispan.metadata.Metadata)}. This is requires so that readers of the entry will get an consistent snapshot of the value red.
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheEntry</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createL1</MethodName>
            <MethodComment>/** 
 * Creates a L1 entry.
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @param key
 * @param value @return a new {@link org.infinispan.container.entries.InternalCacheEntry}
 */
</MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValueFromCtxOrCreateNew</MethodName>
            <MethodComment>/** 
 * Retrieve an  {@link InternalCacheValue} from the provided {@link InvocationContext} if an {@link InternalCacheEntry}exists, otherwise create  {@link InternalCacheEntry} from the context's {@link CacheEntry} and return its value.
 * @param key the key of the entry to be retrieved
 * @param ctx the invocation context from which the value should be retrieved
 * @param &lt; K &gt; The key type for the entry
 * @param &lt; V &gt; The value type for the entry
 * @return an {@link InternalCacheValue}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>