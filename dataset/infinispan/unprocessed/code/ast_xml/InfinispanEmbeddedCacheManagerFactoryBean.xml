<Class>
    <Id>811</Id>
    <Package>org.infinispan.spring.support.embedded</Package>
    <ClassName>InfinispanEmbeddedCacheManagerFactoryBean</ClassName>
    <SuperClass>AbstractEmbeddedCacheManagerFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>FactoryBean</SuperInterface>
        <SuperInterface>EmbeddedCacheManager</SuperInterface>
        <SuperInterface>InitializingBean</SuperInterface>
        <SuperInterface>DisposableBean</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanEmbeddedCacheManagerFactoryBean  /** 
 * &lt;p&gt; A  {@link org.springframework.beans.factory.FactoryBean &lt;code&gt;FactoryBean&lt;/code&gt;} for creating an{@link org.infinispan.manager.EmbeddedCacheManager &lt;code&gt;Infinispan EmbeddedCacheManager&lt;/code&gt;}instance. The location of the Infinispan configuration file used to provide the default {@link org.infinispan.configuration.cache.Configuration configuration} for the&lt;code&gt;EmbeddedCacheManager&lt;/code&gt; instance created by this &lt;code&gt;FactoryBean&lt;/code&gt; is {@link #setConfigurationFileLocation(org.springframework.core.io.Resource) configurable}. &lt;/p&gt; &lt;p&gt; If no configuration file location is set the &lt;code&gt;EmbeddedCacheManager&lt;/code&gt; instance created by this &lt;code&gt;FactoryBean&lt;/code&gt; will use Infinispan's default settings. See Infinispan's &lt;a href="http://www.jboss.org/infinispan/docs"&gt;documentation&lt;/a&gt; for what those default settings are. &lt;/p&gt; &lt;p&gt; A user may further customize the &lt;code&gt;EmbeddedCacheManager&lt;/code&gt;'s configuration using explicit setters on this &lt;code&gt;FactoryBean&lt;/code&gt;. The properties thus defined will be applied either to the configuration loaded from Infinispan's configuration file in case one has been specified, or to a configuration initialized with Infinispan's default settings. Either way, the net effect is that explicitly set configuration properties take precedence over both those loaded from a configuration file as well as INFNISPAN's default settings. &lt;/p&gt; &lt;p&gt; In addition to creating an &lt;code&gt;EmbeddedCacheManager&lt;/code&gt; this &lt;code&gt;FactoryBean&lt;/code&gt; does also control that &lt;code&gt;EmbeddedCacheManagers&lt;/code&gt;'s  {@link org.infinispan.commons.api.Lifecycle lifecycle} by shutting it down when the enclosing Spring application context is closed. It istherefore advisable to &lt;em&gt;always&lt;/em&gt; use this &lt;code&gt;FactoryBean&lt;/code&gt; when creating an &lt;code&gt;EmbeddedCacheManager&lt;/code&gt;. &lt;/p&gt;
 * @author &lt;a href="mailto:olaf DOT bergner AT gmx DOT de"&gt;Olaf Bergner&lt;/a&gt;
 * @see #setConfigurationFileLocation(org.springframework.core.io.Resource)
 * @see #destroy()
 * @see org.infinispan.manager.EmbeddedCacheManager
 * @see org.infinispan.configuration.cache.Configuration
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cacheManager</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>afterPropertiesSet</MethodName>
            <MethodComment>/** 
 * @see org.springframework.beans.factory.InitializingBean#afterPropertiesSet()
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;["Initializing Infinispan EmbeddedCacheManager instance ..."]</InnerMethodInvoke>
                <InnerMethodInvoke>logger;info;["Successfully initialized Infinispan EmbeddedCacheManager instance [" + this.cacheManager + "]"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObject</MethodName>
            <MethodComment>/** 
 * @see org.springframework.beans.factory.FactoryBean#getObject()
 */
</MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectType</MethodName>
            <MethodComment>/** 
 * @see org.springframework.beans.factory.FactoryBean#getObjectType()
 */
</MethodComment>
            <ReturnType>? extends EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSingleton</MethodName>
            <MethodComment>/** 
 * Always returns &lt;code&gt;true&lt;/code&gt;.
 * @return Always &lt;code&gt;true&lt;/code&gt;
 * @see org.springframework.beans.factory.FactoryBean#isSingleton()
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>destroy</MethodName>
            <MethodComment>/** 
 * Shuts down the &lt;code&gt;EmbeddedCacheManager&lt;/code&gt; instance created by this &lt;code&gt;FactoryBean&lt;/code&gt;.
 * @see org.springframework.beans.factory.DisposableBean#destroy()
 * @see org.infinispan.manager.EmbeddedCacheManager#stop()
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>