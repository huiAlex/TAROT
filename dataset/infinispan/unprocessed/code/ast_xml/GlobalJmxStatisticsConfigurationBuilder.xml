<Class>
    <Id>281</Id>
    <Package>org.infinispan.configuration.global</Package>
    <ClassName>GlobalJmxStatisticsConfigurationBuilder</ClassName>
    <SuperClass>AbstractGlobalConfigurationBuilder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Builder</SuperInterface>
        <SuperInterface>GlobalJmxStatisticsConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GlobalJmxStatisticsConfigurationBuilder  /** 
 * Configures whether global statistics are gathered and reported via JMX for all caches under this cache manager.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>attributes</FieldName>
            <FieldType>AttributeSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>GlobalJmxStatisticsConfigurationBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>globalConfig</ParamName>
                    <ParamType>GlobalConfigurationBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withProperties</MethodName>
            <MethodComment>/** 
 * Sets properties which are then passed to the MBean Server Lookup implementation specified.
 * @param properties properties to pass to the MBean Server Lookup
 */
</MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(PROPERTIES);set;[new TypedProperties(properties)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addProperty</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypedProperties [properties=attributes.attribute(PROPERTIES).get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>properties;put;[key, value]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(PROPERTIES);set;[TypedProperties.toTypedProperties(properties)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jmxDomain</MethodName>
            <MethodComment>/** 
 * If JMX statistics are enabled then all 'published' JMX objects will appear under this name. This is optional, if not specified an object name will be created for you by default.
 * @param jmxDomain
 */
</MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jmxDomain</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(JMX_DOMAIN);set;[jmxDomain]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>allowDuplicateDomains</MethodName>
            <MethodComment>/** 
 * If true, multiple cache manager instances could be configured under the same configured JMX domain. Each cache manager will in practice use a different JMX domain that has been calculated based on the configured one by adding an incrementing index to it.
 * @param allowDuplicateDomains
 */
</MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allowDuplicateDomains</ParamName>
                    <ParamType>Boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(ALLOW_DUPLICATE_DOMAINS);set;[allowDuplicateDomains]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheManagerName</MethodName>
            <MethodComment>/** 
 * If JMX statistics are enabled, this property represents the name of this cache manager. It offers the possibility for clients to provide a user-defined name to the cache manager which later can be used to identify the cache manager within a JMX based management tool amongst other cache managers that might be running under the same JVM.
 * @param cacheManagerName
 */
</MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheManagerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(CACHE_MANAGER_NAME);set;[cacheManagerName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mBeanServerLookup</MethodName>
            <MethodComment>/** 
 * Sets the instance of the  {@link org.infinispan.jmx.MBeanServerLookup} class to be used to bound JMX MBeans to.
 * @param mBeanServerLookupInstance An instance of {@link org.infinispan.jmx.MBeanServerLookup}
 */
</MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mBeanServerLookupInstance</ParamName>
                    <ParamType>MBeanServerLookup</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(MBEAN_SERVER_LOOKUP);set;[mBeanServerLookupInstance]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;enabled;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;enabled;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enabled</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(ENABLED);set;[enabled]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalJmxStatisticsConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalJmxStatisticsConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>GlobalJmxStatisticsConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes;read;[template.attributes()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>