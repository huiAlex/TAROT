<Class>
    <Id>2261</Id>
    <Package>org.infinispan.server.core.security</Package>
    <ClassName>SaslUtils</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SaslUtils  /** 
 * Utility methods for handling SASL authentication
 * @author &lt;a href="mailto:david.lloyd@redhat.com"&gt;David M. Lloyd&lt;/a&gt;
 * @author Tristan Tarrant
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>SaslUtils</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSaslServerFactories</MethodName>
            <MethodComment>/** 
 * Returns an iterator of all of the registered  {@code SaslServerFactory}s where the order is based on the order of the Provider registration and/or class path order.  Class path providers are listed before global providers; in the event of a name conflict, the class path provider is preferred.
 * @param classLoader the class loader to use
 * @param includeGlobal {@code true} to include globally registered providers, {@code false} to exclude them
 * @return the {@code Iterator} of {@code SaslServerFactory}s
 */
</MethodComment>
            <ReturnType>SaslServerFactory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>includeGlobal</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSaslServerFactories</MethodName>
            <MethodComment>/** 
 * Returns an iterator of all of the registered  {@code SaslServerFactory}s where the order is based on the order of the Provider registration and/or class path order.
 * @return the {@code Iterator} of {@code SaslServerFactory}s
 */
</MethodComment>
            <ReturnType>SaslServerFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSaslClientFactories</MethodName>
            <MethodComment>/** 
 * Returns an iterator of all of the registered  {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order.  Class path providers are listed before global providers; in the event of a name conflict, the class path provider is preferred.
 * @param classLoader the class loader to use
 * @param includeGlobal {@code true} to include globally registered providers, {@code false} to exclude them
 * @return the {@code Iterator} of {@code SaslClientFactory}s
 */
</MethodComment>
            <ReturnType>SaslClientFactory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>includeGlobal</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSaslClientFactories</MethodName>
            <MethodComment>/** 
 * Returns an iterator of all of the registered  {@code SaslClientFactory}s where the order is based on the order of the Provider registration and/or class path order.
 * @return the {@code Iterator} of {@code SaslClientFactory}s
 */
</MethodComment>
            <ReturnType>SaslClientFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFactories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>includeGlobal</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;T&gt; [factories=new LinkedHashSet&lt;T&gt;()]</InnerVar>
                <InnerVar>ServiceLoader&lt;T&gt; [loader=ServiceLoader.load(type,classLoader)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>