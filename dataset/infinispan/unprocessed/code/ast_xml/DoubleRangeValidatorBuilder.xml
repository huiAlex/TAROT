<Class>
    <Id>2513</Id>
    <Package>org.infinispan.server.commons.controller.validation</Package>
    <ClassName>DoubleRangeValidatorBuilder</ClassName>
    <SuperClass>AbstractParameterValidatorBuilder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DoubleRangeValidatorBuilder  /** 
 * A builder for creating a range validator for  {@link ModelType#DOUBLE} parameters.
 * @author Paul Ferraro
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>upperBound</FieldName>
            <FieldType>Bound</FieldType>
        </Field>
        <Field>
            <FieldName>lowerBound</FieldName>
            <FieldType>Bound</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>exclusive</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>lowerBound</FieldName>
            <FieldType>Bound</FieldType>
        </Field>
        <Field>
            <FieldName>upperBound</FieldName>
            <FieldType>Bound</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>lowerBound</MethodName>
            <MethodComment>/** 
 * Sets an inclusive lower bound of this validator.
 * @param lowerBound the lower bound
 */
</MethodComment>
            <ReturnType>DoubleRangeValidatorBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lowerBoundExclusive</MethodName>
            <MethodComment>/** 
 * Sets an exclusive lower bound of this validator.
 * @param lowerBound the lower bound
 */
</MethodComment>
            <ReturnType>DoubleRangeValidatorBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>upperBound</MethodName>
            <MethodComment>/** 
 * Sets the inclusive upper bound of this validator.
 * @param upperBound the upper bound
 */
</MethodComment>
            <ReturnType>DoubleRangeValidatorBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>upperBoundExclusive</MethodName>
            <MethodComment>/** 
 * Sets the exclusive upper bound of this validator.
 * @param upperBound the upper bound
 */
</MethodComment>
            <ReturnType>DoubleRangeValidatorBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment>/** 
 * {@inheritDoc}
 */
</MethodComment>
            <ReturnType>ParameterValidator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Bound</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>exclusive</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isExclusive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DoubleRangeValidator</MethodName>
            <MethodComment>/** 
 * Creates an upper- and lower-bounded validator.
 * @param lowerBound the lower bound
 * @param lowerBound the upper bound
 * @param nullable indicates whether {@link ModelType#UNDEFINED} is allowed
 * @param allowExpressions whether {@link ModelType#EXPRESSION} is allowed
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lowerBound</ParamName>
                    <ParamType>Bound</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>upperBound</ParamName>
                    <ParamType>Bound</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nullable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>allowExpressions</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateParameter</MethodName>
            <MethodComment>/** 
 * {@inheritDoc}
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parameterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameterValue</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>