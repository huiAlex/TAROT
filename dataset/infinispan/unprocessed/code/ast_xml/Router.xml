<Class>
    <Id>816</Id>
    <Package>org.infinispan.server.router.router</Package>
    <ClassName>Router</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Router  /** 
 * The Router interface. Currently the Router is coupled closely with the the  {@link Protocol} it implements.
 * @author Sebastian ≈Åaskawiec
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment>/** 
 * Starts the  {@link Router}.
 * @param routingTable {@link RoutingTable} for supplying {@link org.infinispan.server.router.routes.Route}s.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>routingTable</ParamName>
                    <ParamType>RoutingTable</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Stops the  {@link Router}.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIp</MethodName>
            <MethodComment>/** 
 * Gets  {@link Router} IP address. This may return {@link Optional#empty()} if the {@link Router} is stopped.
 */
</MethodComment>
            <ReturnType>InetAddress</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPort</MethodName>
            <MethodComment>/** 
 * Gets  {@link Router} port. This may return {@link Optional#empty()} if the {@link Router} is stopped.
 */
</MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProtocol</MethodName>
            <MethodComment>/** 
 * Gets  {@link Protocol} implemented by this {@link Router}.
 */
</MethodComment>
            <ReturnType>Protocol</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>