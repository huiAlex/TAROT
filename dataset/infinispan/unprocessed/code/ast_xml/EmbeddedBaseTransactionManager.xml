<Class>
    <Id>220</Id>
    <Package>org.infinispan.transaction.tm</Package>
    <ClassName>EmbeddedBaseTransactionManager</ClassName>
    <SuperClass>TransactionManagerImpl</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EmbeddedBaseTransactionManager  /** 
 * A simple  {@link TransactionManager} implementation.&lt;p&gt; It provides the basic to handle  {@link Transaction}s and supports any  {@link javax.transaction.xa.XAResource}. &lt;p&gt; Implementation notes: &lt;ul&gt; &lt;li&gt;The state is kept in memory only.&lt;/li&gt; &lt;li&gt;Does not support recover.&lt;/li&gt; &lt;li&gt;Does not support multi-thread transactions. Although it is possible to execute the transactions in multiple threads, this transaction manager does not wait for them to complete. It is the application responsibility to wait before invoking {@link #commit()} or {@link #rollback()}&lt;/li&gt; &lt;li&gt;The transaction should not block. It is no possible to  {@link #setTransactionTimeout(int)} and this transaction manager won't rollback the transaction if it takes too long.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt; If you need any of the requirements above, please consider use another implementation. &lt;p&gt; Also, it does not implement any 1-phase-commit optimization.
 * @author Bela Ban
 * @author Pedro Ruivo
 * @since 9.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getTransactionManagerId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedTransaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedTransaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>