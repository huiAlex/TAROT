<Class>
    <Id>2992</Id>
    <Package>org.infinispan.stream.impl.termop</Package>
    <ClassName>SingleRunOperation</ClassName>
    <SuperClass>BaseTerminalOperation</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>TerminalOperation</SuperInterface>
        <SuperInterface>E</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SingleRunOperation  /** 
 * Runs the provided function once only and returns the result.  This is useful for operations that can be performed and its result is still valid even when a segment is lost.
 * @param &lt; E &gt; type of the output of the function
 * @param &lt; R &gt; type of the stream entries
 * @param &lt; S &gt; type of the stream itself
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>function</FieldName>
            <FieldType>Function</FieldType>
        </Field>
        <Field>
            <FieldName>function</FieldName>
            <FieldType>? super S2</FieldType>
        </Field>
        <Field>
            <FieldName>complete</FieldName>
            <FieldType>AtomicBoolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SingleRunOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>intermediateOperations</ParamName>
                    <ParamType>IntermediateOperation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>supplier</ParamName>
                    <ParamType>? extends BaseStream&lt;?,?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>? super S2</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lostSegment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stopIfLost</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>E</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>BaseStream&lt;?,?&gt; [stream=supplier.get()]</InnerVar>
                <InnerVar>E [value=function.apply((S2)stream)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>complete;set;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super S2</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>