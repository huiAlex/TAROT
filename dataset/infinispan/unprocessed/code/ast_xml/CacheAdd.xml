<Class>
    <Id>3356</Id>
    <Package>org.jboss.as.clustering.infinispan.subsystem</Package>
    <ClassName>CacheAdd</ClassName>
    <SuperClass>AbstractAddStepHandler</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RestartableServiceHandler</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheAdd  /** 
 * Base class for cache add handlers
 * @author Richard Achmatowicz (c) 2011 Red Hat Inc.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>mode</FieldName>
            <FieldType>CacheMode</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>ServiceName</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>I</FieldType>
        </Field>
        <Field>
            <FieldName>target</FieldName>
            <FieldType>Injector</FieldType>
        </Field>
        <Field>
            <FieldName>target</FieldName>
            <FieldType>I</FieldType>
        </Field>
        <Field>
            <FieldName>container</FieldName>
            <FieldType>Value</FieldType>
        </Field>
        <Field>
            <FieldName>container</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>recoveryRegistry</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>recoveryRegistry</FieldName>
            <FieldType>XAResourceRecoveryRegistry</FieldType>
        </Field>
        <Field>
            <FieldName>deployedCacheStoreFactory</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>deployedCacheStoreFactory</FieldName>
            <FieldType>DeployedCacheStoreFactory</FieldType>
        </Field>
        <Field>
            <FieldName>deployedTaskRegistry</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>deployedTaskRegistry</FieldName>
            <FieldType>ServerTaskRegistry</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheAdd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mode</ParamName>
                    <ParamType>CacheMode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populateModel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;populate;[operation, model]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performRuntime</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [cacheModel=Resource.Tools.readModel(context.readResource(PathAddress.EMPTY_ADDRESS))]</InnerVar>
                <InnerVar>PathAddress [containerAddress=getCacheContainerAddressFromOperation(operation)]</InnerVar>
                <InnerVar>ModelNode [containerModel=context.readResourceFromRoot(containerAddress).getModel()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;installRuntimeServices;[context, operation, containerModel, cacheModel]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>installRuntimeServices</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ServiceController&lt;?&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [cacheAddress=getCacheAddressFromOperation(operation)]</InnerVar>
                <InnerVar>PathAddress [containerAddress=getCacheContainerAddressFromOperation(operation)]</InnerVar>
                <InnerVar>String [cacheName=cacheAddress.getLastElement().getValue()]</InnerVar>
                <InnerVar>String [containerName=containerAddress.getLastElement().getValue()]</InnerVar>
                <InnerVar>String [configuration=CacheResource.CONFIGURATION.resolveModelAttribute(context,cacheModel).asString()]</InnerVar>
                <InnerVar>StartMode [startMode=StartMode.valueOf(CacheConfigurationResource.START.resolveModelAttribute(context,cacheModel).asString())]</InnerVar>
                <InnerVar>ServiceController.Mode [initialMode=startMode.getMode()]</InnerVar>
                <InnerVar>ServiceTarget [target=context.getServiceTarget()]</InnerVar>
                <InnerVar>Collection&lt;ServiceController&lt;?&gt;&gt; [controllers=new ArrayList&lt;&gt;(2)]</InnerVar>
                <InnerVar>ModelNode [resolvedValue=CacheConfigurationResource.JNDI_NAME.resolveModelAttribute(context,cacheModel)]</InnerVar>
                <InnerVar>String [jndiName=InfinispanJndiName.createCacheJndiName(resolvedValue.isDefined() ? resolvedValue.asString() : null,containerName,cacheName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>controllers;add;[this.installCacheService(target,containerName,cacheName,initialMode,configuration)]</InnerMethodInvoke>
                <InnerMethodInvoke>controllers;add;[this.installJndiService(target,containerName,cacheName,jndiName)]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debugf;["Cache service for cache %s installed for container %s", cacheName, containerName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeRuntimeServices</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [cacheAddress=getCacheAddressFromOperation(operation)]</InnerVar>
                <InnerVar>PathAddress [containerAddress=getCacheContainerAddressFromOperation(operation)]</InnerVar>
                <InnerVar>String [cacheName=cacheAddress.getLastElement().getValue()]</InnerVar>
                <InnerVar>String [containerName=containerAddress.getLastElement().getValue()]</InnerVar>
                <InnerVar>ModelNode [resolvedValue=CacheConfigurationResource.JNDI_NAME.resolveModelAttribute(context,cacheModel)]</InnerVar>
                <InnerVar>String [jndiName=InfinispanJndiName.createCacheJndiName(resolvedValue.isDefined() ? resolvedValue.asString() : null,containerName,cacheName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;removeService;[ContextNames.bindInfoFor(jndiName).getBinderServiceName()]</InnerMethodInvoke>
                <InnerMethodInvoke>context;removeService;[CacheServiceName.CACHE.getServiceName(containerName,cacheName)]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debugf;["cache %s removed for container %s", cacheName, containerName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheAddressFromOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathAddress</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheContainerAddressFromOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathAddress</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [cacheAddress=getCacheAddressFromOperation(operation)]</InnerVar>
                <InnerVar>PathAddress [containerAddress=cacheAddress.subAddress(0,cacheAddress.size() - 1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>installCacheService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>ServiceTarget</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initialMode</ParamName>
                    <ParamType>ServiceController.Mode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InjectedValue&lt;EmbeddedCacheManager&gt; [container=new InjectedValue&lt;&gt;()]</InnerVar>
                <InnerVar>CacheDependencies [cacheDependencies=new CacheDependencies(container)]</InnerVar>
                <InnerVar>Service&lt;Cache&lt;Object,Object&gt;&gt; [service=new CacheService&lt;&gt;(cacheName,configurationName,cacheDependencies)]</InnerVar>
                <InnerVar>ServiceBuilder&lt;?&gt; [builder=target.addService(CacheServiceName.CACHE.getServiceName(containerName,cacheName),service).addDependency(CacheServiceName.CONFIGURATION.getServiceName(containerName,configurationName)).addDependency(CacheContainerServiceName.CACHE_CONTAINER.getServiceName(containerName),EmbeddedCacheManager.class,container).setInitialMode(initialMode)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder;addDependency;[DeployedCacheStoreFactoryService.SERVICE_NAME, DeployedCacheStoreFactory.class, cacheDependencies.getDeployedCacheStoreFactoryInjector()]</InnerMethodInvoke>
                <InnerMethodInvoke>builder;addDependency;[ServerTaskRegistryService.SERVICE_NAME, ServerTaskRegistry.class, cacheDependencies.getDeployedTaskRegistryInjector()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>installJndiService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>ServiceTarget</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jndiName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ServiceName [cacheServiceName=CacheServiceName.CACHE.getServiceName(containerName,cacheName)]</InnerVar>
                <InnerVar>ContextNames.BindInfo [bindInfo=ContextNames.bindInfoFor(jndiName)]</InnerVar>
                <InnerVar>BinderService [binder=new BinderService(bindInfo.getBindName())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addDependency</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dependency</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ServiceName [name=dependency.getName()]</InnerVar>
                <InnerVar>Injector&lt;T&gt; [injector=dependency.getInjector()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populate</MethodName>
            <MethodComment>/** 
 * Transfer elements common to both operations and models
 * @param fromModel
 * @param toModel
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fromModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>toModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Dependency</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>ServiceName</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Dependency</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>ServiceName</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>I</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>I</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ServiceName</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>I</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInjector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>I</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CacheDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>container</ParamName>
                    <ParamType>EmbeddedCacheManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRecoveryRegistryInjector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>XAResourceRecoveryRegistry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeployedCacheStoreFactoryInjector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DeployedCacheStoreFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeployedTaskRegistryInjector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ServerTaskRegistry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeployedTaskRegistry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ServerTaskRegistry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheContainer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRecoveryRegistry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>XAResourceRecoveryRegistry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeployedCacheStoreFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheStoreFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>