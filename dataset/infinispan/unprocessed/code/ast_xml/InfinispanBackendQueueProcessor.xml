<Class>
    <Id>388</Id>
    <Package>org.infinispan.query.indexmanager</Package>
    <ClassName>InfinispanBackendQueueProcessor</ClassName>
    <SuperClass>WorkspaceHolder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanBackendQueueProcessor  /** 
 * Adaptor to implement the Hibernate Search contract of a BackendQueueProcessor while delegating to the cluster-aware components of Infinispan Query.
 * @author Sanne Grinovero &lt;sanne@hibernate.org&gt; (C) 2014 Red Hat Inc.
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>serviceManager</FieldName>
            <FieldType>ServiceManager</FieldType>
        </Field>
        <Field>
            <FieldName>indexName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>indexManager</FieldName>
            <FieldType>IndexManager</FieldType>
        </Field>
        <Field>
            <FieldName>forwardingBackend</FieldName>
            <FieldType>SwitchingBackend</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>props</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>WorkerBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexManager</ParamName>
                    <ParamType>IndexManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LocalBackendFactory [localBackendFactory=new SimpleLocalBackendFactory(indexManager,props,context)]</InnerVar>
                <InnerVar>CacheManagerService [cacheManagerService=serviceManager.requestService(CacheManagerService.class)]</InnerVar>
                <InnerVar>ComponentRegistryService [componentRegistryService=serviceManager.requestService(ComponentRegistryService.class)]</InnerVar>
                <InnerVar>ComponentRegistry [componentRegistry=componentRegistryService.getComponentRegistry()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;commandsBackendInitialized;[indexName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createForwardingBackend</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SwitchingBackend</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>props</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>componentRegistry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>localBackendFactory</ParamName>
                    <ParamType>LocalBackendFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheManagerService</ParamName>
                    <ParamType>CacheManagerService</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexManager</ParamName>
                    <ParamType>IndexManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RpcManager [rpcManager=componentRegistry.getComponent(RpcManager.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>forwardingBackend;shutdown;[]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceManager;releaseService;[CacheManagerService.class]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceManager;releaseService;[ComponentRegistryService.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyWork</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>workList</ParamName>
                    <ParamType>LuceneWork</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>monitor</ParamName>
                    <ParamType>IndexingMonitor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyStreamWork</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>singleOperation</ParamName>
                    <ParamType>LuceneWork</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>monitor</ParamName>
                    <ParamType>IndexingMonitor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>forwardingBackend.getCurrentIndexingBackend();applyStreamWork;[singleOperation, monitor, indexManager]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExclusiveWriteLock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Lock</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>indexMappingChanged</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isMasterLocal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>