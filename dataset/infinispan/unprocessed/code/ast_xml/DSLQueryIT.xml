<Class>
    <Id>2793</Id>
    <Package>org.infinispan.test.integration.as.query</Package>
    <ClassName>DSLQueryIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DSLQueryIT  /** 
 * Test for DSL queries when using the wildfly modules
 * @author gustavonalle
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>service</FieldName>
            <FieldType>GridService</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>deployment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>manifest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Asset</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [manifest=Descriptors.create(ManifestDescriptor.class).attribute("Dependencies","org.infinispan:" + Version.getModuleSlot() + " services, "+ "org.infinispan.query:"+ Version.getModuleSlot()+ " services, "+ "org.infinispan.query.dsl:"+ Version.getModuleSlot()).exportAsString()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testDSLQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Book&gt; [results=service.findByPublisher("manning")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>service;store;["00123", new Book("Functional Programming in Scala","manning",new Date()), true]</InnerMethodInvoke>
                <InnerMethodInvoke>Assert;assertEquals;[1, results.size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>