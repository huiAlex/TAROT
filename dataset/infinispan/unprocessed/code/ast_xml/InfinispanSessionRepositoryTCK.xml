<Class>
    <Id>3139</Id>
    <Package>org.infinispan.spring.session</Package>
    <ClassName>InfinispanSessionRepositoryTCK</ClassName>
    <SuperClass>AbstractInfinispanTest</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>springCache</FieldName>
            <FieldType>SpringCache</FieldType>
        </Field>
        <Field>
            <FieldName>sessionRepository</FieldName>
            <FieldType>AbstractInfinispanSessionRepository</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createSpringCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SpringCache</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRepository</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AbstractInfinispanSessionRepository</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>springCache</ParamName>
                    <ParamType>SpringCache</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testThrowingExceptionOnNullSpringCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;createRepository;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCreatingSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MapSession [session=sessionRepository.createSession()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertTrue;[session.getId() != null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[session.getCreationTime() != 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNull;[sessionRepository.getSession(session.getId())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSavingSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MapSession [session=sessionRepository.createSession()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sessionRepository;save;[session]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNotNull;[sessionRepository.getSession(session.getId())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdatingTTLOnAccessingData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MapSession [session=sessionRepository.createSession()]</InnerVar>
                <InnerVar>long [accessTimeBeforeSaving=session.getLastAccessedTime()]</InnerVar>
                <InnerVar>long [accessTimeAfterSaving=session.getLastAccessedTime()]</InnerVar>
                <InnerVar>long [accessTimeAfterAccessing=sessionRepository.getSession(session.getId()).getLastAccessedTime()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sessionRepository;save;[session]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[accessTimeBeforeSaving &gt; 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[accessTimeBeforeSaving &lt;= System.currentTimeMillis()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[accessTimeAfterSaving &gt; 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[accessTimeAfterSaving &lt;= System.currentTimeMillis()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[accessTimeAfterAccessing &gt; 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[accessTimeAfterAccessing &gt;= accessTimeAfterSaving]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testDeletingSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MapSession [session=sessionRepository.createSession()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sessionRepository;save;[session]</InnerMethodInvoke>
                <InnerMethodInvoke>sessionRepository;delete;[session.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertNull;[sessionRepository.getSession(session.getId())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testEvictingSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MapSession [session=sessionRepository.createSession()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setMaxInactiveIntervalInSeconds;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>sessionRepository;save;[session]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testExtractingPrincipalWithWrongIndexName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [sizeWithWrongIndexName=((FindByIndexNameSessionRepository)sessionRepository).findByIndexNameAndIndexValue("wrongIndexName","").size()]</InnerVar>
                <InnerVar>int [sizeWithNullIndexName=((FindByIndexNameSessionRepository)sessionRepository).findByIndexNameAndIndexValue(null,"").size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertTrue;[sizeWithNullIndexName == 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[sizeWithWrongIndexName == 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testExtractingPrincipal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [numberOfTest1Users=((FindByIndexNameSessionRepository)sessionRepository).findByIndexNameAndIndexValue(PRINCIPAL_NAME_INDEX_NAME,"test1").size()]</InnerVar>
                <InnerVar>int [numberOfNonExistingUsers=((FindByIndexNameSessionRepository)sessionRepository).findByIndexNameAndIndexValue(PRINCIPAL_NAME_INDEX_NAME,"notExisting").size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addEmptySessionWithPrincipal;[sessionRepository, "test1"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addEmptySessionWithPrincipal;[sessionRepository, "test2"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addEmptySessionWithPrincipal;[sessionRepository, "test3"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numberOfTest1Users == 1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numberOfNonExistingUsers == 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addEmptySessionWithPrincipal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sessionRepository</ParamName>
                    <ParamType>AbstractInfinispanSessionRepository</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>principalName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MapSession [session=sessionRepository.createSession()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setAttribute;[PRINCIPAL_NAME_INDEX_NAME, principalName]</InnerMethodInvoke>
                <InnerMethodInvoke>sessionRepository;save;[session]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>