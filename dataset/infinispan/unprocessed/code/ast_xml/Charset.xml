<Class>
    <Id>1210</Id>
    <Package>org.infinispan.rest.operations.mediatypes</Package>
    <ClassName>Charset</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Charset  /** 
 * Represents Charset. &lt;p&gt; Charsets are technically an optional part of a  {@link MediaType}. &lt;/p&gt;
 * @author Sebastian ≈Åaskawiec
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>UTF8</FieldName>
            <FieldType>Charset</FieldType>
        </Field>
        <Field>
            <FieldName>CHARSET_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>javaCharset</FieldName>
            <FieldType>java.nio.charset.Charset</FieldType>
        </Field>
        <Field>
            <FieldName>charset</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Charset</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>charset</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fromMediaType</MethodName>
            <MethodComment>/** 
 * Creates  {@link Charset} based on {@link MediaType} as string.
 * @param mediaType {@link MediaType} value.
 * @return Returns {@link Charset} value or &lt;code&gt;null&lt;/code&gt; if charset is not supported.
 */
</MethodComment>
            <ReturnType>Charset</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mediaType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [indexOfCharset=mediaType.indexOf(CHARSET_HEADER)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJavaCharset</MethodName>
            <MethodComment>/** 
 * Creates Java  {@link java.nio.charset.Charset} from this object.
 * @return Java {@link java.nio.charset.Charset} from this object.
 */
</MethodComment>
            <ReturnType>java.nio.charset.Charset</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>