<Class>
    <Id>2377</Id>
    <Package>org.infinispan.server.endpoint.subsystem</Package>
    <ClassName>ProtocolServerService</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Service</SuperInterface>
        <SuperInterface>ProtocolServer</SuperInterface>
        <SuperInterface>EncryptableService</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ProtocolServerService  /** 
 * The service that configures and starts the endpoints supported by data grid.
 * @author Tristan Tarrant
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cacheManager</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManager</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManagerConfiguration</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManagerConfiguration</FieldName>
            <FieldType>GlobalConfiguration</FieldType>
        </Field>
        <Field>
            <FieldName>socketBinding</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>socketBinding</FieldName>
            <FieldType>SocketBinding</FieldType>
        </Field>
        <Field>
            <FieldName>authenticationSecurityRealm</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>authenticationSecurityRealm</FieldName>
            <FieldType>SecurityRealm</FieldType>
        </Field>
        <Field>
            <FieldName>saslSecurityDomain</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>saslSecurityDomain</FieldName>
            <FieldType>SecurityDomainContext</FieldType>
        </Field>
        <Field>
            <FieldName>encryptionSecurityRealm</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>encryptionSecurityRealm</FieldName>
            <FieldType>SecurityRealm</FieldType>
        </Field>
        <Field>
            <FieldName>sniDomains</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>sniDomains</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>extensionManager</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>extensionManager</FieldName>
            <FieldType>ExtensionManagerService</FieldType>
        </Field>
        <Field>
            <FieldName>configurationBuilder</FieldName>
            <FieldType>ProtocolServerConfigurationBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>configurationBuilder</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>serverClass</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>serverClass</FieldName>
            <FieldType>? extends ProtocolServer</FieldType>
        </Field>
        <Field>
            <FieldName>protocolServer</FieldName>
            <FieldType>ProtocolServer</FieldType>
        </Field>
        <Field>
            <FieldName>transport</FieldName>
            <FieldType>Transport</FieldType>
        </Field>
        <Field>
            <FieldName>serverName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serverLoginContext</FieldName>
            <FieldType>LoginContext</FieldType>
        </Field>
        <Field>
            <FieldName>serverContextName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>defaultCacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>clientAuth</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ProtocolServerService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverClass</ParamName>
                    <ParamType>? extends ProtocolServer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationBuilder</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ProtocolServerService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverClass</ParamName>
                    <ParamType>? extends ProtocolServer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationBuilder</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultCacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [serverTypeName=serverClass.getSimpleName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>StartContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [done=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ROOT_LOGGER;endpointStarting;[serverName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StartException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSniEnabled</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addToExtensionManagerIfHotRod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeFromExtensionManagerIfHotRod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startProtocolServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>ProtocolServerConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtocolServer [server]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ROOT_LOGGER;connectorStarting;[serverName]</InnerMethodInvoke>
                <InnerMethodInvoke>configuration.ignoredCaches();forEach;[server::ignoreCache]</InnerMethodInvoke>
                <InnerMethodInvoke>SecurityActions;startProtocolServer;[server, configuration, getCacheManager().getValue()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StartException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>StopContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doStop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doStop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolServer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IllegalStateException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheManagerConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSocketBinding</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SocketBinding</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAuthenticationSecurityRealm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityRealm</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSaslSecurityDomain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityDomainContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEncryptionSecurityRealm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityRealm</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExtensionManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExtensionManagerService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransport</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transport</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSniSecurityRealm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityRealm</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sniHostName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSniConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServerName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setClientAuth</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClientAuth</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServerSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverSecurityDomain</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LoginContext [lc=new LoginContext(serverSecurityDomain)]</InnerVar>
                <InnerVar>Subject [serverSubject=serverLoginContext.getSubject()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lc;login;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setServerContextName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverContextName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>