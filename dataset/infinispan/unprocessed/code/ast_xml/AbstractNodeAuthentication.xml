<Class>
    <Id>1012</Id>
    <Package>org.infinispan.test.integration.security.embedded</Package>
    <ClassName>AbstractNodeAuthentication</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AbstractNodeAuthentication  /** 
 * @author &lt;a href="mailto:vjuranek@redhat.com"&gt;Vojtech Juranek&lt;/a&gt;
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>COORDINATOR_NODE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COORDINATOR_JGROUSP_CONFIG_MD5</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COORDINATOR_JGROUSP_CONFIG_MD5_USER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>JOINING_NODE_JGROUSP_CONFIG_MD5</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COORDINATOR_JGROUSP_CONFIG_KRB</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>JOINING_NODE_JGROUSP_CONFIG_KRB</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>JOINING_NODE_JGROUSP_CONFIG_KRB_FAIL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CACHE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_ITEM_KEY</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_ITEM_VALUE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TRUE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>krbProvided</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>controller</FieldName>
            <FieldType>ContainerController</FieldType>
        </Field>
        <Field>
            <FieldName>deployer</FieldName>
            <FieldType>Deployer</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>KerberosSystemPropertiesSetupTask</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>SecurityTraceLoggingServerSetupTask</FieldType>
        </Field>
        <Field>
            <FieldName>SECURITY_DOMAIN_PREFIX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>KEYTABS_DIR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>SecurityDomainsSetupTask</FieldType>
        </Field>
        <Field>
            <FieldName>krbLdapServer</FieldName>
            <FieldType>ApacheDsKrbLdap</FieldType>
        </Field>
        <Field>
            <FieldName>krbStarted</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>NODE0_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>NODE1_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>NODE1_FAIL_KEYTAB_FILE</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>keytabsGenerated</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getCoordinatorNodeConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJoiningNodeName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJoiningNodeConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AbstractNodeAuthentication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>krbProvided</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReplicatedCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>manager</ParamName>
                    <ParamType>EmbeddedCacheManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ConfigurationBuilder [cacheConfig=new ConfigurationBuilder()]</InnerVar>
                <InnerVar>Cache&lt;String,String&gt; [replicatedCache=manager.getCache(CACHE_NAME)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cacheConfig.transaction();lockingMode;[LockingMode.PESSIMISTIC]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheConfig.invocationBatching();enable;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheConfig.jmxStatistics();disable;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheConfig.clustering();cacheMode;[CacheMode.REPL_SYNC]</InnerMethodInvoke>
                <InnerMethodInvoke>manager;defineConfiguration;[CACHE_NAME, cacheConfig.build()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jgrousConfigFile</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GlobalConfigurationBuilder [globalConfig=new GlobalConfigurationBuilder()]</InnerVar>
                <InnerVar>EmbeddedCacheManager [manager=new DefaultCacheManager(globalConfig.build())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalConfig.globalJmxStatistics();disable;[]</InnerMethodInvoke>
                <InnerMethodInvoke>globalConfig.globalJmxStatistics();mBeanServerLookup;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>globalConfig.transport().defaultTransport();addProperty;["configurationFile", jgrousConfigFile]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>controller;start;[COORDINATOR_NODE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[controller.isStarted(COORDINATOR_NODE)]</InnerMethodInvoke>
                <InnerMethodInvoke>controller;start;[getJoiningNodeName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[controller.isStarted(getJoiningNodeName())]</InnerMethodInvoke>
                <InnerMethodInvoke>deployer;deploy;[COORDINATOR_NODE]</InnerMethodInvoke>
                <InnerMethodInvoke>deployer;deploy;[getJoiningNodeName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCreateItemOnCoordinator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Cache&lt;String,String&gt; [cache=getReplicatedCache(getCacheManager(getCoordinatorNodeConfig()))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cache;put;[TEST_ITEM_KEY, TEST_ITEM_VALUE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[TEST_ITEM_VALUE, cache.get(TEST_ITEM_KEY)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReadItemOnJoiningNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>EmbeddedCacheManager [manager=getCacheManager(getJoiningNodeConfig())]</InnerVar>
                <InnerVar>Cache&lt;String,String&gt; [cache=getReplicatedCache(manager)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertEquals;["Insufficient number of cluster members", 2, manager.getMembers().size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[TEST_ITEM_VALUE, cache.get(TEST_ITEM_KEY)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stopJoiningNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>deployer;undeploy;[getJoiningNodeName()]</InnerMethodInvoke>
                <InnerMethodInvoke>deployer;undeploy;[COORDINATOR_NODE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;[controller.isStarted(getJoiningNodeName())]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;[controller.isStarted(COORDINATOR_NODE)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModelControllerClient</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ModelControllerClient</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>params</ParamName>
                    <ParamType>ManagementClientParams</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getManagementClientListParams</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ManagementClientParams</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;ManagementClientParams&gt; [list=new ArrayList&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSystemProperties</MethodName>
            <MethodComment>/** 
 * Returns "java.security.krb5.conf" and "sun.security.krb5.debug" properties.
 * @return Kerberos properties
 */
</MethodComment>
            <ReturnType>SystemProperty[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;String,String&gt; [map=new HashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>map;put;["java.security.krb5.conf", "${java.io.tmpdir}" + File.separator + "krb5.conf"]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["java.security.krb5.debug", TRUE]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;[SecurityConstants.DISABLE_SECDOMAIN_OPTION, TRUE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCategories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSecurityDomains</MethodName>
            <MethodComment>/** 
 * Returns SecurityDomains configuration for this testcase.
 */
</MethodComment>
            <ReturnType>SecurityDomain[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SecurityDomain [krbNode0=getKrbSecurityDomain("node0",KEYTABS_DIR + "jgroups_node0_clustered.keytab","jgroups/node0/clustered@INFINISPAN.ORG")]</InnerVar>
                <InnerVar>SecurityDomain [krbNode1=getKrbSecurityDomain("node1",KEYTABS_DIR + "jgroups_node1_clustered.keytab","jgroups/node1/clustered@INFINISPAN.ORG")]</InnerVar>
                <InnerVar>SecurityDomain [krbFail=getKrbSecurityDomain("node1-fail",KEYTABS_DIR + "jgroups_node0_fail_clustered.keytab","jgroups/node1/clustered2@INFINISPAN.ORG")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKrbSecurityDomain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityDomain</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>principal</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SecurityModule.Builder [smBuilder=new SecurityModule.Builder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>smBuilder.putOption("principal",principal + "@INFINISPAN.ORG");putOption;["debug", TRUE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [hostname=Utils.getCannonicalHost(managementClient)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System;setProperty;["java.security.krb5.conf", System.getProperty("java.io.tmpdir") + File.separator + "krb5.conf"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>kerberosUsers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UserForKeyTab</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;UserForKeyTab&gt; [users=new ArrayList&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("jgroups/node0/clustered@INFINISPAN.ORG","node0password",NODE0_KEYTAB_FILE)]</InnerMethodInvoke>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("jgroups/node1/clustered@INFINISPAN.ORG","node1password",NODE1_KEYTAB_FILE)]</InnerMethodInvoke>
                <InnerMethodInvoke>users;add;[new UserForKeyTab("jgroups/node1/fail/clustered@INFINISPAN.ORG","failpassword",NODE1_FAIL_KEYTAB_FILE)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>