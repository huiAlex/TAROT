<Class>
    <Id>957</Id>
    <Package>org.infinispan.objectfilter.impl.ql</Package>
    <ClassName>QueryResolverDelegate</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>QueryResolverDelegate  /** 
 * Defines hooks for implementing custom logic when walking the parse tree of a JPQL query.
 * @author Gunnar Morling
 * @author anistor@redhat.com
 * @since 9.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>registerPersisterSpace</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entityName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerJoinAlias</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>TypeDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isUnqualifiedPropertyReference</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeUnqualifiedPropertyReference</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propertyNameTree</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPersisterReferenceAlias</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeUnqualifiedRoot</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>aliasTree</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeQualifiedRoot</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>root</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizePropertyPathIntermediary</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>TypeDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>propertyNameTree</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeIntermediateIndexOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propertyReference</ParamName>
                    <ParamType>TypeDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>collectionProperty</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>selector</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeTerminalIndexOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propertyReference</ParamName>
                    <ParamType>TypeDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>collectionProperty</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>selector</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeUnqualifiedPropertyReferenceSource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>identifier</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizePropertyPathTerminus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>TypeDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>propertyNameTree</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>activateFromStrategy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>joinType</ParamName>
                    <ParamType>JoinType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>associationFetchTree</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>propertyFetchTree</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>activateSelectStrategy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deactivateStrategy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>propertyPathCompleted</MethodName>
            <MethodComment>/** 
 * Notifies this delegate when parsing of a property path in the SELECT or WHERE is completed.
 * @param path the completely parsed property path
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>TypeDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>