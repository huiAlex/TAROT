<Class>
    <Id>528</Id>
    <Package>org.infinispan.server.test.jmx.suppress.statetransfer</Package>
    <ClassName>StateTransferSuppressIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StateTransferSuppressIT  /** 
 * Abstact class for testing state transfer suppress functionality
 * @author &lt;a href="mailto:amanukya@redhat.com"&gt;Anna Manukyan&lt;/a&gt;
 * @author &lt;a href="mailto:vchepeli@redhat.com"&gt;Vitalii Chepeliuk&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>CONTAINER1</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CONTAINER2</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CONTAINER3</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>NUMBER_ENTRIES</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CACHE_MANAGER_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MEMCACHED_CACHE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HOTROD_CACHE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HOTROD_DIST_CACHE_PREFIX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MEMCACHED_DIST_CACHE_PREFIX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HOTROD_RPC_MANAGER_MBEAN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MEMCACHED_RPC_MANAGER_MBEAN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REBALANCE_ENABLED_ATTR_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COMMITTED_VIEW_AS_STRING_ATTR_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PENDING_VIEW_AS_STRING_ATTR_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>OWNERS_2_MEMBERS_NODE1_NODE2</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>OWNERS_2_MEMBERS_NODE2_NODE3</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>OWNERS_2_MEMBERS_NODE1_NODE2_NODE3</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LOCAL_TOPOLOGY_MANAGER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>server1</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>server2</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>server3</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>controller</FieldName>
            <FieldType>ContainerController</FieldType>
        </Field>
        <Field>
            <FieldName>providers</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>providers</FieldName>
            <FieldType>MBeanServerConnectionProvider</FieldType>
        </Field>
        <Field>
            <FieldName>rcm1</FieldName>
            <FieldType>RemoteCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>rcm2</FieldName>
            <FieldType>RemoteCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>cache1</FieldName>
            <FieldType>RemoteCache</FieldType>
        </Field>
        <Field>
            <FieldName>cache2</FieldName>
            <FieldType>RemoteCache</FieldType>
        </Field>
        <Field>
            <FieldName>mc</FieldName>
            <FieldType>MemcachedClient</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>providers;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>providers;add;[new MBeanServerConnectionProvider(server1.getHotrodEndpoint().getInetAddress().getHostName(),SERVER1_MGMT_PORT)]</InnerMethodInvoke>
                <InnerMethodInvoke>providers;add;[new MBeanServerConnectionProvider(server1.getHotrodEndpoint().getInetAddress().getHostName(),SERVER2_MGMT_PORT)]</InnerMethodInvoke>
                <InnerMethodInvoke>providers;add;[new MBeanServerConnectionProvider(server1.getHotrodEndpoint().getInetAddress().getHostName(),SERVER3_MGMT_PORT)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>provider</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MBeanServerConnectionProvider</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheManagerName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>numEntries</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>server</ParamName>
                    <ParamType>RemoteInfinispanServer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testRebalanceWithFirstNodeStop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testRebalanceWithJoinedNodeStop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;verifyRebalanceWith3rdNode;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setAttribute;[provider(0), LOCAL_TOPOLOGY_MANAGER, REBALANCE_ENABLED_ATTR_NAME, false]</InnerMethodInvoke>
                <InnerMethodInvoke>controller;stop;[CONTAINER3]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRpcManagerStatistics;[new String[]{"null",OWNERS_2_MEMBERS_NODE1_NODE2}, OWNERS_2_MEMBERS_NODE1_NODE2, provider(0), provider(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRebalanceStatus;[false, provider(0), provider(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server1,HOTROD_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server2,HOTROD_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server1,MEMCACHED_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server2,MEMCACHED_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setAttribute;[provider(1), LOCAL_TOPOLOGY_MANAGER, REBALANCE_ENABLED_ATTR_NAME, true]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRebalanceStatus;[true, provider(0), provider(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRpcManagerStatistics;[new String[]{"null",OWNERS_2_MEMBERS_NODE1_NODE2}, OWNERS_2_MEMBERS_NODE1_NODE2, provider(0), provider(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server1,HOTROD_CACHE_NAME) == NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server2,HOTROD_CACHE_NAME) == NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server1,MEMCACHED_CACHE_NAME) == NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server2,MEMCACHED_CACHE_NAME) == NUMBER_ENTRIES]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>verifyRebalanceWith3rdNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setAttribute;[provider(0), LOCAL_TOPOLOGY_MANAGER, REBALANCE_ENABLED_ATTR_NAME, false]</InnerMethodInvoke>
                <InnerMethodInvoke>null;putDataIntoCache;[NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRebalanceStatus;[false, provider(0), provider(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRpcManagerStatistics;[new String[]{"null"}, OWNERS_2_MEMBERS_NODE1_NODE2, provider(0), provider(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>controller;start;[CONTAINER3]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRebalanceStatus;[false, provider(2)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRpcManagerStatistics;[new String[]{"null"}, OWNERS_2_MEMBERS_NODE1_NODE2, provider(0), provider(1), provider(2)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["The hotrod cache on server(2) should be empty.", numEntries(server3,HOTROD_CACHE_NAME) == 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["The memcached cache on server(2) should be empty.", numEntries(server3,MEMCACHED_CACHE_NAME) == 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setAttribute;[provider(0), LOCAL_TOPOLOGY_MANAGER, REBALANCE_ENABLED_ATTR_NAME, true]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRebalanceStatus;[true, provider(0), provider(1), provider(2)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRpcManagerStatistics;[new String[]{"null",OWNERS_2_MEMBERS_NODE1_NODE2_NODE3}, null, provider(0), provider(1), provider(2)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRpcManagerStatistics;[new String[]{"null"}, OWNERS_2_MEMBERS_NODE1_NODE2_NODE3, provider(0), provider(1), provider(2)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server1,HOTROD_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server2,HOTROD_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server3,HOTROD_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server1,MEMCACHED_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server2,MEMCACHED_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;[numEntries(server3,MEMCACHED_CACHE_NAME) &lt; NUMBER_ENTRIES]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRebalanceStatus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expectedStatus</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providers</ParamName>
                    <ParamType>MBeanServerConnectionProvider</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSatisfied</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRpcManagerStatistics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expectedPendingViews</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expectedCommitedView</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providers</ParamName>
                    <ParamType>MBeanServerConnectionProvider</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSatisfied</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [hotrodCommittedViewAsString=String.valueOf(getAttribute(provider,HOTROD_RPC_MANAGER_MBEAN,COMMITTED_VIEW_AS_STRING_ATTR_NAME))]</InnerVar>
                <InnerVar>String [memcachedCommittedViewAsString=String.valueOf(getAttribute(provider,MEMCACHED_RPC_MANAGER_MBEAN,COMMITTED_VIEW_AS_STRING_ATTR_NAME))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>putDataIntoCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertTrue;["The size of both caches should be equal.", cache1.size() == cache2.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[count, cache1.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[count, cache2.size()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>