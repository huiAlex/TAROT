<Class>
    <Id>2737</Id>
    <Package>org.infinispan.persistence.keymappers</Package>
    <ClassName>TwoWayKey2StringMapper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Key2StringMapper</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TwoWayKey2StringMapper  /** 
 * Extends  {@link Key2StringMapper} and allows a bidirectional transformation between keys and Strings.  Note that theobject instance created by  {@link #getKeyMapping(String)} is guaranteed to be &lt;i&gt;equal&lt;/i&gt; to the original objectused to generate the String, but not necessarily the same object reference. &lt;p /&gt; The following condition should be satisfied by implementations of this interface: &lt;code&gt; assert key.equals(mapper.getKeyMapping(mapper.getStringMapping(key))); &lt;/code&gt;
 * @author Mircea.Markus@jboss.com
 * @author Manik Surtani
 * @since 4.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getKeyMapping</MethodName>
            <MethodComment>/** 
 * Maps a String back to its original key
 * @param stringKey string representation of a key
 * @return an object instance that is &lt;i&gt;equal&lt;/i&gt; to the original object used to create the key mapping.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stringKey</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>