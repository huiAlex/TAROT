<Class>
    <Id>1991</Id>
    <Package>org.infinispan.jcache</Package>
    <ClassName>RIMBeanServerRegistrationUtility</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RIMBeanServerRegistrationUtility  /** 
 * A convenience class for registering CacheStatisticsMBeans with an MBeanServer.
 * @author Greg Luck
 * @since 1.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>objectName</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ObjectNameType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>RIMBeanServerRegistrationUtility</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerCacheObject</MethodName>
            <MethodComment>/** 
 * Utility method for registering CacheStatistics with the platform MBeanServer
 * @param cache the cache to register
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectNameType</ParamName>
                    <ParamType>ObjectNameType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MBeanServer [mBeanServer=cache.getMBeanServer()]</InnerVar>
                <InnerVar>ObjectName [registeredObjectName=calculateObjectName(cache,objectNameType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isRegistered</MethodName>
            <MethodComment>/** 
 * Checks whether an ObjectName is already registered.
 * @throws javax.cache.CacheException - all exceptions are wrapped inCacheException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectNameType</ParamName>
                    <ParamType>ObjectNameType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;ObjectName&gt; [registeredObjectNames]</InnerVar>
                <InnerVar>MBeanServer [mBeanServer=cache.getMBeanServer()]</InnerVar>
                <InnerVar>ObjectName [objectName=calculateObjectName(cache,objectNameType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregisterCacheObject</MethodName>
            <MethodComment>/** 
 * Removes registered CacheStatistics for a Cache
 * @throws javax.cache.CacheException - all exceptions are wrapped inCacheException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectNameType</ParamName>
                    <ParamType>ObjectNameType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;ObjectName&gt; [registeredObjectNames]</InnerVar>
                <InnerVar>MBeanServer [mBeanServer=cache.getMBeanServer()]</InnerVar>
                <InnerVar>ObjectName [objectName=calculateObjectName(cache,objectNameType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>calculateObjectName</MethodName>
            <MethodComment>/** 
 * Creates an object name using the scheme "javax.cache:type=Cache&amp;lt;Statistics|Configuration&amp;gt;,CacheManager=&amp;lt;cacheManagerName&amp;gt;,name=&amp;lt;cacheName&amp;gt;"
 */
</MethodComment>
            <ReturnType>ObjectName</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectNameType</ParamName>
                    <ParamType>ObjectNameType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [cacheManagerName=mbeanSafe(cache.getCacheManager().getURI().toString())]</InnerVar>
                <InnerVar>String [cacheName=mbeanSafe(cache.getName())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mbeanSafe</MethodName>
            <MethodComment>/** 
 * Filter out invalid ObjectName characters from string.
 * @param string input string
 * @return A valid JMX ObjectName attribute value.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>string</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>