<Class>
    <Id>2139</Id>
    <Package>org.infinispan.spring.session.configuration</Package>
    <ClassName>EnableInfinispanRemoteHttpSession</ClassName>
    <ClassComment>EnableInfinispanRemoteHttpSession  /** 
 * Add this annotation to a  {@code @Configuration} class to expose the SessionRepositoryFilter as a bean named"springSessionRepositoryFilter" and backed on Infinispan. &lt;p&gt; The configuration requires creating a  {@link org.infinispan.spring.provider.SpringCache} (for either remote orembedded configuration). Here's an example: &lt;pre&gt; &lt;code&gt; {@literal @Configuration}{@literal @EnableInfinispanRemoteHttpSession}public class InfinispanConfiguration { {@literal @Bean}public SpringRemoteCacheManagerFactoryBean springCache() { return new SpringRemoteCacheManagerFactoryBean(); } } &lt;/code&gt; &lt;/pre&gt; Configuring advanced features requires putting everything together manually or extending {@link InfinispanRemoteHttpSessionConfiguration}.
 * @author Sebastian ≈Åaskawiec
 * @see EnableSpringHttpSession
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DEFAULT_CACHE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList/>
</Class>