<Class>
    <Id>396</Id>
    <Package>org.infinispan.client.hotrod</Package>
    <ClassName>RemoteCacheContainer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BasicCacheContainer</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getConfiguration</MethodName>
            <MethodComment>/** 
 * Retrieves the configuration currently in use. The configuration object is immutable. If you wish to change configuration, you should use the following pattern: &lt;pre&gt;&lt;code&gt; ConfigurationBuilder builder = new ConfigurationBuilder(); builder.read(remoteCacheManager.getConfiguration()); // modify builder remoteCacheManager.stop(); remoteCacheManager = new RemoteCacheManager(builder.build()); &lt;/code&gt;&lt;/pre&gt;
 * @return The configuration of this RemoteCacheManager
 */
</MethodComment>
            <ReturnType>Configuration</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forceReturnValue</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>forceReturnValue</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isStarted</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>switchToCluster</MethodName>
            <MethodComment>/** 
 * Switch remote cache manager to a different cluster, previously declared via configuration. If the switch was completed successfully, this method returns  {@code true}, otherwise it returns  {@code false}.
 * @param clusterName name of the cluster to which to switch to
 * @return {@code true} if the cluster was switched, {@code false} otherwise
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clusterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>switchToDefaultCluster</MethodName>
            <MethodComment>/** 
 * Switch remote cache manager to a the default cluster, previously declared via configuration. If the switch was completed successfully, this method returns  {@code true}, otherwise it returns  {@code false}.
 * @return {@code true} if the cluster was switched, {@code false} otherwise
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMarshaller</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Marshaller</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>