<Class>
    <Id>2784</Id>
    <Package>org.infinispan.server.memcached</Package>
    <ClassName>TextProtocolUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TextProtocolUtil  /** 
 * Memcached text protocol utilities.
 * @author Galder Zamarre√±o
 * @since 4.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>CRLF</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CRLFBytes</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>END</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>END_SIZE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DELETED</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>NOT_FOUND</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>EXISTS</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>STORED</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>NOT_STORED</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>OK</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>CLIENT_ERROR_BAD_FORMAT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SERVER_ERROR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>VALUE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>VALUE_SIZE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ZERO</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>SP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_UNSIGNED_LONG</FieldName>
            <FieldType>BigInteger</FieldType>
        </Field>
        <Field>
            <FieldName>MIN_UNSIGNED</FieldName>
            <FieldType>BigInteger</FieldType>
        </Field>
        <Field>
            <FieldName>CHARSET</FieldName>
            <FieldType>Charset</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TextProtocolUtil</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readElement</MethodName>
            <MethodComment>/** 
 * In the particular case of Memcached, the end of operation/command is signaled by "\r\n" characters. So, if end of operation is found, this method would return true. On the contrary, if space was found instead of end of operation character, then it'd return the element and false.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>byteBuffer</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>extractString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>byteBuffer</ParamName>
                    <ParamType>ByteArrayOutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [string=new String(byteBuffer.toByteArray(),CHARSET)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>byteBuffer;reset;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readElement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sb</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readDiscardedLine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readableBytes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readDiscardedLine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sb</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>skipLine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>concat</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>a</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>b</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>byte[] [data=new byte[a.length + b.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System;arraycopy;[a, 0, data, 0, a.length]</InnerMethodInvoke>
                <InnerMethodInvoke>System;arraycopy;[b, 0, data, a.length, b.length]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSplitLine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;String&gt; [r=new ArrayList&lt;&gt;(3)]</InnerVar>
                <InnerVar>StringBuilder [sb=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>