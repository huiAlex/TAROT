<Class>
    <Id>2500</Id>
    <Package>org.infinispan.stream.impl</Package>
    <ClassName>KeyTrackingTerminalOperation</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>SegmentAwareOperation</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>KeyTrackingTerminalOperation  /** 
 * A terminal operation for a  {@link org.infinispan.CacheStream} that allows tracking keys during a rehash event.
 * @param &lt; K &gt; key type for the entry returned
 * @param &lt; R &gt; return type when not utilizing rehash aware
 * @param &lt; R2 &gt; value type for the entry returned
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>sendDataResonse</MethodName>
            <MethodComment>/** 
 * Called back when a response is sent back to the invoker
 * @param response the returned data
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>C</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performOperation</MethodName>
            <MethodComment>/** 
 * Invoked when a key aware operation is desired without rehash being enabled.
 * @param response the collector that will be called back for any intermediate results
 * @return the final response from the remote node
 */
</MethodComment>
            <ReturnType>R</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>Collection&lt;R&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performOperationRehashAware</MethodName>
            <MethodComment>/** 
 * Invoked when a key and rehash aware operation is desired.
 * @param response the collector that will be called back for any intermediate results
 * @return the final response from the remote node
 */
</MethodComment>
            <ReturnType>CacheEntry&lt;K,R2&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>Collection&lt;CacheEntry&lt;K,R2&gt;&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSupplier</MethodName>
            <MethodComment>/** 
 * This method is to be invoked only locally after a key tracking operation has been serialized to a new node
 * @param supplier the supplier to use
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>supplier</ParamName>
                    <ParamType>? extends Stream&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleInjection</MethodName>
            <MethodComment>/** 
 * Handles injection of components for various intermediate and this operation.
 * @param registry component registry to use
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>