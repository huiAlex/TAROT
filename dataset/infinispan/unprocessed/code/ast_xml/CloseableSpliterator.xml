<Class>
    <Id>1969</Id>
    <Package>org.infinispan.commons.util</Package>
    <ClassName>CloseableSpliterator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Spliterator</SuperInterface>
        <SuperInterface>T</SuperInterface>
        <SuperInterface>AutoCloseable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CloseableSpliterator  /** 
 * Interface that provides semantics of a  {@link Spliterator} and {@link AutoCloseable} interfaces.  This isuseful when you have data that can be splitted and may hold resources in the underlying implementation that must be closed. &lt;p&gt;A spliterator split from this is not closeable.  Only the original  {@link CloseableSpliterator} isrequired to be closed&lt;/p&gt; &lt;p&gt;Some implementations may close resources automatically when the spliterator is exhausted however this is an implementation detail and all callers should call  {@link AutoCloseable#close()} method to besure all resources are freed properly.&lt;/p&gt;
 * @since 8.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>