<Class>
    <Id>2697</Id>
    <Package>org.infinispan.commons.io</Package>
    <ClassName>ByteBuffer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ByteBuffer  /** 
 * A byte buffer that exposes the internal byte array with minimal copying. To be instantiated with  {@link ByteBufferFactory}.
 * @author Mircea Markus
 * @since 6.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getBuf</MethodName>
            <MethodComment>/** 
 * Returns the underlying buffer.
 */
</MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOffset</MethodName>
            <MethodComment>/** 
 * Returns the offset within the underlying byte[] (as returned by  {@link #getBuf()} owned by this buffer instance.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLength</MethodName>
            <MethodComment>/** 
 * Length bytes, starting from offset, within the underlying byte[] (as returned by  {@link #getBuf()} are ownedby this buffer instance.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>copy</MethodName>
            <MethodComment>/** 
 * Returns a new byte[] instance of size  {@link #getLength()} that contains all the bytes owned by this buffer.
 */
</MethodComment>
            <ReturnType>ByteBuffer</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>