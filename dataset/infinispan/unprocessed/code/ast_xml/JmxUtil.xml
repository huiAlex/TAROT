<Class>
    <Id>3940</Id>
    <Package>org.infinispan.jmx</Package>
    <ClassName>JmxUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JmxUtil  /** 
 * Class containing JMX related utility methods.
 * @author Galder Zamarre√±o
 * @since 5.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>lookupMBeanServer</MethodName>
            <MethodComment>/** 
 * Looks up the  {@link javax.management.MBeanServer} instance based on theconfiguration parameters.
 * @param cfg configuration instance indicating how to lookupthe  {@link javax.management.MBeanServer}
 * @return an instance of {@link javax.management.MBeanServer}
 */
</MethodComment>
            <ReturnType>MBeanServer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>GlobalConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MBeanServerLookup [lookup=cfg.globalJmxStatistics().mbeanServerLookup()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildJmxDomain</MethodName>
            <MethodComment>/** 
 * Build the JMX domain name.
 * @param cfg configuration instance containig rules on JMX domains allowed
 * @param mBeanServer the {@link javax.management.MBeanServer} where tocheck whether the JMX domain is allowed or not.
 * @param groupName String containing the group name for the JMX MBean
 * @return A string that combines the allowed JMX domain and the group name
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>GlobalConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mBeanServer</ParamName>
                    <ParamType>MBeanServer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>groupName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [jmxDomain=findJmxDomain(cfg.globalJmxStatistics().domain(),mBeanServer,groupName)]</InnerVar>
                <InnerVar>String [configJmxDomain=cfg.globalJmxStatistics().domain()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerMBean</MethodName>
            <MethodComment>/** 
 * Register the given dynamic JMX MBean.
 * @param mbean Dynamic MBean to register
 * @param objectName {@link javax.management.ObjectName} under which to register the MBean.
 * @param mBeanServer {@link javax.management.MBeanServer} where to store the MBean.
 * @throws Exception If registration could not be completed.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mbean</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectName</ParamName>
                    <ParamType>ObjectName</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mBeanServer</ParamName>
                    <ParamType>MBeanServer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregisterMBean</MethodName>
            <MethodComment>/** 
 * Unregister the MBean located under the given  {@link javax.management.ObjectName}
 * @param objectName {@link javax.management.ObjectName} where the MBean is registered
 * @param mBeanServer {@link javax.management.MBeanServer} from which to unregister the MBean.
 * @throws Exception If unregistration could not be completed.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectName</ParamName>
                    <ParamType>ObjectName</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mBeanServer</ParamName>
                    <ParamType>MBeanServer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregisterMBeans</MethodName>
            <MethodComment>/** 
 * Unregister all mbeans whose object names match a given filter.
 * @param filter ObjectName-style formatted filter
 * @param mBeanServer mbean server from which to unregister mbeans
 * @return number of mbeans unregistered
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mBeanServer</ParamName>
                    <ParamType>MBeanServer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findJmxDomain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jmxDomain</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mBeanServer</ParamName>
                    <ParamType>MBeanServer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>groupName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [index=2]</InnerVar>
                <InnerVar>String [finalName=jmxDomain]</InnerVar>
                <InnerVar>boolean [done=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>