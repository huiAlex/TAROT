<Class>
    <Id>298</Id>
    <Package>org.infinispan.notifications.cachelistener.cluster</Package>
    <ClassName>ClusterCacheNotifier</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CacheNotifier</SuperInterface>
        <SuperInterface>K</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ClusterCacheNotifier  /** 
 * This interface describes methods required for a cluster listener to be able to be bootstrapped and properly notified when a new event has been raised from the cluster.
 * @author wburns
 * @since 7.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>notifyClusterListeners</MethodName>
            <MethodComment>/** 
 * Method that is invoked on the node that has the given cluster listener that when registered generated the given listenerId.  Note this will notify only cluster listeners and regular listeners are not notified of the events. Will fire the events in the order of the iteration of the collection.
 * @param events
 * @param listenerId
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>events</ParamName>
                    <ParamType>? extends CacheEntryEvent&lt;K,V&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listenerId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>retrieveClusterListenerCallablesToInstall</MethodName>
            <MethodComment>/** 
 * This method is invoked so that this node can send the details required for a new node to be bootstrapped with the existing cluster listeners that are already installed.
 * @return A collection of callables that should be invoked on the new node to properly install cluster listener information
 */
</MethodComment>
            <ReturnType>DistributedCallable</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>