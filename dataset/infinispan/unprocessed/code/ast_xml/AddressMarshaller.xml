<Class>
    <Id>4101</Id>
    <Package>org.infinispan.client.hotrod.query.testdomain.protobuf.marshallers</Package>
    <ClassName>AddressMarshaller</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>MessageMarshaller</SuperInterface>
        <SuperInterface>AddressPB</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AddressMarshaller  /** 
 * @author anistor@redhat.com
 * @since 7.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getTypeName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJavaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AddressPB</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readFrom</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AddressPB</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>ProtoStreamReader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [street=reader.readString("street")]</InnerVar>
                <InnerVar>String [postCode=reader.readString("postCode")]</InnerVar>
                <InnerVar>int [number=reader.readInt("number")]</InnerVar>
                <InnerVar>Boolean [isCommercial=reader.readBoolean("isCommercial")]</InnerVar>
                <InnerVar>AddressPB [address=new AddressPB()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>address;setStreet;[street]</InnerMethodInvoke>
                <InnerMethodInvoke>address;setPostCode;[postCode]</InnerMethodInvoke>
                <InnerMethodInvoke>address;setNumber;[number]</InnerMethodInvoke>
                <InnerMethodInvoke>address;setCommercial;[isCommercial]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeTo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>ProtoStreamWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>AddressPB</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writer;writeString;["street", address.getStreet()]</InnerMethodInvoke>
                <InnerMethodInvoke>writer;writeString;["postCode", address.getPostCode()]</InnerMethodInvoke>
                <InnerMethodInvoke>writer;writeInt;["number", address.getNumber()]</InnerMethodInvoke>
                <InnerMethodInvoke>writer;writeBoolean;["isCommercial", address.isCommercial()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>