<Class>
    <Id>1866</Id>
    <Package>org.infinispan.factories.components</Package>
    <ClassName>ModuleMetadataFileFinder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ModuleMetadataFileFinder  /** 
 * This interface should be implemented by all Infinispan modules that expect to have components using  {@link Inject}, {@link Start} or {@link Stop} annotations.  The metadata file is generated at build time and packaged in the module'scorresponding jar file (see Infinispan's &lt;pre&gt;core&lt;/pre&gt; module &lt;pre&gt;pom.xml&lt;/pre&gt; for an example of this). &lt;p /&gt; Module component metadata is usually generated in a file titled &lt;pre&gt;${module-name}-component-metadata.dat&lt;/pre&gt; and typically resides in the root of the module's jar file. &lt;p /&gt; For example, Infinispan's Query Module would implement this interface to return &lt;pre&gt;infinispan-query-component-metadata.dat&lt;/pre&gt;. &lt;p /&gt; Implementations of this interface are discovered using the JDK's  {@link java.util.ServiceLoader} utility.  Which meansmodules would also have to package a file called &lt;pre&gt;org.infinispan.factories.components.ModuleMetadataFileFinder&lt;/pre&gt; in the &lt;pre&gt;META-INF/services/&lt;/pre&gt; folder in their jar, and this file would contain the fully qualified class name of the module's implementation of this interface. &lt;p /&gt; Please see Infinispan's query module for an example of this.
 * @author Manik Surtani
 * @since 5.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getMetadataFilename</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>