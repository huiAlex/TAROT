<Class>
    <Id>2383</Id>
    <Package>org.infinispan.client.hotrod.configuration</Package>
    <ClassName>ConnectionPoolConfigurationBuilder</ClassName>
    <SuperClass>AbstractConfigurationChildBuilder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Builder</SuperInterface>
        <SuperInterface>ConnectionPoolConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConnectionPoolConfigurationBuilder  /** 
 * ConnectionPoolConfigurationBuilder. Specifies connection pooling properties for the HotRod client.
 * @author Tristan Tarrant
 * @since 5.3
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>exhaustedAction</FieldName>
            <FieldType>ExhaustedAction</FieldType>
        </Field>
        <Field>
            <FieldName>lifo</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>maxActive</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>maxTotal</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>maxWait</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>maxIdle</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>minIdle</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>timeBetweenEvictionRuns</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>minEvictableIdleTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>numTestsPerEvictionRun</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>testOnBorrow</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testOnReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testWhileIdle</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ConnectionPoolConfigurationBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>ConfigurationBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exhaustedAction</MethodName>
            <MethodComment>/** 
 * Specifies what happens when asking for a connection from a server's pool, and that pool is exhausted.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exhaustedAction</ParamName>
                    <ParamType>ExhaustedAction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lifo</MethodName>
            <MethodComment>/** 
 * Sets the LIFO status. True means that borrowObject returns the most recently used ("last in") idle object in a pool (if there are idle instances available). False means that pools behave as FIFO queues - objects are taken from idle object pools in the order that they are returned. The default setting is true
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxActive</MethodName>
            <MethodComment>/** 
 * Controls the maximum number of connections per server that are allocated (checked out to client threads, or idle in the pool) at one time. When non-positive, there is no limit to the number of connections per server. When maxActive is reached, the connection pool for that server is said to be exhausted. The default setting for this parameter is -1, i.e. there is no limit.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>maxActive</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxTotal</MethodName>
            <MethodComment>/** 
 * Sets a global limit on the number persistent connections that can be in circulation within the combined set of servers. When non-positive, there is no limit to the total number of persistent connections in circulation. When maxTotal is exceeded, all connections pools are exhausted. The default setting for this parameter is -1 (no limit).
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>maxTotal</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxWait</MethodName>
            <MethodComment>/** 
 * The amount of time in milliseconds to wait for a connection to become available when the exhausted action is  {@link ExhaustedAction#WAIT}, after which a  {@link java.util.NoSuchElementException}will be thrown. If a negative value is supplied, the pool will block indefinitely.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>maxWait</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxIdle</MethodName>
            <MethodComment>/** 
 * Controls the maximum number of idle persistent connections, per server, at any time. When negative, there is no limit to the number of connections that may be idle per server. The default setting for this parameter is -1.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>maxIdle</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>minIdle</MethodName>
            <MethodComment>/** 
 * Sets a target value for the minimum number of idle connections (per server) that should always be available. If this parameter is set to a positive number and timeBetweenEvictionRunsMillis &gt; 0, each time the idle connection eviction thread runs, it will try to create enough idle instances so that there will be minIdle idle instances available for each server. The default setting for this parameter is 1.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>minIdle</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>numTestsPerEvictionRun</MethodName>
            <MethodComment>/** 
 * Indicates the maximum number of connections to test during idle eviction runs. The default setting is 3.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>numTestsPerEvictionRun</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>timeBetweenEvictionRuns</MethodName>
            <MethodComment>/** 
 * Indicates how long the eviction thread should sleep before "runs" of examining idle connections. When non-positive, no eviction thread will be launched. The default setting for this parameter is 2 minutes.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timeBetweenEvictionRuns</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>minEvictableIdleTime</MethodName>
            <MethodComment>/** 
 * Specifies the minimum amount of time that an connection may sit idle in the pool before it is eligible for eviction due to idle time. When non-positive, no connection will be dropped from the pool due to idle time alone. This setting has no effect unless timeBetweenEvictionRunsMillis &gt; 0. The default setting for this parameter is 1800000(30 minutes).
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>minEvictableIdleTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testOnBorrow</MethodName>
            <MethodComment>/** 
 * Indicates whether connections should be validated before being taken from the pool by sending an TCP packet to the server. Connections that fail to validate will be dropped from the pool. The default setting for this parameter is false.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testOnBorrow</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testOnReturn</MethodName>
            <MethodComment>/** 
 * Indicates whether connections should be validated when being returned to the pool sending an TCP packet to the server. Connections that fail to validate will be dropped from the pool. The default setting for this parameter is false.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testOnReturn</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testWhileIdle</MethodName>
            <MethodComment>/** 
 * Indicates whether or not idle connections should be validated by sending an TCP packet to the server, during idle connection eviction runs. Connections that fail to validate will be dropped from the pool. This setting has no effect unless timeBetweenEvictionRunsMillis &gt; 0. The default setting for this parameter is true.
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testWhileIdle</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withPoolProperties</MethodName>
            <MethodComment>/** 
 * Configures the connection pool parameter according to properties
 */
</MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypedProperties [typed=TypedProperties.toTypedProperties(properties)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;exhaustedAction;[ExhaustedAction.values()[typed.getIntProperty("whenExhaustedAction",exhaustedAction.ordinal(),true)]]</InnerMethodInvoke>
                <InnerMethodInvoke>null;lifo;[typed.getBooleanProperty("lifo",lifo,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;maxActive;[typed.getIntProperty("maxActive",maxActive,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;maxTotal;[typed.getIntProperty("maxTotal",maxTotal,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;maxWait;[typed.getLongProperty("maxWait",maxWait,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;maxIdle;[typed.getIntProperty("maxIdle",maxIdle,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;minIdle;[typed.getIntProperty("minIdle",minIdle,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;numTestsPerEvictionRun;[typed.getIntProperty("numTestsPerEvictionRun",numTestsPerEvictionRun,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;timeBetweenEvictionRuns;[typed.getLongProperty("timeBetweenEvictionRunsMillis",timeBetweenEvictionRuns,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;minEvictableIdleTime;[typed.getLongProperty("minEvictableIdleTimeMillis",minEvictableIdleTime,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;testOnBorrow;[typed.getBooleanProperty("testOnBorrow",testOnBorrow,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;testOnReturn;[typed.getBooleanProperty("testOnReturn",testOnReturn,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;testWhileIdle;[typed.getBooleanProperty("testWhileIdle",testWhileIdle,true)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConnectionPoolConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConnectionPoolConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>ConnectionPoolConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>