<Class>
    <Id>2763</Id>
    <Package>org.infinispan.test.fwk</Package>
    <ClassName>JGroupsConfigBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JGroupsConfigBuilder  /** 
 * This class owns the logic of associating network resources(i.e. ports) with threads, in order to make sure that there won't be any clashes between multiple clusters running in parallel on same host. Used for parallel test suite.
 * @author Mircea.Markus@jboss.com
 * @author Galder Zamarre√±o
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>JGROUPS_STACK</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tcpConfigurator</FieldName>
            <FieldType>ProtocolStackConfigurator</FieldType>
        </Field>
        <Field>
            <FieldName>udpConfigurator</FieldName>
            <FieldType>ProtocolStackConfigurator</FieldType>
        </Field>
        <Field>
            <FieldName>TCP_PORT_RANGE_PER_THREAD</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>threadTcpStartPort</FieldName>
            <FieldType>ThreadLocal</FieldType>
        </Field>
        <Field>
            <FieldName>threadTcpStartPort</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>uniqueAddr</FieldName>
            <FieldType>AtomicInteger</FieldType>
        </Field>
        <Field>
            <FieldName>threadMcastIP</FieldName>
            <FieldType>ThreadLocal</FieldType>
        </Field>
        <Field>
            <FieldName>threadMcastIP</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>uniqueAddr</FieldName>
            <FieldType>AtomicInteger</FieldType>
        </Field>
        <Field>
            <FieldName>threadMcastPort</FieldName>
            <FieldType>ThreadLocal</FieldType>
        </Field>
        <Field>
            <FieldName>threadMcastPort</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>uniquePort</FieldName>
            <FieldType>AtomicInteger</FieldType>
        </Field>
        <Field>
            <FieldName>protoMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>protoMap</FieldName>
            <FieldType>ProtocolType</FieldType>
        </Field>
        <Field>
            <FieldName>configurator</FieldName>
            <FieldType>XmlConfigurator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>initialValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJGroupsConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullTestName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>flags</ParamName>
                    <ParamType>TransportFlags</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTcpConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullTestName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>flags</ParamName>
                    <ParamType>TransportFlags</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JGroupsProtocolCfg [jgroupsCfg=getJGroupsProtocolCfg(tcpConfigurator.getProtocolStack())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeMerge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jgroupsCfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jgroupsCfg;removeProtocol;[MERGE3]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUdpConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullTestName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>flags</ParamName>
                    <ParamType>TransportFlags</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JGroupsProtocolCfg [jgroupsCfg=getJGroupsProtocolCfg(udpConfigurator.getProtocolStack())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeFailureDetection</MethodName>
            <MethodComment>/** 
 * Remove all failure detection related protocols from the given JGroups stack.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jgroupsCfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jgroupsCfg.removeProtocol(FD).removeProtocol(FD_SOCK).removeProtocol(FD_ALL).removeProtocol(FD_ALL2);removeProtocol;[VERIFY_SUSPECT]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeRelay2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jgroupsCfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jgroupsCfg;removeProtocol;[TEST_RELAY2]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTestPingDiscovery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullTestName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jgroupsCfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtocolType [type=TEST_PING]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [props=jgroupsCfg.getProtocol(type).getProperties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>props;put;["testName", fullTestName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceMCastAddressAndPort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jgroupsCfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtocolConfiguration [udp=jgroupsCfg.getProtocol(UDP)]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [props=udp.getProperties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>props;put;["mcast_addr", threadMcastIP.get()]</InnerMethodInvoke>
                <InnerMethodInvoke>props;put;["mcast_port", threadMcastPort.get().toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceTcpStartPort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jgroupsCfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>transportFlags</ParamName>
                    <ParamType>TransportFlags</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtocolType [transportProtocol=jgroupsCfg.containsProtocol(TCP_NIO2) ? TCP_NIO2 : TCP]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [props=jgroupsCfg.getProtocol(transportProtocol).getProperties()]</InnerVar>
                <InnerVar>Integer [startPort=threadTcpStartPort.get()]</InnerVar>
                <InnerVar>int [portRange=TCP_PORT_RANGE_PER_THREAD]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>props;put;["bind_port", startPort.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>props;put;["port_range", String.valueOf(portRange - 1)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>JGroupsProtocolCfg</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newProps</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtocolConfiguration [protocol=cfg.getProtocol(type)]</InnerVar>
                <InnerVar>ProtocolConfiguration [newProtocol=new ProtocolConfiguration(protocol.getProtocolName(),newProps)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cfg;replaceProtocol;[type, newProtocol]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadTcp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolStackConfigurator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadUdp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolStackConfigurator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJGroupsProtocolCfg</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JGroupsProtocolCfg</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>baseStack</ParamName>
                    <ParamType>ProtocolConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JGroupsXmxlConfigurator [configurator=new JGroupsXmxlConfigurator(baseStack)]</InnerVar>
                <InnerVar>List&lt;ProtocolConfiguration&gt; [protoStack=configurator.getProtocolStack()]</InnerVar>
                <InnerVar>Map&lt;ProtocolType,ProtocolConfiguration&gt; [protoMap=new HashMap&lt;ProtocolType,ProtocolConfiguration&gt;(protoStack.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProtocolType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolType</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [dotIndex=name.lastIndexOf(".")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JGroupsXmxlConfigurator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>protocols</ParamName>
                    <ParamType>ProtocolConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>copy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolConfiguration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>protocols</ParamName>
                    <ParamType>ProtocolConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;ProtocolConfiguration&gt; [copy=new ArrayList&lt;ProtocolConfiguration&gt;(protocols.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JGroupsProtocolCfg</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>protoMap</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurator</ParamName>
                    <ParamType>XmlConfigurator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addProtocol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JGroupsProtocolCfg</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>ProtocolConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>position</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>protoMap;put;[type, cfg]</InnerMethodInvoke>
                <InnerMethodInvoke>configurator.getProtocolStack();add;[position, cfg]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeProtocol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JGroupsProtocolCfg</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>configurator.getProtocolStack();remove;[protoMap.remove(type)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProtocol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolConfiguration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>containsProtocol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceProtocol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JGroupsProtocolCfg</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ProtocolType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newCfg</ParamName>
                    <ParamType>ProtocolConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtocolConfiguration [oldCfg=protoMap.get(type)]</InnerVar>
                <InnerVar>int [position=configurator.getProtocolStack().indexOf(oldCfg)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>