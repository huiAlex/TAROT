<Class>
    <Id>3190</Id>
    <Package>org.infinispan.query.dsl.embedded.impl</Package>
    <ClassName>LuceneQueryParsingResult</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LuceneQueryParsingResult  /** 
 * @author anistor@redhat.com
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>query</FieldName>
            <FieldType>Query</FieldType>
        </Field>
        <Field>
            <FieldName>targetEntityName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>targetEntityMetadata</FieldName>
            <FieldType>TypeMetadata</FieldType>
        </Field>
        <Field>
            <FieldName>projections</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>sort</FieldName>
            <FieldType>Sort</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LuceneQueryParsingResult</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>Query</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetEntityName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetEntityMetadata</ParamName>
                    <ParamType>TypeMetadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>projections</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sort</ParamName>
                    <ParamType>Sort</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getQuery</MethodName>
            <MethodComment>/** 
 * Returns the created Lucene query.
 */
</MethodComment>
            <ReturnType>Query</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTargetEntityName</MethodName>
            <MethodComment>/** 
 * Returns the original entity name from the query.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTargetEntityMetadata</MethodName>
            <MethodComment>/** 
 * Returns the entity metadata (usually a Class) resolved from the original entity name.
 */
</MethodComment>
            <ReturnType>TypeMetadata</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProjections</MethodName>
            <MethodComment>/** 
 * Returns the projections of the parsed query, represented as dot-separated paths to fields of embedded entities.
 * @return an array with the projections of the parsed query or {@code null} if the query has no projections
 */
</MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSort</MethodName>
            <MethodComment>/** 
 * Returns the optional Lucene sort specification.
 * @return the {@link Sort} object or {@code null} if the query string does not specify sorting
 */
</MethodComment>
            <ReturnType>Sort</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>