<Class>
    <Id>3346</Id>
    <Package>org.infinispan.tasks</Package>
    <ClassName>ServerTask</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Callable</SuperInterface>
        <SuperInterface>V</SuperInterface>
        <SuperInterface>Task</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ServerTask  /** 
 * An interface for deployed server tasks. In order to deploy a custom ServerTask, deploy a module containing a service that implements this interface. The task will be accessible by the name returned by  {@link #getName()}Before the execution,  {@link TaskContext} is injected into the task to provide{@link org.infinispan.manager.EmbeddedCacheManager},  {@link org.infinispan.Cache}, {@link org.infinispan.commons.marshall.Marshaller} and parameters.&lt;p/&gt; Author: Michal Szynkiewicz &lt;michal.l.szynkiewicz@gmail.com&gt;
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>setTaskContext</MethodName>
            <MethodComment>/** 
 * Sets the task context Store the value in your task implementation to be able to access caches and other resources in the task
 * @param taskContext task execution context
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskContext</ParamName>
                    <ParamType>TaskContext</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>