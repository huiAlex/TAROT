<Class>
    <Id>3882</Id>
    <Package>org.infinispan.commons.dataconversion</Package>
    <ClassName>EncodingUtils</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EncodingUtils  /** 
 * Utilities to encode/decode keys and values from caches.
 * @since 9.1
 * @deprecated Use the org.infinispan.encoding.DataConversion obtained from the AdvancedCache.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>EncodingUtils</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fromStorage</MethodName>
            <MethodComment>/** 
 * Decode object from storage format.
 * @param stored  Object in the storage format.
 * @param encoder the {@link Encoder} used for data conversion.
 * @param wrapper the {@link Wrapper} used to decorate the converted data.
 * @return Object decoded and unwrapped.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stored</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encoder</ParamName>
                    <ParamType>Encoder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wrapper</ParamName>
                    <ParamType>Wrapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toStorage</MethodName>
            <MethodComment>/** 
 * Encode object to storage format.
 * @param toStore  Object to be encoded.
 * @param encoder the {@link Encoder} used for data conversion.
 * @param wrapper the {@link Wrapper} used to decorate the converted data.
 * @return Object decoded and unwrapped.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>toStore</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encoder</ParamName>
                    <ParamType>Encoder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wrapper</ParamName>
                    <ParamType>Wrapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>