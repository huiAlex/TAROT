<Class>
    <Id>2360</Id>
    <Package>org.infinispan.rest.operations.mediatypes</Package>
    <ClassName>MediaType</ClassName>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MediaType  /** 
 * Represents Media Type with attached  {@link OutputPrinter}.
 * @author Sebastian ≈Åaskawiec
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>reverseLookup</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>reverseLookup</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mediaTypeAsString</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outputPrinter</FieldName>
            <FieldType>OutputPrinter</FieldType>
        </Field>
        <Field>
            <FieldName>needsCharset</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MediaType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mediaTypeAsString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outputPrinter</ParamName>
                    <ParamType>OutputPrinter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>needsCharset</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fromMediaTypeAsString</MethodName>
            <MethodComment>/** 
 * Converts text into  {@link MediaType}.
 * @param text text to be parsed.
 * @return MediaType value or &lt;code&gt;null&lt;/code&gt; if no mapping is found.
 */
</MethodComment>
            <ReturnType>MediaType</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [suppliedMediaTypes=text.split(" *, *")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sanitize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [charsetSeparator=text.indexOf(';')]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOutputPrinter</MethodName>
            <MethodComment>/** 
 * Returns  {@link OutputPrinter} associated to this {@link MediaType}.
 * @return OutputPrinter instance.
 */
</MethodComment>
            <ReturnType>OutputPrinter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>needsCharset</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>