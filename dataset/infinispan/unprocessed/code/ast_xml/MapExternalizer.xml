<Class>
    <Id>1052</Id>
    <Package>org.infinispan.marshall.exts</Package>
    <ClassName>MapExternalizer</ClassName>
    <SuperClass>AbstractExternalizer</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MapExternalizer  /** 
 * Map externalizer for all map implementations except immutable maps and singleton maps, i.e. FastCopyHashMap, HashMap, TreeMap.
 * @author Galder Zamarre√±o
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>HASHMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TREEMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FASTCOPYHASHMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EQUIVALENTHASHMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CONCURRENTHASHMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ENTRYVERSIONMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SINGLETONMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTYMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>numbers</FieldName>
            <FieldType>IdentityIntMap</FieldType>
        </Field>
        <Field>
            <FieldName>numbers</FieldName>
            <FieldType>Class&lt;?&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MapExternalizer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>numbers;put;[HashMap.class, HASHMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[ReadOnlySegmentAwareMap.class, HASHMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[TreeMap.class, TREEMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[FastCopyHashMap.class, FASTCOPYHASHMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[EquivalentHashMap.class, EQUIVALENTHASHMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[ConcurrentHashMap.class, CONCURRENTHASHMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[EntryVersionsMap.class, ENTRYVERSIONMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[getPrivateSingletonMapClass(), SINGLETONMAP]</InnerMethodInvoke>
                <InnerMethodInvoke>numbers;put;[getPrivateEmptyMapClass(), EMPTYMAP]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>output</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>map</ParamName>
                    <ParamType>Map</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [number=numbers.get(map.getClass(),-1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>output;write;[number]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Map</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [magicNumber=input.readUnsignedByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends Map&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrivateSingletonMapClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends Map</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrivateEmptyMapClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends Map</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMapClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends Map</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>