<Class>
    <Id>636</Id>
    <Package>org.infinispan.persistence.factory</Package>
    <ClassName>CacheStoreFactoryRegistry</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheStoreFactoryRegistry  /** 
 * Registry for multiple  {@link CacheStoreFactory} objects.
 * @author Sebastian Laskawiec
 * @since 7.2
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>factories</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>factories</FieldName>
            <FieldType>CacheStoreFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheStoreFactoryRegistry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>factories;add;[new LocalClassLoaderCacheStoreFactory()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createInstance</MethodName>
            <MethodComment>/** 
 * Creates new Object based on configuration.
 * @param storeConfiguration Cache store configuration.
 * @return Instance created based on the configuration.
 * @throws org.infinispan.commons.CacheConfigurationException when the instance couldn't be created.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>storeConfiguration</ParamName>
                    <ParamType>StoreConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processStoreConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StoreConfiguration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>storeConfiguration</ParamName>
                    <ParamType>StoreConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addCacheStoreFactory</MethodName>
            <MethodComment>/** 
 * Adds a new factory for processing.
 * @param cacheStoreFactory Factory to be added.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheStoreFactory</ParamName>
                    <ParamType>CacheStoreFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>factories;add;[0, cacheStoreFactory]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearFactories</MethodName>
            <MethodComment>/** 
 * Removes all factories associated to this registry.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>factories;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>