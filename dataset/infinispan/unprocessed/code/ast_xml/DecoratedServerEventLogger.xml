<Class>
    <Id>1163</Id>
    <Package>org.infinispan.server.eventlogger</Package>
    <ClassName>DecoratedServerEventLogger</ClassName>
    <SuperClass>DecoratedEventLogger</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DecoratedServerEventLogger  /** 
 * DecoratedServerEventLogger. Provides a way to decorate an EventLog with additional information.
 * @author Tristan Tarrant
 * @since 8.2
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>delegate</FieldName>
            <FieldType>ServerEventLogger</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DecoratedServerEventLogger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>delegate</ParamName>
                    <ParamType>ServerEventLogger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>log</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>EventLogLevel</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>category</ParamName>
                    <ParamType>EventLogCategory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>message</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [sb=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;ifPresent;[c -&gt; sb.append(MESSAGES.eventLogContext(c))]</InnerMethodInvoke>
                <InnerMethodInvoke>scope;ifPresent;[s -&gt; sb.append(MESSAGES.eventLogContext(s))]</InnerMethodInvoke>
                <InnerMethodInvoke>who;ifPresent;[w -&gt; sb.append(MESSAGES.eventLogWho(w))]</InnerMethodInvoke>
                <InnerMethodInvoke>sb;append;[message]</InnerMethodInvoke>
                <InnerMethodInvoke>delegate;textLog;[level, category, sb.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>delegate;eventLog;[new ServerEventImpl(level,category,delegate.getTimeService().instant(),message,detail,context,who,scope)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>