<Class>
    <Id>3519</Id>
    <Package>org.infinispan.server.test.query</Package>
    <ClassName>RemoteQuerySecurityIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RemoteQuerySecurityIT  /** 
 * Tests for remote queries over HotRod with security on a DIST indexed/non-indexed cache.
 * @author Adrian Nistor
 * @since 7.2
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>server</FieldName>
            <FieldType>RemoteInfinispanServer</FieldType>
        </Field>
        <Field>
            <FieldName>rcmFactory</FieldName>
            <FieldType>RemoteCacheManagerFactory</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCacheManagers</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCacheManagers</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_CACHE_INDEXED</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_CACHE_NOT_INDEXED</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_SERVER_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SASL_MECH</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>expectedException</FieldName>
            <FieldType>ExpectedException</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>RemoteCache&lt;String,String&gt; [metadataCache=remoteCacheManagers.get(ADMIN_LOGIN).getCache(ProtobufMetadataManagerConstants.PROTOBUF_METADATA_CACHE_NAME)]</InnerVar>
                <InnerVar>String [proto=Util.getResourceAsString("/sample_bank_account/bank.proto",getClass().getClassLoader())]</InnerVar>
                <InnerVar>User [user=new User()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remoteCacheManagers;put;[ADMIN_LOGIN, rcmFactory.createManager(getClientConfigBuilderForUser(ADMIN_LOGIN,ADMIN_PASSWD))]</InnerMethodInvoke>
                <InnerMethodInvoke>remoteCacheManagers;put;[WRITER_LOGIN, rcmFactory.createManager(getClientConfigBuilderForUser(WRITER_LOGIN,WRITER_PASSWD))]</InnerMethodInvoke>
                <InnerMethodInvoke>remoteCacheManagers;put;[READER_LOGIN, rcmFactory.createManager(getClientConfigBuilderForUser(READER_LOGIN,READER_PASSWD))]</InnerMethodInvoke>
                <InnerMethodInvoke>remoteCacheManagers;put;[SUPERVISOR_LOGIN, rcmFactory.createManager(getClientConfigBuilderForUser(SUPERVISOR_LOGIN,SUPERVISOR_PASSWD))]</InnerMethodInvoke>
                <InnerMethodInvoke>metadataCache;put;["sample_bank_account/bank.proto", proto]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;[metadataCache.containsKey(ProtobufMetadataManagerConstants.ERRORS_KEY_SUFFIX)]</InnerMethodInvoke>
                <InnerMethodInvoke>MarshallerRegistration;registerMarshallers;[ProtoStreamMarshaller.getSerializationContext(remoteCacheManagers.get(ADMIN_LOGIN))]</InnerMethodInvoke>
                <InnerMethodInvoke>MarshallerRegistration;registerMarshallers;[ProtoStreamMarshaller.getSerializationContext(remoteCacheManagers.get(READER_LOGIN))]</InnerMethodInvoke>
                <InnerMethodInvoke>MarshallerRegistration;registerMarshallers;[ProtoStreamMarshaller.getSerializationContext(remoteCacheManagers.get(WRITER_LOGIN))]</InnerMethodInvoke>
                <InnerMethodInvoke>MarshallerRegistration;registerMarshallers;[ProtoStreamMarshaller.getSerializationContext(remoteCacheManagers.get(SUPERVISOR_LOGIN))]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setId;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setName;["Tom"]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setSurname;["Cat"]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setGender;[User.Gender.MALE]</InnerMethodInvoke>
                <InnerMethodInvoke>user;setAccountIds;[Collections.singleton(12)]</InnerMethodInvoke>
                <InnerMethodInvoke>remoteCacheManagers.get(ADMIN_LOGIN).getCache(TEST_CACHE_INDEXED);put;[1, user]</InnerMethodInvoke>
                <InnerMethodInvoke>remoteCacheManagers.get(ADMIN_LOGIN).getCache(TEST_CACHE_NOT_INDEXED);put;[1, user]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClientConfigBuilderForUser</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>login</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReaderQueryIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expectedException;expect;[HotRodClientException.class]</InnerMethodInvoke>
                <InnerMethodInvoke>expectedException;expectMessage;["Unauthorized access"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;execQuery;[READER_LOGIN, TEST_CACHE_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReaderQueryNotIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expectedException;expect;[HotRodClientException.class]</InnerMethodInvoke>
                <InnerMethodInvoke>expectedException;expectMessage;["Unauthorized access"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;execQuery;[READER_LOGIN, TEST_CACHE_NOT_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testWriterQueryIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expectedException;expect;[HotRodClientException.class]</InnerMethodInvoke>
                <InnerMethodInvoke>expectedException;expectMessage;["Unauthorized access"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;execQuery;[WRITER_LOGIN, TEST_CACHE_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testWriterQueryNotIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expectedException;expect;[HotRodClientException.class]</InnerMethodInvoke>
                <InnerMethodInvoke>expectedException;expectMessage;["Unauthorized access"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;execQuery;[WRITER_LOGIN, TEST_CACHE_NOT_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSupervisorQueryIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;execQuery;[SUPERVISOR_LOGIN, TEST_CACHE_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSupervisorQueryNotIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;execQuery;[SUPERVISOR_LOGIN, TEST_CACHE_NOT_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testAdminQueryIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;execQuery;[ADMIN_LOGIN, TEST_CACHE_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testAdminQueryNotIndexed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;execQuery;[ADMIN_LOGIN, TEST_CACHE_NOT_INDEXED]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userLogin</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RemoteCache&lt;Object,Object&gt; [cache=remoteCacheManagers.get(userLogin).getCache(cacheName)]</InnerVar>
                <InnerVar>QueryFactory [qf=Search.getQueryFactory(cache)]</InnerVar>
                <InnerVar>Query [query=qf.from(User.class).having("name").eq("Tom").build()]</InnerVar>
                <InnerVar>List&lt;User&gt; [list=query.list()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;[list]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, list.size()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[User.class, list.get(0).getClass()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>