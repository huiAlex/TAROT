<Class>
    <Id>2029</Id>
    <Package>org.infinispan.container.versioning</Package>
    <ClassName>EntryVersion</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EntryVersion  /** 
 * A version is used to compare entries against one another.  Versions do not guarantee contiguity, but do guarantee to be comparable.  However this comparability is not the same as the JDK's  {@link Comparable} interface.  It isricher in that  {@link Comparable} doesn't differentiate between instances that are the same versus instances thatare equal-but-different.
 * @author Manik Surtani
 * @since 5.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>compareTo</MethodName>
            <MethodComment>/** 
 * Compares the given version against the current instance.
 * @param other the other version to compare against
 * @return a InequalVersionComparisonResult instance
 */
</MethodComment>
            <ReturnType>InequalVersionComparisonResult</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>other</ParamName>
                    <ParamType>EntryVersion</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>