<Class>
    <Id>1409</Id>
    <Package>org.infinispan.test.integration.as.jms</Package>
    <ClassName>SearchNewEntityJmsMasterSlaveUsingInfinispanAs2ndCacheAndModulesIT</ClassName>
    <SuperClass>SearchNewEntityJmsMasterSlave</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SearchNewEntityJmsMasterSlaveUsingInfinispanAs2ndCacheAndModulesIT  /** 
 * Test the the combination of JMS+Infinispan as backend and the use of Infinispan as second level cache.
 * @author Davide D'Alto
 * @author Sanne Grinovero
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>stats</FieldName>
            <FieldType>StatisticsController</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>secondLevelCacheShouldBeActive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>RegisteredMember [cachedMember=memberRegistration.getNewMember()]</InnerVar>
                <InnerVar>long [secondLevelCacheMissCount=stats.getStatistics().getSecondLevelCacheMissCount()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cachedMember;setName;["Johnny Cached"]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;register;[]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;findById;[cachedMember.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;findById;[cachedMember.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>memberRegistration;findById;[cachedMember.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Second level cache not enabled", secondLevelCacheMissCount &gt; 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDeploymentMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Archive&lt;?&gt; [master=DeploymentJmsMasterSlaveAndInfinispanAs2ndLevelCache.createMaster("master")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDeploymentSlave1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Archive&lt;?&gt; [slave=DeploymentJmsMasterSlaveAndInfinispanAs2ndLevelCache.createSlave("slave-1")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDeploymentSlave2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Archive&lt;?&gt; [slave=DeploymentJmsMasterSlaveAndInfinispanAs2ndLevelCache.createSlave("slave-2")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>