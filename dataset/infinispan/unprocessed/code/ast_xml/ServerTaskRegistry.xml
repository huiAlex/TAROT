<Class>
    <Id>1155</Id>
    <Package>org.infinispan.server.infinispan.task</Package>
    <ClassName>ServerTaskRegistry</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ServerTaskRegistry  /** 
 * Server task registry. Stores server tasks that can be executed via  {@link org.infinispan.tasks.TaskManager}&lt;p/&gt; Author: Michal Szynkiewicz, michal.l.szynkiewicz@gmail.com Date: 1/22/16 Time: 4:03 PM
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getTasks</MethodName>
            <MethodComment>/** 
 * Lists the registered server tasks.
 * @return a list of server tasks
 */
</MethodComment>
            <ReturnType>Task</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTask</MethodName>
            <MethodComment>/** 
 * Returns a  {@link ServerTaskWrapper} for a task with given name.ServerTaskWrapper wraps  {@link ServerTask} to make it compatible with {@link Task}
 * @param taskName task name (as returned by {@link ServerTask#getName()})
 * @param &lt; T &gt; type of return value of the task
 * @return server task wrapper for task of given name
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handles</MethodName>
            <MethodComment>/** 
 * Checks if task with given name is registered in this registry.
 * @param taskName name of the task ({@link ServerTask#getName())}
 * @return true if task is registered, false otherwise
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addDeployedTask</MethodName>
            <MethodComment>/** 
 * Register a ServerTask in the registry
 * @param task server task to register
 * @param &lt; T &gt; type of the return value of the task
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeDeployedTask</MethodName>
            <MethodComment>/** 
 * Unregister server task with given name
 * @param name name of the task
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>