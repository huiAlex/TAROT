<Class>
    <Id>1015</Id>
    <Package>org.infinispan.interceptors.impl</Package>
    <ClassName>MultiSubCommandInvoker</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>InvocationSuccessFunction</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MultiSubCommandInvoker  /** 
 * Invoke a sequence of sub-commands.
 * @author Dan Berindei
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>interceptor</FieldName>
            <FieldType>BaseAsyncInterceptor</FieldType>
        </Field>
        <Field>
            <FieldName>finalStage</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>subCommands</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>subCommands</FieldName>
            <FieldType>VisitableCommand</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MultiSubCommandInvoker</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>interceptor</ParamName>
                    <ParamType>BaseAsyncInterceptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>finalReturnValue</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subCommands</ParamName>
                    <ParamType>VisitableCommand</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeEach</MethodName>
            <MethodComment>/** 
 * Call  {@link BaseAsyncInterceptor#invokeNext(InvocationContext,VisitableCommand)} on a sequence of sub-commands.&lt;p&gt; Stop when one of the sub-commands throws an exception, and return an invocation stage with that exception. If all the sub-commands are successful, return the  {@code finalStage}. If  {@code finalStage} has and exception, skip allthe sub-commands and just return the  {@code finalStage}.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subCommands</ParamName>
                    <ParamType>VisitableCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>interceptor</ParamName>
                    <ParamType>BaseAsyncInterceptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>finalReturnValue</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MultiSubCommandInvoker [invoker=new MultiSubCommandInvoker(interceptor,finalReturnValue,subCommands)]</InnerVar>
                <InnerVar>VisitableCommand [newCommand=subCommands.next()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rCtx</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rCommand</ParamName>
                    <ParamType>VisitableCommand</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rv</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>