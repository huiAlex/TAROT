<Class>
    <Id>2743</Id>
    <Package>org.infinispan.query.dsl</Package>
    <ClassName>Query</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>PaginationContext</SuperInterface>
        <SuperInterface>Query</SuperInterface>
        <SuperInterface>ParameterContext</SuperInterface>
        <SuperInterface>Query</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Query  /** 
 * An immutable object representing both the query and the result. The result is obtained lazily when one of the methods in this interface is executed first time. The query is executed only once. Further calls will just return the previously cached results. If you intend to re-execute the query to obtain fresh data you need to build another instance using a  {@link QueryBuilder}.
 * @author anistor@redhat.com
 * @since 6.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>list</MethodName>
            <MethodComment>/** 
 * Returns the results of a search as a list.
 * @return list of objects that were found from the search.
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getResultSize</MethodName>
            <MethodComment>/** 
 * Gets the total number of results matching the query, ignoring pagination (firstResult, maxResult).
 * @return total number of results.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>