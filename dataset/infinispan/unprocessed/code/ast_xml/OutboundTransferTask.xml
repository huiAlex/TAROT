<Class>
    <Id>3119</Id>
    <Package>org.infinispan.statetransfer</Package>
    <ClassName>OutboundTransferTask</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Runnable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OutboundTransferTask  /** 
 * Outbound state transfer task. Pushes data segments to another cluster member on request. Instances of OutboundTransferTask are created and managed by StateTransferManagerImpl. There should be at most one such task per destination at any time.
 * @author anistor@redhat.com
 * @since 5.2
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>onCompletion</FieldName>
            <FieldType>Consumer</FieldType>
        </Field>
        <Field>
            <FieldName>onCompletion</FieldName>
            <FieldType>OutboundTransferTask</FieldType>
        </Field>
        <Field>
            <FieldName>onChunkReplicated</FieldName>
            <FieldType>Consumer</FieldType>
        </Field>
        <Field>
            <FieldName>onChunkReplicated</FieldName>
            <FieldType>List&lt;StateChunk&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>mapEntryFromDataContainer</FieldName>
            <FieldType>BiFunction</FieldType>
        </Field>
        <Field>
            <FieldName>mapEntryFromDataContainer</FieldName>
            <FieldType>InternalCacheEntry</FieldType>
        </Field>
        <Field>
            <FieldName>mapEntryFromStore</FieldName>
            <FieldType>BiFunction</FieldType>
        </Field>
        <Field>
            <FieldName>mapEntryFromStore</FieldName>
            <FieldType>MarshalledEntry</FieldType>
        </Field>
        <Field>
            <FieldName>topologyId</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>destination</FieldName>
            <FieldType>Address</FieldType>
        </Field>
        <Field>
            <FieldName>segments</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>segments</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>chunkSize</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>keyPartitioner</FieldName>
            <FieldType>KeyPartitioner</FieldType>
        </Field>
        <Field>
            <FieldName>dataContainer</FieldName>
            <FieldType>DataContainer</FieldType>
        </Field>
        <Field>
            <FieldName>dataContainer</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>persistenceManager</FieldName>
            <FieldType>PersistenceManager</FieldType>
        </Field>
        <Field>
            <FieldName>rpcManager</FieldName>
            <FieldType>RpcManager</FieldType>
        </Field>
        <Field>
            <FieldName>commandsFactory</FieldName>
            <FieldType>CommandsFactory</FieldType>
        </Field>
        <Field>
            <FieldName>timeout</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>applyState</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>pushTransfer</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>entriesBySegment</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>entriesBySegment</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>accumulatedEntries</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>runnableFuture</FieldName>
            <FieldType>FutureTask</FieldType>
        </Field>
        <Field>
            <FieldName>runnableFuture</FieldName>
            <FieldType>Void</FieldType>
        </Field>
        <Field>
            <FieldName>rpcOptions</FieldName>
            <FieldType>RpcOptions</FieldType>
        </Field>
        <Field>
            <FieldName>entryFactory</FieldName>
            <FieldType>InternalEntryFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>OutboundTransferTask</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>destination</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>segments</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>chunkSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyPartitioner</ParamName>
                    <ParamType>KeyPartitioner</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onCompletion</ParamName>
                    <ParamType>OutboundTransferTask</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onChunkReplicated</ParamName>
                    <ParamType>List&lt;StateChunk&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mapEntryFromDataContainer</ParamName>
                    <ParamType>InternalCacheEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mapEntryFromStore</ParamName>
                    <ParamType>MarshalledEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataContainer</ParamName>
                    <ParamType>DataContainer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>persistenceManager</ParamName>
                    <ParamType>PersistenceManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rpcManager</ParamName>
                    <ParamType>RpcManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>commandsFactory</ParamName>
                    <ParamType>CommandsFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ef</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timeout</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>applyState</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pushTransfer</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.segments;addAll;[segments]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>executorService</ParamName>
                    <ParamType>ExecutorService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>executorService;submit;[runnableFuture]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>done</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>onCompletion;accept;[OutboundTransferTask.this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDestination</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Address</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSegments</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTopologyId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendEntry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ice</ParamName>
                    <ParamType>InternalCacheEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>segmentId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;InternalCacheEntry&gt; [entries=entriesBySegment.computeIfAbsent(segmentId,k -&gt; new ArrayList&lt;&gt;())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>entries;add;[ice]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendEntries</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>isLast</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;StateChunk&gt; [chunks=new ArrayList&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cancelSegments</MethodName>
            <MethodComment>/** 
 * Cancel some of the segments. If all segments get cancelled then the whole task will be cancelled.
 * @param cancelledSegments segments to cancel.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cancelledSegments</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cancel</MethodName>
            <MethodComment>/** 
 * Cancel the whole task.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isCancelled</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>defaultMapEntryFromDataContainer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalCacheEntry</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ice</ParamName>
                    <ParamType>InternalCacheEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entryFactory</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>defaultMapEntryFromStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalCacheEntry</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>me</ParamName>
                    <ParamType>MarshalledEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entryFactory</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>