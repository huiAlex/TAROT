<Class>
    <Id>516</Id>
    <Package>org.infinispan.configuration.global</Package>
    <ClassName>GlobalAuthorizationConfigurationBuilder</ClassName>
    <SuperClass>AbstractGlobalConfigurationBuilder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Builder</SuperInterface>
        <SuperInterface>GlobalAuthorizationConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GlobalAuthorizationConfigurationBuilder  /** 
 * GlobalAuthorizationConfigurationBuilder.
 * @author Tristan Tarrant
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>attributes</FieldName>
            <FieldType>AttributeSet</FieldType>
        </Field>
        <Field>
            <FieldName>roles</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>roles</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>GlobalAuthorizationConfigurationBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>GlobalSecurityConfigurationBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalAuthorizationConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(ENABLED);set;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalAuthorizationConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(ENABLED);set;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enabled</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalAuthorizationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(ENABLED);set;[enabled]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>auditLogger</MethodName>
            <MethodComment>/** 
 * The instance of an  {@link AuditLogger} to be used to track operations performed on caches and cachemanagers. The default logger isthe  {@link NullAuditLogger}. You can also use the  {@link LoggingAuditLogger} which will send audit messages to the log.
 * @param auditLogger
 */
</MethodComment>
            <ReturnType>GlobalAuthorizationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>auditLogger</ParamName>
                    <ParamType>AuditLogger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(AUDIT_LOGGER);set;[auditLogger]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>principalRoleMapper</MethodName>
            <MethodComment>/** 
 * The class of a mapper which converts the  {@link Principal}s associated with a  {@link Subject} into a set of roles
 * @param principalRoleMapper
 */
</MethodComment>
            <ReturnType>GlobalAuthorizationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>principalRoleMapper</ParamName>
                    <ParamType>PrincipalRoleMapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(PRINCIPAL_ROLE_MAPPER);set;[principalRoleMapper]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>role</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalRoleConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GlobalRoleConfigurationBuilder [role=new GlobalRoleConfigurationBuilder(name,this)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>roles;put;[name, role]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GlobalAuthorizationConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;String,Role&gt; [rolesCfg=new HashMap&lt;String,Role&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(ROLES);set;[rolesCfg]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>GlobalAuthorizationConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes;read;[template.attributes()]</InnerMethodInvoke>
                <InnerMethodInvoke>this.roles;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>