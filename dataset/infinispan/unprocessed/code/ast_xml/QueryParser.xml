<Class>
    <Id>2467</Id>
    <Package>org.infinispan.objectfilter.impl.ql</Package>
    <ClassName>QueryParser</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>QueryParser  /** 
 * A parser for Ickle queries. Parsing comprises these steps: &lt;ul&gt; &lt;li&gt;lexing the query&lt;/li&gt; &lt;li&gt;parsing the query, building up an AST while doing so&lt;/li&gt; &lt;li&gt;transforming the resulting parse tree using a QueryResolverDelegate and QueryRendererDelegate&lt;/li&gt; &lt;/ul&gt;
 * @author Gunnar Morling
 * @author anistor@redhat.com
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>parseQuery</MethodName>
            <MethodComment>/** 
 * Parses the given query string.
 * @param queryString the query string to parse
 * @return the result of the parsing after being transformed by the processors
 * @throws ParsingException in case any exception occurs during parsing
 */
</MethodComment>
            <ReturnType>CommonTree</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queryString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resolverDelegate</ParamName>
                    <ParamType>QueryResolverDelegate</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rendererDelegate</ParamName>
                    <ParamType>QueryRendererDelegate</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IckleLexer [lexer=new IckleLexer(new ANTLRStringStream(queryString))]</InnerVar>
                <InnerVar>CommonTokenStream [tokens=new CommonTokenStream(lexer)]</InnerVar>
                <InnerVar>IckleParser [parser=new IckleParser(tokens)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParsingException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resolve</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CommonTree</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tokens</ParamName>
                    <ParamType>TokenStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tree</ParamName>
                    <ParamType>CommonTree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resolverDelegate</ParamName>
                    <ParamType>QueryResolverDelegate</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CommonTreeNodeStream [treeNodeStream=new CommonTreeNodeStream(tree)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>treeNodeStream;setTokenStream;[tokens]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>render</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CommonTree</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tokens</ParamName>
                    <ParamType>TokenStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tree</ParamName>
                    <ParamType>CommonTree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rendererDelegate</ParamName>
                    <ParamType>QueryRendererDelegate</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CommonTreeNodeStream [treeNodeStream=new CommonTreeNodeStream(tree)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>treeNodeStream;setTokenStream;[tokens]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>