<Class>
    <Id>3148</Id>
    <Package>org.infinispan.commands</Package>
    <ClassName>CancellationService</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CancellationService  /** 
 * CancellationService manages association of Thread executing CancellableCommand in a remote VM and if needed cancels command execution
 * @author Vladimir Blagojevic
 * @since 5.2
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>register</MethodName>
            <MethodComment>/** 
 * Registers thread with  {@link CancellationService} under the given UUID id
 * @param t thread to associate with id
 * @param id chosen UUID id
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Thread</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregister</MethodName>
            <MethodComment>/** 
 * Unregisters thread with  {@link CancellationService} given an id
 * @param id thread id
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cancel</MethodName>
            <MethodComment>/** 
 * Cancels (invokes Thread#interrupt) a thread given a thread id
 * @param id thread id
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>