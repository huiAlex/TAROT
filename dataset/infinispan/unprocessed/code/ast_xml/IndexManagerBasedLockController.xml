<Class>
    <Id>2311</Id>
    <Package>org.infinispan.query.indexmanager</Package>
    <ClassName>IndexManagerBasedLockController</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>IndexLockController</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IndexManagerBasedLockController  /** 
 * Used to control and override the ownership of the Lucene index lock. &lt;p&gt; Rather than wrapping the Directory or the LockManager directly, we need to wrap the IndexManager as the Directory initialization is deferred.
 * @author Sanne Grinovero &lt;sanne@hibernate.org&gt; (C) 2014 Red Hat Inc.
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>indexManager</FieldName>
            <FieldType>DirectoryBasedIndexManager</FieldType>
        </Field>
        <Field>
            <FieldName>transactionHelper</FieldName>
            <FieldType>TransactionHelper</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>IndexManagerBasedLockController</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexManager</ParamName>
                    <ParamType>DirectoryBasedIndexManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TransactionManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>waitForAvailability</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [tx=transactionHelper.suspendTxIfExists()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>waitForAvailabilityInternal</MethodName>
            <MethodComment>/** 
 * This is returning as soon as the lock is available, or after 10 seconds.
 * @return true if the lock is free at the time of returning.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Directory [directory=indexManager.getDirectoryProvider().getDirectory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>forceLockClear</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [tx=transactionHelper.suspendTxIfExists()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>forceLockClearInternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Directory [directory=indexManager.getDirectoryProvider().getDirectory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;warn;["Forcing clear of index lock"]</InnerMethodInvoke>
                <InnerMethodInvoke>((DirectoryExtensions)directory);forceUnlock;[IndexWriter.WRITE_LOCK_NAME]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>