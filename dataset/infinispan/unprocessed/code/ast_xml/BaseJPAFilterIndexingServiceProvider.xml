<Class>
    <Id>2857</Id>
    <Package>org.infinispan.query.dsl.embedded.impl</Package>
    <ClassName>BaseJPAFilterIndexingServiceProvider</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>FilterIndexingServiceProvider</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BaseJPAFilterIndexingServiceProvider  /** 
 * @author anistor@redhat.com
 * @since 8.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>filteringInvocations</FieldName>
            <FieldType>ConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>filteringInvocations</FieldName>
            <FieldType>Matcher</FieldType>
        </Field>
        <Field>
            <FieldName>cacheNotifier</FieldName>
            <FieldType>CacheNotifierImpl</FieldType>
        </Field>
        <Field>
            <FieldName>clusteringDependentLogic</FieldName>
            <FieldType>ClusteringDependentLogic</FieldType>
        </Field>
        <Field>
            <FieldName>isClustered</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>isPrimaryOnly</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>filterAndConvert</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>activated_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>created_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>invalidated_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>loaded_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>modified_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>passivated_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>removed_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>visited_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>evicted_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>expired_invocations</FieldName>
            <FieldType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>matcher</FieldName>
            <FieldType>Matcher</FieldType>
        </Field>
        <Field>
            <FieldName>subscription</FieldName>
            <FieldType>FilterSubscription</FieldType>
        </Field>
        <Field>
            <FieldName>callback</FieldName>
            <FieldType>Callback</FieldType>
        </Field>
        <Field>
            <FieldName>callback</FieldName>
            <FieldType>K</FieldType>
        </Field>
        <Field>
            <FieldName>matcher</FieldName>
            <FieldType>Matcher</FieldType>
        </Field>
        <Field>
            <FieldName>keyDataConversion</FieldName>
            <FieldType>DataConversion</FieldType>
        </Field>
        <Field>
            <FieldName>valueDataConversion</FieldName>
            <FieldType>DataConversion</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>injectDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheNotifier</ParamName>
                    <ParamType>CacheNotifier</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clusteringDependentLogic</ParamName>
                    <ParamType>ClusteringDependentLogic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encoderRegistry</ParamName>
                    <ParamType>EncoderRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Collection&lt;FilteringListenerInvocation&lt;?,?&gt;&gt; [invocations=filteringInvocations.values()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryActivated.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryCreated.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryInvalidated.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryLoaded.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryModified.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryPassivated.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryRemoved.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryVisited.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntriesEvicted.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheNotifier.getListenerCollectionForAnnotation(CacheEntryExpired.class);removeAll;[invocations]</InnerMethodInvoke>
                <InnerMethodInvoke>filteringInvocations;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>interceptListenerInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerListenerInvocations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>isClustered</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isPrimaryOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAndConvert</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexedFilter</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listeners</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Matcher [matcher=getMatcher(indexedFilter)]</InnerVar>
                <InnerVar>String [queryString=getQueryString(indexedFilter)]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [namedParameters=getNamedParameters(indexedFilter)]</InnerVar>
                <InnerVar>boolean [isDeltaFilter=isDelta(indexedFilter)]</InnerVar>
                <InnerVar>Event.Type[] [eventTypes=new Event.Type[listeners.keySet().size()]]</InnerVar>
                <InnerVar>int [i=0]</InnerVar>
                <InnerVar>Callback&lt;K,V&gt; [callback=new Callback&lt;&gt;(matcher,isClustered,isPrimaryOnly,filterAndConvert,listeners)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addFilteringInvocationForMatcher;[matcher, keyDataConversion, valueDataConversion]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEventTypeFromAnnotation</MethodName>
            <MethodComment>/** 
 * Obtains the event type that corresponds to the given event annotation.
 * @param annotation a CacheEntryXXX annotation
 * @return the event type or {@code null} if the given annotation is not supported
 */
</MethodComment>
            <ReturnType>Event.Type</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addFilteringInvocationForMatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matcher</ParamName>
                    <ParamType>Matcher</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Callback</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matcher</ParamName>
                    <ParamType>Matcher</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isClustered</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isPrimaryOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterAndConvert</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listeners</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeArray</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listeners</ParamName>
                    <ParamType>Class&lt;? extends Annotation&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;DelegatingCacheEntryListenerInvocation&lt;K,V&gt;&gt; [invocations=listeners.get(eventType)]</InnerVar>
                <InnerVar>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[] [invocationsArray=invocations.toArray(new DelegatingCacheEntryListenerInvocation[invocations.size()])]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregister</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>FilterSubscription [s=subscription]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onFilterResult</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userContext</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>projection</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortProjection</ParamName>
                    <ParamType>Comparable[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EventWrapper [eventWrapper=(EventWrapper)userContext]</InnerVar>
                <InnerVar>CacheEntryEvent&lt;K,V&gt; [event=(CacheEntryEvent&lt;K,V&gt;)eventWrapper.getEvent()]</InnerVar>
                <InnerVar>DelegatingCacheEntryListenerInvocation&lt;K,V&gt;[] [invocations]</InnerVar>
                <InnerVar>boolean [conversionDone=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DelegatingCacheEntryListenerInvocationImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregister</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FilteringListenerInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matcher</ParamName>
                    <ParamType>Matcher</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueDataConversion</ParamName>
                    <ParamType>DataConversion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTarget</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLocalNodePrimaryOwner</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;matchEvent;[event, matcher]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeNoChecks</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>skipQueue</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>skipConverter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isClustered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSync</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIdentifier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObservation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Listener.Observation</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAnnotation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends Annotation</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConverter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? super K</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFilterAnnotations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends Annotation&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKeyDataConversion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataConversion</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValueDataConversion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataConversion</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Matcher</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexedFilter</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getQueryString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexedFilter</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNamedParameters</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexedFilter</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDelta</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexedFilter</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>matchEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventWrapper</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>matcher</ParamName>
                    <ParamType>Matcher</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeFilterResult</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userContext</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eventType</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>projection</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortProjection</ParamName>
                    <ParamType>Comparable[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>