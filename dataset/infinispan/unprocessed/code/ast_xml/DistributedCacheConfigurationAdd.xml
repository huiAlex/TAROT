<Class>
    <Id>199</Id>
    <Package>org.jboss.as.clustering.infinispan.subsystem</Package>
    <ClassName>DistributedCacheConfigurationAdd</ClassName>
    <SuperClass>SharedStateCacheConfigurationAdd</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DistributedCacheConfigurationAdd  /** 
 * @author Richard Achmatowicz (c) 2011 Red Hat Inc.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>DistributedCacheConfigurationAdd</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DistributedCacheConfigurationAdd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fromModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>toModel</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processModelNode</MethodName>
            <MethodComment>/** 
 * Implementation of abstract method processModelNode suitable for distributed cache
 * @param context
 * @param containerName
 * @param builder
 * @param dependencies
 * @return
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>ConfigurationBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dependencies</ParamName>
                    <ParamType>Dependency&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [owners=DistributedCacheConfigurationResource.OWNERS.resolveModelAttribute(context,cache).asInt()]</InnerVar>
                <InnerVar>int [segments=DistributedCacheConfigurationResource.SEGMENTS.resolveModelAttribute(context,cache).asInt()]</InnerVar>
                <InnerVar>float [capacityFactor=(float)DistributedCacheConfigurationResource.CAPACITY_FACTOR.resolveModelAttribute(context,cache).asDouble()]</InnerVar>
                <InnerVar>long [lifespan=DistributedCacheConfigurationResource.L1_LIFESPAN.resolveModelAttribute(context,cache).asLong()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.clustering().hash().numOwners(owners).numSegments(segments);capacityFactor;[capacityFactor]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>