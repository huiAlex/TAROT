<Class>
    <Id>2044</Id>
    <Package>org.infinispan.configuration.cache</Package>
    <ClassName>AbstractStoreConfiguration</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>StoreConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>FETCH_PERSISTENT_STATE</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>FETCH_PERSISTENT_STATE</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>PURGE_ON_STARTUP</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>PURGE_ON_STARTUP</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>IGNORE_MODIFICATIONS</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>IGNORE_MODIFICATIONS</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>PRELOAD</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>PRELOAD</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>SHARED</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>SHARED</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>TRANSACTIONAL</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>TRANSACTIONAL</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_BATCH_SIZE</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_BATCH_SIZE</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>PROPERTIES</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>PROPERTIES</FieldName>
            <FieldType>TypedProperties</FieldType>
        </Field>
        <Field>
            <FieldName>fetchPersistentState</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>fetchPersistentState</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>purgeOnStartup</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>purgeOnStartup</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>ignoreModifications</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>ignoreModifications</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>preload</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>preload</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>shared</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>shared</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>transactional</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>transactional</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>maxBatchSize</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>maxBatchSize</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>properties</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>properties</FieldName>
            <FieldType>TypedProperties</FieldType>
        </Field>
        <Field>
            <FieldName>attributes</FieldName>
            <FieldType>AttributeSet</FieldType>
        </Field>
        <Field>
            <FieldName>async</FieldName>
            <FieldType>AsyncStoreConfiguration</FieldType>
        </Field>
        <Field>
            <FieldName>singletonStore</FieldName>
            <FieldType>SingletonStoreConfiguration</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>attributeDefinitionSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AttributeSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AbstractStoreConfiguration</MethodName>
            <MethodComment>/** 
 * @deprecated Use {@link AbstractStoreConfiguration#AbstractStoreConfiguration(AttributeSet,AsyncStoreConfiguration,SingletonStoreConfiguration) instead}
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>purgeOnStartup</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fetchPersistentState</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ignoreModifications</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>async</ParamName>
                    <ParamType>AsyncStoreConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>singletonStore</ParamName>
                    <ParamType>SingletonStoreConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>preload</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>shared</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attributes.attribute(PURGE_ON_STARTUP);set;[purgeOnStartup]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(FETCH_PERSISTENT_STATE);set;[fetchPersistentState]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(IGNORE_MODIFICATIONS);set;[ignoreModifications]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(PRELOAD);set;[preload]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(SHARED);set;[shared]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(TRANSACTIONAL);set;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>attributes.attribute(PROPERTIES);set;[TypedProperties.toTypedProperties(properties)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AbstractStoreConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributes</ParamName>
                    <ParamType>AttributeSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>async</ParamName>
                    <ParamType>AsyncStoreConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>singletonStore</ParamName>
                    <ParamType>SingletonStoreConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>async</MethodName>
            <MethodComment>/** 
 * Configuration for the async cache loader. If enabled, this provides you with asynchronous writes to the cache store, giving you 'write-behind' caching.
 */
</MethodComment>
            <ReturnType>AsyncStoreConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>singletonStore</MethodName>
            <MethodComment>/** 
 * SingletonStore is a delegating store used for situations when only one instance in a cluster should interact with the underlying store. The coordinator of the cluster will be responsible for the underlying CacheStore. SingletonStore is a simply facade to a real CacheStore implementation. It always delegates reads to the real CacheStore.
 */
</MethodComment>
            <ReturnType>SingletonStoreConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>purgeOnStartup</MethodName>
            <MethodComment>/** 
 * If true, purges this cache store when it starts up.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shared</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transactional</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxBatchSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fetchPersistentState</MethodName>
            <MethodComment>/** 
 * If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. Persistent state transfer with a shared cache store does not make sense, as the same persistent store that provides the data will just end up receiving it. Therefore, if a shared cache store is used, the cache will not allow a persistent state transfer even if a cache store has this property set to true.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ignoreModifications</MethodName>
            <MethodComment>/** 
 * If true, any operation that modifies the cache (put, remove, clear, store...etc) won't be applied to the cache store. This means that the cache store could become out of sync with the cache.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>preload</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>properties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>attributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AttributeSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [prime=31]</InnerVar>
                <InnerVar>int [result=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AbstractStoreConfiguration [other=(AbstractStoreConfiguration)obj]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>