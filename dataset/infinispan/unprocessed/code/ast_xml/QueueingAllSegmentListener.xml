<Class>
    <Id>3080</Id>
    <Package>org.infinispan.notifications.cachelistener</Package>
    <ClassName>QueueingAllSegmentListener</ClassName>
    <SuperClass>BaseQueueingSegmentListener</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>QueueingAllSegmentListener  /** 
 * This handler is to be used when all the events must be queued until the iteration process is complete. This is required for any local listener or non distributed caches.  The local is required since we could have other events that are interrelated such as tx start/stop that all must be queued together in the order they were provided.
 * @author wburns
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>queue</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>queue</FieldName>
            <FieldType>KeyValuePair&lt;Event&lt;K,V&gt;,ListenerInvocation&lt;Event&lt;K,V&gt;&gt;&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>entryFactory</FieldName>
            <FieldType>InternalEntryFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>QueueingAllSegmentListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entryFactory</ParamName>
                    <ParamType>InternalEntryFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wrapper</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>Event&lt;K,V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [queued=!completed.get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transferComplete</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Iterator&lt;KeyValuePair&lt;Event&lt;K,V&gt;,ListenerInvocation&lt;Event&lt;K,V&gt;&gt;&gt;&gt; [iterator=queue.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>completed;set;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>