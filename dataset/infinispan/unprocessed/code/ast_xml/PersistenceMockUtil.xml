<Class>
    <Id>1478</Id>
    <Package>org.infinispan.util</Package>
    <ClassName>PersistenceMockUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PersistenceMockUtil  /** 
 * Util class that mocks  {@link org.infinispan.AdvancedCache} and {@link org.infinispan.persistence.spi.InitializationContext}for  {@link org.infinispan.persistence.spi.CacheWriter} and {@link org.infinispan.persistence.spi.CacheLoader}
 * @author pedro
 * @since 7.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>createContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InitializationContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>marshaller</ParamName>
                    <ParamType>StreamingMarshaller</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InitializationContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>marshaller</ParamName>
                    <ParamType>StreamingMarshaller</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timeService</ParamName>
                    <ParamType>TimeService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cache [mockCache=mockCache(cacheName,configuration,timeService)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mockCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Cache</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mockCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Cache</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timeService</ParamName>
                    <ParamType>TimeService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [cacheName="mock-cache-" + name]</InnerVar>
                <InnerVar>AdvancedCache [cache=mock(AdvancedCache.class,RETURNS_DEEP_STUBS)]</InnerVar>
                <InnerVar>GlobalConfiguration [gc=new GlobalConfigurationBuilder().build()]</InnerVar>
                <InnerVar>Set&lt;String&gt; [cachesSet=new HashSet&lt;&gt;()]</InnerVar>
                <InnerVar>EmbeddedCacheManager [cm=mock(EmbeddedCacheManager.class)]</InnerVar>
                <InnerVar>GlobalComponentRegistry [gcr=new GlobalComponentRegistry(gc,cm,cachesSet)]</InnerVar>
                <InnerVar>ComponentRegistry [registry=new ComponentRegistry(cacheName,configuration,cache,gcr,configuration.getClass().getClassLoader())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gcr;registerComponent;[timeService, TimeService.class]</InnerMethodInvoke>
                <InnerMethodInvoke>when(cache.getCacheManager().getCacheManagerConfiguration());thenReturn;[gc]</InnerMethodInvoke>
                <InnerMethodInvoke>when(cache.getName());thenReturn;[cacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>when(cache.getAdvancedCache());thenReturn;[cache]</InnerMethodInvoke>
                <InnerMethodInvoke>when(cache.getComponentRegistry());thenReturn;[registry]</InnerMethodInvoke>
                <InnerMethodInvoke>when(cache.getStatus());thenReturn;[ComponentStatus.RUNNING]</InnerMethodInvoke>
                <InnerMethodInvoke>when(cache.getCacheConfiguration());thenReturn;[configuration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>