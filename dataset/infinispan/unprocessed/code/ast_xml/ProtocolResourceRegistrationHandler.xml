<Class>
    <Id>3132</Id>
    <Package>org.infinispan.server.jgroups.subsystem</Package>
    <ClassName>ProtocolResourceRegistrationHandler</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>OperationStepHandler</SuperInterface>
        <SuperInterface>ProtocolMetricsHandler.ProtocolLocator</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ProtocolResourceRegistrationHandler  /** 
 * @author Paul Ferraro
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>stackAddress</FieldName>
            <FieldType>PathAddress</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ProtocolResourceRegistrationHandler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stackAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findProtocol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Protocol</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ServiceRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [channelName=address.getElement(address.size() - 2).getValue()]</InnerVar>
                <InnerVar>String [protocolName=address.getElement(address.size() - 1).getValue()]</InnerVar>
                <InnerVar>ServiceController&lt;?&gt; [controller=registry.getService(ChannelServiceName.CHANNEL.getServiceName(channelName))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>ModuleLoadException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>OverrideDescriptionProvider [provider=new OverrideDescriptionProvider(){
  @Override public Map&lt;String,ModelNode&gt; getAttributeOverrideDescriptions(  Locale locale){
    return Collections.emptyMap();
  }
  @Override public Map&lt;String,ModelNode&gt; getChildTypeOverrideDescriptions(  Locale locale){
    StandardResourceDescriptionResolver resolver=new JGroupsResourceDescriptionResolver();
    String description=resolver.getChildTypeDescription(ProtocolResourceDefinition.WILDCARD_PATH.getKey(),locale,resolver.getResourceBundle(locale));
    ModelNode result=new ModelNode();
    result.get(ModelDescriptionConstants.DESCRIPTION).set(description);
    return Collections.singletonMap(ProtocolResourceDefinition.WILDCARD_PATH.getKey(),result);
  }
}
]</InnerVar>
                <InnerVar>Resource [resource=context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS)]</InnerVar>
                <InnerVar>ManagementResourceRegistration [registration=context.getResourceRegistrationForUpdate().registerOverrideModel(this.name,provider)]</InnerVar>
                <InnerVar>Resource [stackResource=context.readResourceFromRoot(this.stackAddress,false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAttributeOverrideDescriptions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>locale</ParamName>
                    <ParamType>Locale</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getChildTypeOverrideDescriptions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>locale</ParamName>
                    <ParamType>Locale</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StandardResourceDescriptionResolver [resolver=new JGroupsResourceDescriptionResolver()]</InnerVar>
                <InnerVar>String [description=resolver.getChildTypeDescription(ProtocolResourceDefinition.WILDCARD_PATH.getKey(),locale,resolver.getResourceBundle(locale))]</InnerVar>
                <InnerVar>ModelNode [result=new ModelNode()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>result.get(ModelDescriptionConstants.DESCRIPTION);set;[description]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createProtocolResourceDefinition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ResourceDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>protocolName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>protocolClass</ParamName>
                    <ParamType>? extends Protocol</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SimpleResourceDescriptionResolver [resolver=new SimpleResourceDescriptionResolver(protocolName,protocolClass.getSimpleName())]</InnerVar>
                <InnerVar>ResourceBuilder [builder=ResourceBuilder.Factory.create(ProtocolResourceDefinition.pathElement(protocolName),resolver)]</InnerVar>
                <InnerVar>ProtocolMetricsHandler [handler=new ProtocolMetricsHandler(this)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findProtocolClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends Protocol</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>OperationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>protocolName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>module</ParamName>
                    <ParamType>ModuleIdentifier</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [className=protocolName]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>OperationFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>