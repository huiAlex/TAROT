<Class>
    <Id>1829</Id>
    <Package>org.infinispan.stream.impl.local</Package>
    <ClassName>AbstractLocalCacheStream</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BaseStream</SuperInterface>
        <SuperInterface>T</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AbstractLocalCacheStream  /** 
 * Implements the base operations required for a local stream. stream is populated
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>streamSupplier</FieldName>
            <FieldType>StreamSupplier</FieldType>
        </Field>
        <Field>
            <FieldName>streamSupplier</FieldName>
            <FieldType>T</FieldType>
        </Field>
        <Field>
            <FieldName>registry</FieldName>
            <FieldType>ComponentRegistry</FieldType>
        </Field>
        <Field>
            <FieldName>onCloseRunnables</FieldName>
            <FieldType>Collection</FieldType>
        </Field>
        <Field>
            <FieldName>onCloseRunnables</FieldName>
            <FieldType>Runnable</FieldType>
        </Field>
        <Field>
            <FieldName>intermediateOperations</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>intermediateOperations</FieldName>
            <FieldType>IntermediateOperation</FieldType>
        </Field>
        <Field>
            <FieldName>segmentsToFilter</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>segmentsToFilter</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>keysToFilter</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>keysToFilter</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>parallel</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>buildStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>S</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>segmentsToFilter</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keysToFilter</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removableIterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>realIterator</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AbstractLocalCacheStream</MethodName>
            <MethodComment>/** 
 * @param streamSupplier
 * @param parallel
 * @param registry
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>streamSupplier</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parallel</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>ComponentRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AbstractLocalCacheStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>original</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>S</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>BaseStream&lt;?,?&gt; [stream=streamSupplier.buildStream(segmentsToFilter,keysToFilter)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isParallel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sequential</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>S2</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parallel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>S2</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unordered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>S2</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>intermediateOperations;add;[new UnorderedOperation&lt;&gt;()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onClose</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>S2</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>closeHandler</ParamName>
                    <ParamType>Runnable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>onCloseRunnables;add;[closeHandler]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>onCloseRunnables;forEach;[Runnable::run]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>