<Class>
    <Id>1611</Id>
    <Package>org.infinispan.query.dsl</Package>
    <ClassName>FilterConditionContext</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FilterConditionContext  /** 
 * The context of a complete filter. Provides operations to allow connecting multiple filters together with boolean operators.
 * @author anistor@redhat.com
 * @since 6.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>and</MethodName>
            <MethodComment>/** 
 * Creates a new context and connects it with the current one using boolean AND. The new context is added after the current one. The two conditions are not grouped so operator precedence in the resulting condition might change. &lt;p/&gt; The effect is: a AND b
 * @return the new context
 */
</MethodComment>
            <ReturnType>FilterConditionBeginContext</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>and</MethodName>
            <MethodComment>/** 
 * Connects a given context with the current one using boolean AND. The new context is added after the current one and is grouped. Operator precedence will be unaffected due to grouping. &lt;p/&gt; The effect is: a AND (b)
 * @param rightCondition the second condition
 * @return the new context
 */
</MethodComment>
            <ReturnType>FilterConditionContextQueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rightCondition</ParamName>
                    <ParamType>FilterConditionContext</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>or</MethodName>
            <MethodComment>/** 
 * Creates a new context and connects it with the current one using boolean OR. The new context is added after the current one. &lt;p/&gt; The effect is: a OR b
 * @return the new context
 */
</MethodComment>
            <ReturnType>FilterConditionBeginContext</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>or</MethodName>
            <MethodComment>/** 
 * Connects a given context with the current one using boolean OR. The new context is added after the current one and is grouped. &lt;p/&gt; The effect is: a OR (b)
 * @param rightCondition the second condition
 * @return the new context
 */
</MethodComment>
            <ReturnType>FilterConditionContextQueryBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rightCondition</ParamName>
                    <ParamType>FilterConditionContext</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toBuilder</MethodName>
            <MethodComment>/** 
 * Get the  {@link QueryBuilder} that created this context. As of Infinispan 9.0 this is no longer needed.
 * @return the parent builder
 * @deprecated To be removed in Infinispan 10.0 without replacement.
 */
</MethodComment>
            <ReturnType>QueryBuilder</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>