<Class>
    <Id>1043</Id>
    <Package>org.infinispan.tasks</Package>
    <ClassName>TaskManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TaskManager  /** 
 * TaskManager. Allows executing tasks and retrieving the list of currently running tasks
 * @author Tristan Tarrant
 * @since 8.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>runTask</MethodName>
            <MethodComment>/** 
 * Executes the named task, passing an optional cache and a map of named parameters.
 * @param taskName
 * @param context
 * @return
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>TaskContext</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentTasks</MethodName>
            <MethodComment>/** 
 * Retrieves the currently executing tasks. If running in a cluster this operation will return all of the tasks running on all nodes
 * @return a list of {@link TaskExecution} elements
 */
</MethodComment>
            <ReturnType>TaskExecution</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEngines</MethodName>
            <MethodComment>/** 
 * Retrieves the installed task engines
 */
</MethodComment>
            <ReturnType>TaskEngine</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTasks</MethodName>
            <MethodComment>/** 
 * Retrieves the list of all available tasks
 * @return a list of {@link Task} elements
 */
</MethodComment>
            <ReturnType>Task</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerTaskEngine</MethodName>
            <MethodComment>/** 
 * Registers a new  {@link TaskEngine}
 * @param taskEngine an instance of the task engine that has to be registered with the task manager
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskEngine</ParamName>
                    <ParamType>TaskEngine</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>