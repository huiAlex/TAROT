<Class>
    <Id>1860</Id>
    <Package>org.infinispan.query.impl.externalizers</Package>
    <ClassName>LuceneTopFieldDocsExternalizer</ClassName>
    <SuperClass>AbstractExternalizer</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getTypeClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends TopFieldDocs&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TopFieldDocs</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [totalHits=UnsignedNumeric.readUnsignedInt(input)]</InnerVar>
                <InnerVar>float [maxScore=input.readFloat()]</InnerVar>
                <InnerVar>int [sortFieldsCount=UnsignedNumeric.readUnsignedInt(input)]</InnerVar>
                <InnerVar>SortField[] [sortFields=new SortField[sortFieldsCount]]</InnerVar>
                <InnerVar>int [scoreDocsCount=UnsignedNumeric.readUnsignedInt(input)]</InnerVar>
                <InnerVar>ScoreDoc[] [scoreDocs=new ScoreDoc[scoreDocsCount]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>output</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topFieldDocs</ParamName>
                    <ParamType>TopFieldDocs</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SortField[] [sortFields=topFieldDocs.fields]</InnerVar>
                <InnerVar>ScoreDoc[] [scoreDocs=topFieldDocs.scoreDocs]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>UnsignedNumeric;writeUnsignedInt;[output, topFieldDocs.totalHits]</InnerMethodInvoke>
                <InnerMethodInvoke>output;writeFloat;[topFieldDocs.getMaxScore()]</InnerMethodInvoke>
                <InnerMethodInvoke>UnsignedNumeric;writeUnsignedInt;[output, sortFields.length]</InnerMethodInvoke>
                <InnerMethodInvoke>UnsignedNumeric;writeUnsignedInt;[output, scoreDocs.length]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>