<Class>
    <Id>1239</Id>
    <Package>org.infinispan.client.hotrod.event</Package>
    <ClassName>ClientEvents</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>FAILOVER_EVENT_SINGLETON</FieldName>
            <FieldType>ClientCacheFailoverEvent</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClientEvent.Type</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ClientEvents</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mkCachefailoverEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClientCacheFailoverEvent</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addClientQueryListener</MethodName>
            <MethodComment>/** 
 * Register a client listener that uses a query DSL based filter. The listener is expected to be annotated such that {@link org.infinispan.client.hotrod.annotation.ClientListener#useRawData} = true and {@link org.infinispan.client.hotrod.annotation.ClientListener#filterFactoryName} and {@link org.infinispan.client.hotrod.annotation.ClientListener#converterFactoryName} are equal to {@link Filters#QUERY_DSL_FILTER_FACTORY_NAME}
 * @param remoteCache the remote cache to attach the listener
 * @param listener    the listener instance
 * @param query       the query to be used for filtering and conversion (if projections are used)
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>remoteCache</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>Query</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientListener [l=ReflectionUtil.getAnnotation(listener.getClass(),ClientListener.class)]</InnerVar>
                <InnerVar>Object[] [factoryParams=makeFactoryParams(query)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remoteCache;addClientListener;[listener, factoryParams, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>