<Class>
    <Id>3946</Id>
    <Package>org.infinispan.tools.xsd</Package>
    <ClassName>XSDoc</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>namespace</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>doc</FieldName>
            <FieldType>Document</FieldType>
        </Field>
        <Field>
            <FieldName>major</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>minor</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>xmls</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>xmls</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>latestSchemas</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>latestSchemas</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>xslt</FieldName>
            <FieldType>Transformer</FieldType>
        </Field>
        <Field>
            <FieldName>docBuilder</FieldName>
            <FieldType>DocumentBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>indexDoc</FieldName>
            <FieldType>Document</FieldType>
        </Field>
        <Field>
            <FieldName>indexRoot</FieldName>
            <FieldType>Element</FieldType>
        </Field>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>TransformerFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Schema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>doc</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [versionedNamespace=getDocumentNamespace(doc)]</InnerVar>
                <InnerVar>int [versionSeparator=versionedNamespace.lastIndexOf(':')]</InnerVar>
                <InnerVar>String[] [versionParts=versionedNamespace.substring(versionSeparator + 1).split("\\.")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>since</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>schema</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>XSDoc</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ClassLoader [cl=XSDoc.class.getClassLoader()]</InnerVar>
                <InnerVar>DocumentBuilderFactory [dbf=DocumentBuilderFactory.newInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>factory;setURIResolver;[(href,base) -&gt; {
  Document doc=xmls.get(getBaseFileName(href));
  if (doc != null) {
    return new DOMSource(doc);
  }
 else {
    return null;
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>dbf;setNamespaceAware;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>indexDoc;appendChild;[indexRoot]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>load</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Document [doc=docBuilder.parse(new File(fileName))]</InnerVar>
                <InnerVar>String [name=getBaseFileName(fileName)]</InnerVar>
                <InnerVar>Schema [schema=new Schema(doc,name)]</InnerVar>
                <InnerVar>Schema [current=latestSchemas.get(schema.namespace)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>xmls;put;[name, doc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>doc</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outputDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDocumentNamespace</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>doc</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Node [child=doc.getFirstChild()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transformAll</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outputDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>latestSchemas.values();forEach;[schema -&gt; {
  transform(schema.name,schema.doc,outputDir);
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outputDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassLoader [cl=XSDoc.class.getClassLoader()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printDocument;[indexDoc, System.out]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBaseFileName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>absoluteFileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [slash=absoluteFileName.lastIndexOf('/')]</InnerVar>
                <InnerVar>int [dot=absoluteFileName.lastIndexOf('.')]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printDocument</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>doc</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TransformerFactory [tf=TransformerFactory.newInstance()]</InnerVar>
                <InnerVar>Transformer [transformer=tf.newTransformer()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.OMIT_XML_DECLARATION, "no"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.METHOD, "xml"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.INDENT, "yes"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.ENCODING, "UTF-8"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;["{http://xml.apache.org/xslt}indent-amount", "4"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;transform;[new DOMSource(doc), new StreamResult(new OutputStreamWriter(out,"UTF-8"))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>TransformerException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>argv</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>XSDoc [xsDoc=new XSDoc()]</InnerVar>
                <InnerVar>String [outputDir=System.getProperty("user.dir")]</InnerVar>
                <InnerVar>Getopt [opts=new Getopt("xsdoc",argv,"o:")]</InnerVar>
                <InnerVar>File [outDir=new File(outputDir)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>outDir;mkdirs;[]</InnerMethodInvoke>
                <InnerMethodInvoke>xsDoc;transformAll;[outDir]</InnerMethodInvoke>
                <InnerMethodInvoke>xsDoc;generateIndex;[outDir]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>