<Class>
    <Id>3790</Id>
    <Package>org.infinispan.rest</Package>
    <ClassName>InfinispanResponse</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanResponse  /** 
 * Representation of a HTTP response tailed for Infinispan-specific responses.
 * @author Sebastian ≈Åaskawiec
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DATE_TIME_FORMATTER</FieldName>
            <FieldType>DateTimeFormatter</FieldType>
        </Field>
        <Field>
            <FieldName>TIME_TO_LIVE_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_IDLE_TIME_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CLUSTER_PRIMARY_OWNER_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CLUSTER_NODE_NAME_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CLUSTER_SERVER_ADDRESS_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>request</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>request</FieldName>
            <FieldType>InfinispanRequest</FieldType>
        </Field>
        <Field>
            <FieldName>content</FieldName>
            <FieldType>ByteBuf</FieldType>
        </Field>
        <Field>
            <FieldName>contentType</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>httpVersion</FieldName>
            <FieldType>HttpVersion</FieldType>
        </Field>
        <Field>
            <FieldName>httpStatus</FieldName>
            <FieldType>HttpResponseStatus</FieldType>
        </Field>
        <Field>
            <FieldName>etag</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>etag</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>cacheControl</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>cacheControl</FieldName>
            <FieldType>CacheControl</FieldType>
        </Field>
        <Field>
            <FieldName>lastModified</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>lastModified</FieldName>
            <FieldType>Date</FieldType>
        </Field>
        <Field>
            <FieldName>expires</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>expires</FieldName>
            <FieldType>Date</FieldType>
        </Field>
        <Field>
            <FieldName>timeToLive</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>timeToLive</FieldName>
            <FieldType>Long</FieldType>
        </Field>
        <Field>
            <FieldName>maxIdle</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>maxIdle</FieldName>
            <FieldType>Long</FieldType>
        </Field>
        <Field>
            <FieldName>clusterPrimaryOwner</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>clusterPrimaryOwner</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>clusterNodeName</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>clusterNodeName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>clusterServerAddress</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>clusterServerAddress</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>authenticate</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>authenticate</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>charset</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>charset</FieldName>
            <FieldType>Charset</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>InfinispanResponse</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>InfinispanRequest</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inReplyTo</MethodName>
            <MethodComment>/** 
 * Creates an  {@link InfinispanResponse} as a reply to specific {@link InfinispanRequest}.
 * @param request Request to reply to.
 * @return Response object.
 */
</MethodComment>
            <ReturnType>InfinispanResponse</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>InfinispanRequest</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>asError</MethodName>
            <MethodComment>/** 
 * Creates an  {@link InfinispanResponse} as an error.
 * @return Response object.
 */
</MethodComment>
            <ReturnType>InfinispanResponse</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>InfinispanRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>status</ParamName>
                    <ParamType>HttpResponseStatus</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>description</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InfinispanResponse [infinispanResponse=new InfinispanResponse(Optional.of(request))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>infinispanResponse;status;[status]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>contentAsText</MethodName>
            <MethodComment>/** 
 * Adds content as text. Converts it internally to &lt;code&gt;UTF-8&lt;/code&gt;.
 * @param content Content.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>content</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ByteBufUtil;writeUtf8;[this.content, content]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>contentAsBytes</MethodName>
            <MethodComment>/** 
 * Adds content as binary array.
 * @param content Content.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>content</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.content;writeBytes;[content]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>contentType</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;Content-Type&lt;/code&gt; header.
 * @param contentType &lt;code&gt;Content-Type&lt;/code&gt; header.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>contentType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>httpVersion</MethodName>
            <MethodComment>/** 
 * Adds HTTP version header.
 * @param httpVersion HTTP version header.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>httpVersion</ParamName>
                    <ParamType>HttpVersion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>status</MethodName>
            <MethodComment>/** 
 * Adds status code.
 * @param httpStatus Status code.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>httpStatus</ParamName>
                    <ParamType>HttpResponseStatus</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isKeepAlive</MethodName>
            <MethodComment>/** 
 * Checks whether this is a Keep Alive type of response.
 * @return &lt;code&gt;true&lt;/code&gt; if the response contains Keep Alive headers.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [isKeepAlive=request.map(r -&gt; HttpUtil.isKeepAlive(r.getRawRequest())).orElse(false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toNettyHttpResponse</MethodName>
            <MethodComment>/** 
 * Renders  {@link FullHttpResponse} object.
 * @return {@link FullHttpResponse} object based on this {@link InfinispanResponse}.
 */
</MethodComment>
            <ReturnType>FullHttpResponse</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>FullHttpResponse [response=new DefaultFullHttpResponse(httpVersion,httpStatus,content)]</InnerVar>
                <InnerVar>StringBuilder [contentTypeWithCharset=new StringBuilder(contentType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>request.flatMap(InfinispanRequest::getStreamId);ifPresent;[streamId -&gt; response.headers().set(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(),streamId)]</InnerMethodInvoke>
                <InnerMethodInvoke>etag;ifPresent;[e -&gt; response.headers().set(HttpHeaderNames.ETAG,e)]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheControl;ifPresent;[e -&gt; response.headers().set(HttpHeaderNames.CACHE_CONTROL,e)]</InnerMethodInvoke>
                <InnerMethodInvoke>lastModified;ifPresent;[e -&gt; response.headers().set(HttpHeaderNames.LAST_MODIFIED,DATE_TIME_FORMATTER.format(e.toInstant()))]</InnerMethodInvoke>
                <InnerMethodInvoke>expires;ifPresent;[e -&gt; response.headers().set(HttpHeaderNames.EXPIRES,DATE_TIME_FORMATTER.format(e.toInstant()))]</InnerMethodInvoke>
                <InnerMethodInvoke>timeToLive;ifPresent;[e -&gt; response.headers().set(TIME_TO_LIVE_HEADER,TimeUnit.MILLISECONDS.toSeconds(e))]</InnerMethodInvoke>
                <InnerMethodInvoke>maxIdle;ifPresent;[e -&gt; response.headers().set(MAX_IDLE_TIME_HEADER,TimeUnit.MILLISECONDS.toSeconds(e))]</InnerMethodInvoke>
                <InnerMethodInvoke>clusterPrimaryOwner;ifPresent;[e -&gt; response.headers().set(CLUSTER_PRIMARY_OWNER_HEADER,e)]</InnerMethodInvoke>
                <InnerMethodInvoke>clusterNodeName;ifPresent;[e -&gt; response.headers().set(CLUSTER_NODE_NAME_HEADER,e)]</InnerMethodInvoke>
                <InnerMethodInvoke>clusterServerAddress;ifPresent;[e -&gt; response.headers().set(CLUSTER_SERVER_ADDRESS_HEADER,e)]</InnerMethodInvoke>
                <InnerMethodInvoke>authenticate;ifPresent;[e -&gt; response.headers().set(HttpHeaderNames.WWW_AUTHENTICATE,e)]</InnerMethodInvoke>
                <InnerMethodInvoke>response.headers();set;[HttpHeaderNames.CONTENT_TYPE, contentTypeWithCharset.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>HttpUtil;setContentLength;[response, response.content().readableBytes()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>etag</MethodName>
            <MethodComment>/** 
 * Adds ETAG.
 * @param etag ETag value to be added.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>etag</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheControl</MethodName>
            <MethodComment>/** 
 * Adds Cache Control headers.
 * @param cacheControl Cache Control headers.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheControl</ParamName>
                    <ParamType>CacheControl</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lastModified</MethodName>
            <MethodComment>/** 
 * Add &lt;code&gt;last-modified&lt;/code&gt; header.
 * @param lastModified &lt;code&gt;last-modified&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lastModified</ParamName>
                    <ParamType>Date</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>expires</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;expires&lt;/code&gt; header.
 * @param expires &lt;code&gt;expires&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expires</ParamName>
                    <ParamType>Date</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>timeToLive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lifespan</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxIdle</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;maxIdleTimeSeconds&lt;/code&gt; header.
 * @param maxIdle &lt;code&gt;maxIdleTimeSeconds&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>maxIdle</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clusterPrimaryOwner</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;Cluster-Primary-Owner&lt;/code&gt; header.
 * @param primaryOwner &lt;code&gt;Cluster-Primary-Owner&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>primaryOwner</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clusterNodeName</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;Cluster-Node-Name&lt;/code&gt; header.
 * @param nodeName &lt;code&gt;Cluster-Node-Name&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodeName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clusterServerAddress</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;Cluster-Server-Address&lt;/code&gt; header.
 * @param serverAddress &lt;code&gt;Cluster-Server-Address&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverAddress</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>authenticate</MethodName>
            <MethodComment>/** 
 * Adds &lt;code&gt;www-authenticate&lt;/code&gt; header.
 * @param authenticateHeader &lt;code&gt;www-authenticate&lt;/code&gt; header value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>authenticateHeader</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>charset</MethodName>
            <MethodComment>/** 
 * Adds a charset.
 * @param charset charset value.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>charset</ParamName>
                    <ParamType>Charset</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>