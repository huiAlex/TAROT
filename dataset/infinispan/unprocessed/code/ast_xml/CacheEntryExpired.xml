<Class>
    <Id>4041</Id>
    <Package>org.infinispan.notifications.cachelistener.annotation</Package>
    <ClassName>CacheEntryExpired</ClassName>
    <ClassComment>CacheEntryExpired  /** 
 * This annotation should be used on methods that need to be notified when a cache entry is expired &lt;p/&gt; Methods annotated with this annotation should be public and take in a single parameter, a  {@link org.infinispan.notifications.cachelistener.event.CacheEntryExpiredEvent} otherwise an {@link org.infinispan.notifications.IncorrectListenerException} will be thrown when registering your cache listener.&lt;p/&gt; Locking: there is no guarantee as to whether the lock is acquired for this key, however there is internal guarantees to make sure these events are not out of order &lt;p/&gt; It is possible yet highly unlikely to receive this event right after a remove event even though the value was previously removed.  This can happen in the case when an expired entry in a store (not present in memory) is found by the reaper thread and a remove occurs at the same time.
 * @author William Burns
 * @see org.infinispan.notifications.Listener
 * @since 8.0
 */
</ClassComment>
    <FieldList/>
    <MethodList/>
</Class>