<Class>
    <Id>629</Id>
    <Package>org.infinispan.commons.tx</Package>
    <ClassName>TransactionManagerImpl</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>TransactionManager</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TransactionManagerImpl  /** 
 * A simple  {@link TransactionManager} implementation.&lt;p&gt; It provides the basic to handle  {@link Transaction}s and supports any  {@link javax.transaction.xa.XAResource}. &lt;p&gt; Implementation notes: &lt;ul&gt; &lt;li&gt;The state is kept in memory only.&lt;/li&gt; &lt;li&gt;Does not support recover.&lt;/li&gt; &lt;li&gt;Does not support multi-thread transactions. Although it is possible to execute the transactions in multiple threads, this transaction manager does not wait for them to complete. It is the application responsibility to wait before invoking {@link #commit()} or {@link #rollback()}&lt;/li&gt; &lt;li&gt;The transaction should not block. It is no possible to  {@link #setTransactionTimeout(int)} and this transaction manager won't rollback the transaction if it takes too long.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt; If you need any of the requirements above, please consider use another implementation. &lt;p&gt; Also, it does not implement any 1-phase-commit optimization.
 * @author Bela Ban
 * @author Pedro Ruivo
 * @since 9.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>CURRENT_TRANSACTION</FieldName>
            <FieldType>ThreadLocal</FieldType>
        </Field>
        <Field>
            <FieldName>CURRENT_TRANSACTION</FieldName>
            <FieldType>Transaction</FieldType>
        </Field>
        <Field>
            <FieldName>transactionManagerId</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>dissociateTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>CURRENT_TRANSACTION;remove;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>associateTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tx</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>CURRENT_TRANSACTION;set;[tx]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>begin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [currentTx=getTransaction()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;associateTransaction;[createTransaction()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NotSupportedException</ExceptionType>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>commit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getTransactionAndFailIfNone();commit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dissociateTransaction;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RollbackException</ExceptionType>
                <ExceptionType>HeuristicMixedException</ExceptionType>
                <ExceptionType>HeuristicRollbackException</ExceptionType>
                <ExceptionType>SecurityException</ExceptionType>
                <ExceptionType>IllegalStateException</ExceptionType>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rollback</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getTransactionAndFailIfNone();rollback;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dissociateTransaction;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IllegalStateException</ExceptionType>
                <ExceptionType>SecurityException</ExceptionType>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setRollbackOnly</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getTransactionAndFailIfNone();setRollbackOnly;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IllegalStateException</ExceptionType>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [tx=getTransaction()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTransactionTimeout</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seconds</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suspend</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [tx=getTransaction()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;dissociateTransaction;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resume</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tx</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;associateTransaction;[tx]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InvalidTransactionException</ExceptionType>
                <ExceptionType>IllegalStateException</ExceptionType>
                <ExceptionType>SystemException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transaction</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransactionAndFailIfNone</MethodName>
            <MethodComment>/** 
 * @return the current transaction (not null!)
 */
</MethodComment>
            <ReturnType>Transaction</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [transaction=CURRENT_TRANSACTION.get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>