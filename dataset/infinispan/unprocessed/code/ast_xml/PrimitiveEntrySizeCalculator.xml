<Class>
    <Id>1863</Id>
    <Package>org.infinispan.container.entries</Package>
    <ClassName>PrimitiveEntrySizeCalculator</ClassName>
    <SuperClass>AbstractEntrySizeCalculatorHelper</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PrimitiveEntrySizeCalculator  /** 
 * Entry Size calculator that returns an approximation of how much various primitives, primitive wrappers, Strings, and arrays
 * @author wburns
 * @since 8.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>MAX_CACHE_VALUE</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>MIN_CACHE_VALUE</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_CACHE_VALUE</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>MIN_CACHE_VALUE</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_CACHE_VALUE</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>MIN_CACHE_VALUE</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_CACHE_VALUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MIN_CACHE_VALUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>calculateSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class&lt;?&gt; [objClass=object.getClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>calculateMaxIntCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnsafe</MethodName>
            <MethodComment>/** 
 * Returns a sun.misc.Unsafe.  Suitable for use in a 3rd party package. Replace with a simple call to Unsafe.getUnsafe when integrating into a jdk.
 * @return a sun.misc.Unsafe
 */
</MethodComment>
            <ReturnType>Unsafe</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Unsafe</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Class&lt;Unsafe&gt; [k=Unsafe.class]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>