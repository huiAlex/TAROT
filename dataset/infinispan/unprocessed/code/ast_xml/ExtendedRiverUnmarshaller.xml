<Class>
    <Id>258</Id>
    <Package>org.infinispan.commons.marshall.jboss</Package>
    <ClassName>ExtendedRiverUnmarshaller</ClassName>
    <SuperClass>RiverUnmarshaller</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExtendedRiverUnmarshaller  /** 
 * An extended  {@link RiverUnmarshaller} that allows to track lifecycle ofunmarshaller so that pools can be notified when not in use any more.
 * @author Galder Zamarre√±o
 * @since 5.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>listener</FieldName>
            <FieldType>RiverCloseListener</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ExtendedRiverUnmarshaller</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factory</ParamName>
                    <ParamType>RiverMarshallerFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>registry</ParamName>
                    <ParamType>SerializableClassRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>MarshallingConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCloseListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>closeListener</ParamName>
                    <ParamType>RiverCloseListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finish</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnreadBufferedCount</MethodName>
            <MethodComment>/** 
 * Returns number unread buffered bytes.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>