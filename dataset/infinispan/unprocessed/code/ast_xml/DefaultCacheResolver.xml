<Class>
    <Id>3106</Id>
    <Package>org.infinispan.jcache.annotation</Package>
    <ClassName>DefaultCacheResolver</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CacheResolver</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DefaultCacheResolver  /** 
 * Default  {@link javax.cache.annotation.CacheResolver} implementation forstandalone environments, where no Cache/CacheManagers are injected via CDI.
 * @author Kevin Pollet &lt;kevin.pollet@serli.com&gt; (C) 2011 SERLI
 * @author Galder Zamarre√±o
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>defaultCacheManager</FieldName>
            <FieldType>CacheManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DefaultCacheResolver</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CachingProvider [provider=Caching.getCachingProvider()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resolveCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheInvocationContext</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [cacheName=cacheInvocationContext.getCacheName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNotNull;[cacheInvocationContext, "cacheInvocationContext parameter must not be null"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOrCreateCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>K</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cache&lt;K,V&gt; [cache=defaultCacheManager.getCache(cacheName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>