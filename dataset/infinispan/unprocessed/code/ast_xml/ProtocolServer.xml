<Class>
    <Id>3612</Id>
    <Package>org.infinispan.server.core</Package>
    <ClassName>ProtocolServer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CacheIgnoreAware</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ProtocolServer  /** 
 * Represents a protocol compliant server.
 * @author Galder Zamarre√±o
 * @author wburns
 * @since 9.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment>/** 
 * Starts the server backed by the given cache manager and with the corresponding configuration.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>C</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheManager</ParamName>
                    <ParamType>EmbeddedCacheManager</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Stops the server
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEncoder</MethodName>
            <MethodComment>/** 
 * Gets the encoder for this protocol server. The encoder is responsible for writing back common header responses back to client. This method can return null if the server has no encoder. You can find an example of the server that has no encoder in the Memcached server.
 */
</MethodComment>
            <ReturnType>ChannelOutboundHandler</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDecoder</MethodName>
            <MethodComment>/** 
 * Gets the decoder for this protocol server. The decoder is responsible for reading client requests. This method cannot return null.
 */
</MethodComment>
            <ReturnType>ChannelInboundHandler</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConfiguration</MethodName>
            <MethodComment>/** 
 * Returns the configuration used to start this server
 */
</MethodComment>
            <ReturnType>C</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInitializer</MethodName>
            <MethodComment>/** 
 * Returns a pipeline factory
 */
</MethodComment>
            <ReturnType>Channel</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>