<Class>
    <Id>1088</Id>
    <Package>org.infinispan.notifications.cachelistener.event</Package>
    <ClassName>CacheEntryExpiredEvent</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CacheEntryEvent</SuperInterface>
        <SuperInterface>K</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheEntryExpiredEvent  /** 
 * This event subtype is passed in to any method annotated with {@link org.infinispan.notifications.cachelistener.annotation.CacheEntryExpired}. &lt;p /&gt; The  {@link #getValue()} method returns the value of the entry before it expired.  Note this value may be null ifthe entry expired from a cache store &lt;p&gt; This is a post only event &lt;p&gt; This event can be raised multiple times in sequence for a single expiration event if concurrent reads for the same key occur on different nodes.  This should rarely happen though since this window is narrowed internally by the cache.
 * @author William Burns
 * @since 8.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getValue</MethodName>
            <MethodComment>/** 
 * Retrieves the value of the entry being expired.  Note this event is raised after the value has been expired. &lt;p /&gt;
 * @return the value of the entry expired
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>