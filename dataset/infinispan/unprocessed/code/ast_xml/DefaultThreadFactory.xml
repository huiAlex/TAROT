<Class>
    <Id>1553</Id>
    <Package>org.infinispan.factories.threads</Package>
    <ClassName>DefaultThreadFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ThreadFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DefaultThreadFactory  /** 
 * Thread factory based on JBoss Thread's JBossThreadFactory.
 * @author Galder Zamarre√±o
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DEFAULT_PATTERN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>threadGroup</FieldName>
            <FieldType>ThreadGroup</FieldType>
        </Field>
        <Field>
            <FieldName>initialPriority</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>threadNamePattern</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>factoryThreadIndexSequence</FieldName>
            <FieldType>AtomicLong</FieldType>
        </Field>
        <Field>
            <FieldName>factoryIndex</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>globalThreadIndexSequence</FieldName>
            <FieldType>AtomicLong</FieldType>
        </Field>
        <Field>
            <FieldName>factoryIndexSequence</FieldName>
            <FieldType>AtomicLong</FieldType>
        </Field>
        <Field>
            <FieldName>node</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>component</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DefaultThreadFactory</MethodName>
            <MethodComment>/** 
 * Construct a new instance.  The access control context of the calling thread will be the one used to create new threads if a security manager is installed.
 * @param threadGroup the thread group to assign threads to by default (may be {@code null})
 * @param initialPriority the initial thread priority, or {@code null} to use the thread group's setting
 * @param threadNamePattern the name pattern string
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>threadGroup</ParamName>
                    <ParamType>ThreadGroup</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initialPriority</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threadNamePattern</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DefaultThreadFactory</MethodName>
            <MethodComment>/** 
 * Construct a new instance.  The access control context of the calling thread will be the one used to create new threads if a security manager is installed.
 * @param name the name of this thread factory (may be {@code null})
 * @param threadGroup the thread group to assign threads to by default (may be {@code null})
 * @param initialPriority the initial thread priority, or {@code null} to use the thread group's setting
 * @param threadNamePattern the name pattern string
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threadGroup</ParamName>
                    <ParamType>ThreadGroup</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initialPriority</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threadNamePattern</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setComponent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>threadNamePattern</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>threadGroup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ThreadGroup</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialPriority</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newThread</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Thread</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Runnable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createThread</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Thread</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Runnable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ThreadNameInfo [nameInfo=new ThreadNameInfo(globalThreadIndexSequence.getAndIncrement(),factoryThreadIndexSequence.getAndIncrement(),factoryIndex,node,component)]</InnerVar>
                <InnerVar>Thread [thread=new Thread(threadGroup,target)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>thread;setName;[nameInfo.format(thread,threadNamePattern)]</InnerMethodInvoke>
                <InnerMethodInvoke>thread;setPriority;[initialPriority]</InnerMethodInvoke>
                <InnerMethodInvoke>thread;setDaemon;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>