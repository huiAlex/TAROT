<Class>
    <Id>644</Id>
    <Package>org.jboss.as.clustering.infinispan.subsystem</Package>
    <ClassName>InfinispanSubsystemXMLReader</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>XMLElementReader</SuperInterface>
        <SuperInterface>List&lt;ModelNode&gt;</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanSubsystemXMLReader  /** 
 * Infinispan subsystem parsing code.
 * @author Paul Ferraro
 * @author Richard Achmatowicz
 * @author Tristan Tarrant
 * @author Radoslav Husar
 * @author William Burns
 * @author Martin Gencur
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>namespace</FieldName>
            <FieldType>Namespace</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>InfinispanSubsystemXMLReader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>namespace</ParamName>
                    <ParamType>Namespace</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readElement</MethodName>
            <MethodComment>/** 
 * {@inheritDoc}
 * @see org.jboss.staxmapper.XMLElementReader#readElement(org.jboss.staxmapper.XMLExtendedStreamReader,Object)
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [operations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [subsystemAddress=PathAddress.pathAddress(InfinispanExtension.SUBSYSTEM_PATH)]</InnerVar>
                <InnerVar>ModelNode [subsystem=Util.createAddOperation(subsystemAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[subsystemAddress, subsystem]</InnerMethodInvoke>
                <InnerMethodInvoke>result;addAll;[operations.values()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseContainer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsystemAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [container=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>String [name=null]</InnerVar>
                <InnerVar>Set&lt;Attribute&gt; [required=EnumSet.of(Attribute.NAME)]</InnerVar>
                <InnerVar>PathAddress [containerAddress=subsystemAddress.append(ModelKeys.CACHE_CONTAINER,name)]</InnerVar>
                <InnerVar>PathAddress [configurationsAddress=containerAddress.append(CacheContainerConfigurationsResource.PATH)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>container.get(OP_ADDR);set;[containerAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[containerAddress, container]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[configurationsAddress, Util.getEmptyOperation(ADD,configurationsAddress.toModelNode())]</InnerMethodInvoke>
                <InnerMethodInvoke>Stream.of(ThreadPoolResource.values());forEach;[pool -&gt; operations.put(containerAddress.append(pool.getPathElement()),Util.createAddOperation(containerAddress.append(pool.getPathElement())))]</InnerMethodInvoke>
                <InnerMethodInvoke>Stream.of(ScheduledThreadPoolResource.values());forEach;[pool -&gt; operations.put(containerAddress.append(pool.getPathElement()),Util.createAddOperation(containerAddress.append(pool.getPathElement())))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseGlobalState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [globalStateAddress=containerAddress.append(ModelKeys.GLOBAL_STATE,ModelKeys.GLOBAL_STATE_NAME)]</InnerVar>
                <InnerVar>ModelNode [globalState=Util.createAddOperation(globalStateAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[globalStateAddress, globalState]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseGlobalStatePath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>statePath</ParamName>
                    <ParamType>ObjectTypeAttributeDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [model=operation.get(statePath.getName())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTransport</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [transportAddress=containerAddress.append(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME)]</InnerVar>
                <InnerVar>ModelNode [transport=Util.createAddOperation(transportAddress)]</InnerVar>
                <InnerVar>String [stack=null]</InnerVar>
                <InnerVar>String [cluster=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[transportAddress, transport]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseGlobalSecurity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [securityAddress=containerAddress.append(ModelKeys.SECURITY,ModelKeys.SECURITY_NAME)]</InnerVar>
                <InnerVar>ModelNode [security=Util.createAddOperation(securityAddress)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoAttributes;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[securityAddress, security]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseGlobalAuthorization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>securityAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [authorizationAddress=securityAddress.append(ModelKeys.AUTHORIZATION,ModelKeys.AUTHORIZATION_NAME)]</InnerVar>
                <InnerVar>ModelNode [authorization=Util.createAddOperation(authorizationAddress)]</InnerVar>
                <InnerVar>String [auditLogger=null]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>String [roleMapper=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>CacheContainerAuthorizationResource.AUDIT_LOGGER;parseAndSetParameter;[auditLogger, authorization, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>CacheContainerAuthorizationResource.MAPPER;parseAndSetParameter;[roleMapper, authorization, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[authorizationAddress, authorization]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseGlobalRole</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>authorizationAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [attributes=ParseUtils.requireAttributes(reader,Attribute.NAME.getLocalName(),Attribute.PERMISSIONS.getLocalName())]</InnerVar>
                <InnerVar>String [name=attributes[0]]</InnerVar>
                <InnerVar>PathAddress [roleAddress=authorizationAddress.append(ModelKeys.ROLE,name)]</InnerVar>
                <InnerVar>ModelNode [role=Util.createAddOperation(roleAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>AuthorizationRoleResource.NAME;parseAndSetParameter;[name, role, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[roleAddress, role]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCacheAttribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>Attribute</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseClusteredCacheAttribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>Attribute</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addCacheForConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheConfiguration</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=PathAddress.pathAddress(cacheConfiguration.get(OP_ADDR)).getLastElement().getValue()]</InnerVar>
                <InnerVar>PathAddress [cacheAddress=containerAddress.append(type,name)]</InnerVar>
                <InnerVar>ModelNode [cache=Util.getEmptyOperation(ADD,cacheAddress.toModelNode())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cache.get(ModelKeys.CONFIGURATION);set;[configurationName == null ? name : configurationName]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[cacheAddress, cache]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseLocalCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [cacheConfiguration=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [cacheConfigurationAddress=addNameToAddress(cacheConfiguration,containerAddress,ModelKeys.LOCAL_CACHE)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addCacheConfiguration;[ModelKeys.LOCAL_CACHE, containerAddress, operations, configurationOnly, cacheConfiguration, additionalConfigurationOperations, cacheConfigurationAddress]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addCacheConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheConfiguration</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>additionalConfigurationOperations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheConfigurationAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cacheConfiguration.get(CacheConfigurationResource.TEMPLATE.getName());set;[configurationOnly]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateClusteredCacheAttributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheConfiguration</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseDistributedCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [cacheConfiguration=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>PathAddress [cacheConfigurationAddress=addNameToAddress(cacheConfiguration,containerAddress,ModelKeys.DISTRIBUTED_CACHE)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;validateClusteredCacheAttributes;[reader, cacheConfiguration]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addCacheConfiguration;[ModelKeys.DISTRIBUTED_CACHE, containerAddress, operations, configurationOnly, cacheConfiguration, additionalConfigurationOperations, cacheConfigurationAddress]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseReplicatedCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [cacheConfiguration=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>PathAddress [cacheConfigurationAddress=addNameToAddress(cacheConfiguration,containerAddress,ModelKeys.REPLICATED_CACHE)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;validateClusteredCacheAttributes;[reader, cacheConfiguration]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addCacheConfiguration;[ModelKeys.REPLICATED_CACHE, containerAddress, operations, configurationOnly, cacheConfiguration, additionalConfigurationOperations, cacheConfigurationAddress]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseInvalidationCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configurationOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [cacheConfiguration=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>PathAddress [cacheConfigurationAddress=addNameToAddress(cacheConfiguration,containerAddress,ModelKeys.INVALIDATION_CACHE)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;validateClusteredCacheAttributes;[reader, cacheConfiguration]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addCacheConfiguration;[ModelKeys.INVALIDATION_CACHE, containerAddress, operations, configurationOnly, cacheConfiguration, additionalConfigurationOperations, cacheConfigurationAddress]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addNameToAddress</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathAddress</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>current</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=current.get(ModelKeys.NAME).asString()]</InnerVar>
                <InnerVar>PathAddress [cacheConfigurationAddress=containerAddress.append(ModelKeys.CONFIGURATIONS,ModelKeys.CONFIGURATIONS_NAME).append(type + ModelKeys.CONFIGURATION_SUFFIX,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>current.get(ModelDescriptionConstants.OP_ADDR);set;[cacheConfigurationAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>current;remove;[ModelKeys.NAME]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCacheElement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStateTransfer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [stateTransferAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.STATE_TRANSFER,ModelKeys.STATE_TRANSFER_NAME)]</InnerVar>
                <InnerVar>ModelNode [stateTransfer=Util.createAddOperation(stateTransferAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[stateTransferAddress, stateTransfer]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseLocking</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [lockingAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.LOCKING,ModelKeys.LOCKING_NAME)]</InnerVar>
                <InnerVar>ModelNode [locking=Util.createAddOperation(lockingAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[lockingAddress, locking]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTransaction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [transactionAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(TransactionConfigurationResource.PATH)]</InnerVar>
                <InnerVar>ModelNode [transaction=Util.createAddOperation(transactionAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[transactionAddress, transaction]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMemoryObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [objectAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(MemoryObjectConfigurationResource.PATH)]</InnerVar>
                <InnerVar>ModelNode [object=Util.createAddOperation(objectAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[objectAddress, object]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMemoryBinary</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [binaryAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(MemoryBinaryConfigurationResource.PATH)]</InnerVar>
                <InnerVar>ModelNode [binary=Util.createAddOperation(binaryAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[binaryAddress, binary]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMemoryOffHeap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [offHeapAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(MemoryOffHeapConfigurationResource.PATH)]</InnerVar>
                <InnerVar>ModelNode [offHeap=Util.createAddOperation(offHeapAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[offHeapAddress, offHeap]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseEviction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [enabled=false]</InnerVar>
                <InnerVar>long [size=-1]</InnerVar>
                <InnerVar>String [type=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseExpiration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [expirationAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ExpirationConfigurationResource.PATH)]</InnerVar>
                <InnerVar>ModelNode [expiration=Util.createAddOperation(expirationAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[expirationAddress, expiration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setOperationAddress</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathAddress</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>PathElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operation.get(ModelDescriptionConstants.OP_ADDR);set;[address.toModelNode()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCustomLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [loader=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.LOADER_NAME]</InnerVar>
                <InnerVar>PathAddress [loaderAddress=setOperationAddress(loader,PathAddress.pathAddress(cache.get(OP_ADDR)),LoaderConfigurationResource.LOADER_PATH,name)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;parseLoaderElements;[reader, loader, additionalConfigurationOperations]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[loaderAddress, loader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseClusterLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [loader=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.CLUSTER_LOADER_NAME]</InnerVar>
                <InnerVar>PathAddress [loaderAddress=setOperationAddress(loader,PathAddress.pathAddress(cache.get(OP_ADDR)),ClusterLoaderConfigurationResource.PATH,name)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;parseLoaderElements;[reader, loader, additionalConfigurationOperations]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[loaderAddress, loader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCustomStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.STORE_NAME]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),StoreConfigurationResource.STORE_PATH,name)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;parseStoreElements;[reader, store, additionalConfigurationOperations]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseFileStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.FILE_STORE_NAME]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),FileStoreResource.FILE_STORE_PATH,name)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;parseStoreElements;[reader, store, additionalConfigurationOperations]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRemoteStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.REMOTE_STORE_NAME]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),RemoteStoreConfigurationResource.REMOTE_STORE_PATH,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRemoteStoreAuthentication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [authenticationAddress=PathAddress.pathAddress(store.get(OP_ADDR)).append(ModelKeys.AUTHENTICATION,ModelKeys.AUTHENTICATION_NAME)]</InnerVar>
                <InnerVar>ModelNode [authentication=Util.createAddOperation(authenticationAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoAttributes;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[authenticationAddress, authentication]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRemoteStoreEncryption</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [encryptionAddress=PathAddress.pathAddress(store.get(OP_ADDR)).append(ModelKeys.ENCRYPTION,ModelKeys.ENCRYPTION_NAME)]</InnerVar>
                <InnerVar>ModelNode [encryption=Util.createAddOperation(encryptionAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[encryptionAddress, encryption]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseLevelDBStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.ROCKSDB_STORE_NAME]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),RocksDBStoreConfigurationResource.ROCKSDBSTORE_PATH,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRocksDBStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.ROCKSDB_STORE_NAME]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),RocksDBStoreConfigurationResource.ROCKSDBSTORE_PATH,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreExpiry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [storeExpiryAddress=PathAddress.pathAddress(store.get(OP_ADDR)).append(ModelKeys.EXPIRATION,ModelKeys.EXPIRATION_NAME)]</InnerVar>
                <InnerVar>ModelNode [storeExpiry=Util.createAddOperation(storeExpiryAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[storeExpiryAddress, storeExpiry]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreCompression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [storeCompressionAddress=PathAddress.pathAddress(store.get(OP_ADDR)).append(ModelKeys.COMPRESSION,ModelKeys.COMPRESSION_NAME)]</InnerVar>
                <InnerVar>ModelNode [storeCompression=Util.createAddOperation(storeCompressionAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[storeCompressionAddress, storeCompression]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreImplementation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRemoteServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>server</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRestStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.REST_STORE_NAME]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),RestStoreConfigurationResource.REST_STORE_PATH,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRestConnectionPool</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pool</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStringKeyedJDBCStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.STRING_KEYED_JDBC_STORE_NAME]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
                <InnerVar>PathAddress [storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),StringKeyedJDBCStoreResource.PATH,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[storeAddress, store]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCommonJDBCAttributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseJDBCStoreTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>table</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseJDBCStoreColumn</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseLoaderElements</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loader</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseLoaderAttribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>Attribute</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loader</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreAttribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>Attribute</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreElements</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreWriteBehind</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [writeBehindAddress=PathAddress.pathAddress(store.get(OP_ADDR)).append(ModelKeys.WRITE_BEHIND,ModelKeys.WRITE_BEHIND_NAME)]</InnerVar>
                <InnerVar>ModelNode [writeBehind=Util.createAddOperation(writeBehindAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[writeBehindAddress, writeBehind]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseStoreProperty</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [attributes=reader.getAttributeCount()]</InnerVar>
                <InnerVar>String [propertyName=null]</InnerVar>
                <InnerVar>String [propertyValue=reader.getElementText()]</InnerVar>
                <InnerVar>PathAddress [propertyAddress=PathAddress.pathAddress(node.get(OP_ADDR)).append(ModelKeys.PROPERTY,propertyName)]</InnerVar>
                <InnerVar>ModelNode [property=Util.createAddOperation(propertyAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>StorePropertyResource.VALUE;parseAndSetParameter;[propertyValue, property, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[propertyAddress, property]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseIndexing</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [indexingAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.INDEXING,ModelKeys.INDEXING_NAME)]</InnerVar>
                <InnerVar>ModelNode [indexing=Util.createAddOperation(indexingAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[indexingAddress, indexing]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseIndexedEntities</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoAttributes;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseBackups</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseBackupFor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseBackup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [operation=Util.createAddOperation()]</InnerVar>
                <InnerVar>String [site=null]</InnerVar>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.BACKUP,site)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalOperations=new LinkedHashMap&lt;&gt;(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operation.get(OP_ADDR);set;[address.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[address, operation]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTakeOffline</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseXSiteStateTransfer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>backup</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(backup.get(OP_ADDR)).append(ModelKeys.STATE_TRANSFER,ModelKeys.STATE_TRANSFER_NAME)]</InnerVar>
                <InnerVar>ModelNode [operation=Util.createAddOperation(address)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[address, operation]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCompatibility</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [compatibilityAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.COMPATIBILITY,ModelKeys.COMPATIBILITY_NAME)]</InnerVar>
                <InnerVar>ModelNode [compatibility=Util.createAddOperation(compatibilityAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[compatibilityAddress, compatibility]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCacheSecurity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [securityAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.SECURITY,ModelKeys.SECURITY_NAME)]</InnerVar>
                <InnerVar>ModelNode [security=Util.createAddOperation(securityAddress)]</InnerVar>
                <InnerVar>Map&lt;PathAddress,ModelNode&gt; [additionalConfigurationOperations=new LinkedHashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoAttributes;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[securityAddress, security]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;putAll;[additionalConfigurationOperations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCacheAuthorization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>security</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [authorizationAddress=PathAddress.pathAddress(security.get(OP_ADDR)).append(ModelKeys.AUTHORIZATION,ModelKeys.AUTHORIZATION_NAME)]</InnerVar>
                <InnerVar>ModelNode [authorization=Util.createAddOperation(authorizationAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[authorizationAddress, authorization]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePartitionHandling</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [partitionHandlingAddress=PathAddress.pathAddress(cache.get(OP_ADDR)).append(ModelKeys.PARTITION_HANDLING,ModelKeys.PARTITION_HANDLING_NAME)]</InnerVar>
                <InnerVar>ModelNode [partitionHandling=Util.createAddOperation(partitionHandlingAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;put;[partitionHandlingAddress, partitionHandling]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseThreadPool</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pool</ParamName>
                    <ParamType>ThreadPoolResource</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=parentAddress.append(pool.getPathElement())]</InnerVar>
                <InnerVar>ModelNode [operation=Util.createAddOperation(address)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[address, operation]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseScheduledThreadPool</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pool</ParamName>
                    <ParamType>ScheduledThreadPoolResource</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=parentAddress.append(pool.getPathElement())]</InnerVar>
                <InnerVar>ModelNode [operation=Util.createAddOperation(address)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;put;[address, operation]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readAttribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>AttributeDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setAttribute;[reader, reader.getAttributeValue(index), operation, attribute]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setAttribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operation</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>AttributeDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attribute.getParser();parseAndSetParameter;[attribute, value, operation, reader]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>