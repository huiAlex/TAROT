<Class>
    <Id>1787</Id>
    <Package>org.infinispan.client.hotrod.configuration</Package>
    <ClassName>AuthenticationConfigurationBuilder</ClassName>
    <SuperClass>AbstractSecurityConfigurationChildBuilder</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Builder</SuperInterface>
        <SuperInterface>AuthenticationConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AuthenticationConfigurationBuilder  /** 
 * AuthenticationConfigurationBuilder.
 * @author Tristan Tarrant
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>callbackHandler</FieldName>
            <FieldType>CallbackHandler</FieldType>
        </Field>
        <Field>
            <FieldName>enabled</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>serverName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>saslProperties</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>saslProperties</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>saslMechanism</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>clientSubject</FieldName>
            <FieldType>Subject</FieldType>
        </Field>
        <Field>
            <FieldName>username</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>password</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>realm</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>AuthenticationConfigurationBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>SecurityConfigurationBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>callbackHandler</MethodName>
            <MethodComment>/** 
 * Specifies a  {@link CallbackHandler} to be used during the authentication handshake.The  {@link Callback}s that need to be handled are specific to the chosen SASL mechanism.
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>callbackHandler</ParamName>
                    <ParamType>CallbackHandler</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enabled</MethodName>
            <MethodComment>/** 
 * Configures whether authentication should be enabled or not
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enable</MethodName>
            <MethodComment>/** 
 * Enables authentication
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disable</MethodName>
            <MethodComment>/** 
 * Disables authentication
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>saslMechanism</MethodName>
            <MethodComment>/** 
 * Selects the SASL mechanism to use for the connection to the server
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>saslMechanism</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>saslProperties</MethodName>
            <MethodComment>/** 
 * Sets the SASL properties
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>saslProperties</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>saslQop</MethodName>
            <MethodComment>/** 
 * Sets the SASL QOP property. If multiple values are specified they will determine preference order
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>qop</ParamName>
                    <ParamType>SaslQop</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [s=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.saslProperties;put;[Sasl.QOP, s.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>saslStrength</MethodName>
            <MethodComment>/** 
 * Sets the SASL strength property. If multiple values are specified they will determine preference order
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>strength</ParamName>
                    <ParamType>SaslStrength</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [s=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.saslProperties;put;[Sasl.STRENGTH, s.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serverName</MethodName>
            <MethodComment>/** 
 * Sets the name of the server as expected by the SASL protocol
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clientSubject</MethodName>
            <MethodComment>/** 
 * Sets the client subject, necessary for those SASL mechanisms which require it to access client credentials (i.e. GSSAPI)
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clientSubject</ParamName>
                    <ParamType>Subject</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>username</MethodName>
            <MethodComment>/** 
 * Specifies the username to be used for authentication. This will use a simple CallbackHandler. This is mutually exclusive with explicitly providing the CallbackHandler
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>username</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>password</MethodName>
            <MethodComment>/** 
 * Specifies the password to be used for authentication. A username is also required
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>password</MethodName>
            <MethodComment>/** 
 * Specifies the password to be used for authentication. A username is also required
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>char[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>realm</MethodName>
            <MethodComment>/** 
 * Specifies the realm to be used for authentication. Username and password also need to be supplied.
 */
</MethodComment>
            <ReturnType>AuthenticationConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>realm</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AuthenticationConfiguration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [mech=saslMechanism == null ? "DIGEST-MD5" : saslMechanism]</InnerVar>
                <InnerVar>CallbackHandler [cbh]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>AuthenticationConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConfigurationBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypedProperties [typed=TypedProperties.toTypedProperties(properties)]</InnerVar>
                <InnerVar>Object [prop=typed.get(ConfigurationProperties.AUTH_CALLBACK_HANDLER)]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [saslProperties=typed.entrySet().stream().filter(e -&gt; ((String)e.getKey()).startsWith(ConfigurationProperties.SASL_PROPERTIES_PREFIX)).collect(Collectors.toMap(e -&gt; ConfigurationProperties.SASL_PROPERTIES_PREFIX_REGEX.matcher((String)e.getKey()).replaceFirst(""),e -&gt; StringPropertyReplacer.replaceProperties((String)e.getValue())))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this;enabled;[typed.getBooleanProperty(ConfigurationProperties.USE_AUTH,enabled,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>this;saslMechanism;[typed.getProperty(ConfigurationProperties.SASL_MECHANISM,saslMechanism,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>this;username;[typed.getProperty(ConfigurationProperties.AUTH_USERNAME,username,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>this;realm;[typed.getProperty(ConfigurationProperties.AUTH_REALM)]</InnerMethodInvoke>
                <InnerMethodInvoke>this;serverName;[typed.getProperty(ConfigurationProperties.AUTH_SERVER_NAME,serverName,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>this;clientSubject;[(Subject)typed.get(ConfigurationProperties.AUTH_CLIENT_SUBJECT)]</InnerMethodInvoke>
                <InnerMethodInvoke>this;saslProperties;[saslProperties]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>