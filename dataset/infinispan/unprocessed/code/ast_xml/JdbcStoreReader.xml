<Class>
    <Id>867</Id>
    <Package>org.infinispan.tools.jdbc.migrator</Package>
    <ClassName>JdbcStoreReader</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Iterable</SuperInterface>
        <SuperInterface>MarshalledEntry</SuperInterface>
        <SuperInterface>AutoCloseable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JdbcStoreReader  /** 
 * @author Ryan Emerson
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>config</FieldName>
            <FieldType>MigratorConfiguration</FieldType>
        </Field>
        <Field>
            <FieldName>marshaller</FieldName>
            <FieldType>StreamingMarshaller</FieldType>
        </Field>
        <Field>
            <FieldName>connectionFactory</FieldName>
            <FieldType>ConnectionFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>JdbcStoreReader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>MigratorConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PooledConnectionFactory [connectionFactory=new PooledConnectionFactory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connectionFactory;start;[config.getConnectionConfig(), JdbcStoreReader.class.getClassLoader()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connectionFactory;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MarshalledEntry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTableManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TableManager</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>binary</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TableManipulationConfiguration [tableConfig=binary ? config.getBinaryTable() : config.getStringTable()]</InnerVar>
                <InnerVar>TableManager [tableManager=TableManagerFactory.getManager(config.getDbMeta(),connectionFactory,tableConfig)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tableManager;setCacheName;[config.cacheName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>