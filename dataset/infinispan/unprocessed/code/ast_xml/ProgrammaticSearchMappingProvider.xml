<Class>
    <Id>3254</Id>
    <Package>org.infinispan.query.spi</Package>
    <ClassName>ProgrammaticSearchMappingProvider</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ProgrammaticSearchMappingProvider  /** 
 * An advanced SPI to be implemented by Infinispan modules that want to customize the  {@link SearchMapping} objectbefore the bootstrap of the  {@link org.hibernate.search.SearchFactory} belonging to an indexed {@link Cache}. The {@link SearchMapping} object provided via the "hibernate.search.model_mapping" config property is used as a startingpoint if it was present, otherwise an empty  {@link SearchMapping} is used.&lt;p&gt; Please note that in case multiple providers are found the order of invocation is not predictable so implementations must be careful not to step on each others toes.
 * @author anistor@redhat.com
 * @since 6.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>defineMappings</MethodName>
            <MethodComment>/** 
 * Supply some custom programmatic mappings.
 * @param cache         the indexed cache
 * @param searchMapping the mapping object to customize
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>Cache</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>searchMapping</ParamName>
                    <ParamType>SearchMapping</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>