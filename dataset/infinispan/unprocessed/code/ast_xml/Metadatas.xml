<Class>
    <Id>4021</Id>
    <Package>org.infinispan.metadata</Package>
    <ClassName>Metadatas</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Metadatas  /** 
 * Utility method for Metadata classes.
 * @author Galder Zamarre√±o
 * @since 5.3
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>Metadatas</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyVersion</MethodName>
            <MethodComment>/** 
 * Applies version in source metadata to target metadata, if no version in target metadata. This method can be useful in scenarios where source version information must be kept around, i.e. write skew, or when reading metadata from cache store.
 * @param source Metadata object which is source, whose version might beis of interest for the target metadata
 * @param target Metadata object on which version might be applied
 * @return either, the target Metadata instance as it was when it wascalled, or a brand new target Metadata instance with version from source metadata applied.
 */
</MethodComment>
            <ReturnType>Metadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateMetadata</MethodName>
            <MethodComment>/** 
 * Set the  {@code providedMetadata} on the cache entry.If the entry already has a version, copy the version in the new metadata.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entry</ParamName>
                    <ParamType>CacheEntry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providedMetadata</ParamName>
                    <ParamType>Metadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>