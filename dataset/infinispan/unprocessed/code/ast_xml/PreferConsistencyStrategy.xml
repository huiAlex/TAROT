<Class>
    <Id>71</Id>
    <Package>org.infinispan.partitionhandling.impl</Package>
    <ClassName>PreferConsistencyStrategy</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>AvailabilityStrategy</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>eventLogManager</FieldName>
            <FieldType>EventLogManager</FieldType>
        </Field>
        <Field>
            <FieldName>persistentUUIDManager</FieldName>
            <FieldType>PersistentUUIDManager</FieldType>
        </Field>
        <Field>
            <FieldName>lostDataCheck</FieldName>
            <FieldType>LostDataCheck</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>PreferConsistencyStrategy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventLogManager</ParamName>
                    <ParamType>EventLogManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>persistentUUIDManager</ParamName>
                    <ParamType>PersistentUUIDManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lostDataCheck</ParamName>
                    <ParamType>LostDataCheck</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>joiner</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;queueRebalance;[context.getExpectedMembers()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onGracefulLeave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leaver</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheTopology [currentTopology=context.getCurrentTopology()]</InnerVar>
                <InnerVar>List&lt;Address&gt; [newMembers=new ArrayList&lt;&gt;(currentTopology.getMembers())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>newMembers;remove;[leaver]</InnerMethodInvoke>
                <InnerMethodInvoke>null;updateMembersAndRebalance;[context, newMembers, newMembers]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onClusterViewChange</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clusterMembers</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheTopology [currentTopology=context.getCurrentTopology()]</InnerVar>
                <InnerVar>List&lt;Address&gt; [newMembers=new ArrayList&lt;&gt;(currentTopology.getMembers())]</InnerVar>
                <InnerVar>CacheTopology [stableTopology=context.getStableTopology()]</InnerVar>
                <InnerVar>List&lt;Address&gt; [stableMembers=stableTopology.getMembers()]</InnerVar>
                <InnerVar>List&lt;Address&gt; [lostMembers=new ArrayList&lt;&gt;(stableMembers)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lostMembers;removeAll;[newMembers]</InnerMethodInvoke>
                <InnerMethodInvoke>null;updateMembersAndRebalance;[context, newMembers, newMembers]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isMinorityPartition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stableMembers</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lostMembers</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onPartitionMerge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>statusResponseMap</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [maxTopologyId=0]</InnerVar>
                <InnerVar>CacheTopology [maxStableTopology=null]</InnerVar>
                <InnerVar>CacheTopology [maxActiveTopology=null]</InnerVar>
                <InnerVar>Set&lt;CacheTopology&gt; [degradedTopologies=new HashSet&lt;&gt;()]</InnerVar>
                <InnerVar>CacheTopology [maxDegradedTopology=null]</InnerVar>
                <InnerVar>List&lt;Address&gt; [actualMembers=new ArrayList&lt;&gt;(context.getExpectedMembers())]</InnerVar>
                <InnerVar>CacheTopology [mergedTopology]</InnerVar>
                <InnerVar>AvailabilityMode [mergedAvailabilityMode]</InnerVar>
                <InnerVar>AvailabilityMode [newAvailabilityMode=computeAvailabilityAfterMerge(context,maxStableTopology,actualMembers)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;updateTopologiesAfterMerge;[mergedTopology, maxStableTopology, mergedAvailabilityMode, false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>computeAvailabilityAfterMerge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AvailabilityMode</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxStableTopology</ParamName>
                    <ParamType>CacheTopology</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newMembers</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onRebalanceEnd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onManualAvailabilityChange</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newAvailabilityMode</ParamName>
                    <ParamType>AvailabilityMode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Address&gt; [actualMembers=context.getCurrentTopology().getActualMembers()]</InnerVar>
                <InnerVar>List&lt;Address&gt; [newMembers=context.getExpectedMembers()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateMembersAndRebalance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>AvailabilityStrategyContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actualMembers</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newMembers</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;updateAvailabilityMode;[actualMembers, AvailabilityMode.AVAILABLE, false]</InnerMethodInvoke>
                <InnerMethodInvoke>context;updateCurrentTopology;[newMembers]</InnerMethodInvoke>
                <InnerMethodInvoke>context;queueRebalance;[context.getExpectedMembers()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>