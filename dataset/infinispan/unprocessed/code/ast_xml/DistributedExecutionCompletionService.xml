<Class>
    <Id>3068</Id>
    <Package>org.infinispan.distexec</Package>
    <ClassName>DistributedExecutionCompletionService</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CompletionService</SuperInterface>
        <SuperInterface>V</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DistributedExecutionCompletionService  /** 
 * A  {@link CompletionService} that uses a supplied {@link DistributedExecutorService} to executetasks. This class arranges that submitted tasks are, upon completion, placed on a queue accessible using &lt;tt&gt;take&lt;/tt&gt;. The class is lightweight enough to be suitable for transient use when processing groups of tasks. &lt;p&gt; This class must be used instead of a  {@link ExecutorCompletionService} provided fromjava.util.concurrent package. The  {@link ExecutorCompletionService} may not be used since itrequires the use of a non serializable RunnableFuture object.
 * @author William Burns
 * @author Vladimir Blagojevic
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>executor</FieldName>
            <FieldType>DistributedExecutorService</FieldType>
        </Field>
        <Field>
            <FieldName>completionQueue</FieldName>
            <FieldType>BlockingQueue</FieldType>
        </Field>
        <Field>
            <FieldName>completionQueue</FieldName>
            <FieldType>CompletableFuture&lt;V&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DistributedExecutionCompletionService</MethodName>
            <MethodComment>/** 
 * Creates an ExecutorCompletionService using the supplied executor for base task execution and a {@link LinkedBlockingQueue} as a completion queue.
 * @param executor the executor to use
 * @throws NullPointerException if executor is &lt;tt&gt;null&lt;/tt&gt;
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>DistributedExecutorService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DistributedExecutionCompletionService</MethodName>
            <MethodComment>/** 
 * Creates an ExecutorCompletionService using the supplied executor for base task execution and the supplied queue as its completion queue. Note:  {@link PriorityBlockingQueue} for completionQueue can only be used with accompanying{@link Comparator} as our internal implementation of {@link Future} for each subtask does notimplement Comparable interface. Note that we do not provide any guarantees about which particular internal class implements Future interface and these APIs will remain internal.
 * @param executor the executor to use
 * @param completionQueue the queue to use as the completion queue normally one dedicated for use by this service
 * @throws NullPointerException if executor is &lt;tt&gt;null&lt;/tt&gt;
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>DistributedExecutorService</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>completionQueue</ParamName>
                    <ParamType>CompletableFuture&lt;V&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>submit</MethodName>
            <MethodComment>/** 
 * {@inheritDoc CompletionService}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompletableFuture&lt;V&gt; [f=(CompletableFuture&lt;V&gt;)executor.submit(task)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>submit</MethodName>
            <MethodComment>/** 
 * {@inheritDoc CompletionService}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>Runnable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompletableFuture&lt;V&gt; [f=(CompletableFuture&lt;V&gt;)executor.submit(task,result)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>take</MethodName>
            <MethodComment>/** 
 * {@inheritDoc CompletionService}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>poll</MethodName>
            <MethodComment>/** 
 * {@inheritDoc CompletionService}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>poll</MethodName>
            <MethodComment>/** 
 * {@inheritDoc CompletionService}
 */
</MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timeout</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>unit</ParamName>
                    <ParamType>TimeUnit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>submit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompletableFuture&lt;V&gt; [f=executor.submit(task,input)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>submitEverywhere</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompletableFuture&lt;V&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;CompletableFuture&lt;V&gt;&gt; [fl=executor.submitEverywhere(task)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>submitEverywhere</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompletableFuture&lt;V&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>K</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;CompletableFuture&lt;V&gt;&gt; [fl=executor.submitEverywhere(task,input)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>submit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>V</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>task</ParamName>
                    <ParamType>V</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompletableFuture&lt;V&gt; [f=executor.submit(target,task)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>