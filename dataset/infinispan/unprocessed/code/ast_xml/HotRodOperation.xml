<Class>
    <Id>3007</Id>
    <Package>org.infinispan.client.hotrod.impl.operations</Package>
    <ClassName>HotRodOperation</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>HotRodConstants</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>HotRodOperation  /** 
 * Generic Hot Rod operation. It is aware of  {@link org.infinispan.client.hotrod.Flag}s and it is targeted against a cache name. This base class encapsulates the knowledge of writing and reading a header, as described in the &lt;a href="http://community.jboss.org/wiki/HotRodProtocol"&gt;Hot Rod protocol specification&lt;/a&gt;
 * @author Mircea.Markus@jboss.com
 * @since 4.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>flags</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>topologyId</FieldName>
            <FieldType>AtomicInteger</FieldType>
        </Field>
        <Field>
            <FieldName>codec</FieldName>
            <FieldType>Codec</FieldType>
        </Field>
        <Field>
            <FieldName>cfg</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>NO_TX</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>XA_TX</FieldName>
            <FieldType>byte</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>HotRodOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codec</ParamName>
                    <ParamType>Codec</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>flags</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyId</ParamName>
                    <ParamType>AtomicInteger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderParams</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transport</ParamName>
                    <ParamType>Transport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operationCode</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HeaderParams [params=new HeaderParams().opCode(operationCode).cacheName(cacheName).flags(flags).clientIntel(cfg.clientIntelligence()).topologyId(topologyId).txMarker(NO_TX).topologyAge(transport.getTransportFactory().getTopologyAge())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readHeaderAndValidate</MethodName>
            <MethodComment>/** 
 * Magic | Message Id | Op code | Status | Topology Change Marker
 */
</MethodComment>
            <ReturnType>short</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transport</ParamName>
                    <ParamType>Transport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>params</ParamName>
                    <ParamType>HeaderParams</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>