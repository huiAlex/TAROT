<Class>
    <Id>4005</Id>
    <Package>org.infinispan.server.endpoint.subsystem</Package>
    <ClassName>RestService</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Service</SuperInterface>
        <SuperInterface>RestServer</SuperInterface>
        <SuperInterface>EncryptableService</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RestService  /** 
 * A service which starts the REST web application
 * @author Tristan Tarrant &lt;ttarrant@redhat.com&gt;
 * @since 6.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>pathManagerInjector</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>pathManagerInjector</FieldName>
            <FieldType>PathManager</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManagerInjector</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManagerInjector</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>socketBinding</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>socketBinding</FieldName>
            <FieldType>SocketBinding</FieldType>
        </Field>
        <Field>
            <FieldName>encryptionSecurityRealm</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>encryptionSecurityRealm</FieldName>
            <FieldType>SecurityRealm</FieldType>
        </Field>
        <Field>
            <FieldName>authenticationSecurityRealm</FieldName>
            <FieldType>InjectedValue</FieldType>
        </Field>
        <Field>
            <FieldName>authenticationSecurityRealm</FieldName>
            <FieldType>SecurityRealm</FieldType>
        </Field>
        <Field>
            <FieldName>sniDomains</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>sniDomains</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>authMethod</FieldName>
            <FieldType>RestAuthMethod</FieldType>
        </Field>
        <Field>
            <FieldName>serverName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>contextPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>extendedHeaders</FieldName>
            <FieldType>ExtendedHeaders</FieldType>
        </Field>
        <Field>
            <FieldName>ignoredCaches</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>ignoredCaches</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>restServer</FieldName>
            <FieldType>RestServer</FieldType>
        </Field>
        <Field>
            <FieldName>clientAuth</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>maxContentLength</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RestService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>authMethod</ParamName>
                    <ParamType>RestAuthMethod</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>contextPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extendedHeaders</ParamName>
                    <ParamType>ExtendedHeaders</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ignoredCaches</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxContentLength</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment>/** 
 * {@inheritDoc} 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>startContext</ParamName>
                    <ParamType>StartContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RestServerConfigurationBuilder [builder=new RestServerConfigurationBuilder()]</InnerVar>
                <InnerVar>String [protocolName=getProtocolName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.name(serverName).extendedHeaders(extendedHeaders).ignoredCaches(ignoredCaches).contextPath(contextPath);maxContentLength;[maxContentLength]</InnerMethodInvoke>
                <InnerMethodInvoke>EncryptableServiceHelper;fillSecurityConfiguration;[this, builder.ssl()]</InnerMethodInvoke>
                <InnerMethodInvoke>ROOT_LOGGER;endpointStarting;[serverName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StartException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProtocolName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * {@inheritDoc} 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stopContext</ParamName>
                    <ParamType>StopContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>restServer;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValue</MethodName>
            <MethodComment>/** 
 * {@inheritDoc} 
 */
</MethodComment>
            <ReturnType>RestServer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IllegalStateException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPathManagerInjector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAuthenticationSecurityRealm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityRealm</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSocketBinding</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SocketBinding</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEncryptionSecurityRealm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityRealm</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSniSecurityRealm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SecurityRealm</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sniHostName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSniConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServerName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setClientAuth</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClientAuth</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>