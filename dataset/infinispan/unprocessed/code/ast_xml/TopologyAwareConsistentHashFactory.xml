<Class>
    <Id>2866</Id>
    <Package>org.infinispan.distribution.ch.impl</Package>
    <ClassName>TopologyAwareConsistentHashFactory</ClassName>
    <SuperClass>DefaultConsistentHashFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TopologyAwareConsistentHashFactory  /** 
 * Default topology-aware consistent hash factory implementation.
 * @author Dan Berindei
 * @since 5.2
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>addBackupOwners</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TopologyInfo [topologyInfo=new TopologyInfo(builder.getMembers(),builder.getCapacityFactors())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;removeExtraBackupOwners;[builder]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.SITE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.RACK]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.MACHINE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.NODE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;replaceBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.SITE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;replaceBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.RACK]</InnerMethodInvoke>
                <InnerMethodInvoke>null;replaceBackupOwnersForLevel;[builder, topologyInfo, TopologyLevel.MACHINE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;replaceBackupOwnerNoLevel;[builder, topologyInfo]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addBackupOwnersForLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyInfo</ParamName>
                    <ParamType>TopologyInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [extraSegments=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAddBackupOwnersForLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyInfo</ParamName>
                    <ParamType>TopologyInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extraSegments</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [sufficientOwners=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceBackupOwnersForLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyInfo</ParamName>
                    <ParamType>TopologyInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [extraSegments=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doReplaceBackupOwnersForLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyInfo</ParamName>
                    <ParamType>TopologyInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extraSegments</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [sufficientLocations=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceBackupOwnerNoLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyInfo</ParamName>
                    <ParamType>TopologyInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doReplaceBackupOwnersNoLevel;[builder, topologyInfo, -1, 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doReplaceBackupOwnersNoLevel;[builder, topologyInfo, -1, -1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doReplaceBackupOwnersNoLevel;[builder, topologyInfo, 0, 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doReplaceBackupOwnersNoLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyInfo</ParamName>
                    <ParamType>TopologyInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>minSegmentsDiff</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxSegmentsDiff</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLocationId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>address</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TopologyAwareAddress [taa=(TopologyAwareAddress)address]</InnerVar>
                <InnerVar>Object [locationId]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>locationIsDuplicate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>addresses</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [targetLocationId=getLocationId(target,level)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maintainsDiversity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>owners</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>candidate</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replaced</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maintainsDiversity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>owners</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>candidate</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replaced</ParamName>
                    <ParamType>Address</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>machine</ParamName>
                    <ParamType>TopologyLevel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;Object&gt; [oldMachines=new HashSet&lt;Object&gt;(owners.size())]</InnerVar>
                <InnerVar>Set&lt;Object&gt; [newMachines=new HashSet&lt;Object&gt;(owners.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>newMachines;add;[getLocationId(candidate,machine)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>output</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>chf</ParamName>
                    <ParamType>TopologyAwareConsistentHashFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TopologyAwareConsistentHashFactory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>unmarshaller</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends TopologyAwareConsistentHashFactory&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>