<Class>
    <Id>2089</Id>
    <Package>org.infinispan.scripting.impl</Package>
    <ClassName>ScriptingManagerImpl</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ScriptingManager</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ScriptingManagerImpl  /** 
 * ScriptingManagerImpl.
 * @author Tristan Tarrant
 * @since 7.2
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>cacheManager</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>taskManager</FieldName>
            <FieldType>TaskManager</FieldType>
        </Field>
        <Field>
            <FieldName>scriptEngineManager</FieldName>
            <FieldType>ScriptEngineManager</FieldType>
        </Field>
        <Field>
            <FieldName>scriptEnginesByExtension</FieldName>
            <FieldType>ConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>scriptEnginesByExtension</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>scriptEnginesByLanguage</FieldName>
            <FieldType>ConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>scriptEnginesByLanguage</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>scriptCache</FieldName>
            <FieldType>Cache</FieldType>
        </Field>
        <Field>
            <FieldName>scriptCache</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>compiledScripts</FieldName>
            <FieldType>ConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>compiledScripts</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>globalAuthzHelper</FieldName>
            <FieldType>AuthorizationHelper</FieldType>
        </Field>
        <Field>
            <FieldName>getEngineByName</FieldName>
            <FieldType>Function</FieldType>
        </Field>
        <Field>
            <FieldName>getEngineByName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>getEngineByExtension</FieldName>
            <FieldType>Function</FieldType>
        </Field>
        <Field>
            <FieldName>getEngineByExtension</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>internalCacheRegistry</FieldName>
            <FieldType>InternalCacheRegistry</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ScriptingManagerImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheManager</ParamName>
                    <ParamType>EmbeddedCacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>internalCacheRegistry</ParamName>
                    <ParamType>InternalCacheRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>taskManager</ParamName>
                    <ParamType>TaskManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ClassLoader [classLoader=cacheManager.getCacheManagerConfiguration().classLoader()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>internalCacheRegistry;registerInternalCache;[SCRIPT_CACHE, getScriptCacheConfiguration().build(), EnumSet.of(Flag.USER,Flag.PROTECTED,Flag.PERSISTENT)]</InnerMethodInvoke>
                <InnerMethodInvoke>taskManager;registerTaskEngine;[new ScriptingTaskEngine(this)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScriptCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScriptCacheConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConfigurationBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>GlobalConfiguration [globalConfiguration=cacheManager.getGlobalComponentRegistry().getGlobalConfiguration()]</InnerVar>
                <InnerVar>CacheMode [cacheMode=globalConfiguration.isClustered() ? CacheMode.REPL_SYNC : CacheMode.LOCAL]</InnerVar>
                <InnerVar>ConfigurationBuilder [cfg=new ConfigurationBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cfg.clustering().cacheMode(cacheMode).sync().stateTransfer().fetchInMemoryState(true).awaitInitialTransfer(false).compatibility().enable().marshaller(new GenericJBossMarshaller()).customInterceptors().addInterceptor().interceptor(new ScriptingInterceptor());before;[CacheMgmtInterceptor.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compileScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ScriptMetadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>script</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ScriptMetadata [metadata=ScriptMetadataParser.parse(name,script)]</InnerVar>
                <InnerVar>ScriptEngine [engine=getEngineForScript(metadata)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>script</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ScriptMetadata [metadata=ScriptMetadataParser.parse(name,script)]</InnerVar>
                <InnerVar>ScriptEngine [engine=getEngineForScript(metadata)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getScriptCache().getAdvancedCache();put;[name, script, metadata]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScriptNames</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>containsScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scriptName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scriptName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>TaskContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ScriptMetadata [metadata=getScriptMetadata(scriptName)]</InnerVar>
                <InnerVar>DataType [dataType=metadata.dataType()]</InnerVar>
                <InnerVar>Bindings [userBindings=context.getParameters().map(p -&gt; {
  Map&lt;String,?&gt; params=metadata.dataType().transformer.toDataType(context.getParameters().get(),context.getMarshaller());
  return new SimpleBindings((Map&lt;String,Object&gt;)params);
}
).orElseGet(() -&gt; new SimpleBindings())]</InnerVar>
                <InnerVar>SimpleBindings [systemBindings=new SimpleBindings()]</InnerVar>
                <InnerVar>DataTypedCacheManager [dataTypedCacheManager=new DataTypedCacheManager(dataType,context.getMarshaller(),cacheManager,context.getSubject().orElse(null))]</InnerVar>
                <InnerVar>CacheScriptBindings [bindings=new CacheScriptBindings(systemBindings,userBindings)]</InnerVar>
                <InnerVar>ScriptRunner [runner=metadata.mode().getRunner()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>systemBindings;put;[SystemBindings.CACHE_MANAGER.toString(), dataTypedCacheManager]</InnerMethodInvoke>
                <InnerMethodInvoke>systemBindings;put;[SystemBindings.SCRIPTING_MANAGER.toString(), this]</InnerMethodInvoke>
                <InnerMethodInvoke>context.getCache();ifPresent;[cache -&gt; {
  if (dataType == DataType.UTF8) {
    cache=cache.getAdvancedCache().withEncoding(UTF8Encoder.class);
  }
 else {
    boolean compat=SecurityActions.getCacheConfiguration(cache).compatibility().enabled();
    Optional&lt;Marshaller&gt; marshaller=context.getMarshaller();
    if (compat) {
      cache=cache.getAdvancedCache().withEncoding(IdentityEncoder.class);
    }
 else {
      if (marshaller.isPresent()) {
        cache=cache.getAdvancedCache().withEncoding(GenericJbossMarshallerEncoder.class);
      }
    }
  }
  systemBindings.put(SystemBindings.CACHE.toString(),cache);
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>context.getMarshaller();ifPresent;[marshaller -&gt; {
  systemBindings.put(SystemBindings.MARSHALLER.toString(),marshaller);
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScriptMetadata</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ScriptMetadata</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scriptName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CacheEntry&lt;String,String&gt; [scriptEntry=SecurityActions.getCacheEntry(getScriptCache().getAdvancedCache(),scriptName)]</InnerVar>
                <InnerVar>ScriptMetadata [metadata=(ScriptMetadata)scriptEntry.getMetadata()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>ScriptMetadata</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bindings</ParamName>
                    <ParamType>Bindings</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompiledScript [compiled=compiledScripts.get(metadata.name())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEngineForScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ScriptEngine</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>metadata</ParamName>
                    <ParamType>ScriptMetadata</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ScriptEngine [engine]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEngineByName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ScriptEngine</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>shortName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEngineByExtension</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ScriptEngine</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>extension</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ScriptEngine</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cl</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>manager</ParamName>
                    <ParamType>ScriptEngineManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>ScriptEngineManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassLoader [curr=Thread.currentThread().getContextClassLoader()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>