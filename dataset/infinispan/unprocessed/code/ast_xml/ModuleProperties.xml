<Class>
    <Id>3982</Id>
    <Package>org.infinispan.util</Package>
    <ClassName>ModuleProperties</ClassName>
    <SuperClass>Properties</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ModuleProperties  /** 
 * The &lt;code&gt;ModuleProperties&lt;/code&gt; class represents Infinispan's module service extensions
 * @author Vladimir Blagojevic
 * @author Sanne Grinovero
 * @author Galder Zamarre√±o
 * @since 4.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>commandFactories</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>commandFactories</FieldName>
            <FieldType>Byte</FieldType>
        </Field>
        <Field>
            <FieldName>commandInitializers</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>commandInitializers</FieldName>
            <FieldType>Byte</FieldType>
        </Field>
        <Field>
            <FieldName>moduleCommands</FieldName>
            <FieldType>Collection</FieldType>
        </Field>
        <Field>
            <FieldName>moduleCommands</FieldName>
            <FieldType>Class&lt;? extends ReplicableCommand&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>resolveModuleLifecycles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ModuleLifecycle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cl</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModuleMetadataFiles</MethodName>
            <MethodComment>/** 
 * Retrieves an Iterable containing metadata file finders declared by each module.
 * @param cl class loader to use
 * @return an Iterable of ModuleMetadataFileFinders
 */
</MethodComment>
            <ReturnType>ModuleMetadataFileFinder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cl</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadModuleCommandHandlers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cl</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;ModuleCommandExtensions&gt; [moduleCmdExtLoader=ServiceFinder.load(ModuleCommandExtensions.class,cl)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moduleCommands</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends ReplicableCommand&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moduleCommandFactories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Byte</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moduleCommandInitializers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Byte</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moduleCacheRpcCommands</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends CacheRpcCommand&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Collection&lt;Class&lt;? extends ReplicableCommand&gt;&gt; [cmds=moduleCommands()]</InnerVar>
                <InnerVar>Collection&lt;Class&lt;? extends CacheRpcCommand&gt;&gt; [cacheRpcCmds=new HashSet&lt;Class&lt;? extends CacheRpcCommand&gt;&gt;(2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moduleOnlyReplicableCommands</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;? extends ReplicableCommand&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Collection&lt;Class&lt;? extends ReplicableCommand&gt;&gt; [cmds=moduleCommands()]</InnerVar>
                <InnerVar>Collection&lt;Class&lt;? extends ReplicableCommand&gt;&gt; [replicableOnlyCmds=new HashSet&lt;Class&lt;? extends ReplicableCommand&gt;&gt;(2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>