<Class>
    <Id>1620</Id>
    <Package>org.infinispan.client.hotrod.impl.operations</Package>
    <ClassName>AddClientListenerOperation</ClassName>
    <SuperClass>RetryOnFailureOperation</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AddClientListenerOperation  /** 
 * @author Galder Zamarre√±o
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>listenerId</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>cacheNameString</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dedicatedTransport</FieldName>
            <FieldType>Transport</FieldType>
        </Field>
        <Field>
            <FieldName>listenerNotifier</FieldName>
            <FieldType>ClientListenerNotifier</FieldType>
        </Field>
        <Field>
            <FieldName>listener</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>filterFactoryParams</FieldName>
            <FieldType>byte[][]</FieldType>
        </Field>
        <Field>
            <FieldName>converterFactoryParams</FieldName>
            <FieldType>byte[][]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>AddClientListenerOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codec</ParamName>
                    <ParamType>Codec</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>transportFactory</ParamName>
                    <ParamType>TransportFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topologyId</ParamName>
                    <ParamType>AtomicInteger</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>flags</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cfg</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listenerNotifier</ParamName>
                    <ParamType>ClientListenerNotifier</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filterFactoryParams</ParamName>
                    <ParamType>byte[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converterFactoryParams</ParamName>
                    <ParamType>byte[][]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateListenerId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>UUID [uuid=UUID.randomUUID()]</InnerVar>
                <InnerVar>byte[] [listenerId=new byte[16]]</InnerVar>
                <InnerVar>ByteBuffer [bb=ByteBuffer.wrap(listenerId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bb;putLong;[uuid.getMostSignificantBits()]</InnerMethodInvoke>
                <InnerMethodInvoke>bb;putLong;[uuid.getLeastSignificantBits()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransport</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transport</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>retryCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>failedServers</ParamName>
                    <ParamType>SocketAddress</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>releaseTransport</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transport</ParamName>
                    <ParamType>Transport</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDedicatedTransport</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transport</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeOperation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Short</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transport</ParamName>
                    <ParamType>Transport</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientListener [clientListener=extractClientListener()]</InnerVar>
                <InnerVar>HeaderParams [params=writeHeader(transport,ADD_CLIENT_LISTENER_REQUEST)]</InnerVar>
                <InnerVar>Either&lt;Short,ClientEvent&gt; [either]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>transport;writeArray;[listenerId]</InnerMethodInvoke>
                <InnerMethodInvoke>codec;writeClientListenerParams;[transport, clientListener, filterFactoryParams, converterFactoryParams]</InnerMethodInvoke>
                <InnerMethodInvoke>codec;writeClientListenerInterests;[transport, listenerNotifier.findMethods(this.listener).keySet()]</InnerMethodInvoke>
                <InnerMethodInvoke>transport;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>listenerNotifier;addClientListener;[this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>extractClientListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClientListener</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ClientListener [l=ReflectionUtil.getAnnotation(listener.getClass(),ClientListener.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>