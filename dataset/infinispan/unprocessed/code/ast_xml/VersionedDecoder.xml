<Class>
    <Id>2806</Id>
    <Package>org.infinispan.server.hotrod</Package>
    <ClassName>VersionedDecoder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>VersionedDecoder  /** 
 * This class represents the work to be done by a decoder of a particular Hot Rod protocol version.
 * @author Galder Zamarre√±o
 * @since 4.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>readHeader</MethodName>
            <MethodComment>/** 
 * Having read the message's Id, read the rest of Hot Rod header from the given buffer and return it. Returns whether the entire header was read or not.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>version</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>messageId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readParameters</MethodName>
            <MethodComment>/** 
 * Read the parameters of the operation, if present.
 */
</MethodComment>
            <ReturnType>RequestParameters</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createSuccessResponse</MethodName>
            <MethodComment>/** 
 * Create a successful response.
 */
</MethodComment>
            <ReturnType>Response</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prev</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createNotExecutedResponse</MethodName>
            <MethodComment>/** 
 * Create a response indicating the the operation could not be executed.
 */
</MethodComment>
            <ReturnType>Response</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prev</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createNotExistResponse</MethodName>
            <MethodComment>/** 
 * Create a response indicating that the key, which the message tried to operate on, did not exist.
 */
</MethodComment>
            <ReturnType>Response</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createGetResponse</MethodName>
            <MethodComment>/** 
 * Create a response for get a request.
 */
</MethodComment>
            <ReturnType>Response</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entry</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>customReadHeader</MethodName>
            <MethodComment>/** 
 * Read operation specific data for an operation that only requires a header
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hrCtx</ParamName>
                    <ParamType>CacheDecodeContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>customReadKey</MethodName>
            <MethodComment>/** 
 * Handle a protocol specific key reading.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hrCtx</ParamName>
                    <ParamType>CacheDecodeContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>customReadValue</MethodName>
            <MethodComment>/** 
 * Handle a protocol specific value reading.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>ByteBuf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hrCtx</ParamName>
                    <ParamType>CacheDecodeContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createStatsResponse</MethodName>
            <MethodComment>/** 
 * Create a response for the stats command.
 */
</MethodComment>
            <ReturnType>StatsResponse</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hrCtx</ParamName>
                    <ParamType>CacheDecodeContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>NettyTransport</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createErrorResponse</MethodName>
            <MethodComment>/** 
 * Create an error response based on the Throwable instance received.
 */
</MethodComment>
            <ReturnType>ErrorResponse</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOptimizedCache</MethodName>
            <MethodComment>/** 
 * Get an optimized cache instance depending on the operation parameters.
 */
</MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>h</ParamName>
                    <ParamType>HotRodHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheCfg</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>