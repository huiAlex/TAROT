<Class>
    <Id>421</Id>
    <Package>org.infinispan.server.websocket.handlers</Package>
    <ClassName>MockClient</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MockClient  /** 
 * Mock client for testing.
 * @author &lt;a href="mailto:tom.fennelly@gmail.com"&gt;tom.fennelly@gmail.com&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cacheName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>cacheContainer</FieldName>
            <FieldType>CacheContainer</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Cache</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>putHandler</FieldName>
            <FieldType>OpHandler</FieldType>
        </Field>
        <Field>
            <FieldName>getHandler</FieldName>
            <FieldType>OpHandler</FieldType>
        </Field>
        <Field>
            <FieldName>removeHandler</FieldName>
            <FieldType>OpHandler</FieldType>
        </Field>
        <Field>
            <FieldName>notifyHandler</FieldName>
            <FieldType>OpHandler</FieldType>
        </Field>
        <Field>
            <FieldName>ctx</FieldName>
            <FieldType>MockChannelHandlerContext</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MockClient</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cacheName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mockChannel</ParamName>
                    <ParamType>MockChannel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>put</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;callHandler;[putHandler, toPut(key,value,"text/plain")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>put</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>ObjectNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;callHandler;[putHandler, toPut(key,value.getTextValue(),"application/json")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>get</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;callHandler;[getHandler, toGet(key)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;callHandler;[removeHandler, toRemove(key)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;callHandler;[notifyHandler, toNotify(key)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unnotify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;callHandler;[notifyHandler, toUnnotify(key)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>callHandler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>OpHandler</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jsonObj</ParamName>
                    <ParamType>JsonObject</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>handler;handleOp;[jsonObj, cache, ctx]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toPut</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JsonObject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mimeType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JsonObject [jsonObj=JsonObject.createNew()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.OP_CODE, "put"]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.CACHE_NAME, cacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.KEY, key]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.VALUE, value]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.MIME, mimeType]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toGet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JsonObject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JsonObject [jsonObj=JsonObject.createNew()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.OP_CODE, "get"]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.CACHE_NAME, cacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.KEY, key]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toRemove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JsonObject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JsonObject [jsonObj=JsonObject.createNew()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.OP_CODE, "remove"]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.CACHE_NAME, cacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.KEY, key]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toNotify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JsonObject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JsonObject [jsonObj=JsonObject.createNew()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.OP_CODE, "notify"]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.CACHE_NAME, cacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.KEY, key]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toUnnotify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JsonObject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JsonObject [jsonObj=JsonObject.createNew()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.OP_CODE, "unnotify"]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.CACHE_NAME, cacheName]</InnerMethodInvoke>
                <InnerMethodInvoke>jsonObj;put;[OpHandler.KEY, key]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cache;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheContainer;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>