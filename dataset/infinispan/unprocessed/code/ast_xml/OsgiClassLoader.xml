<Class>
    <Id>3729</Id>
    <Package>org.infinispan.commons.util</Package>
    <ClassName>OsgiClassLoader</ClassName>
    <SuperClass>ClassLoader</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OsgiClassLoader  /** 
 * @author Brett Meyer
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>bundles</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>bundles</FieldName>
            <FieldType>WeakReference&lt;Bundle&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>classCache</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>classCache</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>resourceCache</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>resourceCache</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>OsgiClassLoader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OsgiClassLoader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>OsgiClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findClass</MethodName>
            <MethodComment>/** 
 * Load the class and break on first found match. TODO: Should this throw a different exception or warn if multiple classes were found? Naming collisions can and do happen in OSGi...
 */
</MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findResource</MethodName>
            <MethodComment>/** 
 * Load the resource and break on first found match. TODO: Should this throw a different exception or warn if multiple resources were found? Naming collisions can and do happen in OSGi...
 */
</MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findResources</MethodName>
            <MethodComment>/** 
 * Load the resources and return an Enumeration Note: Since they're Enumerations, do not cache these results!
 */
</MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Enumeration&lt;URL&gt;&gt; [enumerations=new ArrayList&lt;Enumeration&lt;URL&gt;&gt;()]</InnerVar>
                <InnerVar>Enumeration&lt;URL&gt; [aggEnumeration=new Enumeration&lt;URL&gt;(){
  @Override public boolean hasMoreElements(){
    for (    Enumeration&lt;URL&gt; enumeration : enumerations) {
      if (enumeration != null &amp;&amp; enumeration.hasMoreElements()) {
        return true;
      }
    }
    return false;
  }
  @Override public URL nextElement(){
    for (    Enumeration&lt;URL&gt; enumeration : enumerations) {
      if (enumeration != null &amp;&amp; enumeration.hasMoreElements()) {
        return enumeration.nextElement();
      }
    }
    throw new NoSuchElementException();
  }
}
]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasMoreElements</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextElement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>