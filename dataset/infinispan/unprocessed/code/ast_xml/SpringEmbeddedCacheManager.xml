<Class>
    <Id>391</Id>
    <Package>org.infinispan.spring.provider</Package>
    <ClassName>SpringEmbeddedCacheManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CacheManager</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SpringEmbeddedCacheManager  /** 
 * &lt;p&gt; A  {@link org.springframework.cache.CacheManager &lt;code&gt;CacheManager&lt;/code&gt;} implementation that isbacked by an  {@link org.infinispan.manager.EmbeddedCacheManager &lt;code&gt;Infinispan EmbeddedCacheManager&lt;/code&gt;} instance.&lt;/p&gt; &lt;p&gt; Note that this &lt;code&gt;CacheManager&lt;/code&gt; &lt;strong&gt;does&lt;/strong&gt; support adding new {@link org.infinispan.Cache &lt;code&gt;Caches&lt;/code&gt;} at runtime, i.e. &lt;code&gt;Caches&lt;/code&gt; addedprogrammatically to the backing &lt;code&gt;EmbeddedCacheManager&lt;/code&gt; after this &lt;code&gt;CacheManager&lt;/code&gt; has been constructed will be seen by this &lt;code&gt;CacheManager&lt;/code&gt;. &lt;/p&gt;
 * @author &lt;a href="mailto:olaf DOT bergner AT gmx DOT de"&gt;Olaf Bergner&lt;/a&gt;
 * @author Marius Bogoevici
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>nativeCacheManager</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SpringEmbeddedCacheManager</MethodName>
            <MethodComment>/** 
 * @param nativeCacheManager Underlying cache manager
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nativeCacheManager</ParamName>
                    <ParamType>EmbeddedCacheManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Assert;notNull;[nativeCacheManager, "A non-null instance of EmbeddedCacheManager needs to be supplied"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SpringCache</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCacheNames</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNativeCacheManager</MethodName>
            <MethodComment>/** 
 * Return the  {@link org.infinispan.manager.EmbeddedCacheManager &lt;code&gt;org.infinispan.manager.EmbeddedCacheManager&lt;/code&gt;} that backs this&lt;code&gt;CacheManager&lt;/code&gt;.
 * @return The {@link org.infinispan.manager.EmbeddedCacheManager &lt;code&gt;org.infinispan.manager.EmbeddedCacheManager&lt;/code&gt;} that backs this&lt;code&gt;CacheManager&lt;/code&gt;
 */
</MethodComment>
            <ReturnType>EmbeddedCacheManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Stop the  {@link EmbeddedCacheManager &lt;code&gt;EmbeddedCacheManager&lt;/code&gt;} this&lt;code&gt;CacheManager&lt;/code&gt; delegates to.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.nativeCacheManager;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>