<Class>
    <Id>222</Id>
    <Package>org.infinispan.server.endpoint.subsystem</Package>
    <ClassName>EndpointSubsystemReader</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>XMLStreamConstants</SuperInterface>
        <SuperInterface>XMLElementReader</SuperInterface>
        <SuperInterface>List&lt;ModelNode&gt;</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EndpointSubsystemReader  /** 
 * The parser for the data grid endpoint subsystem configuration.
 * @author Tristan Tarrant
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>namespace</FieldName>
            <FieldType>Namespace</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EndpointSubsystemReader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>namespace</ParamName>
                    <ParamType>Namespace</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readElement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [subsystemAddress=PathAddress.pathAddress(Constants.SUBSYSTEM_PATH)]</InnerVar>
                <InnerVar>ModelNode [subsystem=Util.createAddOperation(subsystemAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;add;[subsystem]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseHotRodConnector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsystemAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [connector=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.HOTROD_CONNECTOR]</InnerVar>
                <InnerVar>PathAddress [connectorAddress=subsystemAddress.append(PathElement.pathElement(ModelKeys.HOTROD_CONNECTOR,name))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connector.get(OP_ADDR);set;[connectorAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[connector]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMemcachedConnector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsystemAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [connector=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.MEMCACHED_CONNECTOR]</InnerVar>
                <InnerVar>Set&lt;Attribute&gt; [required=EnumSet.of(Attribute.SOCKET_BINDING)]</InnerVar>
                <InnerVar>PathAddress [connectorAddress=subsystemAddress.append(PathElement.pathElement(ModelKeys.MEMCACHED_CONNECTOR,name))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connector.get(OP_ADDR);set;[connectorAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[connector]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseConnectorAttributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>Attribute</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRouterConnectorAttributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attribute</ParamName>
                    <ParamType>Attribute</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRestConnector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsystemAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [connector=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.REST_CONNECTOR]</InnerVar>
                <InnerVar>PathAddress [containerAddress=subsystemAddress.append(PathElement.pathElement(ModelKeys.REST_CONNECTOR,name))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connector.get(OP_ADDR);set;[containerAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[connector]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRestAuthentication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(connector.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.AUTHENTICATION,ModelKeys.AUTHENTICATION_NAME))]</InnerVar>
                <InnerVar>ModelNode [authentication=Util.createAddOperation(address)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[authentication]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseWebSocketConnector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsystemAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [connector=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.WEBSOCKET_CONNECTOR]</InnerVar>
                <InnerVar>Set&lt;Attribute&gt; [required=EnumSet.of(Attribute.SOCKET_BINDING)]</InnerVar>
                <InnerVar>PathAddress [connectorAddress=subsystemAddress.append(PathElement.pathElement(ModelKeys.WEBSOCKET_CONNECTOR,name))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connector.get(OP_ADDR);set;[connectorAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[connector]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRouterConnector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsystemAddress</ParamName>
                    <ParamType>PathAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModelNode [connector=Util.getEmptyOperation(ADD,null)]</InnerVar>
                <InnerVar>String [name=ModelKeys.ROUTER_CONNECTOR]</InnerVar>
                <InnerVar>PathAddress [connectorAddress=subsystemAddress.append(PathElement.pathElement(ModelKeys.ROUTER_CONNECTOR,name))]</InnerVar>
                <InnerVar>EnumSet&lt;Element&gt; [visited=EnumSet.noneOf(Element.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>connector.get(OP_ADDR);set;[connectorAddress.toModelNode()]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[connector]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTopologyStateTransfer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(connector.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.TOPOLOGY_STATE_TRANSFER,ModelKeys.TOPOLOGY_STATE_TRANSFER_NAME))]</InnerVar>
                <InnerVar>ModelNode [topologyStateTransfer=Util.createAddOperation(address)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[topologyStateTransfer]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseAuthentication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(connector.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.AUTHENTICATION,ModelKeys.AUTHENTICATION_NAME))]</InnerVar>
                <InnerVar>ModelNode [authentication=Util.createAddOperation(address)]</InnerVar>
                <InnerVar>EnumSet&lt;Element&gt; [visited=EnumSet.noneOf(Element.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;add;[authentication]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMultiTenancy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(connector.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.MULTI_TENANCY,ModelKeys.MULTI_TENANCY_NAME))]</InnerVar>
                <InnerVar>ModelNode [multiTenancy=Util.createAddOperation(address)]</InnerVar>
                <InnerVar>boolean [skipTagCheckAtTheEnd=reader.hasNext()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;add;[multiTenancy]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSasl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>authentication</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>list</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(authentication.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.SASL,ModelKeys.SASL_NAME))]</InnerVar>
                <InnerVar>ModelNode [sasl=Util.createAddOperation(address)]</InnerVar>
                <InnerVar>EnumSet&lt;Element&gt; [visited=EnumSet.noneOf(Element.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>list;add;[sasl]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePolicy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sasl</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>list</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(sasl.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.SASL_POLICY,ModelKeys.SASL_POLICY_NAME))]</InnerVar>
                <InnerVar>ModelNode [policy=Util.createAddOperation(address)]</InnerVar>
                <InnerVar>EnumSet&lt;Element&gt; [visited=EnumSet.noneOf(Element.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>list;add;[policy]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseProperty</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [propertyName=reader.getAttributeValue(0)]</InnerVar>
                <InnerVar>String [propertyValue=reader.getElementText()]</InnerVar>
                <InnerVar>PathAddress [propertyAddress=PathAddress.pathAddress(node.get(OP_ADDR)).append(ModelKeys.PROPERTY,propertyName)]</InnerVar>
                <InnerVar>ModelNode [property=Util.createAddOperation(propertyAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireSingleAttribute;[reader, Attribute.NAME.getLocalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>SaslPropertyResource.VALUE;parseAndSetParameter;[propertyValue, property, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[property]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseEncryption</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connector</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PathAddress [address=PathAddress.pathAddress(connector.get(OP_ADDR)).append(PathElement.pathElement(ModelKeys.ENCRYPTION,ModelKeys.ENCRYPTION_NAME))]</InnerVar>
                <InnerVar>ModelNode [security=Util.createAddOperation(address)]</InnerVar>
                <InnerVar>boolean [skipTagCheckAtTheEnd=reader.hasNext()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>operations;add;[security]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSni</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encryption</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [hostName=reader.getAttributeValue(null,Attribute.HOST_NAME.getLocalName())]</InnerVar>
                <InnerVar>PathAddress [sniOpAddress=PathAddress.pathAddress(encryption.get(OP_ADDR)).append(ModelKeys.SNI,hostName)]</InnerVar>
                <InnerVar>ModelNode [sniOp=Util.createAddOperation(sniOpAddress)]</InnerVar>
                <InnerVar>String [securityRealm=reader.getAttributeValue(null,Attribute.SECURITY_REALM.getLocalName())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireAttributes;[reader, Attribute.HOST_NAME.getLocalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>SniResource.HOST_NAME;parseAndSetParameter;[hostName, sniOp, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>SniResource.SECURITY_REALM;parseAndSetParameter;[securityRealm, sniOp, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[sniOp]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePrefix</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prefix</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [path=reader.getAttributeValue(null,Attribute.PATH.getLocalName())]</InnerVar>
                <InnerVar>PathAddress [pathOpAddress=PathAddress.pathAddress(prefix.get(OP_ADDR)).append(ModelKeys.PREFIX,path)]</InnerVar>
                <InnerVar>ModelNode [pathOp=Util.createAddOperation(pathOpAddress)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireAttributes;[reader, Attribute.PATH.getLocalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>PrefixResource.PATH;parseAndSetParameter;[path, pathOp, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>ParseUtils;requireNoContent;[reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[pathOp]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseHotRod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>multiTenancy</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=reader.getAttributeValue(null,Attribute.NAME.getLocalName())]</InnerVar>
                <InnerVar>PathAddress [hotrodOpAddress=PathAddress.pathAddress(multiTenancy.get(OP_ADDR)).append(ModelKeys.HOTROD,name)]</InnerVar>
                <InnerVar>ModelNode [hotrodOp=Util.createAddOperation(hotrodOpAddress)]</InnerVar>
                <InnerVar>boolean [skipTagCheckAtTheEnd=reader.hasNext()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireAttributes;[reader, Attribute.NAME.getLocalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>RouterHotRodResource.NAME;parseAndSetParameter;[name, hotrodOp, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[hotrodOp]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>XMLExtendedStreamReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>multiTenancy</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operations</ParamName>
                    <ParamType>ModelNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=reader.getAttributeValue(null,Attribute.NAME.getLocalName())]</InnerVar>
                <InnerVar>PathAddress [restOpAddress=PathAddress.pathAddress(multiTenancy.get(OP_ADDR)).append(ModelKeys.REST,name)]</InnerVar>
                <InnerVar>ModelNode [restOp=Util.createAddOperation(restOpAddress)]</InnerVar>
                <InnerVar>boolean [skipTagCheckAtTheEnd=reader.hasNext()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ParseUtils;requireAttributes;[reader, Attribute.NAME.getLocalName()]</InnerMethodInvoke>
                <InnerMethodInvoke>RouterRestResource.NAME;parseAndSetParameter;[name, restOp, reader]</InnerMethodInvoke>
                <InnerMethodInvoke>operations;add;[restOp]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>XMLStreamException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>