<Class>
    <Id>2528</Id>
    <Package>org.infinispan.client.hotrod</Package>
    <ClassName>Metadata</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Metadata  /** 
 * Represents metadata about an entry, such as creation and access times and expiration information. Time values are server time representations as returned by  {@link org.infinispan.util.TimeService#wallClockTime}
 * @author Tristan Tarrant
 * @since 9.0
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getCreated</MethodName>
            <MethodComment>/** 
 * @return Time when entry was created. -1 for immortal entries.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLifespan</MethodName>
            <MethodComment>/** 
 * @return Lifespan of the entry in seconds. Negative values are interpreted as unlimitedlifespan.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLastUsed</MethodName>
            <MethodComment>/** 
 * @return Time when entry was last used. -1 for immortal entries.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMaxIdle</MethodName>
            <MethodComment>/** 
 * @return The maximum amount of time (in seconds) this key is allowed to be idle for before itis considered as expired.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>