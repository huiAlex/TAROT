<Class>
    <Id>3251</Id>
    <Package>org.infinispan.tasks.spi</Package>
    <ClassName>TaskEngine</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TaskEngine  /** 
 * TaskEngine. An implementation of an engine for executing tasks. How the tasks are implemented is dependent on the engine itself.
 * @author Tristan Tarrant
 * @since 8.1
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment>/** 
 * Returns the name of the engine
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTasks</MethodName>
            <MethodComment>/** 
 * Returns the list of tasks managed by this engine
 * @return
 */
</MethodComment>
            <ReturnType>Task</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTask</MethodName>
            <MethodComment>/** 
 * Executes the named task on the specified cache, passing a map of named parameters.
 * @param taskName the name of the task
 * @param context a task context
 * @param executor the executor which the can be used by the task engine to run the task
 * @return
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>TaskContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>Executor</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handles</MethodName>
            <MethodComment>/** 
 * Returns whether this task engine knows about a specified named task
 * @param taskName
 * @return
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>