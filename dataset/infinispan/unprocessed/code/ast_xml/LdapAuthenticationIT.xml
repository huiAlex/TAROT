<Class>
    <Id>1532</Id>
    <Package>org.infinispan.test.integration.security.embedded</Package>
    <ClassName>LdapAuthenticationIT</ClassName>
    <SuperClass>AbstractAuthentication</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LdapAuthenticationIT  /** 
 * @author &lt;a href="mailto:vjuranek@redhat.com"&gt;Vojtech Juranek&lt;/a&gt;
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>SECURITY_DOMAIN_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ADMIN_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ADMIN_PASSWD</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>WRITER_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>WRITER_PASSWD</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>READER_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>READER_PASSWD</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>UNPRIVILEGED_ROLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>UNPRIVILEGED_PASSWD</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ldapServer</FieldName>
            <FieldType>ApacheDsLdap</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDeployment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WebArchive</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRolePermissionMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;String,AuthorizationPermission[]&gt; [roles=new HashMap&lt;String,AuthorizationPermission[]&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>roles;put;[ADMIN_ROLE, new AuthorizationPermission[]{AuthorizationPermission.ALL}]</InnerMethodInvoke>
                <InnerMethodInvoke>roles;put;[WRITER_ROLE, new AuthorizationPermission[]{AuthorizationPermission.WRITE}]</InnerMethodInvoke>
                <InnerMethodInvoke>roles;put;[READER_ROLE, new AuthorizationPermission[]{AuthorizationPermission.READ}]</InnerMethodInvoke>
                <InnerMethodInvoke>roles;put;[UNPRIVILEGED_ROLE, new AuthorizationPermission[]{AuthorizationPermission.NONE}]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrincipalRoleMapper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PrincipalRoleMapper</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSecurityDomainName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAdminSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWriterSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReaderSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnprivilegedSubject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Subject</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>LoginException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCategories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>containerId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ldapServer;start;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>managementClient</ParamName>
                    <ParamType>ManagementClient</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ldapServer;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSecurityDomains</MethodName>
            <MethodComment>/** 
 * Returns SecurityDomains configuration for this testcase.
 */
</MethodComment>
            <ReturnType>SecurityDomain[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [hostname=Utils.getCannonicalHost(managementClient)]</InnerVar>
                <InnerVar>String [ldapUrl="ldap://" + hostname + ":"+ "10389"]</InnerVar>
                <InnerVar>SecurityDomain [sd=new SecurityDomain.Builder().name(SECURITY_DOMAIN_NAME).cacheType("default").loginModules(new SecurityModule.Builder().name("org.jboss.security.auth.spi.LdapLoginModule").flag("required").putOption(Context.INITIAL_CONTEXT_FACTORY,"com.sun.jndi.ldap.LdapCtxFactory").putOption("java.naming.provider.url",ldapUrl).putOption(Context.SECURITY_AUTHENTICATION,"simple").putOption("principalDNPrefix","uid=").putOption("principalDNSuffix",",ou=People,dc=infinispan,dc=org").putOption("rolesCtxDN","ou=Roles,dc=infinispan,dc=org").putOption("uidAttributeID","member").putOption("matchOnUserDN","true").putOption("roleAttributeID","cn").putOption("roleAttributeIsDN","false").putOption("searchScope","ONELEVEL_SCOPE").build()).build()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>