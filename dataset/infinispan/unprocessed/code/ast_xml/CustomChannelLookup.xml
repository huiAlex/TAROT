<Class>
    <Id>3174</Id>
    <Package>org.infinispan.statetransfer</Package>
    <ClassName>CustomChannelLookup</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>JGroupsChannelLookup</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CustomChannelLookup  /** 
 * JGroupsChannelLookup implementation that returns an existing channel.
 * @author Dan Berindei
 * @since 8.2
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>channelMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>channelMap</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>connect</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>registerChannel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gcb</ParamName>
                    <ParamType>GlobalConfigurationBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>channel</ParamName>
                    <ParamType>JChannel</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nodeName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connect</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TransportConfigurationBuilder [tcb=gcb.transport()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tcb;defaultTransport;[]</InnerMethodInvoke>
                <InnerMethodInvoke>tcb;addProperty;[JGroupsTransport.CHANNEL_LOOKUP, CustomChannelLookup.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>tcb;addProperty;["customNodeName", nodeName]</InnerMethodInvoke>
                <InnerMethodInvoke>tcb;addProperty;["customConnect", Boolean.toString(connect)]</InnerMethodInvoke>
                <InnerMethodInvoke>channelMap;put;[nodeName, channel]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJGroupsChannel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JChannel</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [nodeName=p.getProperty("customNodeName")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldConnect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldDisconnect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldClose</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>