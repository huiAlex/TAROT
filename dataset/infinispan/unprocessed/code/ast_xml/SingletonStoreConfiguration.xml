<Class>
    <Id>1705</Id>
    <Package>org.infinispan.configuration.cache</Package>
    <ClassName>SingletonStoreConfiguration</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SingletonStoreConfiguration  /** 
 * SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The coordinator of the cluster will be responsible for the underlying CacheStore. SingletonStore is a simply facade to a real CacheStore implementation. It always delegates reads to the real CacheStore.
 * @author pmuir
 * @deprecated Singleton writers will be removed in 10.0. If it is desirable that all nodes don't write to the underlying storethen a shared store should be used instead, as this only performs store writes at a key's primary owner.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ENABLED</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>ENABLED</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>PUSH_STATE_TIMEOUT</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>PUSH_STATE_TIMEOUT</FieldName>
            <FieldType>Long</FieldType>
        </Field>
        <Field>
            <FieldName>PUSH_STATE_WHEN_COORDINATOR</FieldName>
            <FieldType>AttributeDefinition</FieldType>
        </Field>
        <Field>
            <FieldName>PUSH_STATE_WHEN_COORDINATOR</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>enabled</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>enabled</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>pushStateTimeout</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>pushStateTimeout</FieldName>
            <FieldType>Long</FieldType>
        </Field>
        <Field>
            <FieldName>pushStateWhenCoordinator</FieldName>
            <FieldType>Attribute</FieldType>
        </Field>
        <Field>
            <FieldName>pushStateWhenCoordinator</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>attributes</FieldName>
            <FieldType>AttributeSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>attributeDefinitionSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AttributeSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SingletonStoreConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>attributes</ParamName>
                    <ParamType>AttributeSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enabled</MethodName>
            <MethodComment>/** 
 * If true, the singleton store cache store is enabled.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pushStateTimeout</MethodName>
            <MethodComment>/** 
 * If pushStateWhenCoordinator is true, this property sets the maximum number of milliseconds that the process of pushing the in-memory state to the underlying cache loader should take.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pushStateWhenCoordinator</MethodName>
            <MethodComment>/** 
 * If true, when a node becomes the coordinator, it will transfer in-memory state to the underlying cache store. This can be very useful in situations where the coordinator crashes and there's a gap in time until the new coordinator is elected.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>attributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AttributeSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [prime=31]</InnerVar>
                <InnerVar>int [result=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SingletonStoreConfiguration [other=(SingletonStoreConfiguration)obj]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>