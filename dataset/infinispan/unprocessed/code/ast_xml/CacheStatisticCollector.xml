<Class>
    <Id>2633</Id>
    <Package>org.infinispan.stats</Package>
    <ClassName>CacheStatisticCollector</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CacheStatisticCollector  /** 
 * Collects and maintains all the statistics for a cache.
 * @author Roberto Palmieri
 * @author Sebastiano Peluso
 * @author Diego Didona
 * @author Pedro Ruivo
 * @since 6.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>trace</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>timeService</FieldName>
            <FieldType>TimeService</FieldType>
        </Field>
        <Field>
            <FieldName>globalContainer</FieldName>
            <FieldType>ConcurrentGlobalContainer</FieldType>
        </Field>
        <Field>
            <FieldName>percentiles</FieldName>
            <FieldType>EnumMap</FieldType>
        </Field>
        <Field>
            <FieldName>percentiles</FieldName>
            <FieldType>PercentileStatistic</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CacheStatisticCollector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timeService</ParamName>
                    <ParamType>TimeService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;reset;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reset</MethodName>
            <MethodComment>/** 
 * reset all the statistics collected so far.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalContainer;reset;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>merge</MethodName>
            <MethodComment>/** 
 * Merges a transaction statistics in this cache statistics.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transactionStatistics</ParamName>
                    <ParamType>TransactionStatistics</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ReservoirSampler [reservoirSampler]</InnerVar>
                <InnerVar>ExtendedStatistic [percentileSample]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doMerge;[transactionStatistics, reservoirSampler, percentileSample]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addLocalValue</MethodName>
            <MethodComment>/** 
 * Adds a value to a local statistic. This value is not associated with any transaction.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stat</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalContainer;add;[stat, value, true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addRemoteValue</MethodName>
            <MethodComment>/** 
 * Adds a value to a remote statistic. This value is not associated with any transaction.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stat</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalContainer;add;[stat, value, false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPercentile</MethodName>
            <MethodComment>/** 
 * @return the percentile og the statistic.
 * @throws IllegalArgumentException if the percentile request is not in the correct bounds (]0,100[)
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stat</ParamName>
                    <ParamType>PercentileStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>percentile</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IllegalArgumentException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAttribute</MethodName>
            <MethodComment>/** 
 * @return the current value of the statistic. If the statistic is not exported (via JMX), then the sum of the remoteand local value is returned.
 * @throws ExtendedStatisticNotFoundException if the statistic is not found.
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stat</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StatisticsSnapshot [snapshot=globalContainer.getSnapshot()]</InnerVar>
                <InnerVar>double [value=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpTo</MethodName>
            <MethodComment>/** 
 * Dumps all the cache statistic values to a  {@link StringBuilder}
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringWriter [stringWriter=new StringWriter()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalContainer;dumpTo;[new PrintWriter(stringWriter)]</InnerMethodInvoke>
                <InnerMethodInvoke>builder;append;[stringWriter.getBuffer()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpTo</MethodName>
            <MethodComment>/** 
 * Prints the cache statistics values to a  {@link PrintStream}.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>PrintWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writer;println;["Global Statistics:"]</InnerMethodInvoke>
                <InnerMethodInvoke>globalContainer;dumpTo;[writer]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convertNanosToMicro</MethodName>
            <MethodComment>/** 
 * @return the conversion of nanoseconds to microseconds without losing precision.
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nanos</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convertNanosToSeconds</MethodName>
            <MethodComment>/** 
 * @return the conversion of nanoseconds to seconds without losing precision.
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nanos</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doMerge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>transactionStatistics</ParamName>
                    <ParamType>TransactionStatistics</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reservoirSampler</ParamName>
                    <ParamType>ReservoirSampler</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>percentileSample</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>transactionStatistics;flushTo;[globalContainer]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>averageLocal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>snapshot</ParamName>
                    <ParamType>StatisticsSnapshot</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numeratorStat</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>denominatorStats</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>double [denominator=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>averageRemote</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>snapshot</ParamName>
                    <ParamType>StatisticsSnapshot</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numeratorStat</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>denominatorStats</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>double [denominator=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>averageLocalAndRemote</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>snapshot</ParamName>
                    <ParamType>StatisticsSnapshot</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numeratorStat</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>denominatorStats</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>double [denominator=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>microAverageLocal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>snapshot</ParamName>
                    <ParamType>StatisticsSnapshot</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numerator</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>denominator</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>microAverageRemote</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>snapshot</ParamName>
                    <ParamType>StatisticsSnapshot</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numerator</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>denominator</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>microAverageLocalAndRemote</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>snapshot</ParamName>
                    <ParamType>StatisticsSnapshot</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numerator</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>denominator</ParamName>
                    <ParamType>ExtendedStatistic</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExtendedStatisticNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>