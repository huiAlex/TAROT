<Class>
    <Id>164</Id>
    <Package>org.infinispan.server.test.client.multitenancy</Package>
    <ClassName>MultitenancyIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MultitenancyIT  /** 
 * Tests Multi-tenancy feature. HotRod client performs write operation and read goes through REST. Note, that compatibility mode is a must here. &lt;p&gt; Since this test is pretty slow (requires booting up full server with Arquillian), it contains only high level tests. For more complicated scenarios, see tests from  {@link org.infinispan.server.router.integration}. &lt;/p&gt;
 * @author Sebastian ≈Åaskawiec
 * @since 9.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>CACHE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCache</FieldName>
            <FieldType>RemoteCache</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCache</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>remoteCacheManager</FieldName>
            <FieldType>RemoteCacheManager</FieldType>
        </Field>
        <Field>
            <FieldName>rest</FieldName>
            <FieldType>RESTHelper</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>release</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rest;clearServers;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ConfigurationBuilder [builder=new SecurityConfigurationHelper().withDefaultSsl().withSni("sni1")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.addServer().host("127.0.0.1");port;[11222]</InnerMethodInvoke>
                <InnerMethodInvoke>rest;addServer;["127.0.0.1", 8080, "/rest/multi-tenancy-1"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testWritesThroughHotrodAndReadsThroughREST</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remoteCache;put;["hello", "Infinispan!"]</InnerMethodInvoke>
                <InnerMethodInvoke>rest;get;[rest.fullPathKey(CACHE_NAME,"hello"), "Infinispan!"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>