<Class>
    <Id>2510</Id>
    <Package>org.infinispan.test.integration.as</Package>
    <ClassName>InfinispanStoreJpaIT</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InfinispanStoreJpaIT  /** 
 * Test the Infinispan JPA CacheStore AS module integration
 * @author Tristan Tarrant
 * @since 7.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cm</FieldName>
            <FieldType>EmbeddedCacheManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>deployment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>manifest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Asset</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [manifest=Descriptors.create(ManifestDescriptor.class).attribute("Dependencies","org.infinispan:" + Version.getModuleSlot() + " services, org.infinispan.persistence.jpa:"+ Version.getModuleSlot()+ " services").exportAsString()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCacheManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>GlobalConfigurationBuilder [gcb=new GlobalConfigurationBuilder()]</InnerVar>
                <InnerVar>ConfigurationBuilder [builder=new ConfigurationBuilder()]</InnerVar>
                <InnerVar>Cache&lt;String,KeyValueEntity&gt; [cache=cm.getCache()]</InnerVar>
                <InnerVar>KeyValueEntity [entity=new KeyValueEntity("a","a")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gcb.globalJmxStatistics();allowDuplicateDomains;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>builder.persistence().addStore(JpaStoreConfigurationBuilder.class).persistenceUnitName("org.infinispan.persistence.jpa");entityClass;[KeyValueEntity.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cache;put;[entity.getK(), entity]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["a", cache.get(entity.getK()).getValue()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testXmlConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Cache&lt;String,KeyValueEntity&gt; [specificCache=cm.getCache("specificCache")]</InnerVar>
                <InnerVar>KeyValueEntity [entity=new KeyValueEntity("k","v")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;validateConfig;[specificCache]</InnerMethodInvoke>
                <InnerMethodInvoke>specificCache;put;[entity.getK(), entity]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateConfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>vehicleCache</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StoreConfiguration [config=vehicleCache.getCacheConfiguration().persistence().stores().get(0)]</InnerVar>
                <InnerVar>JpaStoreConfiguration [jpaConfig=(JpaStoreConfiguration)config]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertTrue;[config instanceof JpaStoreConfiguration]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[1, jpaConfig.batchSize()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[KeyValueEntity.class, jpaConfig.entityClass()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>