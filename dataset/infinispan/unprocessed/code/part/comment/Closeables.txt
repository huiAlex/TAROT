/**
 * This class consists exclusively of static methods that operate on or return closeable interfaces.  This is helpful
 * when wanting to change a given interface to an appropriate closeable interface.
 *  */

/**
    * Takes a provided closeable iterator and wraps it appropriately so it can be used as a closeable spliterator that
    * will close the iterator when the spliterator is closed.
    * @param iterator The closeable iterator to change to a spliterator
    * @param size The approximate size of the iterator.  If no size is known {@link Long#MAX_VALUE} should be passed
    * @param characteristics The characteristics of the given spliterator as defined on the {@link Spliterator}
    *                        interface
    * @param  The type that is the same between the iterator and spliterator
    * @return A spliterator that when closed will close the provided iterator
    */

/**
    * Creates a closeable spliterator from the given spliterator that does nothing when close is called.
    * @param spliterator The spliterator to wrap to allow it to become a closeable spliterator.
    * @param  The type of the spliterators
    * @return A spliterator that does nothing when closed
    */

/**
    * Creates a closeable spliterator that when closed will close the underlying stream as well
    * @param stream The stream to change into a closeable spliterator
    * @param  The type of the stream
    * @return A spliterator that when closed will also close the underlying stream
    */

/**
    * Creates a closeable iterator that when closed will close the underlying stream as well
    * @param stream The stream to change into a closeable iterator
    * @param  The type of the stream
    * @return An iterator that when closed will also close the underlying stream
    */

/**
    * Creates a closeable iterator from the given iterator that does nothing when close is called.
    * @param iterator The iterator to wrap to allow it to become a closeable iterator
    * @param  The type of the iterators
    * @return An iterator that does nothing when closed
    */

/**
    * Creates a stream that when closed will also close the underlying spliterator
    * @param spliterator spliterator to back the stream and subsequently close
    * @param parallel whether or not the returned stream is parallel or not
    * @param  the type of the stream
    * @return the stream to use
    */

/**
    * Creates a stream that when closed will also close the underlying iterator
    * @param iterator iterator to back the stream and subsequently close
    * @param parallel whether or not the returned stream is parallel or not
    * @param size the size of the iterator if known, otherwise {@link Long#MAX_VALUE} should be passed.
    * @param characteristics the characteristics of the iterator to be used
    * @param  the type of the stream
    * @return the stream to use
    */

