/**
 * Static factory class containing methods that will provide marshallable instances for very common use cases.
 * Every instance returned from the various static methods uses the Infinispan marshalling to reduce payload sizes
 * considerably and should be used whenever possible.
 */

/**
    * Provides a predicate that returns true when the object is equal.
    * @param object the instance to test equality on
    * @return the predicate
    */

/**
    * Predicate that returns true if the object passed to it is not null.
    * @return the predicate
    */

/**
    * Predicate taht always returns true irrespective of the value provided
    * @return the predicate
    */

/**
    * Provides a function that returns the key of the entry when invoked.
    * @param  key type of the entry
    * @param  value type of the entry
    * @return a function that when applied to a given entry will return the key
    */

/**
    * Provides a function that returns the value of the entry when invoked.
    * @param  key type of the entry
    * @param  value type of the entry
    * @return a function that when applied to a given entry will return the value
    */

/**
    * Provides a function that given a key will return the {@link CacheEntry} that maps to this
    * key. This function only works when used with a {@link org.infinispan.CacheStream} returned
    * from the desired {@link Cache}. The entry will be read from the Cache of which the
    * CacheStream was created from.
    * @param  the key type
    * @param  the expected value type of the entry
    * @return a function that when applied returns the entry for the given key
    */

