/**
 * A utility class for replacing properties in strings.
 *
 *  *  *  *  *  *  */

/**
    * New line string constant
    */

/**
    * File separator value
    */

/**
    * Path separator value
    */

/**
    * File separator alias
    */

/**
    * Path separator alias
    */

/**
    * Go through the input string and replace any occurance of ${p} with the
    * System.getProperty(p) value. If there is no such property p defined, then
    * the ${p} reference will remain unchanged.
    * 
    * If the property reference is of the form ${p:v} and there is no such
    * property p, then the default value v will be returned.
    * 
    * If the property reference is of the form ${p1,p2} or ${p1,p2:v} then the
    * primary and the secondary properties will be tried in turn, before
    * returning either the unchanged input, or the default value.
    * 
    * The property ${/} is replaced with System.getProperty("file.separator")
    * value and the property ${:} is replaced with System.getProperty("path.separator").
    *
    * @param string - the string with possible ${} references
    * @return the input string with all property references replaced if any. If
    *         there are no valid references the input string will be returned.
    */

/**
    * Try to resolve a "key" from the provided properties by checking if it is
    * actually a "key1,key2", in which case try first "key1", then "key2". If
    * all fails, return null.
    * 
    * It also accepts "key1," and ",key2".
    *
    * @param key   the key to resolve
    * @param props the properties to use
    * @return the resolved key or null
    */

