/**
 * AlphaNodes are nodes in the Rete network used
 * to apply FieldConstraints on asserted fact
 * objects where the FieldConstraints have no dependencies on any other of the facts in the current Rule.
 *
 *  */

/**
     * The FieldConstraint
     */

/**
     * Construct an AlphaNode with a unique id using the provided
     * FieldConstraint and the given ObjectSource.
     * Set the boolean flag to true if the node is supposed to have local
     * memory, or false otherwise. Memory is optional for AlphaNodes
     * and is only of benefic when adding additional Rules at runtime.
     *
     * @param id           Node's ID
     * @param constraint   Node's constraints
     * @param objectSource Node's object source
     */

/**
     * Retruns the FieldConstraint
     *
     * @return FieldConstraint
     */

/**
     * Returns the next node
     *
     * @return The next ObjectSinkNode
     */

/**
     * Sets the next node
     *
     * @param next The next ObjectSinkNode
     */

/**
     * Returns the previous node
     *
     * @return The previous ObjectSinkNode
     */

/**
     * Sets the previous node
     *
     * @param previous The previous ObjectSinkNode
     */

/**
     * Used with the updateSink method, so that the parent ObjectSource
     * can  update the  TupleSink
     */

