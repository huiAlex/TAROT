/**
     * 
     * Get the time at which the CronTrigger should quit
     * repeating - even if repeastCount isn't yet satisfied.
     * 
     */

/**
     * 
     * Returns the next time at which the Trigger is scheduled to fire. If
     * the trigger will not fire again, null will be returned.  Note that
     * the time returned can possibly be in the past, if the time that was computed
     * for the trigger to next fire has already arrived, but the scheduler has not yet
     * been able to fire the trigger (which would likely be due to lack of resources
     * e.g. threads).
     * 
     *
     * The value returned is not guaranteed to be valid until after the Trigger
     * has been added to the scheduler.
     * 
     */

/**
     * 
     * Returns the previous time at which the CronTrigger 
     * fired. If the trigger has not yet fired, null will be
     * returned.
     */

/**
     * 
     * Sets the next time at which the CronTrigger will fire.
     * This method should not be invoked by client code.
     * 
     */

/**
     * 
     * Set the previous time at which the CronTrigger fired.
     * 
     * 
     * 
     * This method should not be invoked by client code.
     * 
     */

/**
     * 
     * Returns the time zone for which the cronExpression of
     * this CronTrigger will be resolved.
     * 
     */

/**
     * 
     * Sets the time zone for which the cronExpression of this
     * CronTrigger will be resolved.
     * 
     * 
     * If {@link #setCronExpression(CronExpression)} is called after this
     * method, the TimeZon setting on the CronExpression will "win".  However
     * if {@link #setCronExpression(String)} is called after this method, the
     * time zone applied by this method will remain in effect, since the 
     * String cron expression does not carry a time zone!
     */

/**
     * 
     * Returns the next time at which the CronTrigger will fire,
     * after the given time. If the trigger will not fire after the given time,
     * null will be returned.
     * 
     * 
     * 
     * Note that the date returned is NOT validated against the related
     * org.quartz.Calendar (if any)
     * 
     */

