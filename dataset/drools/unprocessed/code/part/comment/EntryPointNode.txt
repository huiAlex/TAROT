/**
 * A node that is an entry point into the Rete network.
 *
 * As we move the design to support network partitions and concurrent processing
 * of parts of the network, we also need to support multiple, independent entry
 * points and this class represents that.
 *
 * It replaces the function of the Rete Node class in previous designs.
 *
 *  */

/**
     * The entry point ID for this node
     */

/**
     * The object type nodes under this node
     */

/**
     * @return the entryPoint
     */

/**
     * This is the entry point into the network for all asserted Facts. Iterates a cache
     * of matching ObjectTypdeNodes asserting the Fact. If the cache does not
     * exist it first iterates and builds the cache.
     *
     * @param factHandle
     *            The FactHandle of the fact to assert
     * @param context
     *            The PropagationContext of the WorkingMemory action
     * @param workingMemory
     *            The working memory session.
     */

/**
     * Retract a fact object from this RuleBase and the specified
     * WorkingMemory.
     *
     * @param handle
     *            The handle of the fact to retract.
     * @param workingMemory
     *            The working memory session.
     */

/**
     * Adds the ObjectSink so that it may receive
     * Objects propagated from this ObjectSource.
     *
     * @param objectSink
     *            The ObjectSink to receive propagated
     *            Objects. Rete only accepts ObjectTypeNodes
     *            as parameters to this method, though.
     */

