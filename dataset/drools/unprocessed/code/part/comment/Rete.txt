/**
 * The Rete-OO network.
 *
 * The Rete class is the root Object. All objects are asserted into
 * the Rete node where it propagates to all matching ObjectTypeNodes.
 *
 * The first time an  instance of a Class type is asserted it does a full
 * iteration of all ObjectTyppeNodes looking for matches, any matches are
 * then cached in a HashMap which is used for future assertions.
 *
 * While Rete  extends ObjectSource nad implements ObjectSink it nulls the
 * methods attach(), remove() and  updateNewNode() as this is the root node
 * they are no applicable
 *
 *  */

/**
     * This is the entry point into the network for all asserted Facts. Iterates a cache
     * of matching ObjectTypdeNodes asserting the Fact. If the cache does not
     * exist it first iteraes and builds the cache.
     *
     * @param factHandle
     *            The FactHandle of the fact to assert
     * @param context
     *            The PropagationContext of the WorkingMemory action
     * @param workingMemory
     *            The working memory session.
     */

/**
     * Retract a fact object from this RuleBase and the specified
     * WorkingMemory.
     *
     * @param handle
     *            The handle of the fact to retract.
     * @param workingMemory
     *            The working memory session.
     */

/**
     * Adds the ObjectSink so that it may receive
     * Objects propagated from this ObjectSource.
     *
     * @param objectSink
     *            The ObjectSink to receive propagated
     *            Objects. Rete only accepts ObjectTypeNodes
     *            as parameters to this method, though.
     */

