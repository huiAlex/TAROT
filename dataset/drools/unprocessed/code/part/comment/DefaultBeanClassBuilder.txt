/**
 * A builder to dynamically build simple Javabean(TM) classes
 */

/**
     * Dynamically builds, defines and loads a class based on the given class definition
     *
     * @param classDef the class definition object structure
     *
     * @return the Class instance for the given class definition
     *
     *      *      *      *      *      *      *      *      *      */

/**
     * A traitable class is a special class with support for dynamic properties and types.
     *
     * This method builds the trait map, containing the references to the proxies
     * for each trait carried by an object at a given time.
     *
     * @param cw
     * @param classDef
     */

/**
     * A traitable class is a special class with support for dynamic properties and types.
     *
     * This method builds the property map, containing the key/values pairs to implement
     * any property defined in a trait interface but not supported by the traited class
     * fields.
     *
     * @param cw
     * @param def
     */

/**
     * A traitable class is a special class with support for dynamic properties and types.
     *
     * A traitable class in logical mode provides additional control over the values
     * and type(s) of its fields.
     *
     * @param cw
     * @param def
     */

/**
     * Defines the class header for the given class definition
     */

/**
     * Creates the field defined by the given FieldDefinition
     *
     * @param cw
     * @param fieldDef
     */

/**
     * Creates a default constructor for the class
     *
     * @param cw
     */

/**
     * Initializes the trait map and dynamic property map to empty values
     * @param mv
     * @param classDef
     */

/**
     * Creates a constructor that takes and assigns values to all
     * fields in the order they are declared.
     *
     * @param cw
     * @param classDef
     */

/**
     * Creates the set method for the given field definition
     *
     * @param cw
     * @param classDef
     * @param fieldDef
     */

/**
     * Creates the get method for the given field definition
     *
     * @param cw
     * @param classDef
     * @param fieldDef
     */

