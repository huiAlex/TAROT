<Class>
    <Id>2675</Id>
    <Package>org.drools.core.reteoo</Package>
    <ClassName>NodeTypeEnums</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>NodeTypeEnums  /** 
 * ObjectSource   : &lt; NodeTypeEnums.ObjectSource *  LeftTupleSource: &gt; LeftTupleSource BetaNode       : &gt; BetaNode ObjectSink     : % 2 == 0 LeftSource     : % 2 != 0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>EntryPointNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ReteNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ObjectTypeNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>AlphaNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>PropagationQueuingNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>WindowNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>PropagationQueueingNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>RightInputAdaterNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ObjectSource</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>QueryTerminalNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>RuleTerminalNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>LeftTupleSource</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>LeftInputAdapterNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>EvalConditionNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>TimerConditionNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>QueryRiaFixerNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>FromNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ReactiveFromNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>UnificationNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>QueryElementNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ConditionalBranchNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>BetaNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>JoinNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>NotNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ExistsNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>AccumulateNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ForallNotNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>ElseNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>OperatorNode</FieldName>
            <FieldType>short</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>isObjectSource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isObjectSink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLeftTupleSource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBetaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isTerminalNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLeftTupleSink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isEndNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLeftTupleNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>