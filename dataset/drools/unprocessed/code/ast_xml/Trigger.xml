<Class>
    <Id>2363</Id>
    <Package>org.drools.core.time</Package>
    <ClassName>Trigger</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Serializable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Trigger  /** 
 * A trigger interface for scheduling jobs
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>hasNextFireTime</MethodName>
            <MethodComment>/** 
 * This method is used to query the trigger about the existence of a possible next fire time, but WITHOUT changing any internal state  of the trigger.  In other words, this method MUST not have side effects. As an analogy, if a trigger was a stack, this method would be the equivalent of a "peek()" call.
 * @return the Date of the next fire time or null if there is no  next fire time.
 */
</MethodComment>
            <ReturnType>Date</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextFireTime</MethodName>
            <MethodComment>/** 
 * This method returns the date of the next fire time and updates the internal state of the Trigger to the following fire time if one exists. As an analogy, if a trigger was a stack, this method would be the equivalent of a "pop()" call.
 * @return the Date of the next fire time or null if there is nonext fire time.
 */
</MethodComment>
            <ReturnType>Date</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>