<Class>
    <Id>2316</Id>
    <Package>org.drools.core.reteoo.builder</Package>
    <ClassName>GroupElementBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ReteooComponentBuilder</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>geBuilders</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>geBuilders</FieldName>
            <FieldType>Type</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>GroupElementBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.geBuilders;put;[GroupElement.AND, new AndBuilder()]</InnerMethodInvoke>
                <InnerMethodInvoke>this.geBuilders;put;[GroupElement.OR, new OrBuilder()]</InnerMethodInvoke>
                <InnerMethodInvoke>this.geBuilders;put;[GroupElement.NOT, new NotBuilder()]</InnerMethodInvoke>
                <InnerMethodInvoke>this.geBuilders;put;[GroupElement.EXISTS, new ExistsBuilder()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment>/** 
 * @inheritDoc
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GroupElement [ge=(GroupElement)rce]</InnerVar>
                <InnerVar>ReteooComponentBuilder [builder=this.geBuilders.get(ge.getType())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;push;[ge]</InnerMethodInvoke>
                <InnerMethodInvoke>context;pushRuleComponent;[ge]</InnerMethodInvoke>
                <InnerMethodInvoke>builder;build;[context, utils, rce]</InnerMethodInvoke>
                <InnerMethodInvoke>context;pop;[]</InnerMethodInvoke>
                <InnerMethodInvoke>context;popRuleComponent;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresLeftActivation</MethodName>
            <MethodComment>/** 
 * @inheritDoc
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GroupElement [ge=(GroupElement)rce]</InnerVar>
                <InnerVar>ReteooComponentBuilder [builder=this.geBuilders.get(ge.getType())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment>/** 
 * @inheritDoc And group elements just iterate over their children selecting and calling the build procedure for each one
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GroupElement [ge=(GroupElement)rce]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildTupleSource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildJoinNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresLeftActivation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GroupElement [and=(GroupElement)rce]</InnerVar>
                <InnerVar>RuleConditionElement [child=and.getChildren().get(0)]</InnerVar>
                <InnerVar>ReteooComponentBuilder [builder=utils.getBuilderFor(child)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment>/** 
 * @inheritDoc
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresLeftActivation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment>/** 
 * @inheritDoc Not must verify what is the class of its child: If it is a pattern, a simple NotNode is added to the rulebase If it is a group element, than a subnetwork must be created
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [existSubNetwort=false]</InnerVar>
                <InnerVar>GroupElement [not=(GroupElement)rce]</InnerVar>
                <InnerVar>int [currentPatternIndex=context.getCurrentPatternOffset()]</InnerVar>
                <InnerVar>LeftTupleSource [tupleSource=context.getTupleSource()]</InnerVar>
                <InnerVar>RuleConditionElement [child=not.getChildren().get(0)]</InnerVar>
                <InnerVar>ReteooComponentBuilder [builder=utils.getBuilderFor(child)]</InnerVar>
                <InnerVar>NodeFactory [nfactory=context.getComponentFactory().getNodeFactoryService()]</InnerVar>
                <InnerVar>BetaConstraints [betaConstraints=utils.createBetaNodeConstraint(context,context.getBetaconstraints(),false)]</InnerVar>
                <InnerVar>NotNode [node=context.getComponentFactory().getNodeFactoryService().buildNotNode(context.getNextId(),context.getTupleSource(),context.getObjectSource(),betaConstraints,context)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder;build;[context, utils, child]</InnerMethodInvoke>
                <InnerMethodInvoke>node;setEmptyBetaConstraints;[context.getBetaconstraints().isEmpty()]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setTupleSource;[utils.attachNode(context,node)]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setBetaconstraints;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setObjectSource;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setCurrentPatternOffset;[currentPatternIndex]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresLeftActivation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment>/** 
 * @inheritDoc Exists must verify what is the class of its child: If it is a pattern, a simple ExistsNode is added to the rulebase If it is a group element, than a subnetwork must be created
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [existSubNetwort=false]</InnerVar>
                <InnerVar>GroupElement [exists=(GroupElement)rce]</InnerVar>
                <InnerVar>int [currentPatternIndex=context.getCurrentPatternOffset()]</InnerVar>
                <InnerVar>LeftTupleSource [tupleSource=context.getTupleSource()]</InnerVar>
                <InnerVar>RuleConditionElement [child=exists.getChildren().get(0)]</InnerVar>
                <InnerVar>ReteooComponentBuilder [builder=utils.getBuilderFor(child)]</InnerVar>
                <InnerVar>NodeFactory [nfactory=context.getComponentFactory().getNodeFactoryService()]</InnerVar>
                <InnerVar>BetaConstraints [betaConstraints=utils.createBetaNodeConstraint(context,context.getBetaconstraints(),false)]</InnerVar>
                <InnerVar>ExistsNode [node=context.getComponentFactory().getNodeFactoryService().buildExistsNode(context.getNextId(),context.getTupleSource(),context.getObjectSource(),betaConstraints,context)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder;build;[context, utils, child]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setTupleSource;[utils.attachNode(context,node)]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setBetaconstraints;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setObjectSource;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setCurrentPatternOffset;[currentPatternIndex]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresLeftActivation</MethodName>
            <MethodComment>/** 
 * @inheritDoc
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>utils</ParamName>
                    <ParamType>BuildUtils</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rce</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>