<Class>
    <Id>546</Id>
    <Package>org.drools.core.marshalling.impl</Package>
    <ClassName>ProtobufOutputMarshaller</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ProtobufOutputMarshaller  /** 
 * An output marshaller that uses ProtoBuf as the marshalling framework in order to provide backward compatibility with marshalled sessions
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>processMarshaller</FieldName>
            <FieldType>ProcessMarshaller</FieldType>
        </Field>
        <Field>
            <FieldName>instance</FieldName>
            <FieldType>AgendaGroupSorter</FieldType>
        </Field>
        <Field>
            <FieldName>instance</FieldName>
            <FieldType>RuleFlowGroupSorter</FieldType>
        </Field>
        <Field>
            <FieldName>instance</FieldName>
            <FieldType>EqualityKeySorter</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>ActivationsSorter</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createProcessMarshaller</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProcessMarshaller</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.KnowledgeSession [_session=serializeSession(context)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>PersisterHelper;writeToStreamWithHeader;[context, _session]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serializeSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.KnowledgeSession</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StatefulKnowledgeSessionImpl [wm=(StatefulKnowledgeSessionImpl)context.wm]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeObjectTypeConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>otcr</ParamName>
                    <ParamType>ObjectTypeConfigurationRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_epb</ParamName>
                    <ParamType>org.drools.core.marshalling.impl.ProtobufMessages.EntryPoint.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;ObjectTypeConf&gt; [values=otcr.values()]</InnerVar>
                <InnerVar>ObjectTypeConf[] [otcs=values.toArray(new ObjectTypeConf[values.size()])]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;sort;[otcs, new Comparator&lt;ObjectTypeConf&gt;(){
  @Override public int compare(  ObjectTypeConf o1,  ObjectTypeConf o2){
    return o1.getTypeName().compareTo(o2.getTypeName());
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>ObjectTypeConf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>ObjectTypeConf</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateRuleActivations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>StatefulKnowledgeSessionImpl</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [dirty=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeAgenda</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_ksb</ParamName>
                    <ParamType>ProtobufMessages.RuleData.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InternalWorkingMemory [wm=context.wm]</InnerVar>
                <InnerVar>InternalAgenda [agenda=wm.getAgenda()]</InnerVar>
                <InnerVar>org.drools.core.marshalling.impl.ProtobufMessages.Agenda.Builder [_ab=ProtobufMessages.Agenda.newBuilder()]</InnerVar>
                <InnerVar>AgendaGroup[] [agendaGroups=agenda.getAgendaGroupsMap().values().toArray(new AgendaGroup[agenda.getAgendaGroupsMap().size()])]</InnerVar>
                <InnerVar>org.drools.core.marshalling.impl.ProtobufMessages.Agenda.FocusStack.Builder [_fsb=ProtobufMessages.Agenda.FocusStack.newBuilder()]</InnerVar>
                <InnerVar>LinkedList&lt;AgendaGroup&gt; [focusStack=agenda.getStackList()]</InnerVar>
                <InnerVar>org.drools.core.util.Iterator [it=ActivationIterator.iterator(wm)]</InnerVar>
                <InnerVar>List&lt;org.drools.core.spi.Activation&gt; [dormant=new ArrayList&lt;org.drools.core.spi.Activation&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;sort;[agendaGroups, AgendaGroupSorter.instance]</InnerMethodInvoke>
                <InnerMethodInvoke>_ab;setFocusStack;[_fsb.build()]</InnerMethodInvoke>
                <InnerMethodInvoke>Collections;sort;[dormant, ActivationsSorter.INSTANCE]</InnerMethodInvoke>
                <InnerMethodInvoke>_ksb;setAgenda;[_ab.build()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeNodeMemories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_ksb</ParamName>
                    <ParamType>ProtobufMessages.RuleData.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InternalWorkingMemory [wm=context.wm]</InnerVar>
                <InnerVar>NodeMemories [memories=wm.getNodeMemories()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeAccumulateNodeMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.NodeMemory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>memory</ParamName>
                    <ParamType>Memory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AccumulateMemory [accmem=(AccumulateMemory)memory]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeRIANodeMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.NodeMemory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>BaseNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>memories</ParamName>
                    <ParamType>NodeMemories</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RightInputAdapterNode [riaNode=(RightInputAdapterNode)node]</InnerVar>
                <InnerVar>ObjectSink[] [sinks=riaNode.getObjectSinkPropagator().getSinks()]</InnerVar>
                <InnerVar>BetaNode [betaNode=(BetaNode)sinks[0]]</InnerVar>
                <InnerVar>Memory [betaMemory=memories.peekNodeMemory(betaNode)]</InnerVar>
                <InnerVar>BetaMemory [bm]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bm.getRightTupleMemory();iterator;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeFromNodeMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.NodeMemory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>memory</ParamName>
                    <ParamType>Memory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FromMemory [fromMemory=(FromMemory)memory]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeQueryElementNodeMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.NodeMemory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>memory</ParamName>
                    <ParamType>Memory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>org.drools.core.util.Iterator&lt;LeftTuple&gt; [it=LeftTupleIterator.iterator(wm,((QueryElementNodeMemory)memory).getNode())]</InnerVar>
                <InnerVar>ProtobufMessages.NodeMemory.QueryElementNodeMemory.Builder [_query=ProtobufMessages.NodeMemory.QueryElementNodeMemory.newBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>group1</ParamName>
                    <ParamType>AgendaGroup</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>group2</ParamName>
                    <ParamType>AgendaGroup</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>group1</ParamName>
                    <ParamType>RuleFlowGroup</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>group2</ParamName>
                    <ParamType>RuleFlowGroup</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeActionQueue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>ProtobufMessages.RuleData.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Iterator&lt;? extends PropagationEntry&gt; [i=context.wm.getActionsIterator()]</InnerVar>
                <InnerVar>ProtobufMessages.ActionQueue.Builder [_queue=ProtobufMessages.ActionQueue.newBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>_session;setActionQueue;[_queue.build()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeTruthMaintenanceSystem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wmep</ParamName>
                    <ParamType>EntryPoint</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_epb</ParamName>
                    <ParamType>ProtobufMessages.EntryPoint.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TruthMaintenanceSystem [tms=((NamedEntryPoint)wmep).getTruthMaintenanceSystem()]</InnerVar>
                <InnerVar>ObjectHashMap [justifiedMap=tms.getEqualityKeyMap()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeBeliefSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>beliefSet</ParamName>
                    <ParamType>BeliefSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_key</ParamName>
                    <ParamType>org.drools.core.marshalling.impl.ProtobufMessages.EqualityKey.Builder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.BeliefSet.Builder [_beliefSet=ProtobufMessages.BeliefSet.newBuilder()]</InnerVar>
                <InnerVar>ObjectMarshallingStrategyStore [objectMarshallingStrategyStore=context.objectMarshallingStrategyStore]</InnerVar>
                <InnerVar>FastIterator [it=beliefSet.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>_beliefSet;setHandleId;[beliefSet.getFactHandle().getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>_key;setBeliefSet;[_beliefSet]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key1</ParamName>
                    <ParamType>EqualityKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key2</ParamName>
                    <ParamType>EqualityKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeFactHandles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_epb</ParamName>
                    <ParamType>org.drools.core.marshalling.impl.ProtobufMessages.EntryPoint.Builder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectStore</ParamName>
                    <ParamType>ObjectStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ObjectMarshallingStrategyStore [objectMarshallingStrategyStore=context.objectMarshallingStrategyStore]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeFactHandle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.FactHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectMarshallingStrategyStore</ParamName>
                    <ParamType>ObjectMarshallingStrategyStore</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>handle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.FactHandle.Builder [_handle=ProtobufMessages.FactHandle.newBuilder()]</InnerVar>
                <InnerVar>Object [object=handle.getObject()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>_handle;setType;[getHandleType(handle)]</InnerMethodInvoke>
                <InnerMethodInvoke>_handle;setId;[handle.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>_handle;setRecency;[handle.getRecency()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHandleType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.FactHandle.HandleType</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderFacts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalFactHandle[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectStore</ParamName>
                    <ParamType>ObjectStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [size=objectStore.size()]</InnerVar>
                <InnerVar>InternalFactHandle[] [handles=new InternalFactHandle[size]]</InnerVar>
                <InnerVar>int [i=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;sort;[handles, new HandleSorter()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderFacts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalFactHandle[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handlesList</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [size=handlesList.size()]</InnerVar>
                <InnerVar>InternalFactHandle[] [handles=handlesList.toArray(new InternalFactHandle[size])]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;sort;[handles, new HandleSorter()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>h1</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>h2</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>org.drools.core.spi.Activation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>org.drools.core.spi.Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [result=o1.getRule().getName().compareTo(o2.getRule().getName())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeActivation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.Activation</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agendaItem</ParamName>
                    <ParamType>M</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.Activation.Builder [_activation=ProtobufMessages.Activation.newBuilder()]</InnerVar>
                <InnerVar>RuleImpl [rule=agendaItem.getRule()]</InnerVar>
                <InnerVar>org.drools.core.util.LinkedList&lt;LogicalDependency&lt;M&gt;&gt; [list=agendaItem.getLogicalDependencies()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>_activation;setPackageName;[rule.getPackage()]</InnerMethodInvoke>
                <InnerMethodInvoke>_activation;setRuleName;[rule.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>_activation;setTuple;[writeTuple(agendaItem.getTuple())]</InnerMethodInvoke>
                <InnerMethodInvoke>_activation;setSalience;[agendaItem.getSalience()]</InnerMethodInvoke>
                <InnerMethodInvoke>_activation;setIsActivated;[agendaItem.isQueued()]</InnerMethodInvoke>
                <InnerMethodInvoke>_activation;setEvaluated;[agendaItem.isRuleAgendaItem()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>org.drools.core.spi.Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.Tuple.Builder [_tb=ProtobufMessages.Tuple.newBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeTimers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.Timers</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timers</ParamName>
                    <ParamType>TimerJobInstance</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outCtx</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>TimerJobInstance</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>TimerJobInstance</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeTrigger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.Trigger</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>trigger</ParamName>
                    <ParamType>Trigger</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outCtx</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeWorkItem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workItem</ParamName>
                    <ParamType>WorkItem</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>processMarshaller;writeWorkItem;[context, workItem]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>