<Class>
    <Id>220</Id>
    <Package>org.drools.core.util</Package>
    <ClassName>KeyStoreHelper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>KeyStoreHelper  /** 
 * A helper class to deal with the key store and signing process during Serialisation &lt;p&gt; This class will read and use the following system properties: &lt;p&gt; drools.serialization.sign = &lt;false|true&gt; drools.serialization.private.keyStoreURL = &lt;URL&gt; drools.serialization.private.keyStorePwd = &lt;password&gt; drools.serialization.private.keyAlias = &lt;key&gt; drools.serialization.private.keyPwd = &lt;password&gt; drools.serialization.public.keyStoreURL = &lt;URL&gt; drools.serialization.public.keyStorePwd = &lt;password&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>signed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>pvtKeyStoreURL</FieldName>
            <FieldType>URL</FieldType>
        </Field>
        <Field>
            <FieldName>pvtKeyStorePwd</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>pvtKeyAlias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>pvtKeyPassword</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>pubKeyStoreURL</FieldName>
            <FieldType>URL</FieldType>
        </Field>
        <Field>
            <FieldName>pubKeyStorePwd</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>pwdKeyStoreURL</FieldName>
            <FieldType>URL</FieldType>
        </Field>
        <Field>
            <FieldName>pwdKeyStorePwd</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>pvtKeyStore</FieldName>
            <FieldType>KeyStore</FieldType>
        </Field>
        <Field>
            <FieldName>pubKeyStore</FieldName>
            <FieldType>KeyStore</FieldType>
        </Field>
        <Field>
            <FieldName>pwdKeyStore</FieldName>
            <FieldType>KeyStore</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>KeyStoreHelper</MethodName>
            <MethodComment>/** 
 * Creates a KeyStoreHelper and initialises the KeyStore, by loading its entries.
 * @throws RuntimeException in case any error happens when initialising and loading the keystore.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadPrivateKeyStoreProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [url=System.getProperty(PROP_PVT_KS_URL,"")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MalformedURLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadPublicKeyStoreProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [url=System.getProperty(PROP_PUB_KS_URL,"")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MalformedURLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadPasswordKeyStoreProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [url=System.getProperty(PROP_PWD_KS_URL,"")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MalformedURLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initKeyStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NoSuchAlgorithmException</ExceptionType>
                <ExceptionType>CertificateException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>KeyStoreException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadKeystore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KeyStore</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyCertificateType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>url</ParamName>
                    <ParamType>URL</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>char[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KeyStore [keyStore=KeyStore.getInstance(keyCertificateType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>keyStore;load;[url.openStream(), password]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>KeyStoreException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>NoSuchAlgorithmException</ExceptionType>
                <ExceptionType>CertificateException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>signDataWithPrivateKey</MethodName>
            <MethodComment>/** 
 * Generates the signature for the given byte[] using MD5 with RSA algorithm and the private key with which this helper was initialised.
 * @param data the byte[] of data to be signed
 * @return the signature, encrypted with the private key
 * @throws UnrecoverableKeyException
 * @throws KeyStoreException
 * @throws NoSuchAlgorithmException
 * @throws InvalidKeyException
 * @throws SignatureException
 */
</MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PrivateKey [pvtkey=(PrivateKey)pvtKeyStore.getKey(pvtKeyAlias,pvtKeyPassword)]</InnerVar>
                <InnerVar>Signature [sig=Signature.getInstance("MD5withRSA")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sig;initSign;[pvtkey]</InnerMethodInvoke>
                <InnerMethodInvoke>sig;update;[data]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>UnrecoverableKeyException</ExceptionType>
                <ExceptionType>KeyStoreException</ExceptionType>
                <ExceptionType>NoSuchAlgorithmException</ExceptionType>
                <ExceptionType>InvalidKeyException</ExceptionType>
                <ExceptionType>SignatureException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkDataWithPublicKey</MethodName>
            <MethodComment>/** 
 * Checks the given byte[] data against the signature, using the public key with which this helper was initialised and the algorithm MD5 with RSA.
 * @param data the original data that was signed
 * @param signature the provided signature
 * @return true in case the signature matches, false otherwise.
 * @throws KeyStoreException
 * @throws NoSuchAlgorithmException
 * @throws InvalidKeyException
 * @throws SignatureException
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>publicKeyAlias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>signature</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Certificate [cert=pubKeyStore.getCertificate(publicKeyAlias)]</InnerVar>
                <InnerVar>Signature [sig=Signature.getInstance("MD5withRSA")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sig;initVerify;[cert.getPublicKey()]</InnerMethodInvoke>
                <InnerMethodInvoke>sig;update;[data]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>KeyStoreException</ExceptionType>
                <ExceptionType>NoSuchAlgorithmException</ExceptionType>
                <ExceptionType>InvalidKeyException</ExceptionType>
                <ExceptionType>SignatureException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPasswordKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pwdKeyAlias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pwdKeyPassword</ParamName>
                    <ParamType>char[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SecretKey [passwordKey]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSigned</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPvtKeyStoreURL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPvtKeyStorePwd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>char[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPvtKeyAlias</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPvtKeyPassword</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>char[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPubKeyStoreURL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPubKeyStorePwd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>char[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPvtKeyStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KeyStore</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPubKeyStore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KeyStore</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>