<Class>
    <Id>53</Id>
    <Package>org.drools.compiler.commons.jci.compilers</Package>
    <ClassName>JavaCompilerFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JavaCompilerFactory  /** 
 * Creates JavaCompilers TODO use META-INF discovery mechanism
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>JavaCompilerFactory</FieldType>
        </Field>
        <Field>
            <FieldName>classCache</FieldName>
            <FieldType>Map</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment>/** 
 * @deprecated will be remove after the next release, please create an instance yourself
 */
</MethodComment>
            <ReturnType>JavaCompilerFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createCompiler</MethodName>
            <MethodComment>/** 
 * Tries to guess the class name by convention. So for compilers following the naming convention org.apache.commons.jci.compilers.SomeJavaCompiler you can use the short-hands "some"/"Some"/"SOME". Otherwise you have to provide the full class name. The compiler is getting instanciated via (cached) reflection.
 * @param pHint
 * @return JavaCompiler or null
 */
</MethodComment>
            <ReturnType>JavaCompiler</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pHint</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [className]</InnerVar>
                <InnerVar>Class [clazz=(Class)classCache.get(className)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadCompiler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaCompiler</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>JavaDialectConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadCompiler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaCompiler</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>compilerType</ParamName>
                    <ParamType>CompilerType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lngLevel</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JavaCompiler [compiler]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateSettings</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaCompilerSettings</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>settings</ParamName>
                    <ParamType>JavaCompilerSettings</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lngLevel</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>settings;setTargetVersion;[lngLevel]</InnerMethodInvoke>
                <InnerMethodInvoke>settings;setSourceVersion;[lngLevel]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>