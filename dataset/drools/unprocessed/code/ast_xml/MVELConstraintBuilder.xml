<Class>
    <Id>270</Id>
    <Package>org.drools.compiler.rule.builder</Package>
    <ClassName>MVELConstraintBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ConstraintBuilder</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>USE_MVEL_EXPRESSION</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>MVEL_OPERATORS</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>MVEL_OPERATORS</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>BooleanConversionHandler</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>CompatibilityStrategy.CompatibilityEvaluator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>isMvelOperator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>useMvelExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildVariableConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Constraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operatorDescr</ParamName>
                    <ParamType>OperatorDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rightValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extractor</ParamName>
                    <ParamType>InternalReadAccessor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>requiredDeclaration</ParamName>
                    <ParamType>Declaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>relDescr</ParamName>
                    <ParamType>RelationalExprDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>aliases</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [isUnification=requiredDeclaration != null &amp;&amp; requiredDeclaration.getPattern().getObjectType().equals(new ClassObjectType(DroolsQuery.class)) &amp;&amp; Operator.EQUAL.getOperatorString().equals(operatorDescr.getOperator())]</InnerVar>
                <InnerVar>IndexUtil.ConstraintType [constraintType=IndexUtil.ConstraintType.decode(operatorDescr.getOperator())]</InnerVar>
                <InnerVar>MVELCompilationUnit [compilationUnit=isUnification ? null : buildCompilationUnit(context,pattern,expression,aliases)]</InnerVar>
                <InnerVar>EvaluatorWrapper[] [operators=getOperators(buildOperators(context,pattern,relDescr,aliases))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildMvelConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Constraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operators</ParamName>
                    <ParamType>EvaluatorWrapper[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compilationUnit</ParamName>
                    <ParamType>MVELCompilationUnit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isDynamic</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildMvelConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Constraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageNames</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operators</ParamName>
                    <ParamType>EvaluatorWrapper[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compilationUnit</ParamName>
                    <ParamType>MVELCompilationUnit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>constraintType</ParamName>
                    <ParamType>IndexUtil.ConstraintType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexingDeclaration</ParamName>
                    <ParamType>Declaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extractor</ParamName>
                    <ParamType>InternalReadAccessor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isUnification</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildLiteralConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Constraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>vtype</ParamName>
                    <ParamType>ValueType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>field</ParamName>
                    <ParamType>FieldValue</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rightValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extractor</ParamName>
                    <ParamType>InternalReadAccessor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>restrictionDescr</ParamName>
                    <ParamType>LiteralRestrictionDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>aliases</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [mvelExpr=normalizeMVELLiteralExpression(vtype,field,expression,leftValue,operator,rightValue,restrictionDescr)]</InnerVar>
                <InnerVar>IndexUtil.ConstraintType [constraintType=IndexUtil.ConstraintType.decode(operator)]</InnerVar>
                <InnerVar>MVELCompilationUnit [compilationUnit=buildCompilationUnit(context,pattern,mvelExpr,aliases)]</InnerVar>
                <InnerVar>EvaluatorWrapper[] [operators=getOperators(buildOperators(context,pattern,restrictionDescr,aliases))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resolveUnificationAmbiguity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declrations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rightValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeMVELLiteralExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>vtype</ParamName>
                    <ParamType>ValueType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>field</ParamName>
                    <ParamType>FieldValue</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rightValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>restrictionDescr</ParamName>
                    <ParamType>LiteralRestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNormalizeDate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>field</ParamName>
                    <ParamType>FieldValue</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Date [date=(Date)field.getValue()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeStringOperator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>leftValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rightValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>restrictionDescr</ParamName>
                    <ParamType>LiteralRestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [method=restrictionDescr.getParameterText()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeEmptyKeyword</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>normalizeMVELVariableExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rightValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>relDescr</ParamName>
                    <ParamType>RelationalExprDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildLiteralEvaluator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Evaluator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extractor</ParamName>
                    <ParamType>InternalReadAccessor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>literalRestrictionDescr</ParamName>
                    <ParamType>LiteralRestrictionDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>vtype</ParamName>
                    <ParamType>ValueType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EvaluatorDefinition.Target [right=getRightTarget(extractor)]</InnerVar>
                <InnerVar>EvaluatorDefinition.Target [left=EvaluatorDefinition.Target.FACT]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRightTarget</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EvaluatorDefinition.Target</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>extractor</ParamName>
                    <ParamType>InternalReadAccessor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEvaluator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Evaluator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueType</ParamName>
                    <ParamType>ValueType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>evaluatorString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isNegated</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameters</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>left</ParamName>
                    <ParamType>EvaluatorDefinition.Target</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <ParamType>EvaluatorDefinition.Target</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EvaluatorDefinition [def=context.getConfiguration().getEvaluatorRegistry().getEvaluatorDefinition(evaluatorString)]</InnerVar>
                <InnerVar>Evaluator [evaluator=def.getEvaluator(valueType,evaluatorString,isNegated,parameters,left,right)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>wrapEvaluator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EvaluatorWrapper</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>evaluator</ParamName>
                    <ParamType>Evaluator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>left</ParamName>
                    <ParamType>Declaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>right</ParamName>
                    <ParamType>Declaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildCompilationUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MVELCompilationUnit</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>aliases</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Dialect [dialect=context.getDialect()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;setDialect;[context.getDialect("mvel")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildCompilationUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MVELCompilationUnit</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousDeclarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>localDeclarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>predicateDescr</ParamName>
                    <ParamType>PredicateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>analysis</ParamName>
                    <ParamType>AnalysisResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MVELDialect [dialect=(MVELDialect)context.getDialect("mvel")]</InnerVar>
                <InnerVar>MVELCompilationUnit [unit=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BooleanConversionHandler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convertFrom</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>canConvertFrom</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StringCoercionCompatibilityEvaluator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>areEqualityCompatible</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c1</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c2</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class&lt;?&gt; [boxed1=convertFromPrimitiveType(c1)]</InnerVar>
                <InnerVar>Class&lt;?&gt; [boxed2=convertFromPrimitiveType(c2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>areComparisonCompatible</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c1</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c2</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>