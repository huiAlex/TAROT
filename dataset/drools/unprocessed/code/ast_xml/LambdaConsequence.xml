<Class>
    <Id>2899</Id>
    <Package>org.drools.modelcompiler.consequence</Package>
    <ClassName>LambdaConsequence</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Consequence</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>consequence</FieldName>
            <FieldType>org.drools.model.Consequence</FieldType>
        </Field>
        <Field>
            <FieldName>context</FieldName>
            <FieldType>RuleContext</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LambdaConsequence</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>consequence</ParamName>
                    <ParamType>org.drools.model.Consequence</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>knowledgeHelper</ParamName>
                    <ParamType>KnowledgeHelper</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>WorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Tuple [tuple=knowledgeHelper.getTuple()]</InnerVar>
                <InnerVar>Declaration[] [declarations=((RuleTerminalNode)knowledgeHelper.getMatch().getTuple().getTupleSink()).getRequiredDeclarations()]</InnerVar>
                <InnerVar>Variable[] [vars=consequence.getVariables()]</InnerVar>
                <InnerVar>Object[] [facts]</InnerVar>
                <InnerVar>int [factsOffset=0]</InnerVar>
                <InnerVar>int [declrCounter=0]</InnerVar>
                <InnerVar>Object[] [objs=knowledgeHelper.getTuple().toObjects()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>consequence.getBlock();execute;[facts]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>adaptBitMask</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>org.drools.core.util.bitmask.BitMask</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mask</ParamName>
                    <ParamType>BitMask</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>