<Class>
    <Id>1270</Id>
    <Package>org.drools.core.ruleunit</Package>
    <ClassName>RuleUnitGuardSystem</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>ROOT_UNIT</FieldName>
            <FieldType>RuleUnit</FieldType>
        </Field>
        <Field>
            <FieldName>session</FieldName>
            <FieldType>RuleUnitExecutorSession</FieldType>
        </Field>
        <Field>
            <FieldName>guardMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>guardMap</FieldName>
            <FieldType>Guard</FieldType>
        </Field>
        <Field>
            <FieldName>guardsByActivation</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>guardsByActivation</FieldName>
            <FieldType>Activation</FieldType>
        </Field>
        <Field>
            <FieldName>guardsByActivatingUnit</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>guardsByActivatingUnit</FieldName>
            <FieldType>RuleUnit</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RuleUnitGuardSystem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>RuleUnitExecutorSession</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerGuard</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ruleUnit</ParamName>
                    <ParamType>RuleUnit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Guard [g=new Guard(ruleUnit,activation.getRule())]</InnerVar>
                <InnerVar>Guard [guard=guardMap.computeIfAbsent(g,x -&gt; g)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>guard;addActivation;[activation]</InnerMethodInvoke>
                <InnerMethodInvoke>guardsByActivation.computeIfAbsent(activation,a -&gt; new ArrayList&lt;&gt;());add;[guard]</InnerMethodInvoke>
                <InnerMethodInvoke>guardsByActivatingUnit.computeIfAbsent(getCurrentRuleUnit(),ru -&gt; new HashSet&lt;&gt;());add;[guard]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeActivation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Guard&gt; [guards=guardsByActivation.get(activation)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>guards;removeIf;[guard -&gt; {
  guard.removeActivation(activation);
  if (!guard.isActive()) {
    guardMap.remove(guard);
    guardsByActivatingUnit.computeIfPresent(getCurrentRuleUnit(),(s,gs) -&gt; {
      gs.remove(guard);
      return gs.isEmpty() ? null : gs;
    }
);
    return true;
  }
  return false;
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentRuleUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RuleUnit</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireActiveUnits</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireActiveUnits</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ruleUnit</ParamName>
                    <ParamType>RuleUnit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireActiveUnits</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ruleUnit</ParamName>
                    <ParamType>RuleUnit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>firedUnits</ParamName>
                    <ParamType>RuleUnit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;Guard&gt; [guards=guardsByActivatingUnit.get(ruleUnit)]</InnerVar>
                <InnerVar>int [result=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>