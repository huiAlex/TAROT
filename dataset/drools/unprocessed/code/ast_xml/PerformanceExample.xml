<Class>
    <Id>2952</Id>
    <Package>org.drools.examples.performance</Package>
    <ClassName>PerformanceExample</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [numberOfRulesToBuild=10]</InnerVar>
                <InnerVar>boolean [useAccumulate=true]</InnerVar>
                <InnerVar>String [dialect="mvel"]</InnerVar>
                <InnerVar>boolean [usekjars=false]</InnerVar>
                <InnerVar>boolean [collectionBasedRules=true]</InnerVar>
                <InnerVar>String [rules=getRules(numberOfRulesToBuild,useAccumulate,dialect,collectionBasedRules)]</InnerVar>
                <InnerVar>long [startTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>StatelessKieSession [kSession]</InnerVar>
                <InnerVar>FactType [ft]</InnerVar>
                <InnerVar>long [endTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>ArrayList [output=new ArrayList()]</InnerVar>
                <InnerVar>Object [o=ft.newInstance()]</InnerVar>
                <InnerVar>Gson [gConverter=new GsonBuilder().setDateFormat("yyyy-MM-dd'T'HH:mm:ss").create()]</InnerVar>
                <InnerVar>Object [fo=gConverter.fromJson(getFact(),o.getClass())]</InnerVar>
                <InnerVar>String [rulesOutput=gConverter.toJson(output)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["********* Numbers of rules: " + numberOfRulesToBuild + " kjars: "+ usekjars+ " accumulate: "+ useAccumulate+ " dialect: "+ dialect+ " *********"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Total time to build and load knowledgebase: " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
                <InnerMethodInvoke>kSession;setGlobal;["mo", output]</InnerMethodInvoke>
                <InnerMethodInvoke>kSession;execute;[fo]</InnerMethodInvoke>
                <InnerMethodInvoke>kSession;execute;[fo]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Execution time: " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;[rulesOutput]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadContainerFromString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieContainer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rules</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [startTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>KieServices [ks=KieServices.Factory.get()]</InnerVar>
                <InnerVar>KieRepository [kr=ks.getRepository()]</InnerVar>
                <InnerVar>KieFileSystem [kfs=ks.newKieFileSystem()]</InnerVar>
                <InnerVar>KieBuilder [kb=ks.newKieBuilder(kfs)]</InnerVar>
                <InnerVar>long [endTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>KieContainer [kContainer=ks.newKieContainer(kr.getDefaultReleaseId())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>kfs;write;["src/main/resources/examples/pertest.drl", rules]</InnerMethodInvoke>
                <InnerMethodInvoke>kb;buildAll;[]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Time to build rules : " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Time to load container: " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadKnowledgeBaseFromString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieBase</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>drlContentStrings</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [startTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>KnowledgeBuilder [kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder()]</InnerVar>
                <InnerVar>long [endTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>InternalKnowledgeBase [kbase=KnowledgeBaseFactory.newKnowledgeBase()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["Time to build rules: " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
                <InnerMethodInvoke>kbase;addPackages;[kbuilder.getKnowledgePackages()]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Time to create knowledgebase: " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFact</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRules</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>numberofRules</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>useAccumulate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dialect</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>collectionBasedRules</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [startTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>StringBuilder [sb=new StringBuilder("package org.drools.examples.performance;\n")]</InnerVar>
                <InnerVar>long [endTime=System.currentTimeMillis()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sb;append;[getImportStatements()]</InnerMethodInvoke>
                <InnerMethodInvoke>sb;append;["global ArrayList&lt;Outcome&gt; mo;"]</InnerMethodInvoke>
                <InnerMethodInvoke>sb;append;[getDeclareStatements()]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Time to generate: " + (endTime - startTime) + " ms"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>useAccumulate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dialect</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>collectionBasedRules</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>useAccumulate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dialect</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [s="" + "rule \"rule" + number + "\" \n"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createCollectionRule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>number</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>useAccumulate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dialect</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [NumOfSKU=10]</InnerVar>
                <InnerVar>String [sku=""]</InnerVar>
                <InnerVar>String [prefix=""]</InnerVar>
                <InnerVar>String [s="" + "rule \"rule" + number + "\" \n"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRules2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dialect</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeclareStatements</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getImportStatements</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>