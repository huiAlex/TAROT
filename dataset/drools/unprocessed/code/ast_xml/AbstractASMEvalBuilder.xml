<Class>
    <Id>1467</Id>
    <Package>org.drools.compiler.rule.builder.dialect.asm</Package>
    <ClassName>AbstractASMEvalBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RuleConditionBuilder</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RuleConditionElement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EvalDescr [evalDescr=(EvalDescr)descr]</InnerVar>
                <InnerVar>Map&lt;String,Declaration&gt; [decls=context.getDeclarationResolver().getDeclarations(context.getRule())]</InnerVar>
                <InnerVar>AnalysisResult [analysis=context.getDialect().analyzeExpression(context,evalDescr,evalDescr.getContent(),new BoundIdentifiers(DeclarationScopeResolver.getDeclarationClasses(decls),context))]</InnerVar>
                <InnerVar>List&lt;Declaration&gt; [requiredDeclarations=new ArrayList&lt;Declaration&gt;()]</InnerVar>
                <InnerVar>Declaration[] [declarations=requiredDeclarations.toArray(new Declaration[requiredDeclarations.size()])]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RuleConditionElement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prefixPattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EvalDescr [evalDescr=(EvalDescr)descr]</InnerVar>
                <InnerVar>PredicateDescr [predicateDescr=new PredicateDescr(context.getRuleDescr().getResource(),evalDescr.getContent())]</InnerVar>
                <InnerVar>AnalysisResult [analysis=buildAnalysis(context,prefixPattern,predicateDescr,null)]</InnerVar>
                <InnerVar>Declaration[] [declarations=getUsedDeclarations(context,prefixPattern,analysis)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildEval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RuleConditionElement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>evalDescr</ParamName>
                    <ParamType>EvalDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>analysis</ParamName>
                    <ParamType>AnalysisResult</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [className="eval" + context.getNextId()]</InnerVar>
                <InnerVar>EvalCondition [eval=new EvalCondition(declarations)]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [vars=createVariableContext(className,(String)evalDescr.getContent(),context,declarations,null,analysis.getBoundIdentifiers().getGlobals())]</InnerVar>
                <InnerVar>byte[] [bytecode=createEvalBytecode(context,vars)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>evalDescr;setClassMethodName;[className]</InnerMethodInvoke>
                <InnerMethodInvoke>Arrays;sort;[declarations, RuleTerminalNode.SortDeclarations.instance]</InnerMethodInvoke>
                <InnerMethodInvoke>null;generateMethodTemplate;["evalMethod", context, vars]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerInvokerBytecode;[context, vars, bytecode, eval]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUsedDeclarations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Declaration[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>analysis</ParamName>
                    <ParamType>AnalysisResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BoundIdentifiers [usedIdentifiers=analysis.getBoundIdentifiers()]</InnerVar>
                <InnerVar>List&lt;Declaration&gt; [declarations=new ArrayList&lt;Declaration&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;createImplicitBindings;[context, pattern, analysis.getNotBoundedIdentifiers(), analysis.getBoundIdentifiers(), declarations]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createEvalBytecode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>vars</ParamName>
                    <ParamType>Map</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>