<Class>
    <Id>332</Id>
    <Package>org.drools.core</Package>
    <ClassName>WorkingMemoryEventManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>KieBaseEventManager</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>WorkingMemoryEventManager  /** 
 * The EventManager class is implemented by classes wishing to add,remove and get the various Drools EventListeners.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>addEventListener</MethodName>
            <MethodComment>/** 
 * Add an event listener.
 * @param listener The listener to add.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>RuleRuntimeEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeEventListener</MethodName>
            <MethodComment>/** 
 * Remove an event listener.
 * @param listener The listener to remove.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>RuleRuntimeEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRuleRuntimeEventListeners</MethodName>
            <MethodComment>/** 
 * Returns all event listeners.
 * @return listeners The listeners.
 */
</MethodComment>
            <ReturnType>RuleRuntimeEventListener</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addEventListener</MethodName>
            <MethodComment>/** 
 * Add an event listener.
 * @param listener The listener to add.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>AgendaEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeEventListener</MethodName>
            <MethodComment>/** 
 * Remove an event listener.
 * @param listener The listener to remove.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>AgendaEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAgendaEventListeners</MethodName>
            <MethodComment>/** 
 * Returns all event listeners.
 * @return listeners The listeners.
 */
</MethodComment>
            <ReturnType>AgendaEventListener</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>