<Class>
    <Id>1518</Id>
    <Package>org.drools.core.factmodel.traits</Package>
    <ClassName>TraitRegistry</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Externalizable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>traits</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>traits</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>traitables</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>traitables</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>staticTraitTypes</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>staticTraitTypes</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>codeSize</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>masks</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>masks</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>hierarchy</FieldName>
            <FieldType>HierarchyEncoder</FieldType>
        </Field>
        <Field>
            <FieldName>hierarchy</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>cache</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TraitRegistry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>TypeDeclaration [thingType=new TypeDeclaration(Thing.class.getName())]</InnerVar>
                <InnerVar>ClassDefinition [def=new ClassDefinition()]</InnerVar>
                <InnerVar>ClassDefinition [individualDef=new ClassDefinition()]</InnerVar>
                <InnerVar>ClassDefinition [mapcoreDef=new ClassDefinition()]</InnerVar>
                <InnerVar>ClassDefinition [logicalMapcoreDef=new ClassDefinition()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>thingType;setKind;[TypeDeclaration.Kind.TRAIT]</InnerMethodInvoke>
                <InnerMethodInvoke>thingType;setTypeClass;[Thing.class]</InnerMethodInvoke>
                <InnerMethodInvoke>def;setClassName;[thingType.getTypeClass().getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>def;setDefinedClass;[Thing.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addTrait;[def]</InnerMethodInvoke>
                <InnerMethodInvoke>individualDef;setClassName;[Entity.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>individualDef;setDefinedClass;[Entity.class]</InnerMethodInvoke>
                <InnerMethodInvoke>individualDef;setInterfaces;[new String[]{Serializable.class.getName(),TraitableBean.class.getName()}]</InnerMethodInvoke>
                <InnerMethodInvoke>individualDef;setTraitable;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addTraitable;[individualDef]</InnerMethodInvoke>
                <InnerMethodInvoke>mapcoreDef;setClassName;[MapCore.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>mapcoreDef;setDefinedClass;[MapCore.class]</InnerMethodInvoke>
                <InnerMethodInvoke>mapcoreDef;setInterfaces;[new String[]{Serializable.class.getName(),TraitableBean.class.getName(),CoreWrapper.class.getName()}]</InnerMethodInvoke>
                <InnerMethodInvoke>mapcoreDef;setTraitable;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addTraitable;[mapcoreDef]</InnerMethodInvoke>
                <InnerMethodInvoke>logicalMapcoreDef;setClassName;[LogicalMapCore.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>logicalMapcoreDef;setDefinedClass;[LogicalMapCore.class]</InnerMethodInvoke>
                <InnerMethodInvoke>logicalMapcoreDef;setInterfaces;[new String[]{Serializable.class.getName(),TraitableBean.class.getName(),CoreWrapper.class.getName()}]</InnerMethodInvoke>
                <InnerMethodInvoke>logicalMapcoreDef;setTraitable;[true, true]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addTraitable;[logicalMapcoreDef]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>merge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>other</ParamName>
                    <ParamType>TraitRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mergeHierarchy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>first</ParamName>
                    <ParamType>TraitRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>second</ParamName>
                    <ParamType>TraitRegistry</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTraits</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTrait</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassDefinition [traitDef=traits != null ? traits.get(key) : null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTraitables</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTraitable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addTrait</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>trait</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addTrait;[trait.getClassName(), trait]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addTrait</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trait</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.traits;put;[className, trait]</InnerMethodInvoke>
                <InnerMethodInvoke>getHierarchy();encode;[className, getTraitInterfaces(trait)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTraitInterfaces</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>trait</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;String&gt; [intfs=new ArrayList&lt;String&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addTraitable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>traitable</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;String&gt; [staticTraits=detectStaticallyImplementedTraits(traitable)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.traitables;put;[traitable.getClassName(), traitable]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSoftField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>field</ParamName>
                    <ParamType>FieldDefinition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mask</ParamName>
                    <ParamType>BitSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFieldMask</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BitSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>trait</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>traitable</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [key=trait + traitable]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bind</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BitSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>trait</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>traitable</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassDefinition [traitDef=getTrait(trait)]</InnerVar>
                <InnerVar>ClassDefinition [traitableDef=getTraitable(traitable)]</InnerVar>
                <InnerVar>int [j=0]</InnerVar>
                <InnerVar>BitSet [bitmask=new BitSet(traitDef.getFields().size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>UnsupportedOperationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeExternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectOutput</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>objectOutput;writeObject;[traits]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutput;writeObject;[traitables]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutput;writeObject;[masks]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutput;writeObject;[hierarchy]</InnerMethodInvoke>
                <InnerMethodInvoke>objectOutput;writeInt;[codeSize]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readExternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectInput</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHierarchy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>detectStaticallyImplementedTraits</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>traitable</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;String&gt; [traitInterfaces=new HashSet&lt;String&gt;(3)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStaticTypeCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BitSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStaticTypes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>encode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;invalidateCache;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invalidateCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasCodeForClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCodeForClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BitSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cacheAndGetCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BitSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parents</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BitSet [bitSet=new BitSet(this.getBottom().length())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cache;put;[className, bitSet]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>