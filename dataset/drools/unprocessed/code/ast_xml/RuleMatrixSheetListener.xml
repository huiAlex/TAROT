<Class>
    <Id>1987</Id>
    <Package>org.drools.decisiontable.parser</Package>
    <ClassName>RuleMatrixSheetListener</ClassName>
    <SuperClass>DefaultRuleSheetListener</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RuleMatrixSheetListener  /** 
 * href="mailto:michael.neale@gmail.com"&gt; Michael Neale &lt;/a&gt; Define a ruleset spreadsheet which contains a matrix style decision tables. This is an example of a custom RuleSheetListener. It differs from the standard decision table in the following ways: - AgendaGroup property so that all rules fall within the same agenda-group - Precondition property which specifies a condition that is always included  if a rule is being generated - Action property. Each cell within the decision table causes this action to be triggered - HorizontalCondition property. Each column header in the matrix applies this condition - VerticalCondition property. Each row header in the matrix applies this condition  A table is identifed by a cell beginning with the text "RuleTable".  The cells after RuleTable in the same row identify the Horizontal Conditions. The cells after RuleTable in the same column identify the Vertical Conditions. The cells with the matrix identify the actions. Wherever an action cell exists for a Vertical/Horizontal condition intersection the following rule is created: rule "rule_row_col" agenda-group AgendaGroup when Precondition VerticalCondition HorizontalCondition then Action end
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>AGENDAGROUP_TAG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PRECONDITION_TAG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ACTION_TAG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HORIZONTALCONDITION_TAG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>VERTICALCONDITION_TAG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ruleTableRow</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ruleTableColumn</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>_currentAgendaGroup</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_currentPrecondition</FieldName>
            <FieldType>Condition</FieldType>
        </Field>
        <Field>
            <FieldName>_action</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_horizontalCondition</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_verticalCondition</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_horizontalConditions</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>_horizontalConditions</FieldName>
            <FieldType>Condition</FieldType>
        </Field>
        <Field>
            <FieldName>_currentVerticalCondition</FieldName>
            <FieldType>Condition</FieldType>
        </Field>
        <Field>
            <FieldName>isInRuleTable</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>firstRule</FieldName>
            <FieldType>Rule</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>newCell</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mergedColStart</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Consequence [consequence=createConsequence(value)]</InnerVar>
                <InnerVar>Rule [rule=firstRule]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rule;setAgendaGroup;[this._currentAgendaGroup]</InnerMethodInvoke>
                <InnerMethodInvoke>rule;addCondition;[this._currentPrecondition]</InnerMethodInvoke>
                <InnerMethodInvoke>rule;addCondition;[_currentVerticalCondition]</InnerMethodInvoke>
                <InnerMethodInvoke>rule;addCondition;[(Condition)_horizontalConditions.get(column - (ruleTableColumn + 1))]</InnerMethodInvoke>
                <InnerMethodInvoke>rule;addConsequence;[consequence]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createConsequence</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Consequence</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SnippetBuilder [snip=new SnippetBuilder(_action)]</InnerVar>
                <InnerVar>String [result=snip.build(value)]</InnerVar>
                <InnerVar>Consequence [consequence=new Consequence()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>consequence;setSnippet;[result]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Condition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conditionTemplate</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SnippetBuilder [snip=new SnippetBuilder(conditionTemplate)]</InnerVar>
                <InnerVar>String [result=snip.build(value)]</InnerVar>
                <InnerVar>Condition [condition=new Condition()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>condition;setSnippet;[result]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columns</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finishSheet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>postInitRuleTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>preInitRuleTable</MethodName>
            <MethodComment>/** 
 * This gets called each time a "new" rule table is found.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [precondition=getProperties().getSingleProperty(PRECONDITION_TAG)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>