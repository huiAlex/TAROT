<Class>
    <Id>2924</Id>
    <Package>org.drools.compiler.rule.builder.dialect.java</Package>
    <ClassName>JavaAccumulateBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>AccumulateBuilder</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JavaAccumulateBuilder  /** 
 * A builder for the java dialect accumulate version
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RuleConditionElement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RuleConditionElement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prefixPattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AccumulateDescr [accumDescr=(AccumulateDescr)descr]</InnerVar>
                <InnerVar>BaseDescr [input=accumDescr.getInput()]</InnerVar>
                <InnerVar>RuleConditionBuilder [builder=(RuleConditionBuilder)context.getDialect().getBuilder(input.getClass())]</InnerVar>
                <InnerVar>RuleConditionElement [source=builder.build(context,input)]</InnerVar>
                <InnerVar>boolean [readLocalsFromTuple=PackageBuilderUtil.isReadLocalsFromTuple(context,accumDescr,source)]</InnerVar>
                <InnerVar>Map&lt;String,Declaration&gt; [declsInScope=context.getDeclarationResolver().getDeclarations(context.getRule())]</InnerVar>
                <InnerVar>Map&lt;String,Class&lt;?&gt;&gt; [declCls=DeclarationScopeResolver.getDeclarationClasses(declsInScope)]</InnerVar>
                <InnerVar>Accumulate [accumulate]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildExternalFunctionCall</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Accumulate</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>accumDescr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declsInScope</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declCls</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>readLocalsFromTuple</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;AccumulateFunctionCallDescr&gt; [funcCalls=accumDescr.getFunctions()]</InnerVar>
                <InnerVar>Declaration[] [sourceDeclArr=source.getOuterDeclarations().values().toArray(new Declaration[source.getOuterDeclarations().size()])]</InnerVar>
                <InnerVar>Set&lt;Declaration&gt; [requiredDecl=new HashSet&lt;Declaration&gt;()]</InnerVar>
                <InnerVar>Pattern [pattern=(Pattern)context.getDeclarationResolver().peekBuildStack()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;sort;[sourceDeclArr, RuleTerminalNode.SortDeclarations.instance]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bindReaderToDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>accumDescr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fc</ParamName>
                    <ParamType>AccumulateFunctionCallDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>readAccessor</ParamName>
                    <ParamType>InternalReadAccessor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resultType</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAccumulateFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>AccumulateFunction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>accumDescr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fc</ParamName>
                    <ParamType>AccumulateFunctionCallDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declCls</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [functionName=AccumulateUtil.getFunctionName(() -&gt; MVELExprAnalyzer.getExpressionType(context,declCls,source,fc.getParams()[0]),fc.getFunction())]</InnerVar>
                <InnerVar>AccumulateFunction [function=context.getConfiguration().getAccumulateFunction(functionName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildAccumulator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Accumulator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>accumDescr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declsInScope</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declCls</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>readLocalsFromTuple</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sourceDeclArr</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>requiredDecl</ParamName>
                    <ParamType>Declaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fc</ParamName>
                    <ParamType>AccumulateFunctionCallDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>AccumulateFunction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JavaAnalysisResult [analysis=(JavaAnalysisResult)context.getDialect().analyzeBlock(context,accumDescr,fc.getParams().length &gt; 0 ? fc.getParams()[0] : "\"\"",new BoundIdentifiers(declCls,context))]</InnerVar>
                <InnerVar>BoundIdentifiers [usedIdentifiers=analysis.getBoundIdentifiers()]</InnerVar>
                <InnerVar>Declaration[] [previousDeclarations=collectRequiredDeclarations(declsInScope,requiredDecl,usedIdentifiers)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>collectRequiredDeclarations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Declaration[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>declsInScope</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>requiredDecl</ParamName>
                    <ParamType>Declaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>usedIdentifiers</ParamName>
                    <ParamType>BoundIdentifiers</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Declaration[] [previousDeclarations=new Declaration[usedIdentifiers.getDeclrClasses().size()]]</InnerVar>
                <InnerVar>int [i=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateFunctionCallCodeTemplate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JavaAccumulatorFunctionExecutor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>accumDescr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sourceDeclArr</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fc</ParamName>
                    <ParamType>AccumulateFunctionCallDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>AccumulateFunction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>usedIdentifiers</ParamName>
                    <ParamType>BoundIdentifiers</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>previousDeclarations</ParamName>
                    <ParamType>Declaration[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>readLocalsFromTuple</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [className="accumulateExpression" + context.getNextId()]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [map=createVariableContext(className,fc.getParams().length &gt; 0 ? fc.getParams()[0] : "\"\"",context,previousDeclarations,sourceDeclArr,usedIdentifiers.getGlobals())]</InnerVar>
                <InnerVar>JavaAccumulatorFunctionExecutor [accumulator=new JavaAccumulatorFunctionExecutor(function)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>map;put;["readLocalsFromTuple", readLocalsFromTuple ? Boolean.TRUE : Boolean.FALSE]</InnerMethodInvoke>
                <InnerMethodInvoke>null;generateTemplates;["returnValueMethod", "returnValueInvoker", context, className, map, accumulator, accumDescr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildInlineAccumulate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Accumulate</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleBuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>accumDescr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>RuleConditionElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>decls</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>declCls</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>readLocalsFromTuple</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [className="Accumulate" + context.getNextId()]</InnerVar>
                <InnerVar>BoundIdentifiers [available=new BoundIdentifiers(declCls,context)]</InnerVar>
                <InnerVar>JavaAnalysisResult [initCodeAnalysis=(JavaAnalysisResult)context.getDialect().analyzeBlock(context,accumDescr,accumDescr.getInitCode(),available)]</InnerVar>
                <InnerVar>AnalysisResult [actionCodeAnalysis=context.getDialect().analyzeBlock(context,accumDescr,accumDescr.getActionCode(),available)]</InnerVar>
                <InnerVar>AnalysisResult [resultCodeAnalysis=context.getDialect().analyzeExpression(context,accumDescr,accumDescr.getResultCode(),available)]</InnerVar>
                <InnerVar>Set&lt;String&gt; [requiredDeclarations=new HashSet&lt;String&gt;(initCodeAnalysis.getBoundIdentifiers().getDeclrClasses().keySet())]</InnerVar>
                <InnerVar>Map&lt;String,Class&lt;?&gt;&gt; [requiredGlobals=new HashMap&lt;String,Class&lt;?&gt;&gt;(initCodeAnalysis.getBoundIdentifiers().getGlobals())]</InnerVar>
                <InnerVar>Declaration[] [declarations=new Declaration[requiredDeclarations.size()]]</InnerVar>
                <InnerVar>int [i=0]</InnerVar>
                <InnerVar>Declaration[] [sourceDeclArr=source.getOuterDeclarations().values().toArray(new Declaration[source.getOuterDeclarations().size()])]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [map=createVariableContext(className,null,context,declarations,null,requiredGlobals)]</InnerVar>
                <InnerVar>String [initCode=this.fixInitCode(initCodeAnalysis,accumDescr.getInitCode())]</InnerVar>
                <InnerVar>String [actionCode=accumDescr.getActionCode()]</InnerVar>
                <InnerVar>String [resultCode=accumDescr.getResultCode()]</InnerVar>
                <InnerVar>String[] [attributesTypes=new String[initCodeAnalysis.getLocalVariablesMap().size()]]</InnerVar>
                <InnerVar>String[] [attributes=new String[initCodeAnalysis.getLocalVariablesMap().size()]]</InnerVar>
                <InnerVar>int [index=0]</InnerVar>
                <InnerVar>SingleAccumulate [accumulate=new SingleAccumulate(source,declarations)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>accumDescr;setClassName;[className]</InnerMethodInvoke>
                <InnerMethodInvoke>requiredDeclarations;addAll;[actionCodeAnalysis.getBoundIdentifiers().getDeclrClasses().keySet()]</InnerMethodInvoke>
                <InnerMethodInvoke>requiredDeclarations;addAll;[resultCodeAnalysis.getBoundIdentifiers().getDeclrClasses().keySet()]</InnerMethodInvoke>
                <InnerMethodInvoke>requiredGlobals;putAll;[actionCodeAnalysis.getBoundIdentifiers().getGlobals()]</InnerMethodInvoke>
                <InnerMethodInvoke>requiredGlobals;putAll;[resultCodeAnalysis.getBoundIdentifiers().getGlobals()]</InnerMethodInvoke>
                <InnerMethodInvoke>Arrays;sort;[sourceDeclArr, RuleTerminalNode.SortDeclarations.instance]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["className", accumDescr.getClassName()]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["innerDeclarations", sourceDeclArr]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["isMultiPattern", readLocalsFromTuple ? Boolean.TRUE : Boolean.FALSE]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["attributes", attributes]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["attributesTypes", attributesTypes]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["initCode", initCode]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["actionCode", actionCode]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["resultCode", resultCode]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["hashCode", actionCode.hashCode()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;generateTemplates;["accumulateInnerClass", "accumulateInvoker", context, className, map, accumulate.new Wirer(), accumDescr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fixInitCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>analysis</ParamName>
                    <ParamType>JavaAnalysisResult</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>originalCode</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TreeSet&lt;JavaLocalDeclarationDescr&gt; [locals=new TreeSet&lt;JavaLocalDeclarationDescr&gt;(new Comparator&lt;JavaLocalDeclarationDescr&gt;(){
  public int compare(  JavaLocalDeclarationDescr o1,  JavaLocalDeclarationDescr o2){
    return o1.getStart() - o2.getStart();
  }
}
)]</InnerVar>
                <InnerVar>StringBuilder [initCode=new StringBuilder()]</InnerVar>
                <InnerVar>int [lastAdded=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>initCode;append;[originalCode.substring(lastAdded)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>JavaLocalDeclarationDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>JavaLocalDeclarationDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>