<Class>
    <Id>1400</Id>
    <Package>org.drools.workbench.models.guided.dtable.backend</Package>
    <ClassName>GuidedDTDRLPersistence</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GuidedDTDRLPersistence  /** 
 * This takes care of converting GuidedDT object to DRL (via the RuleModel).
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>boundName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>isUpdate</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>action</FieldName>
            <FieldType>IAction</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GuidedDTDRLPersistence</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>marshal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>originalDTable</ParamName>
                    <ParamType>GuidedDecisionTable52</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GuidedDecisionTable52 [dt=DecisionTableHitPolicyEnhancer.enhance(originalDTable)]</InnerVar>
                <InnerVar>StringBuilder [sb=new StringBuilder()]</InnerVar>
                <InnerVar>List&lt;List&lt;DTCellValue52&gt;&gt; [data=dt.getData()]</InnerVar>
                <InnerVar>List&lt;BaseColumn&gt; [allColumns=dt.getExpandedColumns()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>PackageNameWriter;write;[sb, dt]</InnerMethodInvoke>
                <InnerMethodInvoke>ImportsWriter;write;[sb, dt]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doActions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actionCols</ParamName>
                    <ParamType>ActionCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowDataProvider</ParamName>
                    <ParamType>TemplateDataProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;LabelledAction&gt; [actions=new ArrayList&lt;LabelledAction&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>LimitedEntryBRLActionColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowDataProvider</ParamName>
                    <ParamType>TemplateDataProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [index=allColumns.indexOf(column)]</InnerVar>
                <InnerVar>DTCellValue52 [dcv=row.get(index)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>BRLActionColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowDataProvider</ParamName>
                    <ParamType>TemplateDataProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasVariables</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>BRLActionColumn</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;InterpolationVariable,Integer&gt; [ivs=new HashMap&lt;InterpolationVariable,Integer&gt;()]</InnerVar>
                <InnerVar>RuleModel [rm=new RuleModel()]</InnerVar>
                <InnerVar>RuleModelVisitor [rmv=new RuleModelVisitor(ivs)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rmv;visit;[rm]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>IAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [binding=null]</InnerVar>
                <InnerVar>LabelledAction [a=new LabelledAction()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>actions;add;[a]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ac</ParamName>
                    <ParamType>ActionWorkItemInsertFactCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ac</ParamName>
                    <ParamType>ActionInsertFactCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LabelledAction [a=findByLabelledAction(actions,ac.getBoundName())]</InnerVar>
                <InnerVar>ActionInsertFact [ins=(ActionInsertFact)a.action]</InnerVar>
                <InnerVar>ActionFieldValue [val=new ActionFieldValue(ac.getFactField(),cell,ac.getType())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ins;addFieldValue;[val]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sf</ParamName>
                    <ParamType>ActionWorkItemSetFieldCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sf</ParamName>
                    <ParamType>ActionSetFieldCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LabelledAction [a=findByLabelledAction(actions,sf.getBoundName(),sf.isUpdate())]</InnerVar>
                <InnerVar>ActionSetField [asf=(ActionSetField)a.action]</InnerVar>
                <InnerVar>ActionFieldValue [val=new ActionFieldValue(sf.getFactField(),cell,sf.getType())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>asf;addFieldValue;[val]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LabelledAction [a=new LabelledAction()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>actions;add;[a]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wi</ParamName>
                    <ParamType>ActionWorkItemCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findByLabelledAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LabelledAction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>boundName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findByLabelledAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LabelledAction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>LabelledAction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>boundName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isUpdate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doConditions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conditionPatterns</ParamName>
                    <ParamType>CompositeColumn&lt;? extends BaseColumn&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowDataProvider</ParamName>
                    <ParamType>TemplateDataProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>List&lt;DTCellValue52&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;IPattern&gt; [patterns=new ArrayList&lt;IPattern&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>LimitedEntryBRLConditionColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>patterns</ParamName>
                    <ParamType>IPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowDataProvider</ParamName>
                    <ParamType>TemplateDataProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [index=allColumns.indexOf(column)]</InnerVar>
                <InnerVar>DTCellValue52 [dcv=row.get(index)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>BRLConditionColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>patterns</ParamName>
                    <ParamType>IPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowDataProvider</ParamName>
                    <ParamType>TemplateDataProvider</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasVariables</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>BRLConditionColumn</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;InterpolationVariable,Integer&gt; [ivs=new HashMap&lt;InterpolationVariable,Integer&gt;()]</InnerVar>
                <InnerVar>RuleModel [rm=new RuleModel()]</InnerVar>
                <InnerVar>RuleModelVisitor [rmv=new RuleModelVisitor(ivs)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rmv;visit;[rm]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doCondition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>patterns</ParamName>
                    <ParamType>IPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>List&lt;DTCellValue52&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;ConditionCol52&gt; [cols=pattern.getChildColumns()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeInList</MethodName>
            <MethodComment>/** 
 * take a CSV list and turn it into DRL syntax
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [result=""]</InnerVar>
                <InnerVar>Iterator&lt;String&gt; [iterator=Arrays.asList(ListSplitter.split("\"",true,cell)).iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>no</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findByFactPattern</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IPattern</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>patterns</ParamName>
                    <ParamType>IPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>find</ParamName>
                    <ParamType>Pattern52</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [isNegated=find.isNegated()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doFindByFactPattern</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IPattern</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>patterns</ParamName>
                    <ParamType>IPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>find</ParamName>
                    <ParamType>Pattern52</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [boundName=find.getBoundName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doFindByNegatedFactPattern</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IPattern</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>patterns</ParamName>
                    <ParamType>IPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>find</ParamName>
                    <ParamType>Pattern52</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [factType=find.getFactType()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkNegatedFactPattern</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IPattern</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fp</ParamName>
                    <ParamType>FactPattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>factType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAttribs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attributeCols</ParamName>
                    <ParamType>AttributeCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;RuleAttribute&gt; [attribs=new ArrayList&lt;RuleAttribute&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doMetadata</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metadataCols</ParamName>
                    <ParamType>MetadataCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DTCellValue52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rm</ParamName>
                    <ParamType>RuleModel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;RuleMetadata&gt; [metadataList=new ArrayList&lt;RuleMetadata&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tableName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>num</ParamName>
                    <ParamType>Number</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validCell</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataType</ParamName>
                    <ParamType>DataType.DataTypes</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateAttributeCell</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateMetadataCell</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeSingleFieldConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FieldConstraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>ConditionCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cell</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SingleFieldConstraint [sfc=new SingleFieldConstraint(c.getFactField())]</InnerVar>
                <InnerVar>int [constraintValueType=c.getConstraintValueType()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sfc;setParameters;[c.getParameters()]</InnerMethodInvoke>
                <InnerMethodInvoke>sfc;setConstraintValueType;[c.getConstraintValueType()]</InnerMethodInvoke>
                <InnerMethodInvoke>sfc;setFieldType;[c.getFieldType()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeSingleFieldConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FieldConstraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>ConditionCol52</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>allColumns</ParamName>
                    <ParamType>BaseColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>List&lt;DTCellValue52&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GuidedDTDRLOtherwiseHelper.OtherwiseBuilder [builder=GuidedDTDRLOtherwiseHelper.getBuilder(c)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>