<Class>
    <Id>3527</Id>
    <Package>org.drools.compiler.integrationtests</Package>
    <ClassName>LargeRuleBase</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LargeRuleBase  /** 
 * This generates a large number of rules (complex ones) and then times compiling, serializing etc.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>RULE_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.err;println;[Runtime.getRuntime().freeMemory()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bigBlobCompile;[]</InnerMethodInvoke>
                <InnerMethodInvoke>System;gc;[]</InnerMethodInvoke>
                <InnerMethodInvoke>Thread;sleep;[5000]</InnerMethodInvoke>
                <InnerMethodInvoke>System.err;println;[Runtime.getRuntime().freeMemory()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bigBlobCompile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuilder [buf=new StringBuilder()]</InnerVar>
                <InnerVar>KnowledgeBuilder [kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder()]</InnerVar>
                <InnerVar>InternalKnowledgeBase [kbase=KnowledgeBaseFactory.newKnowledgeBase()]</InnerVar>
                <InnerVar>File [f=new File("foo.rulebase")]</InnerVar>
                <InnerVar>ObjectOutput [out=new DroolsObjectOutputStream(new FileOutputStream(f))]</InnerVar>
                <InnerVar>ObjectInputStream [in=new DroolsObjectInputStream(new FileInputStream(f))]</InnerVar>
                <InnerVar>KieBase [rb_=(KieBase)in.readObject()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>buf;append;[getHeader()]</InnerMethodInvoke>
                <InnerMethodInvoke>kbuilder;add;[ResourceFactory.newByteArrayResource(buf.toString().getBytes()), ResourceType.DRL]</InnerMethodInvoke>
                <InnerMethodInvoke>kbase;addPackages;[kbuilder.getKnowledgePackages()]</InnerMethodInvoke>
                <InnerMethodInvoke>out;writeObject;[kbase]</InnerMethodInvoke>
                <InnerMethodInvoke>out;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>out;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DroolsParserException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTemplate1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>status</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTemplate2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>num</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>status</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>