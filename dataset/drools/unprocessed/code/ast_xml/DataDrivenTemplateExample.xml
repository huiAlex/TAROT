<Class>
    <Id>1228</Id>
    <Package>org.drools.examples.datadriventemplate</Package>
    <ClassName>DataDrivenTemplateExample</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DataDrivenTemplateExample  /** 
 * This example shows how to use Data-driven rule templates. It assumes that the FeeScheduleRule objects have been retrieved from a database using some form of Object-Relational Mapper (such as Hibernate or Toplink). An alternative is to use the ResultSetGenerator from the org.drools.templates.jdbc package, where you can use vanilla JDBC to generate rules from (you just select the table names as the field named from the template) - this means no ORM is required.  Some things to note: - at the moment the templates require all parameters to come in a Strings - any row that references a parameter that is empty will not be generated.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>iterator</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>iterator</FieldName>
            <FieldType>FeeScheduleRule</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TestDataProvider</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rows</ParamName>
                    <ParamType>FeeScheduleRule</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasNext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>FeeScheduleRule [nextRule=iterator.next()]</InnerVar>
                <InnerVar>String[] [row=new String[]{String.valueOf(nextRule.getFeeEventId()),nextRule.getType().getCode(),nextRule.getEntityBranch(),nextRule.getProductType().getCode(),nextRule.getActivityType().getName(),nextRule.getFeeType().getCode(),nextRule.getOwningParty(),nextRule.getCurrency(),nextRule.getComparator(),String.valueOf(nextRule.getCompareAmount()),String.valueOf(nextRule.getAmount()),String.valueOf(nextRule.isLogEvent())}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataDrivenTemplateExample [example=new DataDrivenTemplateExample()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>example;testCompiler;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCompiler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ArrayList&lt;FeeScheduleRule&gt; [rules=new ArrayList&lt;FeeScheduleRule&gt;()]</InnerVar>
                <InnerVar>FeeScheduleType [standard=new FeeScheduleType("STANDARD")]</InnerVar>
                <InnerVar>FeeScheduleType [flat=new FeeScheduleType("FLAT")]</InnerVar>
                <InnerVar>ProductType [sblc=new ProductType("SBLC")]</InnerVar>
                <InnerVar>ProductType [rrc=new ProductType("RRC")]</InnerVar>
                <InnerVar>ActivityType [iss=new ActivityType("ISS")]</InnerVar>
                <InnerVar>ActivityType [osx=new ActivityType("OSX")]</InnerVar>
                <InnerVar>FeeType [commission=new FeeType("Commission")]</InnerVar>
                <InnerVar>FeeType [postage=new FeeType("Postage")]</InnerVar>
                <InnerVar>FeeType [telex=new FeeType("Telex")]</InnerVar>
                <InnerVar>TestDataProvider [tdp=new TestDataProvider(rules)]</InnerVar>
                <InnerVar>DataProviderCompiler [converter=new DataProviderCompiler()]</InnerVar>
                <InnerVar>String [drl=converter.compile(tdp,getTemplate())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rules;add;[createRule(1,flat,"",sblc,iss,commission,"Party 1","USD","",0,750,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>rules;add;[createRule(2,standard,"Entity Branch 1",rrc,iss,commission,"","YEN","",0,1600,false)]</InnerMethodInvoke>
                <InnerMethodInvoke>rules;add;[createRule(3,standard,"",sblc,iss,postage,"","YEN","",0,40,true)]</InnerMethodInvoke>
                <InnerMethodInvoke>rules;add;[createRule(4,flat,"",sblc,osx,telex,"","YEN","&lt;",30000,45,false)]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;[drl]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTemplate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FeeScheduleRule</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>feeEventId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>FeeScheduleType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entityBranch</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>productType</ParamName>
                    <ParamType>ProductType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>activityType</ParamName>
                    <ParamType>ActivityType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>feeType</ParamName>
                    <ParamType>FeeType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>owningParty</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>currency</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>comparator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compareAmount</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>amount</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logEvent</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FeeScheduleRule [rule=new FeeScheduleRule(feeEventId,activityType,productType,type,feeType,owningParty,entityBranch,comparator,compareAmount,amount,currency,logEvent)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>