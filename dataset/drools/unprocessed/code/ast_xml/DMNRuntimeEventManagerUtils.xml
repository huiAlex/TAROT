<Class>
    <Id>3437</Id>
    <Package>org.kie.dmn.core.impl</Package>
    <ClassName>DMNRuntimeEventManagerUtils</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>fireBeforeEvaluateDecision</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>decision</ParamName>
                    <ParamType>DecisionNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>DMNResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BeforeEvaluateDecisionEvent [event=new BeforeEvaluateDecisionEventImpl(decision,result)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyListeners;[eventManager, l -&gt; l.beforeEvaluateDecision(event)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireAfterEvaluateDecision</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>decision</ParamName>
                    <ParamType>DecisionNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>DMNResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AfterEvaluateDecisionEvent [event=new AfterEvaluateDecisionEventImpl(decision,result)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyListeners;[eventManager, l -&gt; l.afterEvaluateDecision(event)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireBeforeEvaluateBKM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bkm</ParamName>
                    <ParamType>BusinessKnowledgeModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>DMNResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BeforeEvaluateBKMEvent [event=new BeforeEvaluateBKMEventImpl(bkm,result)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyListeners;[eventManager, l -&gt; l.beforeEvaluateBKM(event)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireAfterEvaluateBKM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bkm</ParamName>
                    <ParamType>BusinessKnowledgeModelNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>DMNResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AfterEvaluateBKMEvent [event=new AfterEvaluateBKMEventImpl(bkm,result)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyListeners;[eventManager, l -&gt; l.afterEvaluateBKM(event)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireBeforeEvaluateDecisionTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nodeName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dtName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>DMNResult</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BeforeEvaluateDecisionTableEvent [event=new BeforeEvaluateDecisionTableEventImpl(nodeName,dtName,result)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyListeners;[eventManager, l -&gt; l.beforeEvaluateDecisionTable(event)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireAfterEvaluateDecisionTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nodeName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dtName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>DMNResult</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>matches</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fired</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AfterEvaluateDecisionTableEvent [event=new AfterEvaluateDecisionTableEventImpl(nodeName,dtName,result,matches,fired)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyListeners;[eventManager, l -&gt; l.afterEvaluateDecisionTable(event)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyListeners</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eventManager</ParamName>
                    <ParamType>DMNRuntimeEventManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>consumer</ParamName>
                    <ParamType>DMNRuntimeEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DMNRuntimeEventManagerUtils</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>