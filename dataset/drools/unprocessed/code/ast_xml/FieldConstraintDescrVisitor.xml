<Class>
    <Id>921</Id>
    <Package>org.drools.verifier.visitor</Package>
    <ClassName>FieldConstraintDescrVisitor</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>data</FieldName>
            <FieldType>VerifierData</FieldType>
        </Field>
        <Field>
            <FieldName>objectType</FieldName>
            <FieldType>ObjectType</FieldType>
        </Field>
        <Field>
            <FieldName>pattern</FieldName>
            <FieldType>Pattern</FieldType>
        </Field>
        <Field>
            <FieldName>field</FieldName>
            <FieldType>Field</FieldType>
        </Field>
        <Field>
            <FieldName>orderNumber</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>solvers</FieldName>
            <FieldType>Solvers</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FieldConstraintDescrVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>VerifierData</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>solvers</ParamName>
                    <ParamType>Solvers</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>orderNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitFieldConstraintDescr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>FieldConstraintDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;visit;[descr.getRestriction()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>UnknownDescriptionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>restrictionDescr</ParamName>
                    <ParamType>RestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>UnknownDescriptionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>restrictions</ParamName>
                    <ParamType>RestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>UnknownDescriptionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>RestrictionConnectiveDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>UnknownDescriptionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment>/** 
 * End
 * @param descr
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>LiteralRestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LiteralRestriction [restriction=LiteralRestriction.createRestriction(pattern,descr.getText())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>restriction;setPatternIsNot;[pattern.isPatternNot()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setFieldPath;[field.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOperator;[Operator.determineOperator(descr.getEvaluator(),descr.isNegated())]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOrderNumber;[orderNumber]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentPath;[pattern.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentType;[pattern.getVerifierComponentType()]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setFieldType;[restriction.getValueType()]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[restriction]</InnerMethodInvoke>
                <InnerMethodInvoke>solvers;addPatternComponent;[restriction]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment>/** 
 * End
 * @param descr
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>QualifiedIdentifierRestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [text=descr.getText()]</InnerVar>
                <InnerVar>String [base=text.substring(0,text.indexOf("."))]</InnerVar>
                <InnerVar>String [fieldName=text.substring(text.indexOf("."))]</InnerVar>
                <InnerVar>Variable [patternVariable=data.getVariableByRuleAndVariableName(pattern.getRuleName(),base)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment>/** 
 * End &lt;p/&gt; Foo( bar == $bar )&lt;br&gt; $bar is a VariableRestrictionDescr
 * @param descr
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>VariableRestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PatternVariable [patternVariable=(PatternVariable)data.getVariableByRuleAndVariableName(pattern.getRuleName(),descr.getIdentifier())]</InnerVar>
                <InnerVar>VariableRestriction [restriction=new VariableRestriction(pattern)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>restriction;setPatternIsNot;[pattern.isPatternNot()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setFieldPath;[field.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOperator;[Operator.determineOperator(descr.getEvaluator(),descr.isNegated())]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setVariable;[patternVariable]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOrderNumber;[orderNumber]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentPath;[pattern.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentType;[pattern.getVerifierComponentType()]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setFieldType;[Field.VARIABLE]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[restriction]</InnerMethodInvoke>
                <InnerMethodInvoke>solvers;addPatternComponent;[restriction]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment>/** 
 * End
 * @param descr
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>ReturnValueRestrictionDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ReturnValueRestriction [restriction=new ReturnValueRestriction(pattern)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>restriction;setPatternIsNot;[pattern.isPatternNot()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setFieldPath;[field.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOperator;[Operator.determineOperator(descr.getEvaluator(),descr.isNegated())]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setClassMethodName;[descr.getClassMethodName()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setContent;[descr.getContent()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setDeclarations;[descr.getDeclarations()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOrderNumber;[orderNumber]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentPath;[pattern.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentType;[pattern.getVerifierComponentType()]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[restriction]</InnerMethodInvoke>
                <InnerMethodInvoke>solvers;addPatternComponent;[restriction]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>