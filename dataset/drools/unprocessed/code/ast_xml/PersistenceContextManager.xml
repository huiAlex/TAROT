<Class>
    <Id>719</Id>
    <Package>org.drools.persistence.api</Package>
    <ClassName>PersistenceContextManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getApplicationScopedPersistenceContext</MethodName>
            <MethodComment>/** 
 * @return a {@link PersistenceContext} instance containing the Application Scoped EntityManager or persistence helper class.
 */
</MethodComment>
            <ReturnType>PersistenceContext</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCommandScopedPersistenceContext</MethodName>
            <MethodComment>/** 
 * @return a {@link PersistenceContext} instance containing the Command Scoped EntityManager or persistence helper class.
 */
</MethodComment>
            <ReturnType>PersistenceContext</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginCommandScopedEntityManager</MethodName>
            <MethodComment>/** 
 * This method should be called at the beginning of a  {@link ExecutableRunner#execute(org.kie.api.command.Command)} method,when the given  {@link ExecutableRunner} instance is responsible for handling persistence.See the  {@link PersistableRunner} class.&lt;/p&gt; The first responsibility of this method is to make sure that the Command Scoped EntityManager (CSEM) joins the ongoing transaction. &lt;/p&gt; When the CSEM is internally managed, this method is also responsible for creating a new CSEM for use during execution of the  {@link Command} or operation being executed by the {@link KieSession}.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endCommandScopedEntityManager</MethodName>
            <MethodComment>/** 
 * This method should only called in the  {@link Synchronization#afterCompletion(int)} method.&lt;/p&gt; It is responsible for cleaning up the Command Scoped EntityManager (CSEM) instance, but &lt;i&gt;only&lt;/i&gt; when  the CSEM is an &lt;i&gt;internal&lt;/i&gt; one, and not one supplied (and managed) by the user.  &lt;/p&gt; If the CSEM is (internally) managed, then this method will take the necessary actions in order to make sure that a  new CSEM can be generated at the beginning of the next operation or command on the persistent  {@link KieSession}. &lt;/p&gt; if the CSEM is supplied (and managed) by the user, this method will do nothing with the CSEM.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dispose</MethodName>
            <MethodComment>/** 
 * Executes the necessary actions in order to clean up and dispose of the internal fields of this instance.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>