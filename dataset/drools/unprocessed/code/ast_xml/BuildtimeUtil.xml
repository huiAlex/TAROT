<Class>
    <Id>3425</Id>
    <Package>org.drools.testcoverage.functional.model</Package>
    <ClassName>BuildtimeUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createKieContainerFromResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieContainer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>useCanonicalModel</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resources</ParamName>
                    <ParamType>Resource</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ReleaseId [kJarReleaseId=createKJarFromResources(useCanonicalModel,resources)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createKJarFromResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ReleaseId</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>useCanonicalModel</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resources</ParamName>
                    <ParamType>Resource</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieServices [kieServices=KieServices.get()]</InnerVar>
                <InnerVar>KieBuilder [kieBuilder=getKieBuilderFromResources(kieServices.newKieFileSystem(),useCanonicalModel,resources)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;generateKJarFromKieBuilder;[kieBuilder, useCanonicalModel]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateKJarFromKieBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kieBuilder</ParamName>
                    <ParamType>KieBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>useCanonicalModel</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ReleaseId [releaseId=kieBuilder.getKieModule().getReleaseId()]</InnerVar>
                <InnerVar>InternalKieModule [kieModule=(InternalKieModule)kieBuilder.getKieModule()]</InnerVar>
                <InnerVar>File [kjarFile=bytesToTempFile(releaseId,kieModule.getBytes(),".jar")]</InnerVar>
                <InnerVar>KieModule [zipKieModule]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>KieServices.get().getRepository();addKieModule;[zipKieModule]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKieBuilderFromResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kfs</ParamName>
                    <ParamType>KieFileSystem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>useCanonicalModel</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resources</ParamName>
                    <ParamType>Resource</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieBuilder [kbuilder=KieServices.Factory.get().newKieBuilder(kfs)]</InnerVar>
                <InnerVar>List&lt;Message&gt; [msgs=kbuilder.getResults().getMessages(Message.Level.ERROR)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>kfs;writeKModuleXML;[getDefaultKieModuleModel(KieServices.get()).toXML()]</InnerMethodInvoke>
                <InnerMethodInvoke>kbuilder;buildAll;[useCanonicalModel ? ExecutableModelFlowProject.class : DrlProject.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createKieBaseFromResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieBase</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kieBaseConfiguration</ParamName>
                    <ParamType>KieBaseConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resources</ParamName>
                    <ParamType>Resource</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieHelper [kieHelper=new KieHelper()]</InnerVar>
                <InnerVar>KieBase [kieBase=kieHelper.build(kieBaseConfiguration)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createKieBaseFromDrl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieBase</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>drl</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>kieBaseConfiguration</ParamName>
                    <ParamType>KieBaseConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieBase [kieBase=new KieHelper().addContent(drl,ResourceType.DRL).build(kieBaseConfiguration)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDefaultKieModuleModel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KieModuleModel</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ks</ParamName>
                    <ParamType>KieServices</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieModuleModel [kproj=ks.newKieModuleModel()]</InnerVar>
                <InnerVar>KieBaseModel [kieBaseModel1=kproj.newKieBaseModel("kbase").setDefault(true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>kieBaseModel1.newKieSessionModel("ksession");setDefault;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bytesToTempFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>File</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>releaseId</ParamName>
                    <ParamType>ReleaseId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bytes</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>extension</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [file=File.createTempFile("BTUtil","")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>logDebug</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>caption</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logContent</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;["--------------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>logger;info;[caption]</InnerMethodInvoke>
                <InnerMethodInvoke>logger;info;["--------------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>logger;info;[logContent]</InnerMethodInvoke>
                <InnerMethodInvoke>logger;info;["--------------------------------------------"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildtimeUtil</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>