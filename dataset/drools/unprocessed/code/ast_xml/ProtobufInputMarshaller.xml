<Class>
    <Id>2690</Id>
    <Package>org.drools.core.marshalling.impl</Package>
    <ClassName>ProtobufInputMarshaller</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ProtobufInputMarshaller  /** 
 * An input marshaller that uses protobuf. 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>processMarshaller</FieldName>
            <FieldType>ProcessMarshaller</FieldType>
        </Field>
        <Field>
            <FieldName>handle</FieldName>
            <FieldType>ProtobufMessages.FactHandle</FieldType>
        </Field>
        <Field>
            <FieldName>results</FieldName>
            <FieldType>LinkedList</FieldType>
        </Field>
        <Field>
            <FieldName>results</FieldName>
            <FieldType>ProtobufMessages.FactHandle</FieldType>
        </Field>
        <Field>
            <FieldName>dormantActivations</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>dormantActivations</FieldName>
            <FieldType>ActivationKey</FieldType>
        </Field>
        <Field>
            <FieldName>rneActivations</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>rneActivations</FieldName>
            <FieldType>ActivationKey</FieldType>
        </Field>
        <Field>
            <FieldName>tuplesCache</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>tuplesCache</FieldName>
            <FieldType>ActivationKey</FieldType>
        </Field>
        <Field>
            <FieldName>rneaToFire</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>rneaToFire</FieldName>
            <FieldType>RuleAgendaItem</FieldType>
        </Field>
        <Field>
            <FieldName>pkgName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ruleName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tuple</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>tuple</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createProcessMarshaller</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProcessMarshaller</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSession</MethodName>
            <MethodComment>/** 
 * Stream the data into an existing session
 * @param session
 * @param context
 * @return
 * @throws IOException
 * @throws ClassNotFoundException
 */
</MethodComment>
            <ReturnType>StatefulKnowledgeSessionImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>StatefulKnowledgeSessionImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.KnowledgeSession [_session=loadAndParseSession(context)]</InnerVar>
                <InnerVar>InternalAgenda [agenda=resetSession(session,context,_session)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readSession;[_session, session, agenda, context]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSession</MethodName>
            <MethodComment>/** 
 * Create a new session into which to read the stream data
 */
</MethodComment>
            <ReturnType>StatefulKnowledgeSessionImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StatefulKnowledgeSessionImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>environment</ParamName>
                    <ParamType>Environment</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>SessionConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StatefulKnowledgeSessionImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>environment</ParamName>
                    <ParamType>Environment</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>SessionConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initializer</ParamName>
                    <ParamType>KieSessionInitializer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.KnowledgeSession [_session=loadAndParseSession(context)]</InnerVar>
                <InnerVar>StatefulKnowledgeSessionImpl [session=createAndInitializeSession(context,id,environment,config,_session)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalAgenda</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>StatefulKnowledgeSessionImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>ProtobufMessages.KnowledgeSession</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InternalAgenda [agenda=(InternalAgenda)session.getAgenda()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;reset;[_session.getRuleData().getLastId(), _session.getRuleData().getLastRecency(), 1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;readAgenda;[context, _session.getRuleData(), agenda]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createAndInitializeSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StatefulKnowledgeSessionImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>environment</ParamName>
                    <ParamType>Environment</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>SessionConfiguration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>ProtobufMessages.KnowledgeSession</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FactHandleFactory [handleFactory=context.kBase.newFactHandleFactory(_session.getRuleData().getLastId(),_session.getRuleData().getLastRecency())]</InnerVar>
                <InnerVar>InternalAgenda [agenda=context.kBase.getConfiguration().getComponentFactory().getAgendaFactory().createAgenda(context.kBase,false)]</InnerVar>
                <InnerVar>WorkingMemoryFactory [wmFactory=context.kBase.getConfiguration().getComponentFactory().getWorkingMemoryFactory()]</InnerVar>
                <InnerVar>StatefulKnowledgeSessionImpl [session=(StatefulKnowledgeSessionImpl)wmFactory.createWorkingMemory(id,context.kBase,handleFactory,1,config,agenda,environment)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readAgenda;[context, _session.getRuleData(), agenda]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadAndParseSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.KnowledgeSession</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExtensionRegistry [registry=PersisterHelper.buildRegistry(context,processMarshaller)]</InnerVar>
                <InnerVar>ProtobufMessages.Header [_header=PersisterHelper.readFromStreamWithHeaderPreloaded(context,registry)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StatefulKnowledgeSessionImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>ProtobufMessages.KnowledgeSession</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>StatefulKnowledgeSessionImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GlobalResolver [globalResolver=(GlobalResolver)context.env.get(EnvironmentName.GLOBALS)]</InnerVar>
                <InnerVar>List&lt;PropagationContext&gt; [pctxs=new ArrayList&lt;PropagationContext&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readNodeMemories;[context, _session.getRuleData()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;cleanReaderContexts;[pctxs]</InnerMethodInvoke>
                <InnerMethodInvoke>null;readActionQueue;[context, _session.getRuleData()]</InnerMethodInvoke>
                <InnerMethodInvoke>agenda;setActivationsFilter;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readNodeMemories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>RuleData</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>QueryElementContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>_ctx</ParamName>
                    <ParamType>ProtobufMessages.NodeMemory.QueryElementNodeMemory.QueryContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readInitialFactHandle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>RuleData</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctxs</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [ifhId=context.wm.getInitialFactHandle().getId()]</InnerVar>
                <InnerVar>boolean [initialFactPropagated=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context.handles;put;[ifhId, context.wm.getInitialFactHandle()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readAgenda</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_ruleData</ParamName>
                    <ParamType>RuleData</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProtobufMessages.Agenda [_agenda=_ruleData.getAgenda()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readActivations;[context, _agenda.getMatchList(), _agenda.getRuleActivationList()]</InnerMethodInvoke>
                <InnerMethodInvoke>agenda;setActivationsFilter;[context.filter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readActionQueue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_session</ParamName>
                    <ParamType>RuleData</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StatefulKnowledgeSessionImpl [wm=(StatefulKnowledgeSessionImpl)context.wm]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readFactHandles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_ep</ParamName>
                    <ParamType>org.drools.core.marshalling.impl.ProtobufMessages.EntryPoint</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>objectStore</ParamName>
                    <ParamType>ObjectStore</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctxs</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InternalWorkingMemory [wm=context.wm]</InnerVar>
                <InnerVar>EntryPoint [entryPoint=((StatefulKnowledgeSessionImpl)context.wm).getEntryPointMap().get(_ep.getEntryPointId())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertHandleIntoOTN</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>handle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctxs</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [object=handle.getObject()]</InnerVar>
                <InnerVar>WorkingMemoryEntryPoint [ep=handle.getEntryPoint()]</InnerVar>
                <InnerVar>ObjectTypeConf [typeConf=ep.getObjectTypeConfigurationRegistry().getObjectTypeConf(ep.getEntryPoint(),object)]</InnerVar>
                <InnerVar>PropagationContextFactory [pctxFactory=wm.getKnowledgeBase().getConfiguration().getComponentFactory().getPropagationContextFactory()]</InnerVar>
                <InnerVar>PropagationContext [propagationContext=pctxFactory.createPropagationContext(wm.getNextPropagationIdCounter(),PropagationContext.Type.INSERTION,null,null,handle,ep.getEntryPoint(),context)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pctxs;add;[propagationContext]</InnerMethodInvoke>
                <InnerMethodInvoke>ep.getEntryPointNode();assertObject;[handle, propagationContext, typeConf, wm]</InnerMethodInvoke>
                <InnerMethodInvoke>wm;flushPropagations;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanReaderContexts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pctxs</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readFactHandle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalFactHandle</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>entryPoint</ParamName>
                    <ParamType>EntryPoint</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_handle</ParamName>
                    <ParamType>FactHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [object=null]</InnerVar>
                <InnerVar>ObjectMarshallingStrategy [strategy=null]</InnerVar>
                <InnerVar>EntryPointId [confEP]</InnerVar>
                <InnerVar>ObjectTypeConf [typeConf=context.wm.getObjectTypeConfigurationRegistry().getObjectTypeConf(confEP,object)]</InnerVar>
                <InnerVar>InternalFactHandle [handle=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readTruthMaintenanceSystem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wmep</ParamName>
                    <ParamType>EntryPoint</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_ep</ParamName>
                    <ParamType>ProtobufMessages.EntryPoint</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctxs</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TruthMaintenanceSystem [tms=((NamedEntryPoint)wmep).getTruthMaintenanceSystem()]</InnerVar>
                <InnerVar>boolean [wasOTCSerialized=_ep.getOtcCount() &gt; 0]</InnerVar>
                <InnerVar>Set&lt;String&gt; [tmsEnabled=new HashSet&lt;String&gt;()]</InnerVar>
                <InnerVar>ProtobufMessages.TruthMaintenanceSystem [_tms=_ep.getTms()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readBeliefSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tms</ParamName>
                    <ParamType>TruthMaintenanceSystem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>EqualityKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_key</ParamName>
                    <ParamType>ProtobufMessages.EqualityKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readActivations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_dormant</ParamName>
                    <ParamType>ProtobufMessages.Activation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_rneas</ParamName>
                    <ParamType>ProtobufMessages.Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readTimer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inCtx</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_timer</ParamName>
                    <ParamType>Timer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TimersInputMarshaller [reader=inCtx.readersByInt.get(_timer.getType().getNumber())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>reader;deserialize;[inCtx, _timer]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readTrigger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Trigger</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inCtx</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_trigger</ParamName>
                    <ParamType>ProtobufMessages.Trigger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readWorkItem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WorkItem</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PBActivationsFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDormantActivationsMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ActivationKey</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>accept</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rtn</ParamName>
                    <ParamType>TerminalNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTuplesCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ActivationKey</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRneActivations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ActivationKey</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fireRNEAs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RuleAgendaItem [rai=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>accept</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>match</ParamName>
                    <ParamType>Match</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Tuple [tuple=((Activation)match).getTuple()]</InnerVar>
                <InnerVar>ActivationKey [key=PersisterHelper.createActivationKey(match.getRule().getPackageName(),match.getRule().getName(),tuple)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.tuplesCache;put;[key, tuple]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ActivationKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pkgName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ruleName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [prime=31]</InnerVar>
                <InnerVar>int [result=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ActivationKey [other=(ActivationKey)obj]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TupleKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [prime=31]</InnerVar>
                <InnerVar>int [result=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TupleKey [other=(TupleKey)obj]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>