<Class>
    <Id>1694</Id>
    <Package>org.drools.examples.sudoku</Package>
    <ClassName>Sudoku</ClassName>
    <SuperClass>AbstractSudokuGridModel</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>SudokuGridModel</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Sudoku  /** 
 * An object of this class solves Sudoku problems.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>sudoku</FieldName>
            <FieldType>Sudoku</FieldType>
        </Field>
        <Field>
            <FieldName>cells</FieldName>
            <FieldType>Cell[][]</FieldType>
        </Field>
        <Field>
            <FieldName>sqrs</FieldName>
            <FieldType>CellSqr[][]</FieldType>
        </Field>
        <Field>
            <FieldName>rows</FieldName>
            <FieldType>CellRow[]</FieldType>
        </Field>
        <Field>
            <FieldName>cols</FieldName>
            <FieldType>CellCol[]</FieldType>
        </Field>
        <Field>
            <FieldName>kc</FieldName>
            <FieldType>KieContainer</FieldType>
        </Field>
        <Field>
            <FieldName>session</FieldName>
            <FieldType>KieSession</FieldType>
        </Field>
        <Field>
            <FieldName>workingMemoryListener</FieldName>
            <FieldType>SudokuWorkingMemoryListener</FieldType>
        </Field>
        <Field>
            <FieldName>counter</FieldName>
            <FieldType>Counter</FieldType>
        </Field>
        <Field>
            <FieldName>explain</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>steppingFactHandle</FieldName>
            <FieldType>FactHandle</FieldType>
        </Field>
        <Field>
            <FieldName>stepping</FieldName>
            <FieldType>Stepping</FieldType>
        </Field>
        <Field>
            <FieldName>unsolvable</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Sudoku</MethodName>
            <MethodComment>/** 
 * Constructor.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kc</ParamName>
                    <ParamType>KieContainer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCellValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>iRow</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iCol</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpGrid</MethodName>
            <MethodComment>/** 
 * Nice printout of the grid.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuilder [dumpGridSb=new StringBuilder()]</InnerVar>
                <InnerVar>Formatter [fmt=new Formatter(dumpGridSb)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>fmt;format;["       "]</InnerMethodInvoke>
                <InnerMethodInvoke>fmt;format;["\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>fmt;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;[dumpGridSb]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>consistencyCheck</MethodName>
            <MethodComment>/** 
 * Checks that everything is still according to the sudoku rules.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["+++ check OK +++"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>solve</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setGlobal;["explain", explain]</InnerMethodInvoke>
                <InnerMethodInvoke>this.session;fireAllRules;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>step</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setGlobal;["explain", explain]</InnerMethodInvoke>
                <InnerMethodInvoke>this.counter;setCount;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>session;update;[session.getFactHandle(this.counter), this.counter]</InnerMethodInvoke>
                <InnerMethodInvoke>this.session;fireUntilHalt;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSolved</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isUnsolvable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCellValues</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cellValues</ParamName>
                    <ParamType>Integer[][]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Setting [s000=new Setting(0,0,0)]</InnerVar>
                <InnerVar>FactHandle [fh000=this.session.insert(s000)]</InnerVar>
                <InnerVar>int [initial=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setGlobal;["explain", explain]</InnerMethodInvoke>
                <InnerMethodInvoke>session;addEventListener;[workingMemoryListener]</InnerMethodInvoke>
                <InnerMethodInvoke>this;create;[]</InnerMethodInvoke>
                <InnerMethodInvoke>this.session;insert;[counter]</InnerMethodInvoke>
                <InnerMethodInvoke>this.session;delete;[fh000]</InnerMethodInvoke>
                <InnerMethodInvoke>this.session;fireAllRules;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuilder [sb=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sb.append("Sudoku:");append;['\n']</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>objectInserted</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ev</ParamName>
                    <ParamType>ObjectInsertedEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>objectDeleted</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ev</ParamName>
                    <ParamType>ObjectDeletedEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>objectUpdated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ev</ParamName>
                    <ParamType>ObjectUpdatedEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session.getAgenda().getAgendaGroup("validate");setFocus;[]</InnerMethodInvoke>
                <InnerMethodInvoke>session;fireUntilHalt;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>