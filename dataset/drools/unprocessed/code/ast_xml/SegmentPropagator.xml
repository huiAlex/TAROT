<Class>
    <Id>96</Id>
    <Package>org.drools.core.phreak</Package>
    <ClassName>SegmentPropagator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>propagate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sourceSegment</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LeftTupleSource [source=(LeftTupleSource)sourceSegment.getTipNode()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processPeers;[sourceSegment, leftTuples, wm]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processPeers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sourceSegment</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SegmentMemory [firstSmem=sourceSegment.getFirst()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processPeerDeletes;[leftTuples, leftTuples.getDeleteFirst(), firstSmem, wm]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processPeerDeletes;[leftTuples, leftTuples.getNormalizedDeleteFirst(), firstSmem, wm]</InnerMethodInvoke>
                <InnerMethodInvoke>firstSmem.getStagedLeftTuples();addAll;[leftTuples]</InnerMethodInvoke>
                <InnerMethodInvoke>leftTuples;resetAll;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processPeerDeletes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>leftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>firstSmem</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>