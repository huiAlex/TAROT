<Class>
    <Id>2730</Id>
    <Package>org.drools.beliefs.bayes</Package>
    <ClassName>JunctionTreeBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>graph</FieldName>
            <FieldType>Graph</FieldType>
        </Field>
        <Field>
            <FieldName>graph</FieldName>
            <FieldType>BayesVariable</FieldType>
        </Field>
        <Field>
            <FieldName>adjacencyMatrix</FieldName>
            <FieldType>boolean[][]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getGraph</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BayesVariable</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JunctionTreeBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>graph</ParamName>
                    <ParamType>BayesVariable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JunctionTree</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JunctionTree</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>init</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;OpenBitSet&gt; [cliques=triangulate()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;moralize;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moralize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moralize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>BayesVariable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v1</ParamName>
                    <ParamType>GraphNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>connect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>adjMatrix</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disconnect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>adjMatrix</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>triangulate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OpenBitSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean[][] [clonedAdjMatrix=cloneAdjacencyMarix(adjacencyMatrix)]</InnerVar>
                <InnerVar>PriorityQueue&lt;EliminationCandidate&gt; [p=new PriorityQueue&lt;EliminationCandidate&gt;(graph.size())]</InnerVar>
                <InnerVar>Map&lt;Integer,EliminationCandidate&gt; [elmVertMap=new HashMap&lt;Integer,EliminationCandidate&gt;()]</InnerVar>
                <InnerVar>List&lt;OpenBitSet&gt; [cliques=new ArrayList&lt;OpenBitSet&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>eliminateVertex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>EliminationCandidate</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>elmVertMap</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clonedAdjMatrix</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>adjList</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>verticesToUpdate</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>EliminationCandidate</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [id=v.getV().getId()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createClique</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clonedAdjMatrix</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>verticesToUpdate</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>adjList</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRelatedVerticesToUpdate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clonedAdjMatrix</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>verticesToUpdate</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>verticesToUpdate;add;[i]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateCliques</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cliques</ParamName>
                    <ParamType>OpenBitSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newClique</ParamName>
                    <ParamType>OpenBitSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [superSetFound=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAdjacencyMatrix</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean[][]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cloneAdjacencyMarix</MethodName>
            <MethodComment>/** 
 * Clones the provided array
 * @param src
 * @return a new clone of the provided array
 */
</MethodComment>
            <ReturnType>boolean[][]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>src</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [length=src.length]</InnerVar>
                <InnerVar>boolean[][] [target=new boolean[length][src[0].length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>junctionTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JunctionTree</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cliques</ParamName>
                    <ParamType>OpenBitSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>init</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;SeparatorSet&gt; [list=new ArrayList&lt;SeparatorSet&gt;()]</InnerVar>
                <InnerVar>SeparatorSet[][][] [sepGraphs=new SeparatorSet[cliques.size()][][]]</InnerVar>
                <InnerVar>JunctionTreeClique[] [jtNodes=new JunctionTreeClique[cliques.size()]]</InnerVar>
                <InnerVar>JunctionTreeSeparator[] [jtSeps=new JunctionTreeSeparator[cliques.size() - 1]]</InnerVar>
                <InnerVar>OpenBitSet[] [varNodeToCliques=new OpenBitSet[graph.size()]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>list;addAll;[list]</InnerMethodInvoke>
                <InnerMethodInvoke>Collections;sort;[list]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createJunctionTreeGraph;[sepGraphs[0], jtNodes[0], jtNodes, jtSeps, 0]</InnerMethodInvoke>
                <InnerMethodInvoke>null;mapNodeToCliqueFamily;[varNodeToCliques, jtNodes]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mergeGraphs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>graphs</ParamName>
                    <ParamType>SeparatorSet[][][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>separatorSet</ParamName>
                    <ParamType>SeparatorSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SeparatorSet[][] [srcGraph=graphs[separatorSet.getId1()]]</InnerVar>
                <InnerVar>SeparatorSet[][] [trgGraph=graphs[separatorSet.getId2()]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createJunctionTreeGraph</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sepGraph</ParamName>
                    <ParamType>SeparatorSet[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>JunctionTreeClique</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jtNodes</ParamName>
                    <ParamType>JunctionTreeClique[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jtSeps</ParamName>
                    <ParamType>JunctionTreeSeparator[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SeparatorSet[] [row=sepGraph[parent.getId()]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mapNodeToCliqueFamily</MethodName>
            <MethodComment>/** 
 * Given the set of cliques, mapped via ID in a Bitset, for a given bayes node, Find the best clique. Where best clique is one that contains all it's parents with the smallest number of nodes in that clique. When there are no parents then simply pick the clique with the smallest number nodes.
 * @param varNodeToCliques
 * @param jtNodes
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>varNodeToCliques</ParamName>
                    <ParamType>OpenBitSet[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jtNodes</ParamName>
                    <ParamType>JunctionTreeClique[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mapVarNodeToCliques</MethodName>
            <MethodComment>/** 
 * Maps each Bayes node to cliques it's in. It uses a BitSet to map the ID of the cliques
 * @param nodeToCliques
 * @param id
 * @param clique
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodeToCliques</ParamName>
                    <ParamType>OpenBitSet[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clique</ParamName>
                    <ParamType>OpenBitSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAdjacentVertices</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>adjacencyMatrix</ParamName>
                    <ParamType>boolean[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Integer&gt; [list=new ArrayList&lt;Integer&gt;(adjacencyMatrix.length)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>