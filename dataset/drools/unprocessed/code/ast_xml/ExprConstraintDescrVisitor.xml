<Class>
    <Id>447</Id>
    <Package>org.drools.verifier.visitor</Package>
    <ClassName>ExprConstraintDescrVisitor</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>pattern</FieldName>
            <FieldType>Pattern</FieldType>
        </Field>
        <Field>
            <FieldName>data</FieldName>
            <FieldType>VerifierData</FieldType>
        </Field>
        <Field>
            <FieldName>solvers</FieldName>
            <FieldType>Solvers</FieldType>
        </Field>
        <Field>
            <FieldName>orderNumber</FieldName>
            <FieldType>OrderNumber</FieldType>
        </Field>
        <Field>
            <FieldName>field</FieldName>
            <FieldType>Field</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ExprConstraintDescrVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>VerifierData</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>orderNumber</ParamName>
                    <ParamType>OrderNumber</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>solvers</ParamName>
                    <ParamType>Solvers</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>ExprConstraintDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DrlExprParser [drlExprParser=new DrlExprParser(LanguageLevelOption.DRL5)]</InnerVar>
                <InnerVar>ConstraintConnectiveDescr [constraintConnectiveDescr=drlExprParser.parse(descr.getExpression())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;visit;[constraintConnectiveDescr.getDescrs()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descrs</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>RelationalExprDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [currentOrderNumber=orderNumber.next()]</InnerVar>
                <InnerVar>String [fieldName=visit(descr.getLeft())]</InnerVar>
                <InnerVar>Operator [operator=Operator.determineOperator(descr.getOperator(),descr.isNegated())]</InnerVar>
                <InnerVar>String [value=visit(descr.getRight())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setField;[descr, fieldName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRestriction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>currentOrderNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LiteralRestriction [restriction=LiteralRestriction.createRestriction(pattern,value)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>restriction;setFieldPath;[field.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setPatternIsNot;[pattern.isPatternNot()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentPath;[pattern.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentType;[pattern.getVerifierComponentType()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOrderNumber;[currentOrderNumber]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOperator;[operator]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setFieldType;[restriction.getValueType()]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[restriction]</InnerMethodInvoke>
                <InnerMethodInvoke>solvers;addPatternComponent;[restriction]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>RelationalExprDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>RelationalExprDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>field;setName;[fieldName]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setObjectTypePath;[pattern.getObjectTypePath()]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setObjectTypeName;[pattern.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[field]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BaseDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>BindingDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Field [field=new Field(descr)]</InnerVar>
                <InnerVar>FieldVariable [fieldVariable=new FieldVariable(pattern)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>field;setName;[descr.getExpression()]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setObjectTypeName;[pattern.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setObjectTypePath;[pattern.getObjectTypePath()]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[field]</InnerMethodInvoke>
                <InnerMethodInvoke>fieldVariable;setParentPath;[field.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>fieldVariable;setName;[descr.getVariable()]</InnerMethodInvoke>
                <InnerMethodInvoke>fieldVariable;setOrderNumber;[orderNumber.next()]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[fieldVariable]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>ConstraintConnectiveDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>AtomicExprDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [expression=descr.getExpression()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isAVariableRestriction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSurroundedByQuotes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isEval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createEval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PatternEval [eval=new PatternEval(pattern)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>eval;setContent;[expression]</InnerMethodInvoke>
                <InnerMethodInvoke>eval;setOrderNumber;[orderNumber.next()]</InnerMethodInvoke>
                <InnerMethodInvoke>eval;setParentPath;[pattern.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>eval;setParentType;[pattern.getVerifierComponentType()]</InnerMethodInvoke>
                <InnerMethodInvoke>solvers;addPatternComponent;[eval]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[eval]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>firstAndLastCharacterIs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>character</ParamName>
                    <ParamType>char</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createVariableRestriction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>orderNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>operator</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Variable [variable=data.getVariableByRuleAndVariableName(pattern.getRuleName(),value)]</InnerVar>
                <InnerVar>VariableRestriction [restriction=new VariableRestriction(pattern)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>restriction;setPatternIsNot;[pattern.isPatternNot()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setFieldPath;[field.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOperator;[operator]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setVariable;[variable]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setOrderNumber;[orderNumber]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentPath;[pattern.getPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>restriction;setParentType;[pattern.getVerifierComponentType()]</InnerMethodInvoke>
                <InnerMethodInvoke>field;setFieldType;[Field.VARIABLE]</InnerMethodInvoke>
                <InnerMethodInvoke>data;add;[restriction]</InnerMethodInvoke>
                <InnerMethodInvoke>solvers;addPatternComponent;[restriction]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>