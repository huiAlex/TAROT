<Class>
    <Id>1274</Id>
    <Package>org.kie.dmn.feel.lang.impl</Package>
    <ClassName>FEELImpl</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>FEEL</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FEELImpl  /** 
 * Language runtime entry point
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>EMPTY_INPUT</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTY_INPUT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>instanceEventListeners</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>instanceEventListeners</FieldName>
            <FieldType>FEELEventListener</FieldType>
        </Field>
        <Field>
            <FieldName>profiles</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>profiles</FieldName>
            <FieldType>FEELProfile</FieldType>
        </Field>
        <Field>
            <FieldName>customFrame</FieldName>
            <FieldType>Optional</FieldType>
        </Field>
        <Field>
            <FieldName>customFrame</FieldName>
            <FieldType>ExecutionFrameImpl</FieldType>
        </Field>
        <Field>
            <FieldName>customFunctions</FieldName>
            <FieldType>Collection</FieldType>
        </Field>
        <Field>
            <FieldName>customFunctions</FieldName>
            <FieldType>FEELFunction</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FEELImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FEELImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>profiles</ParamName>
                    <ParamType>FEELProfile</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExecutionFrameImpl [frame=new ExecutionFrameImpl(null)]</InnerVar>
                <InnerVar>Map&lt;String,FEELFunction&gt; [functions=new HashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newCompilerContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompilerContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newCompilerContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompilerContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>contextListeners</ParamName>
                    <ParamType>FEELEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompiledExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>CompilerContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEEL_1_1Parser [parser=FEELParser.parse(getEventsManager(ctx.getListeners()),expression,ctx.getInputVariableTypes(),ctx.getInputVariables(),ctx.getFEELFunctions(),profiles)]</InnerVar>
                <InnerVar>ParseTree [tree=parser.compilation_unit()]</InnerVar>
                <InnerVar>ASTBuilderVisitor [v=new ASTBuilderVisitor(ctx.getInputVariableTypes())]</InnerVar>
                <InnerVar>BaseNode [expr=v.visit(tree)]</InnerVar>
                <InnerVar>CompiledExpression [ce=new CompiledExpressionImpl(expr)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compileExpressionList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompiledExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>CompilerContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEEL_1_1Parser [parser=FEELParser.parse(getEventsManager(ctx.getListeners()),expression,ctx.getInputVariableTypes(),ctx.getInputVariables(),ctx.getFEELFunctions(),profiles)]</InnerVar>
                <InnerVar>ParseTree [tree=parser.expressionList()]</InnerVar>
                <InnerVar>ASTBuilderVisitor [v=new ASTBuilderVisitor(ctx.getInputVariableTypes())]</InnerVar>
                <InnerVar>BaseNode [expr=v.visit(tree)]</InnerVar>
                <InnerVar>CompiledExpression [ce=new CompiledExpressionImpl(expr)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>EvaluationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompilerContext [compilerCtx=newCompilerContext(ctx.getListeners())]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [inputVariables=ctx.getAllValues()]</InnerVar>
                <InnerVar>CompiledExpression [expr=compile(expression,compilerCtx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputVariables</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompilerContext [ctx=newCompilerContext()]</InnerVar>
                <InnerVar>CompiledExpression [expr=compile(expression,ctx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>CompiledExpression</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputVariables</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>CompiledExpression</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>EvaluationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newEvaluationContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EvaluationContextImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listeners</ParamName>
                    <ParamType>FEELEventListener</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputVariables</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEELEventListenersManager [eventsManager=getEventsManager(listeners)]</InnerVar>
                <InnerVar>EvaluationContextImpl [ctx=new EvaluationContextImpl(eventsManager)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ctx;setValues;[inputVariables]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateUnaryTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UnaryTest</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateUnaryTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UnaryTest</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>variableTypes</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompilerContext [ctx=newCompilerContext()]</InnerVar>
                <InnerVar>CompiledExpressionImpl [compiledExpression=(CompiledExpressionImpl)compileExpressionList(expression,ctx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>FEELEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>instanceEventListeners;add;[listener]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>FEELEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>instanceEventListeners;remove;[listener]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getListeners</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FEELEventListener</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEventsManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FEELEventListenersManager</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>contextListeners</ParamName>
                    <ParamType>FEELEventListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEELEventListenersManager [listenerMgr=new FEELEventListenersManager()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>listenerMgr;addListeners;[instanceEventListeners]</InnerMethodInvoke>
                <InnerMethodInvoke>listenerMgr;addListeners;[contextListeners]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>