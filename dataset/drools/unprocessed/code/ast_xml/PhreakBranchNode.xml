<Class>
    <Id>1065</Id>
    <Package>org.drools.core.phreak</Package>
    <ClassName>PhreakBranchNode</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>rtnLeftTuple</FieldName>
            <FieldType>LeftTuple</FieldType>
        </Field>
        <Field>
            <FieldName>mainLeftTuple</FieldName>
            <FieldType>LeftTuple</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>doNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>branchNode</ParamName>
                    <ParamType>ConditionalBranchNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cbm</ParamName>
                    <ParamType>ConditionalBranchMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>RuleExecutor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>srcLeftTuples;resetAll;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doLeftInserts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>branchNode</ParamName>
                    <ParamType>ConditionalBranchNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cbm</ParamName>
                    <ParamType>ConditionalBranchMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>RuleExecutor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ConditionalBranchEvaluator [branchEvaluator=branchNode.getBranchEvaluator()]</InnerVar>
                <InnerVar>RuleAgendaItem [ruleAgendaItem=executor.getRuleAgendaItem()]</InnerVar>
                <InnerVar>int [salienceInt=0]</InnerVar>
                <InnerVar>Salience [salience=ruleAgendaItem.getRule().getSalience()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doLeftUpdates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>branchNode</ParamName>
                    <ParamType>ConditionalBranchNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cbm</ParamName>
                    <ParamType>ConditionalBranchMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>RuleExecutor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ConditionalBranchEvaluator [branchEvaluator=branchNode.getBranchEvaluator()]</InnerVar>
                <InnerVar>RuleAgendaItem [ruleAgendaItem=executor.getRuleAgendaItem()]</InnerVar>
                <InnerVar>int [salienceInt=0]</InnerVar>
                <InnerVar>Salience [salience=ruleAgendaItem.getRule().getSalience()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doLeftDeletes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>executor</ParamName>
                    <ParamType>RuleExecutor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBranchTuples</MethodName>
            <MethodComment>/** 
 * A branch has two potential sinks. rtnSink  is for the sink if the contained logic returns true. mainSink is for propagations after the branch node, if they are allowed. it may have one or the other or both. there is no state that indicates whether one or the other or both are present, so all tuple children must be inspected and references coalesced from that. when handling updates and deletes it must search the child tuples to colasce the references. This is done by checking the tuple sink with the known main or rtn sink.
 */
</MethodComment>
            <ReturnType>BranchTuples</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BranchTuples [branchTuples=new BranchTuples()]</InnerVar>
                <InnerVar>LeftTuple [child=leftTuple.getFirstChild()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>