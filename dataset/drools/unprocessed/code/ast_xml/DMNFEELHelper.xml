<Class>
    <Id>3310</Id>
    <Package>org.kie.dmn.core.compiler</Package>
    <ClassName>DMNFEELHelper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>feel</FieldName>
            <FieldType>FEEL</FieldType>
        </Field>
        <Field>
            <FieldName>listener</FieldName>
            <FieldType>FEELEventsListenerImpl</FieldType>
        </Field>
        <Field>
            <FieldName>feelProfiles</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>feelProfiles</FieldName>
            <FieldType>FEELProfile</FieldType>
        </Field>
        <Field>
            <FieldName>feelEvents</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>feelEvents</FieldName>
            <FieldType>FEELEvent</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DMNFEELHelper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>feelProfiles</ParamName>
                    <ParamType>FEELProfile</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.feelProfiles;addAll;[feelProfiles]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createFEELInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FEEL</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>FEEL [feel=FEEL.newInstance(feelProfiles)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>feel;addListener;[listener]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newFEELInstance</MethodName>
            <MethodComment>/** 
 * Return a FEEL instance to be used in invokers/impls, which is however configured correctly accordingly to profiles This FEEL instance is potentially not the same shared by the compiler during the compilation phase.
 */
</MethodComment>
            <ReturnType>FEEL</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>valueMatchesInUnaryTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>unaryTests</ParamName>
                    <ParamType>UnaryTest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dmnContext</ParamName>
                    <ParamType>DMNContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEELEventListenersManager [manager=new FEELEventListenersManager()]</InnerVar>
                <InnerVar>FEELEventsListenerImpl [listener=new FEELEventsListenerImpl()]</InnerVar>
                <InnerVar>EvaluationContextImpl [ctx=new EvaluationContextImpl(manager)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>manager;addListener;[listener]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compileFeelExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompiledExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>DMNCompilerContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>DMNModelImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>DMNElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorMsg</ParamName>
                    <ParamType>Msg.Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgParams</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompilerContext [feelctx=feel.newCompilerContext()]</InnerVar>
                <InnerVar>CompiledExpression [ce=feel.compile(expression,feelctx)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processEvents;[model, element, errorMsg, msgParams]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateFunctionDef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FEELFunction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>DMNCompilerContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>DMNModelImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>DMNElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorMsg</ParamName>
                    <ParamType>Msg.Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgParams</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEELFunction [function=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processEvents;[model, element, errorMsg, msgParams]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateFunctionDef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FEELFunction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>DMNCompilerContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>CompiledExpression</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>DMNModelImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>DMNElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorMsg</ParamName>
                    <ParamType>Msg.Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgParams</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FEELFunction [function=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processEvents;[model, element, errorMsg, msgParams]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateUnaryTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UnaryTest</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>DMNCompilerContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>unaryTests</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>DMNModelImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>DMNElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorMsg</ParamName>
                    <ParamType>Msg.Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgParams</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;UnaryTest&gt; [result=Collections.emptyList()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processEvents;[model, element, errorMsg, msgParams]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processEvents</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>DMNModelImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>DMNElement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msg</ParamName>
                    <ParamType>Msg.Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgParams</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Queue&lt;FEELEvent&gt; [feelEvents=listener.getFeelEvents()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDuplicateEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>model</ParamName>
                    <ParamType>DMNModelImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>error</ParamName>
                    <ParamType>Msg.Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>DMNElement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>FEELEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>feelEvents;add;[event]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFeelEvents</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FEELEvent</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>