<Class>
    <Id>1333</Id>
    <Package>org.drools.games.adventures</Package>
    <ClassName>AdventureFrame</ClassName>
    <SuperClass>JFrame</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>BUTT_FONT</FieldName>
            <FieldType>Font</FieldType>
        </Field>
        <Field>
            <FieldName>contentPane</FieldName>
            <FieldType>JPanel</FieldType>
        </Field>
        <Field>
            <FieldName>outputTextArea</FieldName>
            <FieldType>JTextArea</FieldType>
        </Field>
        <Field>
            <FieldName>characterSelectCombo</FieldName>
            <FieldType>JComboBox</FieldType>
        </Field>
        <Field>
            <FieldName>localEventsTextArea</FieldName>
            <FieldType>JTextArea</FieldType>
        </Field>
        <Field>
            <FieldName>exitsTable</FieldName>
            <FieldType>JTable</FieldType>
        </Field>
        <Field>
            <FieldName>thingsTable</FieldName>
            <FieldType>JTable</FieldType>
        </Field>
        <Field>
            <FieldName>inventoryTable</FieldName>
            <FieldType>JTable</FieldType>
        </Field>
        <Field>
            <FieldName>cmdTextField</FieldName>
            <FieldType>JFormattedTextField</FieldType>
        </Field>
        <Field>
            <FieldName>gameEngine</FieldName>
            <FieldType>GameEngine</FieldType>
        </Field>
        <Field>
            <FieldName>session</FieldName>
            <FieldType>UserSession</FieldType>
        </Field>
        <Field>
            <FieldName>cmd</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR_COLOR</FieldName>
            <FieldType>Color</FieldType>
        </Field>
        <Field>
            <FieldName>mainPanel</FieldName>
            <FieldType>JPanel</FieldType>
        </Field>
        <Field>
            <FieldName>layoutConstrTF</FieldName>
            <FieldType>JTextField</FieldType>
        </Field>
        <Field>
            <FieldName>rowsConstrTF</FieldName>
            <FieldType>JTextField</FieldType>
        </Field>
        <Field>
            <FieldName>colsConstrTF</FieldName>
            <FieldType>JTextField</FieldType>
        </Field>
        <Field>
            <FieldName>componentConstrTF</FieldName>
            <FieldType>JTextField</FieldType>
        </Field>
        <Field>
            <FieldName>okButt</FieldName>
            <FieldType>JButton</FieldType>
        </Field>
        <Field>
            <FieldName>cancelButt</FieldName>
            <FieldType>JButton</FieldType>
        </Field>
        <Field>
            <FieldName>okPressed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>textArea</FieldName>
            <FieldType>JTextArea</FieldType>
        </Field>
        <Field>
            <FieldName>jTable</FieldName>
            <FieldType>JTable</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>AdventureFrame</MethodName>
            <MethodComment>/** 
 * Create the frame.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>UserSession</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>gameEngine</ParamName>
                    <ParamType>GameEngine</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>onClose</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JToolBar [toolBar_1=new JToolBar()]</InnerVar>
                <InnerVar>JToggleButton [newFrame=new JToggleButton("New Window")]</InnerVar>
                <InnerVar>JSplitPane [splitPane=new JSplitPane()]</InnerVar>
                <InnerVar>Component [leftPanel=createEventsAndInvetoryPanel()]</InnerVar>
                <InnerVar>JPanel [test=new JPanel()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setDefaultCloseOperation;[onClose]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setBounds;[100, 100, 1100, 787]</InnerMethodInvoke>
                <InnerMethodInvoke>contentPane;setBorder;[new EmptyBorder(5,5,5,5)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setContentPane;[contentPane]</InnerMethodInvoke>
                <InnerMethodInvoke>contentPane;setLayout;[new BoxLayout(contentPane,BoxLayout.Y_AXIS)]</InnerMethodInvoke>
                <InnerMethodInvoke>toolBar_1;setAlignmentX;[Component.LEFT_ALIGNMENT]</InnerMethodInvoke>
                <InnerMethodInvoke>contentPane;add;[toolBar_1]</InnerMethodInvoke>
                <InnerMethodInvoke>toolBar_1;add;[newFrame]</InnerMethodInvoke>
                <InnerMethodInvoke>newFrame;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    TextAdventure.createFrame(gameEngine,JFrame.DISPOSE_ON_CLOSE);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>splitPane;setResizeWeight;[0.4]</InnerMethodInvoke>
                <InnerMethodInvoke>contentPane;add;[splitPane]</InnerMethodInvoke>
                <InnerMethodInvoke>splitPane;setLeftComponent;[leftPanel]</InnerMethodInvoke>
                <InnerMethodInvoke>splitPane;setRightComponent;[test]</InnerMethodInvoke>
                <InnerMethodInvoke>test;setLayout;[new MigLayout("","[][][]","[][grow, fill][][][][][fill][]")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createpOutputPanel;[test]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createCharacterPanel;[test]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createBuildActionsPanel;[test]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createSendCommandPanel;[test]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>TextAdventure;createFrame;[gameEngine, JFrame.DISPOSE_ON_CLOSE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UserSession</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>UserSession</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGameEngine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GameEngine</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setGameEngine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gameEngine</ParamName>
                    <ParamType>GameEngine</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOutputTextArea</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JTextArea</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCharacterSelectCombo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JComboBox</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLocalEventsTextArea</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JTextArea</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExitsTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JTable</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getThingsTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JTable</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInventoryTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JTable</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createEventsAndInvetoryPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Component</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JSplitPane [leftSplitPanel=new JSplitPane()]</InnerVar>
                <InnerVar>Component [eventsPanel=createLocalEventsPanel()]</InnerVar>
                <InnerVar>Component [inventoryPanel=createInventoryPanel()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>leftSplitPanel;setOrientation;[JSplitPane.VERTICAL_SPLIT]</InnerMethodInvoke>
                <InnerMethodInvoke>leftSplitPanel;setDividerLocation;[400]</InnerMethodInvoke>
                <InnerMethodInvoke>leftSplitPanel;setLeftComponent;[eventsPanel]</InnerMethodInvoke>
                <InnerMethodInvoke>leftSplitPanel;setRightComponent;[inventoryPanel]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createEventsPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Component</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JSplitPane [splitPanel=new JSplitPane()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>splitPanel;setResizeWeight;[0.4]</InnerMethodInvoke>
                <InnerMethodInvoke>splitPanel;setOrientation;[JSplitPane.VERTICAL_SPLIT]</InnerMethodInvoke>
                <InnerMethodInvoke>splitPanel;setLeftComponent;[createLocalEventsPanel()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createGlobalEventsPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Component</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JPanel [globalEventsPanel=new JPanel()]</InnerVar>
                <InnerVar>JLabel [globalEventsLabel=new JLabel("Global Events")]</InnerVar>
                <InnerVar>JScrollPane [pane1=createTextAreaScroll("",20,50,true,true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalEventsPanel;setLayout;[new BoxLayout(globalEventsPanel,BoxLayout.Y_AXIS)]</InnerMethodInvoke>
                <InnerMethodInvoke>globalEventsPanel;add;[globalEventsLabel]</InnerMethodInvoke>
                <InnerMethodInvoke>globalEventsPanel;add;[pane1]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createLocalEventsPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Component</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JPanel [localEventsPanel=new JPanel()]</InnerVar>
                <InnerVar>JLabel [localEventsLabel=new JLabel("Events")]</InnerVar>
                <InnerVar>JTextArea [ta=new JTextArea("",20,50)]</InnerVar>
                <InnerVar>JScrollPane [scroll=new JScrollPane(ta,ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>localEventsPanel;setLayout;[new BoxLayout(localEventsPanel,BoxLayout.Y_AXIS)]</InnerMethodInvoke>
                <InnerMethodInvoke>localEventsPanel;add;[localEventsLabel]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setFont;[UIManager.getFont("TextField.font")]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setWrapStyleWord;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setLineWrap;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>localEventsPanel;add;[scroll]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createInventoryPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Component</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JScrollPane [inventoryPanel=new JScrollPane(inventoryTable)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>inventoryTable;setBorder;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>inventoryTable;setModel;[new NonEditableTableMode(new Object[][]{},new String[]{"Inventory"})]</InnerMethodInvoke>
                <InnerMethodInvoke>inventoryTable;addMouseListener;[new MouseListener(){
  public void mouseReleased(  MouseEvent e){
  }
  public void mousePressed(  MouseEvent e){
  }
  public void mouseExited(  MouseEvent e){
  }
  public void mouseEntered(  MouseEvent e){
  }
  public void mouseClicked(  MouseEvent e){
    if (cmd == null) {
      return;
    }
    int row=inventoryTable.rowAtPoint(e.getPoint());
    int col=inventoryTable.columnAtPoint(e.getPoint());
    Thing t=(Thing)inventoryTable.getModel().getValueAt(row,col);
    cmdTextField.setText(cmdTextField.getText() + t.getName() + " ");
    cmd.add(t);
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseReleased</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mousePressed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseExited</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseEntered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseClicked</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [row=inventoryTable.rowAtPoint(e.getPoint())]</InnerVar>
                <InnerVar>int [col=inventoryTable.columnAtPoint(e.getPoint())]</InnerVar>
                <InnerVar>Thing [t=(Thing)inventoryTable.getModel().getValueAt(row,col)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;[cmdTextField.getText() + t.getName() + " "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[t]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createpOutputPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>JPanel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JTextArea [ta=new JTextArea("",20,50)]</InnerVar>
                <InnerVar>JScrollPane [scroll=new JScrollPane(ta,ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>parent;add;[createLabel("Output"), "wrap, spanx 3"]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setFont;[UIManager.getFont("TextField.font")]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setWrapStyleWord;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setLineWrap;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[scroll, "wrap, span 3"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createCharacterPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>JPanel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;String,Character&gt; [characterMap=(Map&lt;String,Character&gt;)gameEngine.getData().get("characters")]</InnerVar>
                <InnerVar>Character[] [characters=characterMap.values().toArray(new Character[characterMap.size()])]</InnerVar>
                <InnerVar>JTable [characterPropertiesTable=new JTable()]</InnerVar>
                <InnerVar>JScrollPane [characterPropertiesPanel=new JScrollPane(characterPropertiesTable)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>parent;add;[createLabel("Character"), "wrap, spanx 3"]</InnerMethodInvoke>
                <InnerMethodInvoke>characterSelectCombo;setModel;[new DefaultComboBoxModel(new Object[]{null,null})]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[characterSelectCombo, "top, left"]</InnerMethodInvoke>
                <InnerMethodInvoke>characterSelectCombo;setModel;[new DefaultComboBoxModel(characters)]</InnerMethodInvoke>
                <InnerMethodInvoke>characterSelectCombo;setSelectedItem;[characterMap.get("hero")]</InnerMethodInvoke>
                <InnerMethodInvoke>characterSelectCombo;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    Character c=(Character)characterSelectCombo.getSelectedObjects()[0];
    org.kie.api.runtime.rule.FactHandle fh=gameEngine.getKieSession().getFactHandle(session);
    session.setCharacter(c);
    gameEngine.getKieSession().update(fh,session);
    cmd=new ArrayList();
    cmd.add(LookCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
    gameEngine.receiveMessage(session,cmd);
    cmd=null;
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>characterPropertiesTable;setPreferredScrollableViewportSize;[new Dimension(240,200)]</InnerMethodInvoke>
                <InnerMethodInvoke>characterPropertiesTable;setBorder;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>characterPropertiesTable;setModel;[new NonEditableTableMode(new Object[][]{{"strength","100"},{"health","100"},{"coiins","100"},{"speed","100"},{"mana","100"}},new String[]{"property","value"})]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[characterPropertiesPanel, "top, left, wrap, spanx 2"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Character [c=(Character)characterSelectCombo.getSelectedObjects()[0]]</InnerVar>
                <InnerVar>org.kie.api.runtime.rule.FactHandle [fh=gameEngine.getKieSession().getFactHandle(session)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>session;setCharacter;[c]</InnerMethodInvoke>
                <InnerMethodInvoke>gameEngine.getKieSession();update;[fh, session]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[LookCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
                <InnerMethodInvoke>gameEngine;receiveMessage;[session, cmd]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createBuildActionsPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>JPanel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JPanel [actionsPanel=new JPanel()]</InnerVar>
                <InnerVar>JButton [moveBtn=new JButton("Move")]</InnerVar>
                <InnerVar>JButton [pickupBtn=new JButton("Pick Up")]</InnerVar>
                <InnerVar>JButton [dropBtn=new JButton("Drop")]</InnerVar>
                <InnerVar>JButton [giveBtn=new JButton("Give")]</InnerVar>
                <InnerVar>JButton [useBtn=new JButton("Use")]</InnerVar>
                <InnerVar>JButton [lookBtn=new JButton("Look")]</InnerVar>
                <InnerVar>JButton [searchBtn=new JButton("Search")]</InnerVar>
                <InnerVar>JScrollPane [itemsPanel=new JScrollPane(thingsTable)]</InnerVar>
                <InnerVar>JScrollPane [exitsPanel=new JScrollPane(exitsTable)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>parent;add;[createLabel("Actions"), "wrap, spanx 3"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;setBorder;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;setLayout;[new BoxLayout(actionsPanel,BoxLayout.Y_AXIS)]</InnerMethodInvoke>
                <InnerMethodInvoke>moveBtn;setToolTipText;["Select one Room from the Exits, then press Send"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[moveBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>moveBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Move ");
    cmd=new ArrayList();
    cmd.add(MoveCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>pickupBtn;setToolTipText;["Select one from the Items list, then press Send"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[pickupBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>pickupBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Pickup ");
    cmd=new ArrayList();
    cmd.add(PickupCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>dropBtn;setToolTipText;["Select one from the Inventory, then press Send"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[dropBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>dropBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Drop ");
    cmd=new ArrayList();
    cmd.add(DropCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>giveBtn;setToolTipText;["Select one from the Inventory, then Select the target Character, then press Send"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[giveBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>giveBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Give ");
    cmd=new ArrayList();
    cmd.add(GiveCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>useBtn;setToolTipText;["Select one from the Inventory, then Select the target Thing or Room"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[useBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>useBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Use ");
    cmd=new ArrayList();
    cmd.add(UseCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>giveBtn;setToolTipText;["Just press Send"]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[lookBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>lookBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Look ");
    cmd=new ArrayList();
    cmd.add(LookCommand.class);
    cmd.add(characterSelectCombo.getSelectedObjects()[0]);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>giveBtn;setToolTipText;["Select the item to search, then press send."]</InnerMethodInvoke>
                <InnerMethodInvoke>actionsPanel;add;[searchBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>searchBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    cmdTextField.setText("Search ");
    cmd=new ArrayList();
    cmd.add(SearchCommand.class);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[actionsPanel, "top, left"]</InnerMethodInvoke>
                <InnerMethodInvoke>thingsTable;setPreferredScrollableViewportSize;[new Dimension(245,250)]</InnerMethodInvoke>
                <InnerMethodInvoke>thingsTable;setBorder;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>thingsTable;setModel;[new NonEditableTableMode(new Object[][]{},new String[]{"Things"})]</InnerMethodInvoke>
                <InnerMethodInvoke>thingsTable;addMouseListener;[new MouseListener(){
  public void mouseReleased(  MouseEvent e){
  }
  public void mousePressed(  MouseEvent e){
  }
  public void mouseExited(  MouseEvent e){
  }
  public void mouseEntered(  MouseEvent e){
  }
  public void mouseClicked(  MouseEvent e){
    if (cmd == null) {
      return;
    }
    int row=thingsTable.rowAtPoint(e.getPoint());
    int col=thingsTable.columnAtPoint(e.getPoint());
    Thing t=(Thing)thingsTable.getModel().getValueAt(row,col);
    cmdTextField.setText(cmdTextField.getText() + t.getName() + " ");
    cmd.add(t);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[itemsPanel, "top, left"]</InnerMethodInvoke>
                <InnerMethodInvoke>exitsTable;setPreferredScrollableViewportSize;[new Dimension(245,250)]</InnerMethodInvoke>
                <InnerMethodInvoke>exitsTable;setBorder;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>exitsTable;setModel;[new NonEditableTableMode(new Object[][]{},new String[]{"Exits"})]</InnerMethodInvoke>
                <InnerMethodInvoke>exitsTable;addMouseListener;[new MouseListener(){
  public void mouseReleased(  MouseEvent e){
  }
  public void mousePressed(  MouseEvent e){
  }
  public void mouseExited(  MouseEvent e){
  }
  public void mouseEntered(  MouseEvent e){
  }
  public void mouseClicked(  MouseEvent e){
    if (cmd == null) {
      return;
    }
    int row=exitsTable.rowAtPoint(e.getPoint());
    int col=exitsTable.columnAtPoint(e.getPoint());
    Room r=(Room)exitsTable.getModel().getValueAt(row,col);
    cmdTextField.setText(cmdTextField.getText() + r.getName() + " ");
    cmd.add(r);
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[exitsPanel, "top, left, wrap"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Move "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[MoveCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Pickup "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[PickupCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Drop "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[DropCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Give "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[GiveCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Use "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[UseCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Look "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[LookCommand.class]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[characterSelectCombo.getSelectedObjects()[0]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;["Search "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[SearchCommand.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseReleased</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mousePressed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseExited</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseEntered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseClicked</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [row=thingsTable.rowAtPoint(e.getPoint())]</InnerVar>
                <InnerVar>int [col=thingsTable.columnAtPoint(e.getPoint())]</InnerVar>
                <InnerVar>Thing [t=(Thing)thingsTable.getModel().getValueAt(row,col)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;[cmdTextField.getText() + t.getName() + " "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[t]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseReleased</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mousePressed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseExited</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseEntered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseClicked</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [row=exitsTable.rowAtPoint(e.getPoint())]</InnerVar>
                <InnerVar>int [col=exitsTable.columnAtPoint(e.getPoint())]</InnerVar>
                <InnerVar>Room [r=(Room)exitsTable.getModel().getValueAt(row,col)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;[cmdTextField.getText() + r.getName() + " "]</InnerMethodInvoke>
                <InnerMethodInvoke>cmd;add;[r]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createSendCommandPanel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>JPanel</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JToggleButton [sendBtn=new JToggleButton("send")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cmdTextField;setText;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[cmdTextField, "growx, spanx 3, wrap"]</InnerMethodInvoke>
                <InnerMethodInvoke>parent;add;[sendBtn]</InnerMethodInvoke>
                <InnerMethodInvoke>sendBtn;addActionListener;[new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    gameEngine.receiveMessage(session,cmd);
    cmd=null;
    cmdTextField.setText("");
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>gameEngine;receiveMessage;[session, cmd]</InnerMethodInvoke>
                <InnerMethodInvoke>cmdTextField;setText;[""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createLabel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JLabel</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createLabel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JLabel</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>align</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JLabel [b=new JLabel(text,align)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTextAreaScroll</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JScrollPane</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rows</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cols</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hasVerScroll</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hasHorScroll</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JTextArea [ta=new JTextArea(text,rows,cols)]</InnerVar>
                <InnerVar>JScrollPane [scroll=new JScrollPane(ta,hasVerScroll ? ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED : ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER,hasHorScroll ? ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED : ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ta;setFont;[UIManager.getFont("TextField.font")]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setWrapStyleWord;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>ta;setLineWrap;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mousePressed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseReleased</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>react</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JComponent [c=(JComponent)e.getSource()]</InnerVar>
                <InnerVar>LayoutManager [lm=c.getParent().getLayout()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mouseMoved</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MouseEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JComponent [c=(JComponent)e.getSource()]</InnerVar>
                <InnerVar>LayoutManager [lm=c.getParent().getLayout()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ConstraintsDialog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>owner</ParamName>
                    <ParamType>Frame</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>layoutConstr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowsConstr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsConstr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compConstr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mainPanel;add;[okButt, "tag ok,split,flowx,gaptop 15"]</InnerMethodInvoke>
                <InnerMethodInvoke>mainPanel;add;[cancelButt, "tag cancel,gaptop 15"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setContentPane;[mainPanel]</InnerMethodInvoke>
                <InnerMethodInvoke>okButt;addActionListener;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>cancelButt;addActionListener;[this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addNotify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>KeyboardFocusManager.getCurrentKeyboardFocusManager();addKeyEventDispatcher;[this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeNotify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>KeyboardFocusManager.getCurrentKeyboardFocusManager();removeKeyEventDispatcher;[this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dispatchKeyEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>KeyEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;dispose;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createConstraintField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JTextField</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JTextField [tf=new JTextField(text,50)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tf;setFont;[new Font("monospaced",Font.PLAIN,12)]</InnerMethodInvoke>
                <InnerMethodInvoke>tf;addKeyListener;[new KeyAdapter(){
  public void keyPressed(  KeyEvent e){
    if (e.getKeyCode() == KeyEvent.VK_ENTER) {
      okButt.doClick();
      return;
    }
    javax.swing.Timer timer=new Timer(50,new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        String constr=tf.getText();
        try {
          if (tf == layoutConstrTF) {
            ConstraintParser.parseLayoutConstraint(constr);
          }
 else           if (tf == rowsConstrTF) {
            ConstraintParser.parseRowConstraints(constr);
          }
 else           if (tf == colsConstrTF) {
            ConstraintParser.parseColumnConstraints(constr);
          }
 else           if (tf == componentConstrTF) {
            ConstraintParser.parseComponentConstraint(constr);
          }
          tf.setBackground(Color.WHITE);
          okButt.setEnabled(true);
        }
 catch (        Exception ex) {
          tf.setBackground(ERROR_COLOR);
          okButt.setEnabled(false);
        }
      }
    }
);
    timer.setRepeats(false);
    timer.start();
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>keyPressed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>KeyEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>javax.swing.Timer [timer=new Timer(50,new ActionListener(){
  public void actionPerformed(  ActionEvent e){
    String constr=tf.getText();
    try {
      if (tf == layoutConstrTF) {
        ConstraintParser.parseLayoutConstraint(constr);
      }
 else       if (tf == rowsConstrTF) {
        ConstraintParser.parseRowConstraints(constr);
      }
 else       if (tf == colsConstrTF) {
        ConstraintParser.parseColumnConstraints(constr);
      }
 else       if (tf == componentConstrTF) {
        ConstraintParser.parseComponentConstraint(constr);
      }
      tf.setBackground(Color.WHITE);
      okButt.setEnabled(true);
    }
 catch (    Exception ex) {
      tf.setBackground(ERROR_COLOR);
      okButt.setEnabled(false);
    }
  }
}
)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>timer;setRepeats;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>timer;start;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [constr=tf.getText()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>showDialog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setVisible;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleRequestGive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JOptionPane [pane=new JOptionPane("xxx msg")]</InnerVar>
                <InnerVar>JInternalFrame [internalFrame=pane.createInternalFrame(contentPane,"xxx title")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pane;setWantsInput;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>pane;setInputValue;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>pane;setOptions;[new String[]{"Yes","No"}]</InnerMethodInvoke>
                <InnerMethodInvoke>internalFrame;setVisible;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>pane;show;[]</InnerMethodInvoke>
                <InnerMethodInvoke>internalFrame;addInternalFrameListener;[new InternalFrameListener(){
  public void internalFrameOpened(  InternalFrameEvent e){
  }
  public void internalFrameIconified(  InternalFrameEvent e){
  }
  public void internalFrameDeiconified(  InternalFrameEvent e){
  }
  public void internalFrameDeactivated(  InternalFrameEvent e){
  }
  public void internalFrameClosing(  InternalFrameEvent e){
  }
  public void internalFrameClosed(  InternalFrameEvent e){
    System.out.println(pane.getInputValue() + ":" + pane.getValue());
  }
  public void internalFrameActivated(  InternalFrameEvent e){
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameOpened</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameIconified</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameDeiconified</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameDeactivated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameClosing</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameClosed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;[pane.getInputValue() + ":" + pane.getValue()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>internalFrameActivated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>InternalFrameEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JTextAreaChannel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>textArea</ParamName>
                    <ParamType>JTextArea</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>send</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JScrollPane [scrollPane=(JScrollPane)((JViewport)textArea.getParent()).getParent()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>textArea;append;[object.toString() + "\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JTableChannel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jTable</ParamName>
                    <ParamType>JTable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=jTable.getColumnName(0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jTable.getColumn(name);setCellRenderer;[new DefaultTableCellRenderer(){
  public void setValue(  Object value){
    if (value == null) {
      return;
    }
 else     if (value instanceof Thing) {
      setText(((Thing)value).getName());
    }
 else {
      setText(value.toString());
    }
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>send</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Thing&gt; [things=(List&lt;Thing&gt;)object]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addRows;[things]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addRows</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>list</ParamName>
                    <ParamType>List</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DefaultTableModel [model=(DefaultTableModel)jTable.getModel()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonEditableTableMode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonEditableTableMode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonEditableTableMode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>columnNames</ParamName>
                    <ParamType>Vector</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonEditableTableMode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>columnNames</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonEditableTableMode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>Vector</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnNames</ParamName>
                    <ParamType>Vector</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NonEditableTableMode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>Object[][]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnNames</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isCellEditable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>