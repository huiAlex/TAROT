<Class>
    <Id>3127</Id>
    <Package>org.drools.core.reteoo.compiled</Package>
    <ClassName>AssertHandler</ClassName>
    <SuperClass>AbstractCompilerHandler</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AssertHandler  /** 
 * todo: document
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOCAL_FACT_VAR_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FACT_HANDLE_PARAM_TYPE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PROP_CONTEXT_PARAM_TYPE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>WORKING_MEMORY_PARAM_TYPE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FACT_HANDLE_PARAM_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PROP_CONTEXT_PARAM_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>WORKING_MEMORY_PARAM_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ASSERT_METHOD_SIGNATURE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>alphaNetContainsHashedField</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>builder</FieldName>
            <FieldType>StringBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>factClassName</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>AssertHandler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>factClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AssertHandler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>factClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>alphaNetContainsHashedField</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startObjectTypeNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectTypeNode</ParamName>
                    <ParamType>ObjectTypeNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append(ASSERT_METHOD_SIGNATURE);append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startBetaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>betaNode</ParamName>
                    <ParamType>BetaNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append(getVariableName(betaNode)).append(".assertObject(").append(FACT_HANDLE_PARAM_NAME).append(",").append(PROP_CONTEXT_PARAM_NAME).append(",").append(WORKING_MEMORY_PARAM_NAME).append(");");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startLeftInputAdapterNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>leftInputAdapterNode</ParamName>
                    <ParamType>LeftInputAdapterNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append(getVariableName(leftInputAdapterNode)).append(".assertObject(").append(FACT_HANDLE_PARAM_NAME).append(",").append(PROP_CONTEXT_PARAM_NAME).append(",").append(WORKING_MEMORY_PARAM_NAME).append(");");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startNonHashedAlphaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alphaNode</ParamName>
                    <ParamType>AlphaNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("if ( ").append(getVariableName(alphaNode)).append(".isAllowed(").append(FACT_HANDLE_PARAM_NAME).append(",").append(WORKING_MEMORY_PARAM_NAME).append(", ").append(getContextVariableName(alphaNode)).append(") ) {");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endNonHashedAlphaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alphaNode</ParamName>
                    <ParamType>AlphaNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("}");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startHashedAlphaNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hashedFieldReader</ParamName>
                    <ParamType>ClassFieldReader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [attributeName=hashedFieldReader.getFieldName()]</InnerVar>
                <InnerVar>String [localVariableName=attributeName + "NodeId"]</InnerVar>
                <InnerVar>String [attributeGetterName="get" + Character.toTitleCase(attributeName.charAt(0)) + attributeName.substring(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("Integer ");append;[localVariableName]</InnerMethodInvoke>
                <InnerMethodInvoke>builder.append(" = (Integer)").append(getVariableName(hashedFieldReader)).append(".get(").append(LOCAL_FACT_VAR_NAME).append(".").append(attributeGetterName).append("());");append;[NEWLINE]</InnerMethodInvoke>
                <InnerMethodInvoke>builder.append("if(").append(localVariableName).append(" != null) {");append;[NEWLINE]</InnerMethodInvoke>
                <InnerMethodInvoke>builder.append("switch(").append(localVariableName).append(".intValue()) {");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startHashedAlphaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hashedAlpha</ParamName>
                    <ParamType>AlphaNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hashedValue</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("case ").append(hashedAlpha.getId()).append(" : ");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endHashedAlphaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hashedAlpha</ParamName>
                    <ParamType>AlphaNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hashedValue</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("break;");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endHashedAlphaNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hashedFieldReader</ParamName>
                    <ParamType>ClassFieldReader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("}");append;[NEWLINE]</InnerMethodInvoke>
                <InnerMethodInvoke>builder.append("}");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endObjectTypeNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectTypeNode</ParamName>
                    <ParamType>ObjectTypeNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>builder.append("}");append;[NEWLINE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>