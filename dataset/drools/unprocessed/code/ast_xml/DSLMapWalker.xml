<Class>
    <Id>1940</Id>
    <Package>org.drools.compiler.lang.dsl</Package>
    <ClassName>DSLMapWalker</ClassName>
    <SuperClass>TreeParser</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>tokenNames</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>EOF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COLON</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COMMA</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DOT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EOL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EQUALS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EscapeSequence</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IdentifierPart</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT_CURLY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT_SQUARE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LITERAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MISC</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RIGHT_CURLY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RIGHT_SQUARE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_ANY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_CONDITION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_CONSEQUENCE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_DSL_GRAMMAR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_ENTRY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_ENTRY_KEY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_ENTRY_VAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_KEYWORD</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_LITERAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_META</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_PATTERN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_QUAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_SCOPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_SPACE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_VAR_DEF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VT_VAR_REF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>WS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>retval</FieldName>
            <FieldType>DSLMapping</FieldType>
        </Field>
        <Field>
            <FieldName>mapping_file_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>mapping_file_stack</FieldName>
            <FieldType>mapping_file_scope</FieldType>
        </Field>
        <Field>
            <FieldName>variables</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>variables</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>retval</FieldName>
            <FieldType>AntlrDSLMappingEntry</FieldType>
        </Field>
        <Field>
            <FieldName>keybuffer</FieldName>
            <FieldType>StringBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>valuebuffer</FieldName>
            <FieldType>StringBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>sentenceKeyBuffer</FieldName>
            <FieldType>StringBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>sentenceValueBuffer</FieldName>
            <FieldType>StringBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>entry_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>entry_stack</FieldName>
            <FieldType>entry_scope</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_DSL_GRAMMAR_in_mapping_file63</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_valid_entry_in_mapping_file65</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_entry_in_valid_entry96</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_ENTRY_in_entry130</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_scope_section_in_entry132</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_meta_section_in_entry134</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_key_section_in_entry137</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_value_section_in_entry161</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_SCOPE_in_scope_section191</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_condition_key_in_scope_section193</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_consequence_key_in_scope_section196</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_keyword_key_in_scope_section199</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_any_key_in_scope_section202</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_META_in_meta_section224</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LITERAL_in_meta_section228</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_ENTRY_KEY_in_key_section254</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_key_sentence_in_key_section256</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_variable_definition_in_key_sentence277</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_LITERAL_in_key_sentence287</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_SPACE_in_key_sentence301</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_ENTRY_VAL_in_value_section329</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_value_sentence_in_value_section331</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_variable_reference_in_value_sentence353</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_LITERAL_in_value_sentence363</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_SPACE_in_value_sentence377</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_LITERAL_in_literal403</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_VAR_DEF_in_variable_definition423</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LITERAL_in_variable_definition427</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_QUAL_in_variable_definition430</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LITERAL_in_variable_definition434</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_PATTERN_in_variable_definition440</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_VAR_REF_in_variable_reference471</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LITERAL_in_variable_reference475</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_CONDITION_in_condition_key500</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_CONSEQUENCE_in_consequence_key524</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_KEYWORD_in_keyword_key548</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_VT_ANY_in_any_key572</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDelegates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TreeParser[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DSLMapWalker</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>TreeNodeStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DSLMapWalker</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>TreeNodeStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>state</ParamName>
                    <ParamType>RecognizerSharedState</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTokenNames</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGrammarFileName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mapping_file</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DSLMapping</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DSLMapping [mapping=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mapping_file_stack;push;[new mapping_file_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>valid_entry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DSLMappingEntry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DSLMappingEntry [mappingEntry=null]</InnerVar>
                <InnerVar>DSLMappingEntry [ent=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>entry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DSLMappingEntry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DSLMappingEntry [mappingEntry=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>entry_stack;push;[new entry_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scope_section</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [thescope=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>meta_section</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [metalit=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>key_section</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>key_sentence</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [vtl=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>value_section</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>value_sentence</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [vtl=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>literal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [theliteral=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>variable_definition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [varname=null]</InnerVar>
                <InnerVar>CommonTree [q=null]</InnerVar>
                <InnerVar>CommonTree [pattern=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>variable_reference</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CommonTree [varref=null]</InnerVar>
                <InnerVar>CommonTree [lit=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>condition_key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>consequence_key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>keyword_key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>any_key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>