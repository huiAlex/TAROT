<Class>
    <Id>2981</Id>
    <Package>org.drools.core.reteoo</Package>
    <ClassName>Rete</ClassName>
    <SuperClass>ObjectSource</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Externalizable</SuperInterface>
        <SuperInterface>ObjectSink</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Rete  /** 
 * The Rete-OO network. The Rete class is the root &lt;code&gt;Object&lt;/code&gt;. All objects are asserted into the Rete node where it propagates to all matching ObjectTypeNodes. The first time an  instance of a Class type is asserted it does a full iteration of all ObjectTyppeNodes looking for matches, any matches are then cached in a HashMap which is used for future assertions. While Rete  extends ObjectSource nad implements ObjectSink it nulls the methods attach(), remove() and  updateNewNode() as this is the root node they are no applicable
 * @see ObjectTypeNode
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>entryPoints</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>entryPoints</FieldName>
            <FieldType>EntryPointId</FieldType>
        </Field>
        <Field>
            <FieldName>kBase</FieldName>
            <FieldType>InternalKnowledgeBase</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Rete</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Rete</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kBase</ParamName>
                    <ParamType>InternalKnowledgeBase</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>short</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertObject</MethodName>
            <MethodComment>/** 
 * This is the entry point into the network for all asserted Facts. Iterates a cache of matching &lt;code&gt;ObjectTypdeNode&lt;/code&gt;s asserting the Fact. If the cache does not exist it first iteraes and builds the cache.
 * @param factHandle The FactHandle of the fact to assert
 * @param context The &lt;code&gt;PropagationContext&lt;/code&gt; of the &lt;code&gt;WorkingMemory&lt;/code&gt; action
 * @param workingMemory The working memory session.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factHandle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EntryPointId [entryPoint=context.getEntryPoint()]</InnerVar>
                <InnerVar>EntryPointNode [node=this.entryPoints.get(entryPoint)]</InnerVar>
                <InnerVar>ObjectTypeConf [typeConf=((WorkingMemoryEntryPoint)workingMemory.getWorkingMemoryEntryPoint(entryPoint.getEntryPointId())).getObjectTypeConfigurationRegistry().getObjectTypeConf(entryPoint,factHandle.getObject())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>node;assertObject;[factHandle, context, typeConf, workingMemory]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>retractObject</MethodName>
            <MethodComment>/** 
 * Retract a fact object from this &lt;code&gt;RuleBase&lt;/code&gt; and the specified &lt;code&gt;WorkingMemory&lt;/code&gt;.
 * @param handle The handle of the fact to retract.
 * @param workingMemory The working memory session.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EntryPointId [entryPoint=context.getEntryPoint()]</InnerVar>
                <InnerVar>EntryPointNode [node=this.entryPoints.get(entryPoint)]</InnerVar>
                <InnerVar>ObjectTypeConf [typeConf=((WorkingMemoryEntryPoint)workingMemory.getWorkingMemoryEntryPoint(entryPoint.getEntryPointId())).getObjectTypeConfigurationRegistry().getObjectTypeConf(entryPoint,handle.getObject())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>node;retractObject;[handle, context, typeConf, workingMemory]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>modifyObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factHandle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>modifyPreviousTuples</ParamName>
                    <ParamType>ModifyPreviousTuples</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addObjectSink</MethodName>
            <MethodComment>/** 
 * Adds the &lt;code&gt;ObjectSink&lt;/code&gt; so that it may receive &lt;code&gt;Objects&lt;/code&gt; propagated from this &lt;code&gt;ObjectSource&lt;/code&gt;.
 * @param objectSink The &lt;code&gt;ObjectSink&lt;/code&gt; to receive propagated &lt;code&gt;Objects&lt;/code&gt;. Rete only accepts &lt;code&gt;ObjectTypeNode&lt;/code&gt;s as parameters to this method, though.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectSink</ParamName>
                    <ParamType>ObjectSink</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EntryPointNode [node=(EntryPointNode)objectSink]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>entryPoints;put;[node.getEntryPoint(), node]</InnerMethodInvoke>
                <InnerMethodInvoke>kBase;registerAddedEntryNodeCache;[node]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeObjectSink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectSink</ParamName>
                    <ParamType>ObjectSink</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EntryPointNode [node=(EntryPointNode)objectSink]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>entryPoints;remove;[node.getEntryPoint()]</InnerMethodInvoke>
                <InnerMethodInvoke>kBase;registeRremovedEntryNodeCache;[node]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>attach</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>networkUpdated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>updateContext</ParamName>
                    <ParamType>UpdateContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doRemove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleRemovalContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>ReteooBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemories</ParamName>
                    <ParamType>InternalWorkingMemory[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEntryPointNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EntryPointNode</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entryPoint</ParamName>
                    <ParamType>EntryPointId</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectTypeNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ObjectTypeNode</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;ObjectTypeNode&gt; [allNodes=new LinkedList&lt;ObjectTypeNode&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectTypeNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ObjectType</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>entryPoint</ParamName>
                    <ParamType>EntryPointId</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKnowledgeBase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalKnowledgeBase</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>calculateHashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateSink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>ObjectSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeExternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;writeObject;[entryPoints]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readExternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEntryPointNodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EntryPointId</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>byPassModifyToBetaNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factHandle</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>modifyPreviousTuples</ParamName>
                    <ParamType>ModifyPreviousTuples</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>calculateDeclaredMask</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BitMask</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>modifiedClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>settableProperties</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>