<Class>
    <Id>1922</Id>
    <Package>org.drools.testcoverage.kieci.withoutdomain.util</Package>
    <ClassName>KJarLoadUtils</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>KJarLoadUtils  /** 
 * Common utilities for loading KJar used in tests.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>KS</FieldName>
            <FieldType>KieServices</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>KJarLoadUtils</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadKJarGAV</MethodName>
            <MethodComment>/** 
 * Returns ReleaseId (GAV) of the kjar specified in given resource as properties 'groupId', 'artifactId', and 'version'. Some GAV components (typically 'version') are filtered by Maven, so it is useful to store them in resource files.
 * @param resourceName the name of the resource containing GAV as a Java properties file
 * @param loaderClass Class whose ClassLoader will be used for loading the properties file
 * @return ReleaseId representing GAV of the KJAR
 */
</MethodComment>
            <ReturnType>ReleaseId</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resourceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loaderClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [props=new Properties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>