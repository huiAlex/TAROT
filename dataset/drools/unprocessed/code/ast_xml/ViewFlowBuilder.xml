<Class>
    <Id>432</Id>
    <Package>org.drools.model.impl</Package>
    <ClassName>ViewFlowBuilder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ViewBuilder</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>ConditionComparator</FieldType>
        </Field>
        <Field>
            <FieldName>ruleItems</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>ruleItems</FieldName>
            <FieldType>RuleItem</FieldType>
        </Field>
        <Field>
            <FieldName>inputs</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>inputs</FieldName>
            <FieldType>Variable&lt;?&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>usedVars</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>usedVars</FieldName>
            <FieldType>Variable&lt;?&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>boundVars</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>boundVars</FieldName>
            <FieldType>Variable&lt;?&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>bindings</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>bindings</FieldName>
            <FieldType>Variable&lt;?&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ViewFlowBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompositePatterns</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewItemBuilders</ParamName>
                    <ParamType>RuleItemBuilder&lt;?&gt;[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BuildContext [ctx=new BuildContext(viewItemBuilders)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ensureVariablesDeclarationInView</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompositePatterns</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>view</ParamName>
                    <ParamType>CompositePatterns</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [i=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ctx.inputs.keySet();removeAll;[ctx.usedVars]</InnerMethodInvoke>
                <InnerMethodInvoke>view;ensureVariablesDeclarationInView;[]</InnerMethodInvoke>
                <InnerMethodInvoke>view.getSubConditions();sort;[ConditionComparator.INSTANCE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>viewItems2Condition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompositePatterns</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>Condition.Type</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topLevel</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Condition&gt; [conditions=new ArrayList&lt;&gt;()]</InnerVar>
                <InnerVar>Map&lt;Variable&lt;?&gt;,Condition&gt; [conditionMap=new HashMap&lt;&gt;()]</InnerVar>
                <InnerVar>Map&lt;String,Consequence&gt; [consequences=topLevel ? new LinkedHashMap&lt;&gt;() : null]</InnerVar>
                <InnerVar>Iterator&lt;RuleItem&gt; [ruleItemIterator=ctx.ruleItems.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerInputsFromViewItem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewItem</ParamName>
                    <ParamType>ViewItem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conditionMap</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scopedInputs</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>existentialVar</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findPatterVariable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewItem</ParamName>
                    <ParamType>ViewItem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>vars</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Variable&lt;?&gt; [patternVariable=viewItem.getFirstVariable()]</InnerVar>
                <InnerVar>Variable&lt;?&gt;[] [itemVars=viewItem.getVariables()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addInputFromVariableSource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inputs</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>patterVariable</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createConditionalNamedConsequence</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConditionalNamedConsequenceImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>consequences</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cond</ParamName>
                    <ParamType>ConditionalConsequence</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createConstraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SingleConstraint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>ExprViewItem</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createNamedConsequence</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NamedConsequenceImpl</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>consequences</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>consequence</ParamName>
                    <ParamType>Consequence</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=generateName("consequence")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>consequences;put;[name, consequence]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>viewItem2Condition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Condition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewItem</ParamName>
                    <ParamType>ViewItem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>condition</ParamName>
                    <ParamType>Condition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c1</ParamName>
                    <ParamType>Condition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c2</ParamName>
                    <ParamType>Condition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSourceVariable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Variable</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pattern</ParamName>
                    <ParamType>Pattern</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Variable [source=pattern.getPatternVariable()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewItemBuilders</ParamName>
                    <ParamType>RuleItemBuilder&lt;?&gt;[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>orignalContext</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>view</ParamName>
                    <ParamType>ViewItem[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>orignalContext</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputs</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>orignalContext</ParamName>
                    <ParamType>BuildContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>view</ParamName>
                    <ParamType>ViewItem[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputs</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ruleItems</ParamName>
                    <ParamType>RuleItem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputs</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>usedVars</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>boundVars</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bindings</ParamName>
                    <ParamType>Variable&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addBinding</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bindViewItem</ParamName>
                    <ParamType>Binding</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>boundVars;add;[bindViewItem.getBoundVariable()]</InnerMethodInvoke>
                <InnerMethodInvoke>bindings.computeIfAbsent(bindViewItem.getInputVariable(),v -&gt; new ArrayList&lt;&gt;());add;[bindViewItem]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>