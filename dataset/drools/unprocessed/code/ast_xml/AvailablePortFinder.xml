<Class>
    <Id>2844</Id>
    <Package>org.kie.test.util.network</Package>
    <ClassName>AvailablePortFinder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AvailablePortFinder  /** 
 * Finds currently available server ports.
 * @author &lt;a href="mailto:dev@directory.apache.org"&gt;Apache Directory Project&lt;/a&gt;
 * @see &lt;a href="http://www.iana.org/assignments/port-numbers"&gt;IANA.org&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>MIN_PORT_NUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_PORT_NUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>AvailablePortFinder</MethodName>
            <MethodComment>/** 
 * Creates a new instance.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAvailablePorts</MethodName>
            <MethodComment>/** 
 * Returns the  {@link Set} of currently available port numbers( {@link Integer}). This method is identical to &lt;code&gt;getAvailablePorts(MIN_PORT_NUMBER, MAX_PORT_NUMBER)&lt;/code&gt;. WARNING: this can take a very long time.
 */
</MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextAvailable</MethodName>
            <MethodComment>/** 
 * Gets the next available port starting at the lowest port number.
 * @throws NoSuchElementException if there are no ports available
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextAvailable</MethodName>
            <MethodComment>/** 
 * Gets the next available port starting at a port.
 * @param fromPort the port to scan for availability
 * @throws NoSuchElementException if there are no ports available
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fromPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>available</MethodName>
            <MethodComment>/** 
 * Checks to see if a specific port is available.
 * @param port the port to check for availability
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>port</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ServerSocket [ss=null]</InnerVar>
                <InnerVar>DatagramSocket [ds=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAvailablePorts</MethodName>
            <MethodComment>/** 
 * Returns the  {@link Set} of currently avaliable port numbers ({@link Integer}) between the specified port range.
 * @throws IllegalArgumentException if port range is not between {@link #MIN_PORT_NUMBER} and {@link #MAX_PORT_NUMBER} or&lt;code&gt;fromPort&lt;/code&gt; if greater than &lt;code&gt;toPort&lt;/code&gt;.
 */
</MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fromPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>toPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;Integer&gt; [result=new TreeSet&lt;Integer&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>