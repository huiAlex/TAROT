<Class>
    <Id>2885</Id>
    <Package>org.drools.core.rule</Package>
    <ClassName>Behavior</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RuleComponent</SuperInterface>
        <SuperInterface>Cloneable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Behavior  /** 
 * An interface for all behavior implementations
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getFactHandles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EventFactHandle</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BehaviorType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>matches</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getType</MethodName>
            <MethodComment>/** 
 * Returns the type of the behavior
 */
</MethodComment>
            <ReturnType>BehaviorType</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createContext</MethodName>
            <MethodComment>/** 
 * Creates the context object associated with this behavior. The object is given as a parameter in all behavior call backs.
 */
</MethodComment>
            <ReturnType>Context</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertFact</MethodName>
            <MethodComment>/** 
 * Makes the behavior aware of the new fact entering behavior's scope
 * @param context The behavior context object
 * @param fact The new fact entering behavior's scope
 * @param workingMemory The working memory session reference
 * @return true if the propagation should continue, false otherwise. I.e., the behaviour has veto power over the fact propagation, and prevents the propagation to continue if returns false on this method. 
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fact</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctx</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>retractFact</MethodName>
            <MethodComment>/** 
 * Removes a right tuple from the behavior's scope
 * @param context The behavior context object
 * @param fact The fact leaving the behavior's scope
 * @param workingMemory The working memory session reference
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fact</ParamName>
                    <ParamType>InternalFactHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctx</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>expireFacts</MethodName>
            <MethodComment>/** 
 * A callback method that allows behaviors to expire facts
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pctx</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingMemory</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExpirationOffset</MethodName>
            <MethodComment>/** 
 * Some behaviors might change the expiration offset for the  associated fact type. Example: time sliding windows.  For these behaviors, this method must return the expiration offset associated to them.
 * @return the expiration offset for this behavior or -1 if they don't have a time based expiration offset.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>