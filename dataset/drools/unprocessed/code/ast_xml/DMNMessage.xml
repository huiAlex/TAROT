<Class>
    <Id>690</Id>
    <Package>org.kie.dmn.api.core</Package>
    <ClassName>DMNMessage</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DMNMessage  /** 
 * A general message interface for all DMN related messages raised during compilation and execution.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getSeverity</MethodName>
            <MethodComment>/** 
 * Returns the severity of the message. Either TRACE, INFO, WARN or ERROR
 * @return
 */
</MethodComment>
            <ReturnType>Severity</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMessage</MethodName>
            <MethodComment>/** 
 * Returns a human readable text with the explanation of the event that raised the message.
 * @return
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMessageType</MethodName>
            <MethodComment>/** 
 * Returns a classification of the event that raised the message.
 * @return
 */
</MethodComment>
            <ReturnType>DMNMessageType</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSourceId</MethodName>
            <MethodComment>/** 
 * Returns the ID of the model element to which this message relates to or null if this message does not refer to a specific model element.
 * @return
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSourceReference</MethodName>
            <MethodComment>/** 
 * Returns the actual model element reference to which this message relates to or null if this message does not refer to a specific model element.
 * @return
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFeelEvent</MethodName>
            <MethodComment>/** 
 * If this message relates to a FEEL compilation or runtime event, this method returns the reference to the actual FEEL event.
 * @return
 */
</MethodComment>
            <ReturnType>FEELEvent</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getException</MethodName>
            <MethodComment>/** 
 * If this message relates to a java exception, this method returns a reference to the actual Throwable object.
 * @return
 */
</MethodComment>
            <ReturnType>Throwable</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>