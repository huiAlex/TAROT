<Class>
    <Id>2728</Id>
    <Package>org.drools.core.phreak</Package>
    <ClassName>StackEntry</ClassName>
    <SuperClass>AbstractBaseLinkedListNode</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StackEntry  /** 
 * Created with IntelliJ IDEA. User: mdproctor Date: 03/05/2013 Time: 15:47 To change this template use File | Settings | File Templates.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>bit</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>node</FieldName>
            <FieldType>NetworkNode</FieldType>
        </Field>
        <Field>
            <FieldName>sink</FieldName>
            <FieldType>LeftTupleSinkNode</FieldType>
        </Field>
        <Field>
            <FieldName>pmem</FieldName>
            <FieldType>PathMemory</FieldType>
        </Field>
        <Field>
            <FieldName>nodeMem</FieldName>
            <FieldType>Memory</FieldType>
        </Field>
        <Field>
            <FieldName>smems</FieldName>
            <FieldType>SegmentMemory[]</FieldType>
        </Field>
        <Field>
            <FieldName>smemIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>trgTuples</FieldName>
            <FieldType>TupleSets</FieldType>
        </Field>
        <Field>
            <FieldName>trgTuples</FieldName>
            <FieldType>LeftTuple</FieldType>
        </Field>
        <Field>
            <FieldName>resumeFromNextNode</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>processRian</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StackEntry</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>NetworkNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bit</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSinkNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nodeMem</ParamName>
                    <ParamType>Memory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smems</ParamName>
                    <ParamType>SegmentMemory[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smemIndex</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resumeFromNextNode</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>processRian</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NetworkNode</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRmem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathMemory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNodeMem</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Memory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSmems</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SegmentMemory[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSmemIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTrgTuples</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LeftTuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LeftTupleSinkNode</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isResumeFromNextNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isProcessRian</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>