<Class>
    <Id>2427</Id>
    <Package>org.drools.core.phreak</Package>
    <ClassName>ReactiveObjectUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>object</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>leftTuple</FieldName>
            <FieldType>ReactiveFromNodeLeftTuple</FieldType>
        </Field>
        <Field>
            <FieldName>propagationContext</FieldName>
            <FieldType>PropagationContext</FieldType>
        </Field>
        <Field>
            <FieldName>node</FieldName>
            <FieldType>ReactiveFromNode</FieldType>
        </Field>
        <Field>
            <FieldName>sink</FieldName>
            <FieldType>LeftTupleSinkNode</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>ModificationType</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>notifyModification</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reactiveObject</ParamName>
                    <ParamType>ReactiveObject</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;notifyModification;[reactiveObject, reactiveObject.getLeftTuples(), ModificationType.MODIFY]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>notifyModification</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuples</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ModificationType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInternalWorkingMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalWorkingMemory</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propagationContext</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InternalFactHandle [fh=propagationContext.getFactHandle()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReactivePropagation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>ReactiveFromNodeLeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>propagationContext</ParamName>
                    <ParamType>PropagationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>ReactiveFromNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSinkNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>ModificationType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ReactiveFromNode.ReactiveFromMemory [mem=wm.getNodeMemory(node)]</InnerVar>
                <InnerVar>InternalFactHandle [factHandle=node.createFactHandle(leftTuple,propagationContext,wm,object)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mem.getBetaMemory();setNodeDirty;[node, wm]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>