<Class>
    <Id>1357</Id>
    <Package>org.drools.compiler.lang.api.impl</Package>
    <ClassName>PatternDescrBuilderImpl</ClassName>
    <SuperClass>BaseDescrBuilderImpl</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>PatternDescrBuilder</SuperInterface>
        <SuperInterface>P</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PatternDescrBuilderImpl  /** 
 * A descr builder implementation for Patterns
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>PatternDescrBuilderImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>P</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PatternDescrBuilderImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>P</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>id</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>P</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isUnification</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>descr;setIdentifier;[id]</InnerMethodInvoke>
                <InnerMethodInvoke>descr;setUnification;[isUnification]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>P</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>descr;setObjectType;[type]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>P</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>descr;setQuery;[query]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>constraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>P</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>constraint</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExprConstraintDescr [constr=new ExprConstraintDescr(constraint)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>constr;setType;[ExprConstraintDescr.Type.NAMED]</InnerMethodInvoke>
                <InnerMethodInvoke>constr;setPosition;[descr.getConstraint().getDescrs().size()]</InnerMethodInvoke>
                <InnerMethodInvoke>constr;setResource;[descr.getResource()]</InnerMethodInvoke>
                <InnerMethodInvoke>descr;addConstraint;[constr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>constraint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>P</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>constraint</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>positional</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExprConstraintDescr [constr=new ExprConstraintDescr(constraint)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>constr;setType;[positional ? ExprConstraintDescr.Type.POSITIONAL : ExprConstraintDescr.Type.NAMED]</InnerMethodInvoke>
                <InnerMethodInvoke>constr;setPosition;[descr.getConstraint().getDescrs().size()]</InnerMethodInvoke>
                <InnerMethodInvoke>constr;setResource;[descr.getResource()]</InnerMethodInvoke>
                <InnerMethodInvoke>descr;addConstraint;[constr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bind</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>P</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>var</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isUnification</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BindingDescr [bindDescr=new BindingDescr(var,target,isUnification)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bindDescr;setResource;[descr.getResource()]</InnerMethodInvoke>
                <InnerMethodInvoke>descr;addConstraint;[bindDescr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>from</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PatternDescrBuilder&lt;P&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>behavior</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PatternDescrBuilder&lt;P&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newAnnotation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PatternDescrBuilder&lt;P&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AnnotationDescrBuilder&lt;PatternDescrBuilder&lt;P&gt;&gt; [annotation=new AnnotationDescrBuilderImpl&lt;PatternDescrBuilder&lt;P&gt;&gt;(this,name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>descr;addAnnotation;[annotation.getDescr()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>