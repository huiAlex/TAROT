<Class>
    <Id>1468</Id>
    <Package>org.drools.compiler.builder.impl</Package>
    <ClassName>ClassDefinitionFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>kbuilder</FieldName>
            <FieldType>KnowledgeBuilderImpl</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ClassDefinitionFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kbuilder</ParamName>
                    <ParamType>KnowledgeBuilderImpl</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateDeclaredBean</MethodName>
            <MethodComment>/** 
 * Generates a bean, and adds it to the composite class loader that everything is using.
 */
</MethodComment>
            <ReturnType>ClassDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescr</ParamName>
                    <ParamType>AbstractClassTypeDeclarationDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgRegistry</ParamName>
                    <ParamType>PackageRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>unresolvedTypeDefinitions</ParamName>
                    <ParamType>TypeDefinition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>unprocesseableDescrs</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassDefinition [def=createClassDefinition(typeDescr,type)]</InnerVar>
                <InnerVar>boolean [success=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>type;setTypeClassDef;[def]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createClassDefinition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescr</ParamName>
                    <ParamType>AbstractClassTypeDeclarationDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [fullName=typeDescr.getType().getFullName()]</InnerVar>
                <InnerVar>Traitable [traitableAnn=typeDescr.getTypedAnnotation(Traitable.class)]</InnerVar>
                <InnerVar>boolean [traitable=traitableAnn != null]</InnerVar>
                <InnerVar>String[] [fullSuperTypes=new String[typeDescr.getSuperTypes().size() + 1]]</InnerVar>
                <InnerVar>int [j=0]</InnerVar>
                <InnerVar>List&lt;String&gt; [interfaceList=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [interfaces=interfaceList.toArray(new String[interfaceList.size()])]</InnerVar>
                <InnerVar>ClassDefinition [def]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>interfaceList;add;[traitable ? Externalizable.class.getName() : Serializable.class.getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>wireAnnotationDefs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescr</ParamName>
                    <ParamType>AbstractClassTypeDeclarationDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>def</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resolver</ParamName>
                    <ParamType>TypeResolver</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>wireEnumLiteralDefs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescr</ParamName>
                    <ParamType>AbstractClassTypeDeclarationDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>def</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>wireFields</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescr</ParamName>
                    <ParamType>AbstractClassTypeDeclarationDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>def</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgRegistry</ParamName>
                    <ParamType>PackageRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>unresolvedTypeDefinitions</ParamName>
                    <ParamType>TypeDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortFields</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FieldDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fields</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>typeResolver</ParamName>
                    <ParamType>TypeResolver</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>kbuilder</ParamName>
                    <ParamType>KnowledgeBuilderImpl</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;FieldDefinition&gt; [fieldDefs=new ArrayList&lt;FieldDefinition&gt;(fields.size())]</InnerVar>
                <InnerVar>int [maxDeclaredPos=0]</InnerVar>
                <InnerVar>BitSet [occupiedPositions=new BitSet(fields.size())]</InnerVar>
                <InnerVar>int [curr=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Collections;sort;[fieldDefs]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populateDefinitionFromClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>def</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resource</ParamName>
                    <ParamType>Resource</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>concrete</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>asTrait</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>