<Class>
    <Id>1306</Id>
    <Package>org.drools.compiler.rule.builder.dialect.java</Package>
    <ClassName>JavaDialectConfiguration</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>DialectConfiguration</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JavaDialectConfiguration  /** 
 * There are options to use various flavours of runtime compilers. Apache JCI is used as the interface to all the runtime compilers. You can also use the system property "drools.compiler" to set the desired compiler. The valid values are "ECLIPSE" and "JANINO" only.  drools.dialect.java.compiler = &lt;ECLIPSE|JANINO&gt; drools.dialect.java.compiler.lnglevel = &lt;1.5|1.6&gt; The default compiler is Eclipse and the default lngLevel is 1.5. The lngLevel will attempt to autodiscover your system using the  system property "java.version" The JavaDialectConfiguration will attempt to validate that the specified compiler is in the classpath, using ClassLoader.loasClass(String). If you intented to just Janino sa the compiler you must either overload the compiler property before  instantiating this class or the PackageBuilder, or make sure Eclipse is in the  classpath, as Eclipse is the default.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>JAVA_COMPILER_PROPERTY</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LANGUAGE_LEVELS</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>languageLevel</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>conf</FieldName>
            <FieldType>KnowledgeBuilderConfigurationImpl</FieldType>
        </Field>
        <Field>
            <FieldName>compiler</FieldName>
            <FieldType>CompilerType</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>JavaDialectConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>KnowledgeBuilderConfigurationImpl</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setCompiler;[getDefaultCompiler()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setJavaLanguageLevel;[getDefaultLanguageLevel()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPackageBuilderConfiguration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KnowledgeBuilderConfigurationImpl</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newDialect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Dialect</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rootClassLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgConf</ParamName>
                    <ParamType>KnowledgeBuilderConfigurationImpl</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgRegistry</ParamName>
                    <ParamType>PackageRegistry</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkg</ParamName>
                    <ParamType>InternalKnowledgePackage</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJavaLanguageLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setJavaLanguageLevel</MethodName>
            <MethodComment>/** 
 * You cannot set language level below 1.5, as we need static imports, 1.5 is now the default.
 * @param languageLevel
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>languageLevel</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCompiler</MethodName>
            <MethodComment>/** 
 * Set the compiler to be used when building the rules semantic code blocks. This overrides the default, and even what was set as a system property. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>compiler</ParamName>
                    <ParamType>CompilerType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCompiler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CompilerType</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDefaultCompiler</MethodName>
            <MethodComment>/** 
 * This will attempt to read the System property to work out what default to set. This should only be done once when the class is loaded. After that point, you will have to programmatically override it.
 */
</MethodComment>
            <ReturnType>CompilerType</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDefaultLanguageLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>