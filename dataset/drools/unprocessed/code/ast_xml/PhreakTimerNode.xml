<Class>
    <Id>1770</Id>
    <Package>org.drools.core.phreak</Package>
    <ClassName>PhreakTimerNode</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>timerJobCtx</FieldName>
            <FieldType>TimerNodeJobContext</FieldType>
        </Field>
        <Field>
            <FieldName>jobHandle</FieldName>
            <FieldType>JobHandle</FieldType>
        </Field>
        <Field>
            <FieldName>trigger</FieldName>
            <FieldType>Trigger</FieldType>
        </Field>
        <Field>
            <FieldName>tuple</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>timerNodeId</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>tm</FieldName>
            <FieldType>TimerNodeMemory</FieldType>
        </Field>
        <Field>
            <FieldName>sink</FieldName>
            <FieldType>LeftTupleSink</FieldType>
        </Field>
        <Field>
            <FieldName>pmems</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>pmems</FieldName>
            <FieldType>PathMemory</FieldType>
        </Field>
        <Field>
            <FieldName>wm</FieldName>
            <FieldType>InternalWorkingMemory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>doNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smem</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doPropagateChildLeftTuples;[tm, sink, trgLeftTuples, stagedLeftTuples]</InnerMethodInvoke>
                <InnerMethodInvoke>srcLeftTuples;resetAll;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doLeftInserts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smem</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Timer [timer=timerNode.getTimer()]</InnerVar>
                <InnerVar>TimerService [timerService=agenda.getWorkingMemory().getTimerService()]</InnerVar>
                <InnerVar>long [timestamp=timerService.getCurrentTime()]</InnerVar>
                <InnerVar>String[] [calendarNames=timerNode.getCalendarNames()]</InnerVar>
                <InnerVar>Calendars [calendars=agenda.getWorkingMemory().getCalendars()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doLeftUpdates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smem</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Timer [timer=timerNode.getTimer()]</InnerVar>
                <InnerVar>TimerService [timerService=agenda.getWorkingMemory().getTimerService()]</InnerVar>
                <InnerVar>long [timestamp=timerService.getCurrentTime()]</InnerVar>
                <InnerVar>String[] [calendarNames=timerNode.getCalendarNames()]</InnerVar>
                <InnerVar>Calendars [calendars=agenda.getWorkingMemory().getCalendars()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doLeftDeletes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TimerService [timerService=agenda.getWorkingMemory().getTimerService()]</InnerVar>
                <InnerVar>TupleList [leftTuples=tm.getInsertOrUpdateLeftTuples()]</InnerVar>
                <InnerVar>TupleList [deletes=tm.getDeleteLeftTuples()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scheduleLeftTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smem</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timer</ParamName>
                    <ParamType>Timer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timerService</ParamName>
                    <ParamType>TimerService</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timestamp</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>calendarNames</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>calendars</ParamName>
                    <ParamType>Calendars</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InternalWorkingMemory [wm=agenda.getWorkingMemory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>schedule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Trigger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;scheduleTimer;[timerNode, tm, smem, sink, wm, timerService, timestamp, leftTuple, trgLeftTuples, stagedLeftTuples, t]</InnerMethodInvoke>
                <InnerMethodInvoke>null;evaluate;[pmem, agenda, sink, tm, trgLeftTuples]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTrigger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Trigger</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTrigger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Trigger</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timer</ParamName>
                    <ParamType>Timer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timestamp</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>calendarNames</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>calendars</ParamName>
                    <ParamType>Calendars</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [obj=leftTuple.getContextObject()]</InnerVar>
                <InnerVar>DefaultJobHandle [jobHandle=obj instanceof DefaultJobHandle ? (DefaultJobHandle)obj : null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>schedule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Trigger</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTrigger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Trigger</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scheduleTimer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNode</ParamName>
                    <ParamType>TimerNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>smem</ParamName>
                    <ParamType>SegmentMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timerService</ParamName>
                    <ParamType>TimerService</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>timestamp</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trigger</ParamName>
                    <ParamType>Trigger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doPropagateChildLeftTuples</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TupleList [leftTuples=tm.getInsertOrUpdateLeftTuples()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>leftTuples;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doPropagateChildLeftTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LeftTuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stagedLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>leftTuple</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LeftTuple [childLeftTuple=leftTuple.getFirstChild()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>JobContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TimerNodeJobContext [timerJobCtx=(TimerNodeJobContext)ctx]</InnerVar>
                <InnerVar>InternalWorkingMemory [wm=timerJobCtx.getWorkingMemory()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>wm;addPropagation;[new TimerAction(timerJobCtx)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TimerAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerJobCtx</ParamName>
                    <ParamType>TimerNodeJobContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.ActionQueue.Action</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requiresImmediateFlushing</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;execute;[wm, false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>needEvaluation</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TupleList [leftTuples=timerJobCtx.getTimerNodeMemory().getInsertOrUpdateLeftTuples()]</InnerVar>
                <InnerVar>Tuple [lt=timerJobCtx.getTuple()]</InnerVar>
                <InnerVar>TimedRuleExecutionFilter [filter=wm.getSessionConfiguration().getTimedRuleExecutionFilter()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>timerJobCtx.getTimerNodeMemory();setNodeDirtyWithoutNotify;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluateAndFireRule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RuleExecutor [ruleExecutor=pmem.getRuleAgendaItem().getRuleExecutor()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ruleExecutor;reEvaluateNetwork;[agenda]</InnerMethodInvoke>
                <InnerMethodInvoke>ruleExecutor;fire;[agenda]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pmem</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>agenda</ParamName>
                    <ParamType>InternalAgenda</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trgLeftTuples</ParamName>
                    <ParamType>LeftTuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SegmentMemory[] [smems=pmem.getSegmentMemories()]</InnerVar>
                <InnerVar>SegmentMemory [sm=tm.getSegmentMemory()]</InnerVar>
                <InnerVar>int [smemIndex=0]</InnerVar>
                <InnerVar>long [bit=1]</InnerVar>
                <InnerVar>RuleNetworkEvaluator [rne=new RuleNetworkEvaluator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rne;outerEval;[pmem, sink, bit, tm, smems, smemIndex, trgLeftTuples, agenda, new LinkedList&lt;&gt;(), true, pmem.getRuleAgendaItem().getRuleExecutor()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TimerNodeJobContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timerNodeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>trigger</ParamName>
                    <ParamType>Trigger</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>TimerNodeMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sink</ParamName>
                    <ParamType>LeftTupleSink</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pmems</ParamName>
                    <ParamType>PathMemory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wm</ParamName>
                    <ParamType>InternalWorkingMemory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJobHandle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JobHandle</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setJobHandle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jobHandle</ParamName>
                    <ParamType>JobHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSink</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LeftTupleSink</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTimerNodeMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TimerNodeMemory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPathMemories</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PathMemory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWorkingMemory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalWorkingMemory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTrigger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Trigger</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTimerNodeId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtobufMessages.Timers.Timer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jobCtx</ParamName>
                    <ParamType>JobContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outputCtx</ParamName>
                    <ParamType>MarshallerWriteContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TimerNodeJobContext [tnJobCtx=(TimerNodeJobContext)jobCtx]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deserialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inCtx</ParamName>
                    <ParamType>MarshallerReaderContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_timer</ParamName>
                    <ParamType>ProtobufMessages.Timers.Timer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TimerNodeTimer [_tn=_timer.getTimerNode()]</InnerVar>
                <InnerVar>int [timerNodeId=_tn.getNodeId()]</InnerVar>
                <InnerVar>TupleKey [tuple=PersisterHelper.createTupleKey(_tn.getTuple())]</InnerVar>
                <InnerVar>Trigger [trigger=ProtobufInputMarshaller.readTrigger(inCtx,_tn.getTrigger())]</InnerVar>
                <InnerVar>Scheduler [scheduler=inCtx.removeTimerNodeScheduler(timerNodeId,tuple)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>