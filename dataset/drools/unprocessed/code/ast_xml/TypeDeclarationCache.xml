<Class>
    <Id>1373</Id>
    <Package>org.drools.compiler.builder.impl</Package>
    <ClassName>TypeDeclarationCache</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>kbuilder</FieldName>
            <FieldType>KnowledgeBuilderImpl</FieldType>
        </Field>
        <Field>
            <FieldName>cacheTypes</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>cacheTypes</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TypeDeclarationCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kbuilder</ParamName>
                    <ParamType>KnowledgeBuilderImpl</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initBuiltinTypeDeclarations;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initBuiltinTypeDeclarations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initBuiltinTypeDeclaration;[Collection.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initBuiltinTypeDeclaration;[Map.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initBuiltinTypeDeclaration;[Match.class]</InnerMethodInvoke>
                <InnerMethodInvoke>initBuiltinTypeDeclaration(Thing.class);setKind;[TypeDeclaration.Kind.TRAIT]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initBuiltinTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypeDeclaration [type=new TypeDeclaration(cls.getSimpleName())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>type;setTypesafe;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>type;setTypeClass;[cls]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setClassDefinitionOnTypeDeclaration;[cls, type]</InnerMethodInvoke>
                <InnerMethodInvoke>cacheTypes;put;[cls.getCanonicalName(), type]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAndRegisterTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypeDeclaration [typeDeclaration=getCachedTypeDeclaration(cls)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initTypeDeclaration;[cls, typeDeclaration]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerTypeDeclaration;[packageName, typeDeclaration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypeDeclaration [tdecl=getCachedTypeDeclaration(cls)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>typeDeclaration</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypeDeclaration [typeDeclaration=getExistingTypeDeclaration(cls)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initTypeDeclaration;[cls, typeDeclaration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCachedTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCachedTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExistingTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypeDeclaration [typeDeclaration=null]</InnerVar>
                <InnerVar>PackageRegistry [pkgReg=kbuilder.getPackageRegistry(ClassUtils.getPackage(cls))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>typeDeclaration</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassDefinition [clsDef=typeDeclaration.getTypeClassDef()]</InnerVar>
                <InnerVar>Set&lt;TypeDeclaration&gt; [tdecls=new LinkedHashSet&lt;TypeDeclaration&gt;()]</InnerVar>
                <InnerVar>TypeDeclaration[] [tarray=tdecls.toArray(new TypeDeclaration[tdecls.size()])]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tdecls;add;[typeDeclaration]</InnerMethodInvoke>
                <InnerMethodInvoke>null;buildTypeDeclarations;[cls, tdecls]</InnerMethodInvoke>
                <InnerMethodInvoke>this.cacheTypes;put;[cls.getName(), typeDeclaration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setClassDefinitionOnTypeDeclaration</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassDefinition</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>typeDeclaration</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassDefinition [clsDef=new ClassDefinition()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ClassDefinitionFactory;populateDefinitionFromClass;[clsDef, typeDeclaration.getResource(), cls, cls.getAnnotation(Trait.class) != null]</InnerMethodInvoke>
                <InnerMethodInvoke>typeDeclaration;setTypeClassDef;[clsDef]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processFieldsPosition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clsDef</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>typeDeclaration</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;Field&gt; [fields=new LinkedList&lt;Field&gt;()]</InnerVar>
                <InnerVar>Class&lt;?&gt; [tempKlass=cls]</InnerVar>
                <InnerVar>FieldDefinition[] [orderedFields=new FieldDefinition[fields.size()]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processModifiedProps</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clsDef</ParamName>
                    <ParamType>ClassDefinition</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTypeDeclarationForBean</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TypeDeclaration</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Annotated [annotated=new Annotated.ClassAdapter(cls)]</InnerVar>
                <InnerVar>TypeDeclaration [typeDeclaration=TypeDeclaration.createTypeDeclarationForBean(cls,annotated,kbuilder.getBuilderConfiguration().getPropertySpecificOption())]</InnerVar>
                <InnerVar>String [namespace=ClassUtils.getPackage(cls)]</InnerVar>
                <InnerVar>PackageRegistry [pkgRegistry=kbuilder.getOrCreatePackageRegistry(new PackageDescr(namespace))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processMvelBasedAccessors;[kbuilder, pkgRegistry, annotated, typeDeclaration]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildTypeDeclarations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tdecls</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class&lt;?&gt;[] [intfs=cls.getInterfaces()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildTypeDeclarationInterfaces</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tdecls</ParamName>
                    <ParamType>TypeDeclaration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PackageRegistry [pkgReg]</InnerVar>
                <InnerVar>TypeDeclaration [tdecl=this.cacheTypes.get((cls.getName()))]</InnerVar>
                <InnerVar>Class&lt;?&gt;[] [intfs=cls.getInterfaces()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeTypesGeneratedFromResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resource</ParamName>
                    <ParamType>Resource</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>