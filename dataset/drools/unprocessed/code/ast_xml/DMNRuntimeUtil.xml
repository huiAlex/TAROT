<Class>
    <Id>1691</Id>
    <Package>org.kie.dmn.core.util</Package>
    <ClassName>DMNRuntimeUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DMNRuntimeUtil  /** 
 * A type-check safe runtime creation helper.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createRuntime</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DMNRuntime</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieServices [ks=KieServices.Factory.get()]</InnerVar>
                <InnerVar>KieContainer [kieContainer=KieHelper.getKieContainer(ks.newReleaseId("org.kie","dmn-test-" + UUID.randomUUID(),"1.0"))]</InnerVar>
                <InnerVar>DMNRuntime [runtime=typeSafeGetKieRuntime(kieContainer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Assert;assertNotNull;[runtime]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRuntime</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DMNRuntime</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resourceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieServices [ks=KieServices.Factory.get()]</InnerVar>
                <InnerVar>KieContainer [kieContainer=KieHelper.getKieContainer(ks.newReleaseId("org.kie","dmn-test-" + UUID.randomUUID(),"1.0"),ks.getResources().newClassPathResource(resourceName,testClass))]</InnerVar>
                <InnerVar>DMNRuntime [runtime=typeSafeGetKieRuntime(kieContainer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Assert;assertNotNull;[runtime]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRuntimeWithAdditionalResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DMNRuntime</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resourceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>additionalResources</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KieServices [ks=KieServices.Factory.get()]</InnerVar>
                <InnerVar>Resource [mainResource=ks.getResources().newClassPathResource(resourceName,testClass)]</InnerVar>
                <InnerVar>List&lt;Resource&gt; [totalResources=new ArrayList&lt;&gt;()]</InnerVar>
                <InnerVar>KieContainer [kieContainer=KieHelper.getKieContainer(ks.newReleaseId("org.kie","dmn-test-" + UUID.randomUUID(),"1.0"),totalResources.toArray(new Resource[]{}))]</InnerVar>
                <InnerVar>DMNRuntime [runtime=typeSafeGetKieRuntime(kieContainer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>totalResources;add;[mainResource]</InnerMethodInvoke>
                <InnerMethodInvoke>Assert;assertNotNull;[runtime]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>typeSafeGetKieRuntime</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DMNRuntime</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kieContainer</ParamName>
                    <ParamType>KieContainer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DMNRuntime [dmnRuntime=kieContainer.newKieSession().getKieRuntime(DMNRuntime.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>((DMNRuntimeImpl)dmnRuntime);setOption;[new RuntimeTypeCheckOption(true)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createListener</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DMNRuntimeEventListener</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beforeEvaluateDecision</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>BeforeEvaluateDecisionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;[event.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>afterEvaluateDecision</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>AfterEvaluateDecisionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;[event.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beforeEvaluateBKM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>BeforeEvaluateBKMEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;[event.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>afterEvaluateBKM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>AfterEvaluateBKMEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;[event.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beforeEvaluateDecisionTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>BeforeEvaluateDecisionTableEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;[event.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>afterEvaluateDecisionTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>AfterEvaluateDecisionTableEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;[event.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>formatMessages</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>messages</ParamName>
                    <ParamType>DMNMessage</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DMNRuntimeUtil</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>