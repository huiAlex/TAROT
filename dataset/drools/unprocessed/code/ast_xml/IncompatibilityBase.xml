<Class>
    <Id>203</Id>
    <Package>org.drools.verifier.incompatibility</Package>
    <ClassName>IncompatibilityBase</ClassName>
    <SuperClass>TestBaseOld</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>testDummy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertTrue;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createIncompatibilityMap</MethodName>
            <MethodComment>/** 
 * Creates incompatibility map from Incompatibility objects, one rule may have several incompatibility dependencies.
 * @param iter
 * @return
 */
</MethodComment>
            <ReturnType>Cause</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>VerifierComponentType</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iter</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;Cause,Set&lt;Cause&gt;&gt; [map=new HashMap&lt;Cause,Set&lt;Cause&gt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>