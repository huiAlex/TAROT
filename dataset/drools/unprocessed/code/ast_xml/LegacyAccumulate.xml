<Class>
    <Id>1064</Id>
    <Package>org.drools.modelcompiler.builder.generator.visitor.accumulate</Package>
    <ClassName>LegacyAccumulate</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>descr</FieldName>
            <FieldType>AccumulateDescr</FieldType>
        </Field>
        <Field>
            <FieldName>basePattern</FieldName>
            <FieldType>PatternDescr</FieldType>
        </Field>
        <Field>
            <FieldName>ruleBuildContext</FieldName>
            <FieldType>RuleBuildContext</FieldType>
        </Field>
        <Field>
            <FieldName>javaAccumulateBuilder</FieldName>
            <FieldType>JavaAccumulateBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>context</FieldName>
            <FieldType>RuleContext</FieldType>
        </Field>
        <Field>
            <FieldName>packageModel</FieldName>
            <FieldType>PackageModel</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LegacyAccumulate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>RuleContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descr</ParamName>
                    <ParamType>AccumulateDescr</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>basePattern</ParamName>
                    <ParamType>PatternDescr</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DialectCompiletimeRegistry [dialectCompiletimeRegistry=packageModel.getDialectCompiletimeRegistry()]</InnerVar>
                <InnerVar>Dialect [defaultDialect=dialectCompiletimeRegistry.getDialect("java")]</InnerVar>
                <InnerVar>InternalKnowledgePackage [pkg=packageModel.getPkg()]</InnerVar>
                <InnerVar>RuleDescr [ruleDescr=context.getRuleDescr()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;String&gt; [imports=ruleBuildContext.getPkg().getImports().keySet()]</InnerVar>
                <InnerVar>String [packageName=ruleBuildContext.getPkg().getName()]</InnerVar>
                <InnerVar>GeneratedClassWithPackage [generatedClassWithPackage=createAllAccumulateClass(imports,packageName)]</InnerVar>
                <InnerVar>GeneratedClassWithPackage [invokerGenerated=createInvokerClass(imports,packageName)]</InnerVar>
                <InnerVar>String [typeWithPackage=String.format("%s.%s",packageName,invokerGenerated.getGeneratedClass().getName().asString())]</InnerVar>
                <InnerVar>ClassExpr [accFunctionName=new ClassExpr(JavaParser.parseType(typeWithPackage))]</InnerVar>
                <InnerVar>MethodCallExpr [accFunctionCall=new MethodCallExpr(null,"accFunction",nodeList(accFunctionName))]</InnerVar>
                <InnerVar>NameExpr [bindingVariable=new NameExpr(toVar(basePattern.getIdentifier()))]</InnerVar>
                <InnerVar>MethodCallExpr [asDSL=new MethodCallExpr(accFunctionCall,"as",nodeList(bindingVariable))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>new PatternBuilder();build;[ruleBuildContext, basePattern]</InnerMethodInvoke>
                <InnerMethodInvoke>packageModel;addGeneratedAccumulateClasses;[generatedClassWithPackage]</InnerMethodInvoke>
                <InnerMethodInvoke>packageModel;addGeneratedAccumulateClasses;[invokerGenerated]</InnerMethodInvoke>
                <InnerMethodInvoke>context;addExpression;[asDSL]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createInvokerClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GeneratedClassWithPackage</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>imports</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [invokerClass=ruleBuildContext.getInvokers().values().iterator().next()]</InnerVar>
                <InnerVar>CompilationUnit [parsedInvokedClass=JavaParser.parse(invokerClass)]</InnerVar>
                <InnerVar>Set&lt;String&gt; [allImports=new HashSet&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>allImports;addAll;[imports]</InnerMethodInvoke>
                <InnerMethodInvoke>allImports;addAll;[parsedInvokedClass.getImports().stream().map(importDeclaration -&gt; importDeclaration.getName().toString()).collect(Collectors.toList())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createAllAccumulateClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GeneratedClassWithPackage</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>imports</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [allAccumulatesClass=new JavaRuleClassBuilder().buildRule(ruleBuildContext)]</InnerVar>
                <InnerVar>CompilationUnit [parsedAccumulateClass=JavaParser.parse(allAccumulatesClass)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>