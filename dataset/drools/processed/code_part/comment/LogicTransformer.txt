logic transform repons:nsubj
logic transform move:nsubj
remov repons:advcl
redund node:amod
node remov:obj
move repons:conj
node move:obl
class turn:nsubj
turn deleg:ccomp
exist turn:ccomp
role deleg:nsubj
builder deleg:obl
parent map:compound
child transform:compound
transform parent:nmod
map set:obj
logic transform:compound
transform clone:obl
declar pattern:conj
refer fix:obj
clone declar:amod
declar fix:obl
rule element:compound
condit element:compound
element recurs:obl
updat recurs:xcomp
declar objec:compound
objec updat:obj
travers transform:dep
tree travers:nsubj
process transform:obl
transform includ:ccomp
node transform:conj
node includ:ccomp
move node:acl
remov transform:conj
remov includ:ccomp
duplic statement:amod
logic statement:compound
statement remov:obj
node includ:obj
travers involv:nsubj
level involv:obj
graph involv:xcomp
iter graph:nmod
level node:nsubj
current node:amod
node transform:nsubj
transform node:parataxis
interest children:csubj
children node:parataxis
current node:amod
node children:nmod
call node:acl
parent node:compound
node call:obj
children node:conj
parent children:nmod
call children:dep
child node:compound
node call:obj
child rewrit:nsubj
move rewrit:xcomp
