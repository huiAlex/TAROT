abil accumul:nsubj
code abil:acl
function code:obl
common function:amod
function code:nsubj
predefin templat:amod
accumul base:compound
rule accumul:obl
base code:obl
bellow write:dep
rule bellow:obl
doubl total:amod
count int:dep
action total:compound
count price:dep
count price:amod
total count:amod
count doubl:appos
predefin function:amod
averag price:amod
give cost:xcomp
rais give:obj
employe rais:nmod
depart employe:nmod
number accumul:nsubj
employe dept:compound
dept salari:compound
salari accumul:obj
salari accumul:parataxis
salari sum:dep
hardcod thought:advcl
function hardcod:obj
simpl interfac:amod
interfac defin:obj
accumul function defin:dep
extern function:amod
function implement:nsubj
implement creat:ccomp
wire interfac:conj
packag builder configur api:compound
configur api:conj
file mark:nsubj
mark defin:conj
creat mark:dep
constant prefix:amod
averag prefix:conj
function identifi:compound
identifi prefix:acl
rule file:compound
drl identifi:dep
xml drl:conj
common function:amod
function provid:obj
averag function:nmod
sum averag:conj
count averag:conj
min averag:conj
max averag:conj
box provid:obl
easi provid:advcl
implement easi:xcomp
function implement:obj
averag function:amod
function implement:obj
accumul implement:nmod
capabl accumul:amod
calcul capabl:advcl
averag valu:amod
valu calcul:obj
public class:amod
class averag accumul:compound
implement accumul function:dep
accumul function averag accumul:dep
protect class:dep
static protect:xcomp
averag data class:dep
public int:amod
count int:dep
public total:amod
doubl total:amod
object creat context:compound
creat context public:obj
averag data return:obj
public init:amod
void init:compound
init throw:nsubj
object context:compound
context init:appos
data averag data:nsubj
averag data context:compound
context averag data:dep
public void:amod
void accumul:nsubj
object context:compound
context accumul:obj
object valu:compound
data averag data:nsubj
averag data context:compound
context averag data:dep
number valu:dep
public revers:amod
void revers:amod
object context:compound
context revers:dep
object throw:nsubj
valu object:dep
data averag data:nsubj
averag data context:compound
context averag data:dep
number valu:dep
public result:amod
object result:compound
result throw:nsubj
object context:compound
context result:appos
data averag data:nsubj
averag data context:compound
context averag data:dep
doubl return:xcomp
boolean support revers:amod
support revers public:obj
return true:obl
