group element serial version type type type type type children array list rule condit element root outer declrar type scope delimit scope delimit group element group element type read extern write extern add child child add child index rce children declar declar consequ outer declar outer declar consequ resolv declar identifi pack merg group element parent child pack parent equal object hash code clone clone onli group clone deep clone type set type type exist string nest element pattern scope delimit root set root root node node node node group element resolv declar children identifi type scope delimit declar children declar children consequ outer declar children consequ declar children scope delimit consequ find common declar class origin merg outer declar rce consequ consequ invok rce consequ pattern scope delimit add child current group element restrict onli child singl pattern anoth add child index child group element inherit doc inherit doc inherit doc optim group element subtre remov redund insid anoth insid singl branch logic transform doe complic transform clone condit element refer condit element children return map declar visibl insid element type return map declar visibl insid element type consequ return map declar visibl outsid element type return true case rule condit element delimit pattern visibl scope instanc scope delimit scope delimit 