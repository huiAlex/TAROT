<Class>
    <Id>407</Id>
    <Package>org.codehaus.groovy.classgen.asm.sc</Package>
    <ClassName>StaticTypesTypeChooser</ClassName>
    <SuperClass>StatementMetaTypeChooser</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StaticTypesTypeChooser  /** 
 * A  {@link org.codehaus.groovy.classgen.asm.TypeChooser} which reads type information from node metadatagenerated by the  {@link groovy.transform.CompileStatic} annotation.
 * @author Cedric Champeau
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>resolveType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassNode</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exp</ParamName>
                    <ParamType>Expression</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>current</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ASTNode [target=exp instanceof VariableExpression ? getTarget((VariableExpression)exp) : exp]</InnerVar>
                <InnerVar>ClassNode [inferredType=(ClassNode)target.getNodeMetaData(StaticTypesMarker.DECLARATION_INFERRED_TYPE)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTarget</MethodName>
            <MethodComment>/** 
 * The inferred type, in case of a variable expression, can be set on the accessed variable, so we take it instead of the facade one.
 * @param ve the variable expression for which to return the target expression
 * @return the target variable expression
 */
</MethodComment>
            <ReturnType>VariableExpression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ve</ParamName>
                    <ParamType>VariableExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>