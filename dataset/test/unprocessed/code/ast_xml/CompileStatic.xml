<Class>
    <Id>620</Id>
    <Package>groovy.transform</Package>
    <ClassName>CompileStatic</ClassName>
    <ClassComment>CompileStatic  /** 
 * This will let the Groovy compiler use compile time checks in the style of Java then perform static compilation, thus bypassing the Groovy meta object protocol. &lt;p&gt; When a class is annotated, all methods, properties, files, inner classes, etc. of the annotated class will be type checked. When a method is annotated, static compilation applies only to items (closures and anonymous inner clsses) within the method. &lt;p&gt; By using  {@link TypeCheckingMode#SKIP}, static compilation can be skipped on an element within a class or method otherwise marked with CompileStatic. For example a class can be annotated with CompileStatic, and a method within can be marked to skip static checking to use dynamic language features.
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen "blackdrag" Theodorou&lt;/a&gt;
 * @author Cedric Champeau
 * @see CompileDynamic
 */
</ClassComment>
    <FieldList/>
    <MethodList/>
</Class>