<Class>
    <Id>309</Id>
    <ClassName>JavadocFixTool</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>fileNames</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>patchString</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>patchData</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>quickFixString</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>quickFix</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>readme</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>version</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>doPatch</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>recursive</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=args[args.length - 1]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;[version]</InnerMethodInvoke>
                <InnerMethodInvoke>new JavadocFixTool();proceed;[name]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printUsage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;println;["Usage: java -jar JavadocPatchTool.jar [-R] [-C] &lt;Path to Javadoc root&gt;"]</InnerMethodInvoke>
                <InnerMethodInvoke>out;println;["    -R : Proceed recursively starting from given folder"]</InnerMethodInvoke>
                <InnerMethodInvoke>out;println;["    -C : Check only - program will find vulnerable files and print their full paths"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initReadme</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>proceed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>searchAndPatch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>folder</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyPatch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>file</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>currentFolder</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FileInputStream [fis=new FileInputStream(file)]</InnerVar>
                <InnerVar>BufferedReader [br=new BufferedReader(new InputStreamReader(fis))]</InnerVar>
                <InnerVar>String [line]</InnerVar>
                <InnerVar>String [failedString=patchString]</InnerVar>
                <InnerVar>String[] [patch=patchData]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceStringInFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>folder</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>file</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replacement</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [name=file.getName()]</InnerVar>
                <InnerVar>File [origFile=new File(folder,name + ".orig")]</InnerVar>
                <InnerVar>File [temporaryFile=new File(folder,name + ".tmp")]</InnerVar>
                <InnerVar>String [line]</InnerVar>
                <InnerVar>FileInputStream [fis=new FileInputStream(origFile)]</InnerVar>
                <InnerVar>PrintWriter [pw=new PrintWriter(temporaryFile)]</InnerVar>
                <InnerVar>BufferedReader [br=new BufferedReader(new InputStreamReader(fis))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["Patching file: " + file.getCanonicalPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>file;renameTo;[origFile]</InnerMethodInvoke>
                <InnerMethodInvoke>temporaryFile;createNewFile;[]</InnerMethodInvoke>
                <InnerMethodInvoke>pw;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>pw;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>origFile;delete;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>