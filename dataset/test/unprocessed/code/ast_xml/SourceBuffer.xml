<Class>
    <Id>1128</Id>
    <Package>org.codehaus.groovy.antlr</Package>
    <ClassName>SourceBuffer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SourceBuffer  /** 
 * A simple buffer that provides line/col access to chunks of source code held within itself.
 * @author &lt;a href="mailto:groovy@ross-rayner.com"&gt;Jeremy Rayner&lt;/a&gt;
 * @version $Revision$
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>lines</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>current</FieldName>
            <FieldType>StringBuffer</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SourceBuffer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lines;add;[current]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSnippet</MethodName>
            <MethodComment>/** 
 * Obtains a snippet of the source code within the bounds specified
 * @param start (inclusive line/ inclusive column)
 * @param end (inclusive line / exclusive column)
 * @return specified snippet of source code as a String, or null if no source available
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>LineColumn</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>end</ParamName>
                    <ParamType>LineColumn</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [startLine=start.getLine()]</InnerVar>
                <InnerVar>int [startColumn=start.getColumn()]</InnerVar>
                <InnerVar>int [endLine=end.getLine()]</InnerVar>
                <InnerVar>int [endColumn=end.getColumn()]</InnerVar>
                <InnerVar>StringBuffer [snippet=new StringBuffer()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>write</MethodName>
            <MethodComment>/** 
 * Writes the specified character into the buffer
 * @param c
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>