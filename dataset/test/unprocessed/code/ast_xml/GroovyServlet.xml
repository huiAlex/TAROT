<Class>
    <Id>195</Id>
    <Package>groovy.servlet</Package>
    <ClassName>GroovyServlet</ClassName>
    <SuperClass>AbstractHttpServlet</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GroovyServlet  /** 
 * This servlet will run Groovy scripts as Groovlets.  Groovlets are scripts with these objects implicit in their scope: &lt;ul&gt; &lt;li&gt;request - the HttpServletRequest&lt;/li&gt; &lt;li&gt;response - the HttpServletResponse&lt;/li&gt; &lt;li&gt;application - the ServletContext associated with the servlet&lt;/li&gt; &lt;li&gt;session - the HttpSession associated with the HttpServletRequest&lt;/li&gt; &lt;li&gt;out - the PrintWriter associated with the ServletRequest&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Your script sources can be placed either in your web application's normal web root (allows for subdirectories) or in /WEB-INF/groovy/* (also allows subdirectories). &lt;p&gt;To make your web application more groovy, you must add the GroovyServlet to your application's web.xml configuration using any mapping you like, so long as it follows the pattern *.* (more on this below).  Here is the web.xml entry: &lt;pre&gt; &amp;lt;servlet&gt; &amp;lt;servlet-name&gt;Groovy&amp;lt;/servlet-name&gt; &amp;lt;servlet-class&gt;groovy.servlet.GroovyServlet&amp;lt;/servlet-class&gt; &amp;lt;/servlet&gt; &amp;lt;servlet-mapping&gt; &amp;lt;servlet-name&gt;Groovy&amp;lt;/servlet-name&gt; &amp;lt;url-pattern&gt;*.groovy&amp;lt;/url-pattern&gt; &amp;lt;url-pattern&gt;*.gdo&amp;lt;/url-pattern&gt; &amp;lt;/servlet-mapping&gt; &lt;/pre&gt; &lt;p&gt;The URL pattern does not require the "*.groovy" mapping.  You can, for example, make it more Struts-like but groovy by making your mapping "*.gdo".
 * @author Sam Pullara
 * @author Mark Turansky (markturansky at hotmail.com)
 * @author Guillaume Laforge
 * @author Christian Stein
 * @author Marcel Overdijk
 * @see groovy.servlet.ServletBinding
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>gse</FieldName>
            <FieldType>GroovyScriptEngine</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment>/** 
 * Initialize the GroovyServlet.
 * @throws ServletException if this method encountered difficulties
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>ServletConfig</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>servletContext;log;["Groovy servlet initialized on " + gse + "."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ServletException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>service</MethodName>
            <MethodComment>/** 
 * Handle web requests to the GroovyServlet
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [scriptUri=getScriptUri(request)]</InnerVar>
                <InnerVar>ServletBinding [binding=new ServletBinding(request,response,servletContext)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>response;setContentType;["text/html; charset=" + encoding]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setVariables;[binding]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createGroovyScriptEngine</MethodName>
            <MethodComment>/** 
 * Hook method to setup the GroovyScriptEngine to use.&lt;br&gt; Subclasses may override this method to provide a custom engine.
 */
</MethodComment>
            <ReturnType>GroovyScriptEngine</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>