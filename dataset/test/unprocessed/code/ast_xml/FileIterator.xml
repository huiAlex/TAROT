<Class>
    <Id>1038</Id>
    <Package>org.codehaus.groovy.ant</Package>
    <ClassName>FileIterator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Iterator</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FileIterator  /** 
 * &lt;p&gt;&lt;code&gt;FileIterator&lt;/code&gt; is an iterator over a number of files from a collection of FileSet instances.
 * @author &lt;a href="mailto:jstrachan@apache.org"&gt;James Strachan&lt;/a&gt;
 * @version $Revision$
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>fileSetIterator</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>fileSetIterator</FieldName>
            <FieldType>FileSet</FieldType>
        </Field>
        <Field>
            <FieldName>project</FieldName>
            <FieldType>Project</FieldType>
        </Field>
        <Field>
            <FieldName>ds</FieldName>
            <FieldType>DirectoryScanner</FieldType>
        </Field>
        <Field>
            <FieldName>files</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>fileIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>nextFile</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>nextObjectSet</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>iterateDirectories</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FileIterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>project</ParamName>
                    <ParamType>Project</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileSetIterator</ParamName>
                    <ParamType>FileSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FileIterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>project</ParamName>
                    <ParamType>Project</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileSetIterator</ParamName>
                    <ParamType>FileSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iterateDirectories</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasNext</MethodName>
            <MethodComment>/** 
 * @return true if there is another object that matches the given predicate
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment>/** 
 * @return the next object which matches the given predicate
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment>/** 
 * throws UnsupportedOperationException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setNextObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>