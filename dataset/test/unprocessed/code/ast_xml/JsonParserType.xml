<Class>
    <Id>1054</Id>
    <Package>groovy.json</Package>
    <ClassName>JsonParserType</ClassName>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JsonParserType  /** 
 * Allows selection of parser type for new new JsonSlurper. &lt;p /&gt; To enable the INDEX_OVERLAY parser do this: &lt;code&gt;&lt;pre&gt; parser = new JsonSlurper().setType(JsonParserType.INDEX_OVERLAY); &lt;/pre&gt;&lt;/code&gt; INDEX_OVERLAY should be your parser of choice. &lt;p /&gt; CHAR_BUFFER is the parser of choice due to element of least surprise and need to mimic existing Slurper behavior as much as possible. &lt;p /&gt; Use CHARACTER_SOURCE for large file parsing. &lt;p /&gt; Use LAX if you want to enable relaxed JSON parsing, i.e., allow comments, no quote strings, etc. &lt;p /&gt; Use CHAR_BUFFER for a non-fancy but super fast parser. &lt;p&gt; Parser speed in order: INDEX_OVERLAY, LAX, CHAR_BUFFER, CHARACTER_SOURCE. &lt;/p&gt; Use Cases: &lt;p /&gt; &lt;p&gt; Use LAX for config files as it allows comments. Use INDEX_OVERLAY for REST calls, WebSocket messages, AJAX, inter process communication, etc. Use CHAR_BUFFER if eager parsing of ints, dates, longs, are appealing. Use CHARACTER_SOURCE if you are dealing with large JSON files over 2MB. INDEX_OVERLAY is highly tuned for object deserialization from JSON. &lt;/p&gt;
 * @author Rick Hightower
 * @since 2.3.0
 */
</ClassComment>
    <FieldList/>
    <MethodList/>
</Class>