<Class>
    <Id>1049</Id>
    <Package>groovy.lang</Package>
    <ClassName>MetaClassRegistryChangeEvent</ClassName>
    <SuperClass>EventObject</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MetaClassRegistryChangeEvent  /** 
 * An event used to propagate meta class updates
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen Theodorou&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>clazz</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>instance</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>metaClass</FieldName>
            <FieldType>MetaClass</FieldType>
        </Field>
        <Field>
            <FieldName>oldMetaClass</FieldName>
            <FieldType>MetaClass</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>MetaClassRegistryChangeEvent</MethodName>
            <MethodComment>/** 
 * Constructs a new MetaClassRegistryChangeEvent Object
 * @param source The object the the event originates at.
 * @param instance Object instance  the MetaClass change is on.
 * @param clazz  The class that is affected by the registry change
 * @param oldMetaClass The old MetaClass
 * @param newMetaClass The new MetaClass
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clazz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oldMetaClass</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newMetaClass</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassToUpdate</MethodName>
            <MethodComment>/** 
 * Get the class that is updated.
 * @return The updated class
 */
</MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewMetaClass</MethodName>
            <MethodComment>/** 
 * Get the new MetaClass
 * @return The new MetaClass
 */
</MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOldMetaClass</MethodName>
            <MethodComment>/** 
 * Get the old MetaClass
 * @return The old MetaClass
 */
</MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPerInstanceMetaClassChange</MethodName>
            <MethodComment>/** 
 * Determines if this event is for a change for a single instance or all instances of the Class.
 * @return whether this event is for a single instance
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment>/** 
 * Returns the instance this event is for.
 * @return the instance or null if this event is for a change for all instances of a class
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRegistry</MethodName>
            <MethodComment>/** 
 * Get the MetaClassRegistry that originates this change
 * @return the source MetaClassRegistry
 */
</MethodComment>
            <ReturnType>MetaClassRegistry</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>