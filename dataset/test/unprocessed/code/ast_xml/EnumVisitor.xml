<Class>
    <Id>434</Id>
    <Package>org.codehaus.groovy.classgen</Package>
    <ClassName>EnumVisitor</ClassName>
    <SuperClass>ClassCodeVisitorSupport</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>FS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PUBLIC_FS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PRIVATE_FS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>sourceUnit</FieldName>
            <FieldType>SourceUnit</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EnumVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cu</ParamName>
                    <ParamType>CompilationUnit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>su</ParamName>
                    <ParamType>SourceUnit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;completeEnum;[node]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSourceUnit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SourceUnit</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>completeEnum</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enumClass</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [isAic=isAnonymousInnerClass(enumClass)]</InnerVar>
                <InnerVar>FieldNode [minValue=null, maxValue=null, values=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addInit;[enumClass, minValue, maxValue, values, isAic]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkForAbstractMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enumClass</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;MethodNode&gt; [methods=enumClass.getMethods()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enumClass</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>values</ParamName>
                    <ParamType>FieldNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;MethodNode&gt; [methods=enumClass.getMethods()]</InnerVar>
                <InnerVar>boolean [hasNext=false]</InnerVar>
                <InnerVar>boolean [hasPrevious=false]</InnerVar>
                <InnerVar>ClassNode [enumRef=enumClass.getPlainNodeReference()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addInit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enumClass</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>minValue</ParamName>
                    <ParamType>FieldNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxValue</ParamName>
                    <ParamType>FieldNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>values</ParamName>
                    <ParamType>FieldNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isAic</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassNode [enumRef=enumClass.getPlainNodeReference()]</InnerVar>
                <InnerVar>Parameter[] [parameter=new Parameter[]{new Parameter(ClassHelper.OBJECT_TYPE.makeArray(),"para")}]</InnerVar>
                <InnerVar>MethodNode [initMethod=new MethodNode("$INIT",PUBLIC_FS | Opcodes.ACC_SYNTHETIC,enumRef,parameter,ClassNode.EMPTY_ARRAY,null)]</InnerVar>
                <InnerVar>ConstructorCallExpression [cce=new ConstructorCallExpression(ClassNode.THIS,new ArgumentListExpression(new SpreadExpression(new VariableExpression("para"))))]</InnerVar>
                <InnerVar>BlockStatement [code=new BlockStatement()]</InnerVar>
                <InnerVar>List&lt;FieldNode&gt; [fields=enumClass.getFields()]</InnerVar>
                <InnerVar>List&lt;Expression&gt; [arrayInit=new ArrayList&lt;Expression&gt;()]</InnerVar>
                <InnerVar>int [value=-1]</InnerVar>
                <InnerVar>Token [assign=Token.newSymbol(Types.ASSIGN,-1,-1)]</InnerVar>
                <InnerVar>List&lt;Statement&gt; [block=new ArrayList&lt;Statement&gt;()]</InnerVar>
                <InnerVar>FieldNode [tempMin=null]</InnerVar>
                <InnerVar>FieldNode [tempMax=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>initMethod;setSynthetic;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>code;addStatement;[new ReturnStatement(cce)]</InnerMethodInvoke>
                <InnerMethodInvoke>initMethod;setCode;[code]</InnerMethodInvoke>
                <InnerMethodInvoke>enumClass;addMethod;[initMethod]</InnerMethodInvoke>
                <InnerMethodInvoke>enumClass;addStaticInitializerStatements;[block, true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exp</ParamName>
                    <ParamType>AnnotatedNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msg</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sourceUnit.getErrorCollector();addErrorAndContinue;[new SyntaxErrorMessage(new SyntaxException(msg + '\n',exp.getLineNumber(),exp.getColumnNumber(),exp.getLastLineNumber(),exp.getLastColumnNumber()),sourceUnit)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isAnonymousInnerClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>enumClass</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InnerClassNode [ic=(InnerClassNode)enumClass]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>