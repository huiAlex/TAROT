<Class>
    <Id>258</Id>
    <Package>groovy.json</Package>
    <ClassName>StreamingJsonDelegate</ClassName>
    <SuperClass>GroovyObjectSupport</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>writer</FieldName>
            <FieldType>Writer</FieldType>
        </Field>
        <Field>
            <FieldName>writer</FieldName>
            <FieldType>Writer</FieldType>
        </Field>
        <Field>
            <FieldName>first</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StreamingJsonBuilder</MethodName>
            <MethodComment>/** 
 * Instantiates a JSON builder.
 * @param writer A writer to which Json will be written
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StreamingJsonBuilder</MethodName>
            <MethodComment>/** 
 * Instantiates a JSON builder, possibly with some existing data structure.
 * @param writer  A writer to which Json will be written
 * @param content a pre-existing data structure, default to null
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>content</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment>/** 
 * Named arguments can be passed to the JSON builder instance to create a root JSON object &lt;p&gt; Example: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json name: "Tim", age: 31 assert w.toString() == '{"name":"Tim","age":31}' } &lt;/pre&gt;
 * @param m a map of key / value pairs
 * @return a map of key / value pairs
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>m</ParamName>
                    <ParamType>Map</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writer;write;[JsonOutput.toJson(m)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment>/** 
 * A list of elements as arguments to the JSON builder creates a root JSON array &lt;p&gt; Example: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) def result = json([1, 2, 3]) assert result == [ 1, 2, 3 ] assert w.toString() == "[1,2,3]" } &lt;/pre&gt;
 * @param l a list of values
 * @return a list of values
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>l</ParamName>
                    <ParamType>List</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writer;write;[JsonOutput.toJson(l)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment>/** 
 * Varargs elements as arguments to the JSON builder create a root JSON array &lt;p&gt; Example: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) def result = json 1, 2, 3 assert result instanceof List assert w.toString() == "[1,2,3]" } &lt;/pre&gt;
 * @param args an array of values
 * @return a list of values
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment>/** 
 * A collection and closure passed to a JSON builder will create a root JSON array applying the closure to each object in the collection &lt;p&gt; Example: &lt;pre class="groovyTestCase"&gt; class Author { String name } def authors = [new Author (name: "Guillaume"), new Author (name: "Jochen"), new Author (name: "Paul")] new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json authors, { Author author -&gt; name author.name } assert w.toString() == '[{"name":"Guillaume"},{"name":"Jochen"},{"name":"Paul"}]' } &lt;/pre&gt;
 * @param coll a collection
 * @param c a closure used to convert the objects of coll
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>coll</ParamName>
                    <ParamType>Collection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>StreamingJsonDelegate;writeCollectionWithClosure;[writer, coll, c]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment>/** 
 * A closure passed to a JSON builder will create a root JSON object &lt;p&gt; Example: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json { name "Tim" age 39 } assert w.toString() == '{"name":"Tim","age":39}' } &lt;/pre&gt;
 * @param c a closure whose method call statements represent key / values of a JSON object
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writer;write;["{"]</InnerMethodInvoke>
                <InnerMethodInvoke>StreamingJsonDelegate;cloneDelegateAndGetContent;[writer, c]</InnerMethodInvoke>
                <InnerMethodInvoke>writer;write;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeMethod</MethodName>
            <MethodComment>/** 
 * A method call on the JSON builder instance will create a root object with only one key whose name is the name of the method being called. This method takes as arguments: &lt;ul&gt; &lt;li&gt;a closure&lt;/li&gt; &lt;li&gt;a map (ie. named arguments)&lt;/li&gt; &lt;li&gt;a map and a closure&lt;/li&gt; &lt;li&gt;or no argument at all&lt;/li&gt; &lt;/ul&gt; &lt;p&gt; Example with a classicala builder-style: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json.person { name "Tim" age 28 } assert w.toString() == '{"person":{"name":"Tim","age":28}}' } &lt;/pre&gt; Or alternatively with a method call taking named arguments: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json.person name: "Tim", age: 32 assert w.toString() == '{"person":{"name":"Tim","age":32}}' } &lt;/pre&gt; If you use named arguments and a closure as last argument, the key/value pairs of the map (as named arguments) and the key/value pairs represented in the closure will be merged together &amp;mdash; the closure properties overriding the map key/values in case the same key is used. &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json.person(name: "Tim", age: 35) { town "Manchester" } assert w.toString() == '{"person":{"name":"Tim","age":35,"town":"Manchester"}}' } &lt;/pre&gt; The empty args call will create a key whose value will be an empty JSON object: &lt;pre class="groovyTestCase"&gt; new StringWriter().with { w -&gt; def json = new groovy.json.StreamingJsonBuilder(w) json.person() assert w.toString() == '{"person":{}}' } &lt;/pre&gt;
 * @param name the single key
 * @param args the value associated with the key
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [notExpectedArgs=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StreamingJsonDelegate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>first</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeMethod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isCollectionWithClosure</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeCollectionWithClosure</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>coll</ParamName>
                    <ParamType>Collection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>closure</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [first=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writer;write;["["]</InnerMethodInvoke>
                <InnerMethodInvoke>writer;write;["]"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cloneDelegateAndGetContent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;cloneDelegateAndGetContent;[w, c, true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cloneDelegateAndGetContent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>first</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StreamingJsonDelegate [delegate=new StreamingJsonDelegate(w,first)]</InnerVar>
                <InnerVar>Closure [cloned=(Closure)c.clone()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cloned;setDelegate;[delegate]</InnerMethodInvoke>
                <InnerMethodInvoke>cloned;setResolveStrategy;[Closure.DELEGATE_FIRST]</InnerMethodInvoke>
                <InnerMethodInvoke>cloned;call;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>curryDelegateAndGetContent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;curryDelegateAndGetContent;[w, c, o, true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>curryDelegateAndGetContent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>first</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StreamingJsonDelegate [delegate=new StreamingJsonDelegate(w,first)]</InnerVar>
                <InnerVar>Closure [curried=c.curry(o)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>curried;setDelegate;[delegate]</InnerMethodInvoke>
                <InnerMethodInvoke>curried;setResolveStrategy;[Closure.DELEGATE_FIRST]</InnerMethodInvoke>
                <InnerMethodInvoke>curried;call;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>