<Class>
    <Id>474</Id>
    <Package>org.codehaus.groovy.control.io</Package>
    <ClassName>ReaderSource</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>HasCleanup</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReaderSource  /** 
 * An interface for things that can supply (and potentially resupply) a Reader on a source stream.
 * @author &lt;a href="mailto:cpoirier@dreaming.org"&gt;Chris Poirier&lt;/a&gt;
 * @version $Id$
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getReader</MethodName>
            <MethodComment>/** 
 * Returns a new Reader on the underlying source object.  Returns null if the source can't be reopened.
 * @throws java.io.IOException if there was an error opening for stream
 * @return the reader to the resource
 */
</MethodComment>
            <ReturnType>Reader</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>canReopenSource</MethodName>
            <MethodComment>/** 
 * Returns true if the source can be restarted (ie. if getReader() will return non-null on subsequent calls.
 * @return true if the resource can be reopened for reading
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLine</MethodName>
            <MethodComment>/** 
 * Returns a line from the source, or null, if unavailable.  If you supply a Janitor, resources will be cached.
 * @param lineNumber the number of the line of interest
 * @param janitor helper to clean up afterwards
 * @return the line of interest
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lineNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>janitor</ParamName>
                    <ParamType>Janitor</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanup</MethodName>
            <MethodComment>/** 
 * Cleans up any cached resources used by getLine().
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getURI</MethodName>
            <MethodComment>/** 
 * Returns a URI for this source.
 * @since 2.3.0
 */
</MethodComment>
            <ReturnType>URI</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>