/** 
 * Classes to generate 'Proxy' objects which implement interfaces, maps of closures and/or extend classes/delegates.
 * @author Paul King
 * @author Guillaume Laforge
 * @author Cedric Champeau
 */

/** 
 * The adapter cache is used to cache proxy classes. When, for example, a call like: map as MyClass is found, then a lookup is made into the cache to find if a suitable adapter already exists. If so, then the class is reused, instead of generating a new class.
 */

/** 
 * Instructs <code>ProxyGenerator</code> to dump generated Groovy source code to standard output during construction. This is useful for debugging purposes but should be turned off in production.
 * @param debug true if you want generated source to be printed
 */

/** 
 * Changes generated methods to have empty implementations. <p> Methods in generated aggregates not supplied in a closures map or base class are given 'default' implementations. The implementation will normally throw an <code>UnsupportedOperationException</code> but setting this boolean will leave it empty.
 * @param emptyMethods true if you want generated methods to be empty
 */

/** 
 * Creates a proxy with a delegate object.
 * @param closureMap the closure for methods not handled by the delegate
 * @param interfaces interfaces to be implemented
 * @param delegate the delegate object
 * @param baseClass the base class
 * @param name the name of the proxy, unused, but kept for compatibility with previous versions of Groovy.
 * @return a proxy object implementing the specified interfaces, and delegating to the provided object
 */

/** 
 * A weak reference which delegates equals and hashcode to the referent.
 */

