/** 
 * <code>QName</code> class represents the value of a qualified name as specified in <a href="http://www.w3.org/TR/xmlschema-2/#QName">XML Schema Part2: Datatypes specification</a>. <p> The value of a QName contains a <b>namespaceURI</b>, a <b>localPart</b> and a <b>prefix</b>. The localPart provides the local part of the qualified name. The namespaceURI is a URI reference identifying the namespace.
 * @version 1.1
 */

/** 
 * comment/shared empty string 
 */

/** 
 * Field namespaceURI 
 */

/** 
 * Field localPart 
 */

/** 
 * Field prefix 
 */

/** 
 * Constructor for the QName.
 * @param localPart Local part of the QName
 */

/** 
 * Constructor for the QName.
 * @param namespaceURI Namespace URI for the QName
 * @param localPart Local part of the QName.
 */

/** 
 * Constructor for the QName.
 * @param namespaceURI Namespace URI for the QName
 * @param localPart Local part of the QName.
 * @param prefix Prefix of the QName.
 */

/** 
 * Gets the Namespace URI for this QName
 * @return Namespace URI
 */

/** 
 * Gets the Local part for this QName
 * @return Local part
 */

/** 
 * Gets the Prefix for this QName
 * @return Prefix
 */

/** 
 * Returns the fully qualified name of this QName
 * @return  a string representation of the QName
 */

/** 
 * Returns a string representation of this QName
 * @return  a string representation of the QName
 */

/** 
 * Tests if this QName matches another object. <p> If the given object is not a QName or String equivalent or is null then this method returns <tt>false</tt>. <p> For two QNames to be considered matching requires that both localPart and namespaceURI must be equal or one of them is a wildcard. If the supplied object is a String, then it is split in two on the last colon and the first half is matched against the prefix || namespaceURI and the second half is matched against the localPart
 * @param o the reference object with which to compare
 * @return <code>true</code> if the given object matchesthis QName: <code>false</code> otherwise.
 */

/** 
 * Returns a QName holding the value of the specified String. <p> The string must be in the form returned by the QName.toString() method, i.e. "{namespaceURI}localPart", with the "{namespaceURI}" part being optional. <p> This method doesn't do a full validation of the resulting QName. In particular, it doesn't check that the resulting namespace URI is a legal URI (per RFC 2396 and RFC 2732), nor that the resulting local part is a legal NCName per the XML Namespaces specification.
 * @param s the string to be parsed
 * @throws java.lang.IllegalArgumentException If the specified String cannot be parsed as a QName
 * @return QName corresponding to the given String
 */

/** 
 * Returns a hash code value for this QName object. The hash code is based on both the localPart and namespaceURI parts of the QName. This method satisfies the  general contract of the <code>Object.hashCode</code> method.
 * @return a hash code value for this Qname object
 */

