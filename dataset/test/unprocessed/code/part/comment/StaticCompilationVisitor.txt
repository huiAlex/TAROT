/** 
 * This visitor is responsible for amending the AST with static compilation metadata or transform the AST so that a class or a method can be statically compiled. It may also throw errors specific to static compilation which are not considered as an error at the type check pass. For example, usage of spread operator is not allowed in statically compiled portions of code, while it may be statically checked. Static compilation relies on static type checking, which explains why this visitor extends the type checker visitor.
 * @author Cedric Champeau
 */

/** 
 * If we are in a constructor, that is static compiled, but in a class, that is not, it may happen that init code from object initializers, fields or properties is added into the constructor code. The backend assumes a purely static contructor, so it may fail if it encounters dynamic code here. Thus we make this kind of code fail
 */

/** 
 * Adds special accessors for private constants so that inner classes can retrieve them.
 */

/** 
 * This method is used to add "bridge" methods for private methods of an inner/outer class, so that the outer class is capable of calling them. It does basically the same job as access$000 like methods in Java.
 * @param node an inner/outer class node for which to generate bridge methods
 */

