/** 
 * A static helper class to make bytecode generation easier and act as a facade over the Invoker
 * @author <a href="mailto:james@coredevelopers.net">James Strachan</a>
 */

/** 
 * This is so we don't have to reorder the stack when we call this method. At some point a better name might be in order.
 */

/** 
 * This is so we don't have to reorder the stack when we call this method. At some point a better name might be in order.
 */

/** 
 * This is so we don't have to reorder the stack when we call this method. At some point a better name might be in order.
 */

/** 
 * Returns the method pointer for the given object name
 */

/** 
 * Find the right hand regex within the left hand string and return a matcher.
 * @param left  string to compare
 * @param right regular expression to compare the string to
 */

/** 
 * Find the right hand regex within the left hand string and return a matcher.
 * @param left  string to compare
 * @param right regular expression to compare the string to
 */

/** 
 * Sets the properties on the given object
 */

/** 
 * Writes an object to a Writer using Groovy's default representation for the object.
 */

/** 
 * Appends an object to an Appendable using Groovy's default representation for the object.
 */

/** 
 * A helper method to format the arguments types as a comma-separated list.
 * @param arguments the type to process
 * @return the string representation of the type
 */

/** 
 * A helper method to return the string representation of a map with bracket boundaries "[" and "]".
 * @param arg the map to process
 * @return the string representation of the map
 */

/** 
 * A helper method to return the string representation of a map with bracket boundaries "[" and "]".
 * @param arg     the map to process
 * @param maxSize stop after approximately this many characters and append '...'
 * @return the string representation of the map
 */

/** 
 * A helper method to return the string representation of a list with bracket boundaries "[" and "]".
 * @param arg the collection to process
 * @return the string representation of the collection
 */

/** 
 * A helper method to return the string representation of a list with bracket boundaries "[" and "]".
 * @param arg     the collection to process
 * @param maxSize stop after approximately this many characters and append '...'
 * @return the string representation of the collection
 */

/** 
 * A helper method to return the string representation of a list with bracket boundaries "[" and "]".
 * @param arg     the collection to process
 * @param maxSize stop after approximately this many characters and append '...'
 * @param safe    whether to use a default object representation for any item in the collection if an exception occurs when generating its toString
 * @return the string representation of the collection
 */

/** 
 * A helper method to return the string representation of an array of objects with brace boundaries "[" and "]".
 * @param arguments the array to process
 * @return the string representation of the array
 */

/** 
 * A helper method to return the string representation of an array of objects with brace boundaries "[" and "]".
 * @param arguments the array to process
 * @param maxSize stop after approximately this many characters and append '...'
 * @param safe    whether to use a default object representation for any item in the array if an exception occurs when generating its toString
 * @return the string representation of the array
 */

/** 
 * Invokes the given method on the object.
 */

/** 
 * Converts the given object into an array; if its an array then just cast otherwise wrap it in an array
 */

