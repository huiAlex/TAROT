/** 
 * A wrapper for Closure to support currying. Normally used only internally through the <code>curry()</code>, <code>rcurry()</code> or <code>ncurry()</code> methods on <code>Closure</code>. Typical usages: <pre> // normal usage def unitAdder = { first, second, unit -> "${first + second} $unit" } assert unitAdder(10, 15, "minutes") == "25 minutes" assert unitAdder.curry(60)(15, "minutes") == "75 minutes" def minuteAdder = unitAdder.rcurry("minutes") assert minuteAdder(15, 60) == "75 minutes" // explicit creation import org.codehaus.groovy.runtime.CurriedClosure assert new CurriedClosure(unitAdder, 45)(15, "minutes") == "60 minutes" assert new CurriedClosure(unitAdder, "six", "ty")("minutes") == "sixty minutes" </pre>
 * @author Jochen Theodorou
 * @author Paul King
 */

