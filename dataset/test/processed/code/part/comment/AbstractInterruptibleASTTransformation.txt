base class:compound
class condit:compound
ast transform:compound
transform class:nmod
throw transform:acl
interrupt throw:obj
whensom condit:compound
condit met:nsubj
subclass implement:nsubj
method implement:obj
set implement:advcl
condit set:obj
interrupt statement:compound
statement condit:nmod
subclass implement:nsubj
method implement:obj
provid implement:advcl
good resolut:amod
error resolut:compound
resolut provid:obj
return check:nsubj
interrupt return:dep
statement check:obj
block statement:compound
statement wrap:obl
element interrupt:nsubj
interrupt statement:acl
check interrupt:dep
statement check:obj
block statement statement:compound
block statement:compound
element interrupt:nsubj
check interrupt:amod
wrap statement:acl
shortcut method:compound
avoid method:acl
duplic avoid:xcomp
code duplic:obj
type duplic:obl
loop type:nmod
loop block wrap:nsubj
type loop block:nmod
loop statement:compound
statement type:nmod
