/**
 * QName class represents the value of a qualified name
 * as specified in XML
 * Schema Part2: Datatypes specification.
 * 
 * The value of a QName contains a namespaceURI, a localPart and a prefix.
 * The localPart provides the local part of the qualified name. The
 * namespaceURI is a URI reference identifying the namespace.
 *
 *  */

/** comment/shared empty string */

/** Field namespaceURI */

/** Field localPart */

/** Field prefix */

/**
     * Constructor for the QName.
     *
     *      */

/**
     * Constructor for the QName.
     *
     *      *      */

/**
     * Constructor for the QName.
     *
     *      *      *      */

/**
     * Gets the Namespace URI for this QName
     *
     *      */

/**
     * Gets the Local part for this QName
     *
     *      */

/**
     * Gets the Prefix for this QName
     *
     *      */

/**
     * Returns the fully qualified name of this QName
     *
     *      */

/**
     * Returns a string representation of this QName
     *
     *      */

/**
     * Tests if this QName matches another object.
     * 
     * If the given object is not a QName or String equivalent or is null then this method
     * returns false.
     * 
     * For two QNames to be considered matching requires that both
     * localPart and namespaceURI must be equal or one of them is a wildcard.
     *
     * If the supplied object is a String, then it is split in two on the last colon
     * and the first half is matched against the prefix || namespaceURI
     * and the second half is matched against the localPart
     *
     *      *
     *      * this QName: false otherwise.
     */

/**
     * Returns a QName holding the value of the specified String.
     * 
     * The string must be in the form returned by the QName.toString()
     * method, i.e. "{namespaceURI}localPart", with the "{namespaceURI}"
     * part being optional.
     * 
     * This method doesn't do a full validation of the resulting QName.
     * In particular, it doesn't check that the resulting namespace URI
     * is a legal URI (per RFC 2396 and RFC 2732), nor that the resulting
     * local part is a legal NCName per the XML Namespaces specification.
     *
     *      *      *      */

/**
     * Returns a hash code value for this QName object. The hash code
     * is based on both the localPart and namespaceURI parts of the
     * QName. This method satisfies the  general contract of the
     * Object.hashCode method.
     *
     *      */

