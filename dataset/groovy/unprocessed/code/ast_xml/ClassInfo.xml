<Class>
    <Id>859</Id>
    <Package>org.codehaus.groovy.reflection</Package>
    <ClassName>ClassInfo</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ClassInfo  /** 
 * Handle for all information we want to keep about the class
 * @author Alex.Tkachman
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>cachedClassRef</FieldName>
            <FieldType>LazyCachedClassRef</FieldType>
        </Field>
        <Field>
            <FieldName>artifactClassLoader</FieldName>
            <FieldType>LazyClassLoaderRef</FieldType>
        </Field>
        <Field>
            <FieldName>lock</FieldName>
            <FieldType>LockableObject</FieldType>
        </Field>
        <Field>
            <FieldName>hash</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>klazz</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>version</FieldName>
            <FieldType>AtomicInteger</FieldType>
        </Field>
        <Field>
            <FieldName>strongMetaClass</FieldName>
            <FieldType>MetaClass</FieldType>
        </Field>
        <Field>
            <FieldName>weakMetaClass</FieldName>
            <FieldType>ManagedReference</FieldType>
        </Field>
        <Field>
            <FieldName>weakMetaClass</FieldName>
            <FieldType>MetaClass</FieldType>
        </Field>
        <Field>
            <FieldName>dgmMetaMethods</FieldName>
            <FieldType>MetaMethod[]</FieldType>
        </Field>
        <Field>
            <FieldName>newMetaMethods</FieldName>
            <FieldType>MetaMethod[]</FieldType>
        </Field>
        <Field>
            <FieldName>perInstanceMetaClassMap</FieldName>
            <FieldType>ManagedConcurrentMap</FieldType>
        </Field>
        <Field>
            <FieldName>perInstanceMetaClassMap</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>softBundle</FieldName>
            <FieldType>ReferenceBundle</FieldType>
        </Field>
        <Field>
            <FieldName>weakBundle</FieldName>
            <FieldType>ReferenceBundle</FieldType>
        </Field>
        <Field>
            <FieldName>modifiedExpandos</FieldName>
            <FieldType>ManagedLinkedList</FieldType>
        </Field>
        <Field>
            <FieldName>modifiedExpandos</FieldName>
            <FieldType>ClassInfo</FieldType>
        </Field>
        <Field>
            <FieldName>globalClassValue</FieldName>
            <FieldType>GroovyClassValue</FieldType>
        </Field>
        <Field>
            <FieldName>globalClassValue</FieldName>
            <FieldType>ClassInfo</FieldType>
        </Field>
        <Field>
            <FieldName>globalClassSet</FieldName>
            <FieldType>GlobalClassSet</FieldType>
        </Field>
        <Field>
            <FieldName>myThread</FieldName>
            <FieldType>PhantomReference</FieldType>
        </Field>
        <Field>
            <FieldName>myThread</FieldName>
            <FieldType>Thread</FieldType>
        </Field>
        <Field>
            <FieldName>recentThreadMapRef</FieldName>
            <FieldType>SoftReference</FieldType>
        </Field>
        <Field>
            <FieldName>recentThreadMapRef</FieldName>
            <FieldType>LocalMap</FieldType>
        </Field>
        <Field>
            <FieldName>localMapRef</FieldName>
            <FieldType>WeakReference</FieldType>
        </Field>
        <Field>
            <FieldName>localMapRef</FieldName>
            <FieldType>ThreadLocalMapHandler</FieldType>
        </Field>
        <Field>
            <FieldName>info</FieldName>
            <FieldType>ClassInfo</FieldType>
        </Field>
        <Field>
            <FieldName>info</FieldName>
            <FieldType>ClassInfo</FieldType>
        </Field>
        <Field>
            <FieldName>debug</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>count</FieldName>
            <FieldType>AtomicInteger</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>items</FieldName>
            <FieldType>ManagedLinkedList</FieldType>
        </Field>
        <Field>
            <FieldName>items</FieldName>
            <FieldType>ClassInfo</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>computeValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassInfo [ret=new ClassInfo(type)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>globalClassSet;add;[ret]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>klazz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getVersion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>incVersion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>version;incrementAndGet;[]</InnerMethodInvoke>
                <InnerMethodInvoke>VMPluginFactory.getPlugin();invalidateCallSites;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModifiedExpando</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExpandoMetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MetaClass [strongRef=strongMetaClass]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearModifiedExpandos</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCachedClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getArtifactClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassLoaderForClassArtifacts</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LocalMap [map=getLocalClassInfoMap()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLocalClassInfoMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LocalMap</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ThreadLocalMapHandler [handler=localMapRef.get()]</InnerVar>
                <InnerVar>SoftReference&lt;LocalMap&gt; [ref=null]</InnerVar>
                <InnerVar>LocalMap [map=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Collection&lt;ClassInfo&gt; [localClassInfos=getAllLocalClassInfo()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onAllClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>ClassInfoAction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;ClassInfo&gt; [localClassInfos=getAllLocalClassInfo()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllGlobalClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllLocalClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LocalMap [map=getLocalClassInfoMap()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStrongMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStrongMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>answer</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MetaClass [strongRef=strongMetaClass]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>version;incrementAndGet;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;replaceWeakMetaClassRef;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWeakMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ManagedReference&lt;MetaClass&gt; [weakRef=weakMetaClass]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setWeakMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>answer</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ManagedReference&lt;MetaClass&gt; [newRef=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>version;incrementAndGet;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;replaceWeakMetaClassRef;[newRef]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceWeakMetaClassRef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newRef</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ManagedReference&lt;MetaClass&gt; [weakRef=weakMetaClass]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMetaClassForClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MetaClass [strongMc=strongMetaClass]</InnerVar>
                <InnerVar>MetaClass [weakMc=getWeakMetaClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMetaClassUnderLock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MetaClass [answer=getStrongMetaClass()]</InnerVar>
                <InnerVar>MetaClassRegistry [metaClassRegistry=GroovySystem.getMetaClassRegistry()]</InnerVar>
                <InnerVar>MetaClassRegistry.MetaClassCreationHandle [mccHandle=metaClassRegistry.getMetaClassCreationHandler()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>answer;initialize;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isValidWeakMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>metaClass</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isValidWeakMetaClass</MethodName>
            <MethodComment>/** 
 * if EMC.enableGlobally() is OFF, return whatever the cached answer is. but if EMC.enableGlobally() is ON and the cached answer is not an EMC, come up with a fresh answer
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>metaClass</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mccHandle</ParamName>
                    <ParamType>MetaClassRegistry.MetaClassCreationHandle</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [enableGloballyOn=(mccHandle instanceof ExpandoMetaClassCreationHandle)]</InnerVar>
                <InnerVar>boolean [cachedAnswerIsEMC=(metaClass instanceof ExpandoMetaClass)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>MetaClass [answer=getMetaClassForClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;lock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MetaClass [instanceMetaClass=getPerInstanceMetaClass(obj)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>size</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fullSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createCachedClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>klazz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classInfo</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CachedClass [cachedClass]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSAM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lock;lock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unlock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lock;unlock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPerInstanceMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaClass</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setPerInstanceMetaClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metaClass</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>version;incrementAndGet;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasPerInstanceMetaClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LocalMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>get</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClassInfo [info=super.get(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LocalMap</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>get</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LocalMap</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SoftReference&lt;LocalMap&gt; [mapRef=recentThreadMapRef]</InnerVar>
                <InnerVar>LocalMap [recent=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LazyCachedClassRef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bundle</ParamName>
                    <ParamType>ReferenceBundle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>info</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LazyClassLoaderRef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bundle</ParamName>
                    <ParamType>ReferenceBundle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>info</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassLoaderForClassArtifacts</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ClassInfoCleanup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classInfo</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finalizeRef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ClassInfo [classInfo=get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>classInfo;setStrongMetaClass;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>classInfo.cachedClassRef;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>classInfo.artifactClassLoader;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DebugRef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>klazz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>count;incrementAndGet;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finalizeRef</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>size</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fullSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>values</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>add</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classInfo</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>