<Class>
    <Id>909</Id>
    <Package>org.codehaus.groovy.vmplugin.v7</Package>
    <ClassName>IndyGuardsFiltersAndSignatures</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IndyGuardsFiltersAndSignatures  /** 
 * This class contains guards, runtime filters and MethodType signatures used by indy.
 * @author &lt;a href="mailto:blackdrag@gmx.org"&gt;Jochen "blackdrag" Theodorou&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ZERO_GUARD</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>OBJECT_GUARD</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>CLASS1_GUARD</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>METACLASS1_GUARD</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>GRE_GUARD</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>OBJECT_FILTER</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>BOUND_INVOKER</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>ANO_INVOKER</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>INVOKER</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>GET_INVOKER</FieldName>
            <FieldType>MethodType</FieldType>
        </Field>
        <Field>
            <FieldName>SAME_CLASS</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>UNWRAP_METHOD</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>SAME_MC</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>IS_NULL</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>UNWRAP_EXCEPTION</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>META_METHOD_INVOKER</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>GROOVY_OBJECT_INVOKER</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>GROOVY_OBJECT_GET_PROPERTY</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>HAS_CATEGORY_IN_CURRENT_THREAD_GUARD</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>BEAN_CONSTRUCTOR_PROPERTY_SETTER</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>META_PROPERTY_GETTER</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>SLOW_META_CLASS_FIND</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>META_CLASS_INVOKE_STATIC_METHOD</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>MOP_GET</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>MOP_INVOKE_CONSTRUCTOR</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>MOP_INVOKE_METHOD</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>INTERCEPTABLE_INVOKER</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>CLASS_FOR_NAME</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>BOOLEAN_IDENTITY</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>DTT_CAST_TO_TYPE</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>SAM_CONVERSION</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>HASHSET_CONSTRUCTOR</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>ARRAYLIST_CONSTRUCTOR</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>GROOVY_CAST_EXCEPTION</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>EQUALS</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
        <Field>
            <FieldName>NULL_REF</FieldName>
            <FieldType>MethodHandle</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setBeanProperties</MethodName>
            <MethodComment>/** 
 * This method is called by he handle to realize the bean constructor with property map.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mc</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bean</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Map</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeGroovyObjectInvoker</MethodName>
            <MethodComment>/** 
 * {@link GroovyObject#invokeMethod(String,Object)} path as fallback.This method is called by the handle as exception handler in case the selected method causes a MissingMethodExecutionFailed, where we will just give through the exception, and a normal  MissingMethodException where we call  {@link GroovyObject#invokeMethod(String,Object)}if receiver class, the type transported by the exception and the name for the method stored in the exception and our current method name  are equal. Should those conditions not apply we just rethrow the exception.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>MissingMethodException</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receiver</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unwrap</MethodName>
            <MethodComment>/** 
 * Unwraps a  {@link GroovyRuntimeException}. This method is called by the handle to unwrap internal exceptions  of the runtime.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gre</ParamName>
                    <ParamType>GroovyRuntimeException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSameMetaClass</MethodName>
            <MethodComment>/** 
 * called by handle
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mc</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receiver</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unwrap</MethodName>
            <MethodComment>/** 
 * Unwraps a  {@link Wrapper}. This method is called by the handle to unwrap a Wrapper, which we use to force method selection.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Wrapper [w=(Wrapper)o]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isNull</MethodName>
            <MethodComment>/** 
 * Guard to check if the argument is null. This method is called by the handle to check if the provided argument is null.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sameClass</MethodName>
            <MethodComment>/** 
 * Guard to check if the provided Object has the same class as the provided Class. This method will return false if the Object is null.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>