<Class>
    <Id>856</Id>
    <Package>org.codehaus.groovy.binding</Package>
    <ClassName>BindPath</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BindPath  /** 
 * The bind path object.  This class represents one "step" in the bind path.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>localSynthetics</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>localSynthetics</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>currentObject</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>propertyName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>localListener</FieldName>
            <FieldType>PropertyChangeListener</FieldType>
        </Field>
        <Field>
            <FieldName>globalListener</FieldName>
            <FieldType>PropertyChangeListener</FieldType>
        </Field>
        <Field>
            <FieldName>syntheticFullBinding</FieldName>
            <FieldType>BindingUpdatable</FieldType>
        </Field>
        <Field>
            <FieldName>children</FieldName>
            <FieldType>BindPath[]</FieldType>
        </Field>
        <Field>
            <FieldName>NAME_PARAMS</FieldName>
            <FieldType>Class[]</FieldType>
        </Field>
        <Field>
            <FieldName>GLOBAL_PARAMS</FieldName>
            <FieldType>Class[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>updatePath</MethodName>
            <MethodComment>/** 
 * Called when we detect a change somewhere down our path. First, check to see if our object is changing.  If so remove our old listener Next, update the reference object the children have and recurse Finally, add listeners if we have a different object
 * @param listener This listener to attach.
 * @param newObject The object we should read our property off of.
 * @param updateSet The list of objects we have added listeners to
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>PropertyChangeListener</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newObject</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>updateSet</ParamName>
                    <ParamType>Set</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addAllListeners</MethodName>
            <MethodComment>/** 
 * Adds all the listeners to the objects in the bind path. This assumes that we are not added as listeners to any of them, hence it is not idempotent.
 * @param listener This listener to attach.
 * @param newObject The object we should read our property off of.
 * @param updateSet The list of objects we have added listeners to
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>PropertyChangeListener</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newObject</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>updateSet</ParamName>
                    <ParamType>Set</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addListeners;[listener, newObject, updateSet]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>extractNewValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newObject</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [newValue]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListeners</MethodName>
            <MethodComment>/** 
 * Add listeners to a specific object.  Updates the bould flags and update set
 * @param listener This listener to attach.
 * @param newObject The object we should read our property off of.
 * @param updateSet The list of objects we have added listeners to
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listener</ParamName>
                    <ParamType>PropertyChangeListener</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newObject</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>updateSet</ParamName>
                    <ParamType>Set</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;removeListeners;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeListeners</MethodName>
            <MethodComment>/** 
 * Remove listeners, believing that our bould flags are accurate and it removes only as declared.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateLocalSyntheticProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>synthetics</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [endName="#" + propertyName]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSyntheticTriggerBinding</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TriggerBinding</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newObject</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class [currentClass=newObject.getClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>