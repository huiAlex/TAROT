<Class>
    <Id>210</Id>
    <Package>groovy.ui.text</Package>
    <ClassName>GroovyFilter</ClassName>
    <SuperClass>StructuredSyntaxDocumentFilter</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GroovyFilter  /** 
 * @author Evan "Hippy" Slatis
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>AUTO_TAB_ACTION</FieldName>
            <FieldType>Action</FieldType>
        </Field>
        <Field>
            <FieldName>COMMENT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SLASH_STAR_COMMENT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SLASH_SLASH_COMMENT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>QUOTES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SINGLE_QUOTES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SLASHY_QUOTES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DIGIT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DECIMAL_INTEGER_LITERAL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HEX_INTEGER_LITERAL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>OCTAL_INTEGER_LITERAL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>BINARY_INTEGER_LITERAL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DECIMAL_FLOATING_POINT_LITERAL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HEXADECIMAL_FLOATING_POINT_LITERAL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>IDENT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>OPERATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT_PARENS</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COMMENT_COLOR</FieldName>
            <FieldType>Color</FieldType>
        </Field>
        <Field>
            <FieldName>RESERVED_WORD</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>RESERVED_WORDS</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>doc</FieldName>
            <FieldType>StyledDocument</FieldType>
        </Field>
        <Field>
            <FieldName>segment</FieldName>
            <FieldType>Segment</FieldType>
        </Field>
        <Field>
            <FieldName>buffer</FieldName>
            <FieldType>StringBuffer</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>GroovyFilter</MethodName>
            <MethodComment>/** 
 * Creates a new instance of GroovyFilter
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>doc</ParamName>
                    <ParamType>DefaultStyledDocument</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StyleContext [styleContext=StyleContext.getDefaultStyleContext()]</InnerVar>
                <InnerVar>Style [defaultStyle=styleContext.getStyle(StyleContext.DEFAULT_STYLE)]</InnerVar>
                <InnerVar>Style [comment=styleContext.addStyle(COMMENT,defaultStyle)]</InnerVar>
                <InnerVar>Style [quotes=styleContext.addStyle(QUOTES,defaultStyle)]</InnerVar>
                <InnerVar>Style [charQuotes=styleContext.addStyle(SINGLE_QUOTES,defaultStyle)]</InnerVar>
                <InnerVar>Style [slashyQuotes=styleContext.addStyle(SLASHY_QUOTES,defaultStyle)]</InnerVar>
                <InnerVar>Style [digit=styleContext.addStyle(DIGIT,defaultStyle)]</InnerVar>
                <InnerVar>Style [operation=styleContext.addStyle(OPERATION,defaultStyle)]</InnerVar>
                <InnerVar>Style [ident=styleContext.addStyle(IDENT,defaultStyle)]</InnerVar>
                <InnerVar>Style [reservedWords=styleContext.addStyle(RESERVED_WORD,defaultStyle)]</InnerVar>
                <InnerVar>Style [leftParens=styleContext.addStyle(IDENT,defaultStyle)]</InnerVar>
                <InnerVar>StructuredSyntaxDocumentFilter.LexerNode [node=createLexerNode()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>StyleConstants;setForeground;[comment, COMMENT_COLOR]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setItalic;[comment, true]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setForeground;[quotes, Color.MAGENTA.darker().darker()]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setForeground;[charQuotes, Color.GREEN.darker().darker()]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setForeground;[slashyQuotes, Color.ORANGE.darker()]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setForeground;[digit, Color.RED.darker()]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setBold;[operation, true]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setBold;[reservedWords, true]</InnerMethodInvoke>
                <InnerMethodInvoke>StyleConstants;setForeground;[reservedWords, Color.BLUE.darker().darker()]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[SLASH_STAR_COMMENT, comment]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[SLASH_SLASH_COMMENT, comment]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[QUOTES, quotes]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[SINGLE_QUOTES, charQuotes]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[SLASHY_QUOTES, slashyQuotes]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[new String[]{HEX_INTEGER_LITERAL,OCTAL_INTEGER_LITERAL,BINARY_INTEGER_LITERAL,DECIMAL_FLOATING_POINT_LITERAL,HEXADECIMAL_FLOATING_POINT_LITERAL,DECIMAL_INTEGER_LITERAL}, digit]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[OPERATION, operation]</InnerMethodInvoke>
                <InnerMethodInvoke>node;putStyle;[RESERVED_WORDS, reservedWords]</InnerMethodInvoke>
                <InnerMethodInvoke>node;putStyle;[LEFT_PARENS, leftParens]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putChild;[OPERATION, node]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putStyle;[IDENT, ident]</InnerMethodInvoke>
                <InnerMethodInvoke>node;putStyle;[RESERVED_WORDS, reservedWords]</InnerMethodInvoke>
                <InnerMethodInvoke>getRootNode();putChild;[IDENT, node]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>installAutoTabAction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tComp</ParamName>
                    <ParamType>JTextComponent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>KeyStroke [keyStroke=KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tComp.getActionMap();put;["GroovyFilter-autoTab", AUTO_TAB_ACTION]</InnerMethodInvoke>
                <InnerMethodInvoke>tComp.getInputMap();put;[keyStroke, "GroovyFilter-autoTab"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPerformed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ae</ParamName>
                    <ParamType>ActionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JTextComponent [tComp=(JTextComponent)ae.getSource()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findTabLocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>offset</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [cont=true]</InnerVar>
                <InnerVar>int [index=offset &lt; 0 || segment.array[offset] == '}' ? -4 : 0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>