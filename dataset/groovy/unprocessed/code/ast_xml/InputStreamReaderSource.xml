<Class>
    <Id>1034</Id>
    <Package>org.codehaus.groovy.control.io</Package>
    <ClassName>InputStreamReaderSource</ClassName>
    <SuperClass>AbstractReaderSource</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InputStreamReaderSource  /** 
 * A ReaderSource for source strings.
 * @author &lt;a href="mailto:cpoirier@dreaming.org"&gt;Chris Poirier&lt;/a&gt;
 * @version $Id$
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>stream</FieldName>
            <FieldType>InputStream</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>InputStreamReaderSource</MethodName>
            <MethodComment>/** 
 * Creates the ReaderSource from a File descriptor.
 * @param stream        stream containing source
 * @param configuration configuration for compiling source
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>configuration</ParamName>
                    <ParamType>CompilerConfiguration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReader</MethodName>
            <MethodComment>/** 
 * Returns a new Reader on the underlying source object.
 */
</MethodComment>
            <ReturnType>Reader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>canReopenSource</MethodName>
            <MethodComment>/** 
 * Returns true if the source can be restarted (ie. if getReader() will return non-null on subsequent calls.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getURI</MethodName>
            <MethodComment>/** 
 * TODO: Should return the URI for this source, but we can't know what it is here.
 * @return null
 */
</MethodComment>
            <ReturnType>URI</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>