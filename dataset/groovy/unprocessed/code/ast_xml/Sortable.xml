<Class>
    <Id>920</Id>
    <Package>groovy.transform</Package>
    <ClassName>Sortable</ClassName>
    <ClassComment>Sortable  /** 
 * A class annotation used to make a class Comparable by multiple Comparators. As an example, given this class: &lt;pre&gt; {@code @Sortable} class Person {String first String last Integer born } &lt;/pre&gt; The generated Groovy class will: &lt;ul&gt; &lt;li&gt;implement the  {@code Comparable} interface&lt;/li&gt;&lt;li&gt;have a  {@code compareTo} method based on the {@code first}, {@code last} and {@code born} properties (priority ordering will be accordingto the ordering of property definition, highest first, unless 'includes' is used; in which case, priority will be according to the order given in the includes list)&lt;/li&gt; &lt;li&gt;have three  {@code Comparator} methods named {@code comparatorByFirst}, {@code comparatorByLast} and {@code comparatorByBorn}&lt;/li&gt; &lt;/ul&gt; The properties within the class must themselves be  {@code Comparable} or {@code @Sortable}.
 * @author Andres Almiray
 * @author Paul King
 */
</ClassComment>
    <FieldList/>
    <MethodList/>
</Class>