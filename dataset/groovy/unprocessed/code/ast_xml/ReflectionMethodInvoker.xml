<Class>
    <Id>348</Id>
    <Package>org.codehaus.groovy.runtime</Package>
    <ClassName>ReflectionMethodInvoker</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReflectionMethodInvoker  /** 
 * Utility class to call methods through reflection, and falls through using the &lt;code&gt;Invoker&lt;/code&gt; to call the method if it fails. The class is particularly useful for Groovy classes implementing &lt;code&gt;GroovyInterceptable&lt;/code&gt;, since it is not possible to call any method from this class, because it is intercepted by the &lt;code&gt;invokeMethod()&lt;/code&gt; method.
 * @author Guillaume Laforge
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>invoke</MethodName>
            <MethodComment>/** 
 * Invoke a method through reflection. Falls through to using the Invoker to call the method in case the reflection call fails..
 * @param object the object on which to invoke a method
 * @param methodName the name of the method to invoke
 * @param parameters the parameters of the method call
 * @return the result of the method call
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>object</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameters</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>