<Class>
    <Id>814</Id>
    <Package>org.codehaus.groovy.reflection</Package>
    <ClassName>CachedClass</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CachedClass  /** 
 * @author Alex.Tkachman
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>EMPTY_METHOD_ARRAY</FieldName>
            <FieldType>Method[]</FieldType>
        </Field>
        <Field>
            <FieldName>cachedClass</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>classInfo</FieldName>
            <FieldType>ClassInfo</FieldType>
        </Field>
        <Field>
            <FieldName>softBundle</FieldName>
            <FieldType>ReferenceBundle</FieldType>
        </Field>
        <Field>
            <FieldName>fields</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>fields</FieldName>
            <FieldType>CachedField[]</FieldType>
        </Field>
        <Field>
            <FieldName>constructors</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>constructors</FieldName>
            <FieldType>CachedConstructor[]</FieldType>
        </Field>
        <Field>
            <FieldName>methods</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>methods</FieldName>
            <FieldType>CachedMethod[]</FieldType>
        </Field>
        <Field>
            <FieldName>cachedSuperClass</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>cachedSuperClass</FieldName>
            <FieldType>CachedClass</FieldType>
        </Field>
        <Field>
            <FieldName>callSiteClassLoader</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>callSiteClassLoader</FieldName>
            <FieldType>CallSiteClassLoader</FieldType>
        </Field>
        <Field>
            <FieldName>hierarchy</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>hierarchy</FieldName>
            <FieldType>LinkedList&lt;ClassInfo&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTY</FieldName>
            <FieldType>MetaMethod[]</FieldType>
        </Field>
        <Field>
            <FieldName>hashCode</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>mopMethods</FieldName>
            <FieldType>CachedMethod[]</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTY_ARRAY</FieldName>
            <FieldType>CachedClass[]</FieldType>
        </Field>
        <Field>
            <FieldName>declaredInterfaces</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>declaredInterfaces</FieldName>
            <FieldType>Set&lt;CachedClass&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>interfaces</FieldName>
            <FieldType>LazyReference</FieldType>
        </Field>
        <Field>
            <FieldName>interfaces</FieldName>
            <FieldType>Set&lt;CachedClass&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>isArray</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>isPrimitive</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>modifiers</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>distance</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>isInterface</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>isNumber</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>Comparator</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>Comparator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedField[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Field[] [declaredFields=(Field[])AccessController.doPrivileged(new PrivilegedAction(){
  public Object run(){
    final Field[] df=getTheClass().getDeclaredFields();
    try {
      AccessibleObject.setAccessible(df,true);
    }
 catch (    SecurityException e) {
    }
    return df;
  }
}
)]</InnerVar>
                <InnerVar>CachedField[] [fields=new CachedField[declaredFields.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Field[] [df=getTheClass().getDeclaredFields()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedConstructor[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Constructor[] [declaredConstructors=(Constructor[])AccessController.doPrivileged(new PrivilegedAction(){
  public Object run(){
    return getTheClass().getDeclaredConstructors();
  }
}
)]</InnerVar>
                <InnerVar>CachedConstructor[] [constructors=new CachedConstructor[declaredConstructors.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedMethod[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Method[] [declaredMethods=(Method[])AccessController.doPrivileged(new PrivilegedAction(){
  public Object run(){
    try {
      final Method[] dm=getTheClass().getDeclaredMethods();
      try {
        AccessibleObject.setAccessible(dm,true);
      }
 catch (      SecurityException e) {
      }
      return dm;
    }
 catch (    Throwable e) {
      return EMPTY_METHOD_ARRAY;
    }
  }
}
)]</InnerVar>
                <InnerVar>List&lt;CachedMethod&gt; [methods=new ArrayList&lt;CachedMethod&gt;(declaredMethods.length)]</InnerVar>
                <InnerVar>List&lt;CachedMethod&gt; [mopMethods=new ArrayList&lt;CachedMethod&gt;(declaredMethods.length)]</InnerVar>
                <InnerVar>CachedMethod[] [resMethods=methods.toArray(new CachedMethod[methods.size()])]</InnerVar>
                <InnerVar>CachedClass [superClass=getCachedSuperClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;sort;[resMethods]</InnerMethodInvoke>
                <InnerMethodInvoke>Arrays;sort;[CachedClass.this.mopMethods, CachedMethodComparatorByName.INSTANCE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CallSiteClassLoader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CallSiteClassLoader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;ClassInfo&gt; [res=new LinkedHashSet&lt;ClassInfo&gt;()]</InnerVar>
                <InnerVar>CachedClass [superClass=getCachedSuperClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>res;add;[classInfo]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;CachedClass&gt; [res=new HashSet&lt;CachedClass&gt;(0)]</InnerVar>
                <InnerVar>Class[] [classes=getTheClass().getInterfaces()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;CachedClass&gt; [res=new HashSet&lt;CachedClass&gt;(0)]</InnerVar>
                <InnerVar>Class[] [classes=getTheClass().getInterfaces()]</InnerVar>
                <InnerVar>CachedClass [superClass=getCachedSuperClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CachedClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>klazz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classInfo</ParamName>
                    <ParamType>ClassInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCachedSuperClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInterfaces</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeclaredInterfaces</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedMethod[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFields</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedField[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConstructors</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedConstructor[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>searchMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CachedMethod</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameterTypes</ParamName>
                    <ParamType>CachedClass[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CachedMethod[] [methods=getMethods()]</InnerVar>
                <InnerVar>CachedMethod [res=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModifiers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>coerceArgument</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>argument</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSuperClassDistance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [distance=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPrimitive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isVoid</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isInterface</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeDescription</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTheClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewMetaMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MetaMethod[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;MetaMethod&gt; [arr=new ArrayList&lt;MetaMethod&gt;()]</InnerVar>
                <InnerVar>MetaClass [metaClass=classInfo.getStrongMetaClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>arr;addAll;[Arrays.asList(classInfo.newMetaMethods)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addSubclassExpandos</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arr</ParamName>
                    <ParamType>MetaMethod</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mc</ParamName>
                    <ParamType>MetaClass</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setNewMopMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arr</ParamName>
                    <ParamType>MetaMethod</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MetaClass [metaClass=classInfo.getStrongMetaClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>classInfo;setWeakMetaClass;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;updateSetNewMopMethods;[arr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateSetNewMopMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arr</ParamName>
                    <ParamType>MetaMethod</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addNewMopMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arr</ParamName>
                    <ParamType>MetaMethod</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MetaClass [metaClass=classInfo.getStrongMetaClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>classInfo;setWeakMetaClass;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;updateAddNewMopMethods;[arr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateAddNewMopMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arr</ParamName>
                    <ParamType>MetaMethod</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;MetaMethod&gt; [res=new ArrayList&lt;MetaMethod&gt;()]</InnerVar>
                <InnerVar>Class [theClass=classInfo.getCachedClass().getTheClass()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>res;addAll;[Arrays.asList(classInfo.newMetaMethods)]</InnerMethodInvoke>
                <InnerMethodInvoke>res;addAll;[arr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isAssignableFrom</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>argument</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDirectlyAssignable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>argument</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCallSiteLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CallSiteClassLoader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHierarchy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCachedClass</MethodName>
            <MethodComment>/** 
 * compatibility method
 * @return this
 */
</MethodComment>
            <ReturnType>CachedClass</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>