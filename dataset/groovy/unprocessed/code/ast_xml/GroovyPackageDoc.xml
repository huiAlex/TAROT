<Class>
    <Id>1113</Id>
    <Package>org.codehaus.groovy.groovydoc</Package>
    <ClassName>GroovyPackageDoc</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>GroovyDoc</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>allClasses</MethodName>
            <MethodComment>/** 
 * All included classes and interfaces in this package.
 * @return array of classes and interfaces found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>allClasses</MethodName>
            <MethodComment>/** 
 * All classes and interfaces in this package optionally limited to just the included ones.
 * @param filter Specifying true filters according to the specified access modifier option.Specifying false includes all classes and interfaces regardless of access modifier option.
 * @return array of classes and interfaces found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enums</MethodName>
            <MethodComment>/** 
 * Included enum types in this package.
 * @return array of enum types found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>errors</MethodName>
            <MethodComment>/** 
 * Included errors in this package.
 * @return array of errors found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exceptions</MethodName>
            <MethodComment>/** 
 * Included exceptions in this package.
 * @return array of exceptions found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findClass</MethodName>
            <MethodComment>/** 
 * Find a class or interface within this package.
 * @param className the name of the class to find
 * @return ClassDoc of found class or interface, or null if not found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>interfaces</MethodName>
            <MethodComment>/** 
 * Included interfaces in this package.
 * @return array of interfaces found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ordinaryClasses</MethodName>
            <MethodComment>/** 
 * Included ordinary classes in this package.
 * @return array of ordinary classes (non-interface, non-enum, non-throwable classes) found or empty array if none found
 */
</MethodComment>
            <ReturnType>GroovyClassDoc[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>summary</MethodName>
            <MethodComment>/** 
 * The one-sentence summary for the package derived from the beginning of the description.
 * @return the summary
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>description</MethodName>
            <MethodComment>/** 
 * Description of the package.
 * @return the description
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nameWithDots</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRelativeRootPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>