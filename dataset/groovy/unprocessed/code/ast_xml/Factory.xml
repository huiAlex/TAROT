<Class>
    <Id>479</Id>
    <Package>groovy.util</Package>
    <ClassName>Factory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Factory  /** 
 * @author &lt;a href="mailto:aalmiray@users.sourceforge.com"&gt;Andres Almiray&lt;/a&gt;
 * @author Danno Ferrin
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>isLeaf</MethodName>
            <MethodComment>/** 
 * @return true if no child closures should be processed
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isHandlesNodeChildren</MethodName>
            <MethodComment>/** 
 * Does this factory "Own" it's child closure.
 * @return true  if the factory should have onContentClosure() called,false if the builder should handle it
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onFactoryRegistration</MethodName>
            <MethodComment>/** 
 * Called when a factory is registered to a builder
 * @param builder the build the factory has been registered to
 * @param registeredName the name the factory has been registered under
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>registeredName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>registeredGroupName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newInstance</MethodName>
            <MethodComment>/** 
 * @param builder the FactoryBuilder
 * @param name the name of the node being built
 * @param value the 'value' argument in the build node
 * @param attributes the attributes of the build arg
 * @return the object created for the builder
 * @throws InstantiationException if attempting to instantiate an interface or abstract class
 * @throws IllegalAccessException if the instance can't be created due to a security violation
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attributes</ParamName>
                    <ParamType>Map</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>InstantiationException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onHandleNodeAttributes</MethodName>
            <MethodComment>/** 
 * @param builder the FactoryBuilder
 * @param node the node (returned from newINstance) to consider the attributes for
 * @param attributes the attributes, a mutable set
 * @return true if the factory builder should use standard bean property matching for the remaining attributes
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>attributes</ParamName>
                    <ParamType>Map</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onNodeChildren</MethodName>
            <MethodComment>/** 
 * Only called if it isLeaf is false and isHandlesNodeChildren is true
 * @param builder the FactoryBuilder
 * @param node the node (returned from newINstance) to consider the attributes for
 * @param childContent the child content closure of the builder
 * @return true if the factory builder should apply default node processing to the content child
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>childContent</ParamName>
                    <ParamType>Closure</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>onNodeCompleted</MethodName>
            <MethodComment>/** 
 * @param builder the FactoryBuilder
 * @param parent the parent node (null if 'root')
 * @param node the node just completed
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>node</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setParent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>child</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setChild</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>FactoryBuilderSupport</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>child</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>