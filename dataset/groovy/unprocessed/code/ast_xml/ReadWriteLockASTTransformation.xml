<Class>
    <Id>756</Id>
    <Package>org.codehaus.groovy.transform</Package>
    <ClassName>ReadWriteLockASTTransformation</ClassName>
    <SuperClass>AbstractASTTransformation</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReadWriteLockASTTransformation  /** 
 * Handles generation of code for the  {@code @}WithReadLock and  {@code @}WithWriteLock annotation.&lt;br&gt; This transformation adds an instance of ReentrantReadWriteLock to the class.&lt;br&gt; Any method annotated with  {@code @}WithReadLock will obtain a read lock and release it in a finally block.&lt;br&gt; Any method annotated with  {@code @}WithWriteLock will obtain a write lock and release it in a finally block.&lt;br&gt; For more information see  {@link WithReadLock} and {@link WithWriteLock}
 * @author Hamlet D'Arcy
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>READ_LOCK_TYPE</FieldName>
            <FieldType>ClassNode</FieldType>
        </Field>
        <Field>
            <FieldName>WRITE_LOCK_TYPE</FieldName>
            <FieldType>ClassNode</FieldType>
        </Field>
        <Field>
            <FieldName>LOCK_TYPE</FieldName>
            <FieldType>ClassNode</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_STATIC_LOCKNAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_INSTANCE_LOCKNAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nodes</ParamName>
                    <ParamType>ASTNode[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>SourceUnit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AnnotatedNode [parent=(AnnotatedNode)nodes[1]]</InnerVar>
                <InnerVar>AnnotationNode [node=(AnnotationNode)nodes[0]]</InnerVar>
                <InnerVar>boolean [isWriteLock]</InnerVar>
                <InnerVar>String [myTypeName="@" + node.getClassNode().getNameWithoutPackage()]</InnerVar>
                <InnerVar>String [value=getMemberStringValue(node,"value")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;init;[nodes, source]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>determineLock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetClass</ParamName>
                    <ParamType>ClassNode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isStatic</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>myTypeName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldNode [field=targetClass.getDeclaredField(DEFAULT_INSTANCE_LOCKNAME)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createLockObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>