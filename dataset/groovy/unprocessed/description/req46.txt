I ve frequently run across the situation where I want to create a map from two equal sized lists, using one list for the keys and a second list for the values.
Maybe I m missing something, but I can t seem to find a compact way to do this that doesn t require a for loop or an intermediate variable.  The best I ve come up with is to add this method to Map:
Map.metaClass.putEach = { List keylist, List valuelist -&gt;
assert keylist.size == valuelist.size
for (int i=0; i &lt; keylist.size; i++)
{
delegate.put(keylist, valuelist)
}
delegate
}
This allows you to just call putEach on any Map passing in two equal sized lists, e.g.:
assert  &#91;:&#93; .putEach( &#91;&#39;key1&#39;, &#39;key2&#39;, &#39;key3&#39;&#93; ,  &#91;&#39;value1&#39;, &#39;value2&#39;, &#39;value3&#39;&#93; ) ==  &#91;&#39;key1&#39;:&#39;value1&#39;, &#39;key2&#39;:&#39;value2&#39;, &#39;key3&#39;:&#39;value3&#39;&#93;
Since this seems generally useful, it might be something worth adding to the base GDK. .
