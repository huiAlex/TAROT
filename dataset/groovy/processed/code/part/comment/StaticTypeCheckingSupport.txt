static method:amod
support method:compound
method support:compound
static type check visitor method:nmod
method static type check visitor:nmod
argument method:compound
method argument:compound
null method:nsubj
null determin:advcl
determin null:advcl
determin type:obj
return list:obj
method list:nmod
list method:nmod
return dgm:obl
correspond dgm:acl
dgm method:compound
method dgm:compound
lookup method:obl
superclass method:nmod
method superclass:nmod
interfac lookup:conj
lookup interfac:conj
find method:obj
add case:obl
add method:obj
add superclass:obl
interfac add:conj
add interfac:conj
correct method:amod
select method:obj
ambigu select:amod
method select:compound
select method:compound
result select:obl
similar method:amod
method select:nmod
select method:nmod
true return:amod
true express:obl
method check:compound
check method:compound
call check:compound
check call:compound
check structur:dep
structur check:dep
order structur:nmod
structur order:nmod
determin order:acl
method call:compound
call method:compound
correspond call:nsubj
correspond determin:advcl
determin correspond:advcl
call structur:obl
variabl express:amod
return express:obl
variabl access:xcomp
access variabl:xcomp
class loader class node:compound
class node class loader:compound
class node string:compound
string class node:compound
class loader tree set:compound
tree set class loader:compound
class node tree set:appos
tree set class node:appos
string tree set:appos
tree set string:appos
match argument:nsubj
paramet type:compound
type paramet:compound
type argument:conj
argument type:conj
match type:nsubj
match check:acl
exact type:amod
match argument:nsubj
paramet type:compound
type paramet:compound
type argument:conj
argument type:conj
match type:nsubj
match check:acl
expect check:dep
greater number:nsubj
paramet number:nmod
number paramet:nmod
greater expect:ccomp
expect greater:ccomp
greater number:obl
argument number:nmod
number argument:nmod
default paramet:compound
paramet default:compound
paramet inclus:nmod
inclus paramet:nmod
exact type:amod
excess argument:amod
match argument:nsubj
match check:acl
vararg paramet:compound
paramet vararg:compound
signatur paramet:compound
paramet signatur:compound
match paramet:obj
vararg type:compound
type vararg:compound
assign type:obl
exact match:amod
match type:dep
type match:dep
match argument:nsubj
match check:dep
vararg type:compound
type vararg:compound
match type:obj
class node:compound
node class:compound
assign node:nsubj
assign check:dep
assign check:compound
check assign:compound
valid assign:nsubj
valid verifi:ccomp
verifi valid:ccomp
equal return:nsubj
true return:amod
true oper:obl
class oper:acl
oper class:acl
common type:amod
type class:compound
class type:compound
left class:acl
type class:compound
class type:compound
class result:nmod
result class:nmod
groovi result:advcl
variant number:conj
number variant:conj
true return:amod
fals return:amod
fals true:conj
true fals:conj
depend assign:dep
assign depend:dep
assign classnod:nsubj
assign return:dep
left classnod:amod
assign classnod:obl
add method:nsubj
add error:obj
decid caller:nsubj
incompat assign:amod
accept side:compound
accept class:obj
left accept:obl
accept left:obl
hand side:compound
side hand:compound
assign side:nmod
side assign:nmod
true return:dep
class node:compound
node class:compound
consid receiv:obl
messag receiv:nmod
receiv messag:nmod
consid paramet:obl
generic type:compound
type generic:compound
type placehold:nmod
placehold type:nmod
face case:obl
uncheck check:amod
generic check:compound
check generic:compound
type generic:conj
generic type:conj
type check:compound
check type:compound
face check:obj
limit check:acl
void foo:amod
set foo:acl
match list:obl
candid method:compound
method candid:compound
method list:nmod
list method:nmod
return method:compound
argument type:compound
type argument:compound
match type:obj
match method:nsubj
argument type:compound
type argument:compound
match type:obj
parameter receiv:obl
method node:compound
node method:compound
node receiv:conj
receiv node:conj
parameter node:obl
method argument:compound
argument method:compound
parameter argument:obj
generic type:amod
type inform:compound
inform type:compound
build paramet:obl
build paramet:nsubj
resolv generic:nsubj
placehold generic:dep
generic placehold:dep
resolv paramet:acl
true return:dep
class node:compound
node class:compound
generic type:amod
class node:compound
node class:compound
repres node:nsubj
array type:compound
type array:compound
repres type:obj
compon type:compound
type compon:compound
type check:nmod
check type:nmod
generic type:compound
type generic:compound
repres type:acl
repres class:iobj
resolv type:amod
placehold type:compound
type placehold:compound
map type:compound
type map:compound
return type:dep
return generic:obj
resolv placehold:nsubj
resolv type:acl
parameter generic:amod
compat generic:nsubj
argument generic:nmod
generic argument:nmod
compat check:dep
compat generic:obl
paramet generic:nmod
generic paramet:nmod
suppli type:obj
usag connect:nmod
connect usag:nmod
oper method:nsubj
oper mode:obl
instanceof target:amod
structur compar:nsubj
compar structur:nsubj
compar target:acl
list dummi:conj
dummi list:conj
equal type:nsubj
equal target:obj
structur match:amod
collect colect:conj
colect collect:conj
climb hierarchi:obj
find climb:advcl
climb find:advcl
equal case:nsubj
type case:nmod
case type:nmod
equal find:ccomp
find equal:ccomp
equal target:obj
execut climb:dep
climb execut:dep
structur match:amod
execut match:obj
exist appli:advcl
appli exist:advcl
generic context:compound
context generic:compound
exist context:obj
exist int rang:obl
exist collect:obl
collect int rang:conj
int rang collect:conj
int rang abstract list:nsubj
abstract list int rang:nsubj
appli abstract list:advcl
add method:acl
add support:obj
method call:compound
call method:compound
add call:obl
handl call:acl
groovi compil:amod
handl compil:obl
extens method:compound
method extens:compound
lookup method:nsubj
collect list:obj
extens method:compound
method extens:compound
method list:nmod
list method:nmod
chang list:nsubj
extens modul:compound
modul extens:compound
modul list:nmod
list modul:nmod
chang extens modul:acl
avoid perform:dep
perform avoid:dep
recomput avoid:xcomp
avoid recomput:xcomp
recomput list:obj
recomput time:obl
method lookup:compound
lookup method:compound
perform lookup:obj
helper method:compound
method helper:compound
evalu express:obj
annot paramet:compound
paramet annot:compound
constant evalu:obj
evalu constant:obj
referenc integ:obl
referenc refer:conj
field refer:nmod
refer field:nmod
throw method:nsubj
throw evalu:advcl
evalu throw:advcl
evalu express:nsubj
interfac collect:ccomp
collect interfac:ccomp
class node:compound
node class:compound
interfac node:obl
super class:amod
defin class:obl
interfac collect:ccomp
collect interfac:ccomp
class node:compound
node class:compound
interfac node:obl
super class:amod
defin class:obl
repres return:dep
true repres:dep
repres true:dep
class node:compound
node class:compound
repres node:nsubj
class node:compound
node class:compound
repres node:obj
class node:nmod
node class:nmod
parametr type:amod
type placehold:nsubj
placehold type:nsubj
repres placehold:conj
repres wildcard:conj
wildcard placehold:conj
placehold wildcard:conj
class node:compound
node class:compound
node class:compound
class node:compound
return class:nsubj
foo class:dep
class foo:dep
foo class:nsubj
class foo:nsubj
true return:xcomp
return true:xcomp
class node:compound
node class:compound
return node:xcomp
true node:conj
class node:nmod
node class:nmod
fals return:xcomp
return fals:xcomp
map return:dep
return map:dep
consist valu:nsubj
consist list:obl
method node list:nmod
list method node:nmod
groovi default:obl
groovi method:amod
applic class:obl
