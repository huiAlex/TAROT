base class:compound
class base:compound
class transform:compound
transform class:compound
ast class:nmod
class ast:nmod
throw transform:acl
throw interrupt:obj
met condit:nsubj
met throw:advcl
throw met:advcl
implement subclass:nsubj
implement method:obj
set implement:advcl
implement set:advcl
set condit:obj
interrupt statement:compound
statement interrupt:compound
statement condit:nmod
condit statement:nmod
implement subclass:nsubj
implement method:obj
provid implement:advcl
implement provid:advcl
good resolut:amod
error resolut:compound
resolut error:compound
provid resolut:obj
block statement:compound
statement block:compound
wrap statement:obl
element interrupt:nsubj
interrupt element:nsubj
interrupt statement:acl
statement interrupt:acl
check interrupt:dep
check statement:obj
wrap statement:acl
shortcut method:compound
method shortcut:compound
avoid method:acl
duplic avoid:xcomp
avoid duplic:xcomp
duplic code:obj
duplic type:obl
loop type:nmod
type loop:nmod
wrap loop block:nsubj
type loop block:nmod
loop block type:nmod
loop statement:compound
statement loop:compound
statement type:nmod
type statement:nmod
