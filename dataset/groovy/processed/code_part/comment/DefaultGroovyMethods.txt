ident check:compound
check ident:compound
groovi ident:amod
check object:obl
overridden ident:obl
fals instanc:dep
call closur:acl
call closur:acl
invok method:nsubj
invok method:acl
invok closur:obl
invok refer:obl
invok instanc:obl
invok method:nsubj
call method:acl
append method:dep
call method:obl
string builder instanc:compound
instanc string builder:compound
invok instanc:obl
subscript oper:compound
oper subscript:compound
dynam properti:amod
properti valu:compound
valu properti:compound
lookup valu:obj
properti express bean:dep
bean properti express:dep
normal notat:amod
properti notat:compound
notat properti:compound
notat work:nsubj
work notat:nsubj
groovi notat:acl
neater work:amod
concis work:amod
compil time:dep
subscript oper:compound
oper subscript:compound
properti valu:compound
valu properti:compound
set valu:obj
bean properti express:compound
properti express bean:compound
properti express foo:nsubj
foo properti express:nsubj
normal notat:amod
properti notat:compound
notat properti:compound
notat work:nsubj
work notat:nsubj
groovi notat:acl
neater work:amod
concis work:amod
compil time:obj
detail string:amod
dump string:compound
string dump:compound
generat string:obj
object string:nmod
string object:nmod
show object:acl
show class:obj
show hash code:obj
hash code class:conj
class hash code:conj
show field:obj
field class:conj
class field:conj
retriev list:obj
object list:nmod
list object:nmod
wrap retriev:conj
retriev wrap:conj
wrap list:obl
object list:nmod
list object:nmod
provid list:acl
provid valu:obj
properti valu:nmod
valu properti:nmod
conveni method:amod
call method:acl
simpl pair:amod
key valu:compound
valu key:compound
simpl valu:dep
pair form:nmod
form pair:nmod
nsbp form:conj
form nsbp:conj
type inform:compound
inform type:compound
inform form:conj
form inform:conj
scope method:amod
extend object:obj
categori method:compound
method categori:compound
extend method:obl
ad method:nsubj
class method:nmod
method class:nmod
super class:amod
class method:nmod
method class:nmod
ad object:obl
extend class:obj
categori method:compound
method categori:compound
extend method:obl
ad method:nsubj
class method:nmod
method class:nmod
super class:amod
class method:nmod
method class:nmod
ad class:obl
extend class:obj
categori method:compound
method categori:compound
extend method:obl
extend class:obj
categori method:compound
method categori:compound
extend method:obl
extend class:obj
categori method:compound
method categori:compound
extend method:obl
extend class:obj
categori method:compound
method categori:compound
extend method:obl
scope method:amod
list method:nmod
method list:nmod
categori list:nmod
list categori:nmod
add shutdown hook usag:nmod
usag add shutdown hook:nmod
categori list:nmod
list categori:nmod
categori class:compound
class categori:compound
wrap class:obj
list class:nmod
class list:nmod
format valu:dep
format style:amod
groovi style:amod
print style:obj
print writer:advcl
standard stream:amod
output stream:compound
stream output:compound
stream writer:obl
writer stream:obl
format valu:dep
format style:amod
groovi style:amod
print style:obj
print writer:compound
writer print:compound
print writer:obl
format valu:dep
format style:amod
groovi style:amod
print style:obj
print stream:compound
stream print:compound
print stream:obl
print valu:obj
standard stream:amod
output stream:compound
stream output:compound
print stream:obl
method deleg:compound
deleg method:compound
owner deleg:nmod
deleg owner:nmod
execut owner:acl
execut method:obj
print linebreak:obj
standard stream:amod
output stream:compound
stream output:compound
print stream:obl
print linebreak:obj
standard stream:amod
output stream:compound
stream output:compound
print stream:obl
method deleg:compound
deleg method:compound
owner deleg:nmod
deleg owner:nmod
execut owner:acl
execut method:obj
format valu:dep
format style:amod
groovi style:amod
print style:obj
print writer:advcl
standard stream:amod
output stream:compound
stream output:compound
stream writer:obl
writer stream:obl
format valu:dep
format style:amod
groovi style:amod
print style:obj
print writer:compound
writer print:compound
writer style:nmod
style writer:nmod
format valu:dep
format style:amod
groovi style:amod
print style:obj
print stream:compound
stream print:compound
stream style:nmod
style stream:nmod
print valu:obj
standard stream:amod
output stream:compound
stream output:compound
print stream:obl
method deleg:compound
deleg method:compound
owner deleg:nmod
deleg owner:nmod
execut owner:acl
execut method:obj
consol printf:obl
printf consol:obl
string sprintf:obl
sprintf string:obl
format string:amod
string return:dep
return string:dep
format string:compound
string format:compound
argument string:conj
string argument:conj
arg type:nmod
type arg:nmod
list object:dep
object list:dep
int list:appos
list int:appos
short list:amod
byte list:obj
list byte:obj
char byte:dep
byte char:dep
float char:obj
char float:obj
doubl list:obj
doubl byte:conj
inspect return:csubj
return inspect:csubj
return string:obj
match string:acl
type match:ccomp
match type:ccomp
termin object:amod
creat termin:xcomp
termin creat:xcomp
type object:obl
creat object:obj
print consol:obl
interact format:amod
format consol:nmod
consol format:nmod
print consol:obl
interact format:amod
format consol:nmod
consol format:nmod
dynam method:amod
invoc method:compound
method invoc:compound
provid method:obj
overload method:acl
overload class:obl
implement overload:xcomp
overload implement:xcomp
dynam proxi:amod
implement proxi:obj
overload method:acl
overload behavior:obj
case method:compound
method case:compound
method behavior:nmod
behavior method:nmod
switch statement:compound
statement switch:compound
statement method:nmod
method statement:nmod
default implement:compound
implement default:compound
handl implement:nsubj
handl array:iobj
handl type:obj
overridden handl:conj
handl overridden:conj
overridden type:obl
call code:nsubj
return call:advcl
call return:advcl
true return:xcomp
return true:xcomp
special implement:nmod
implement special:nmod
case implement:compound
implement case:compound
class implement:nmod
implement class:nmod
class test:nmod
test class:nmod
switch statement:compound
statement switch:compound
statement class:nmod
class statement:nmod
case implement:compound
implement case:compound
collect implement:nmod
implement collect:nmod
switch operand:compound
operand switch:compound
case valu:compound
valu case:compound
case implement:compound
implement case:compound
map implement:nmod
implement map:nmod
test map:acl
groovi valu:amod
truth valu:compound
valu truth:compound
test valu:obj
obtain valu:acl
switch operand:compound
operand switch:compound
special implement:nmod
implement special:nmod
case implement:compound
implement case:compound
number implement:nmod
implement number:nmod
deleg implement:dep
implement deleg:dep
compar method:compound
method compar:compound
method deleg:nmod
deleg method:nmod
compar implement:dep
compar number:obj
type number:nmod
number type:nmod
iter equival:compound
equival iter:compound
equival return:dep
return equival:dep
iter return:obl
return iter:obl
duplic item:amod
item return:obl
return item:obl
remov item:acl
default compar:compound
compar default:compound
origin iter:amod
exhaust element:obl
uniqu valu:amod
determin valu:obj
return iter:nsubj
uniqu valu:amod
valu iter:nmod
iter valu:nmod
modifi collect:obj
remov collect:acl
duplic item:amod
remov item:obj
default compar:compound
compar default:compound
modifi list:obj
remov list:acl
duplic item:amod
remov item:obj
default compar:compound
compar default:compound
remov duplic:obj
default compar:compound
compar default:compound
true mutat:nsubj
true work:advcl
work true:advcl
modifi work:advcl
work modifi:advcl
origin object:amod
modifi object:obj
return work:advcl
work return:advcl
return modifi:conj
modifi return:conj
fals mutat:nsubj
fals return:advcl
return fals:advcl
return collect:nsubj
leav return:xcomp
return leav:xcomp
origin leav:obj
leav origin:obj
unchang leav:xcomp
leav unchang:xcomp
remov duplic:obj
remov list:obl
default compar:compound
compar default:compound
true mutat:nsubj
true work:advcl
work true:advcl
modifi work:advcl
work modifi:advcl
origin object:amod
modifi object:obj
return work:advcl
work return:advcl
return modifi:conj
modifi return:conj
fals mutat:nsubj
fals return:advcl
return fals:advcl
return collect:nsubj
leav return:xcomp
return leav:xcomp
origin leav:obj
leav origin:obj
unchang leav:xcomp
leav unchang:xcomp
compar method:acl
groovi compar:nmod
compar groovi:nmod
default number:compound
number default:compound
awar number:obl
awar compar:amod
iter equival:compound
equival iter:compound
equival return:dep
return equival:dep
iter equival:nmod
equival iter:nmod
duplic item:amod
item equival:dep
equival item:dep
remov item:acl
determin duplic:obj
equal item:amod
item equival:dep
equival item:dep
origin iter:amod
process iter:nsubj
process call:obl
singl paramet:amod
pass argument:nsubj
pass element:ccomp
return closur:nsubj
return pass:conj
pass return:conj
return valu:obj
pass item:nsubj
iter item:nmod
item iter:nmod
pass argument:obl
return closur:nsubj
return pass:conj
pass return:conj
int valu:compound
valu int:compound
return valu:obj
indic item:obj
uniqu return:advcl
return uniqu:advcl
iter equival:compound
equival iter:compound
equival return:dep
return equival:dep
iter return:obl
return iter:obl
duplic item:amod
item return:obl
return item:obl
remov item:acl
suppli compar:amod
iter equival:compound
equival iter:compound
equival return:dep
return equival:dep
iter return:obl
return iter:obl
duplic item:amod
item return:obl
return item:obl
remov item:acl
suppli compar:amod
compar order:amod
natur order:amod
element order:nmod
order element:nmod
iter equival:compound
equival iter:compound
equival return:dep
return equival:dep
iter return:obl
return iter:obl
duplic item:amod
item return:obl
return item:obl
remov item:acl
natur order:amod
item order:nmod
order item:nmod
collect return:dep
return collect:dep
remov duplic:acl
natur order:amod
item order:nmod
order item:nmod
determin uniqu:obj
list return:dep
return list:dep
remov duplic:acl
natur order:amod
item order:nmod
order item:nmod
determin uniqu:obj
array return:dep
return array:dep
origin array:amod
remov duplic:acl
suppli compar:amod
remov compar:obl
determin compar:acl
uniqu item:nsubj
uniqu determin:ccomp
determin uniqu:ccomp
compar order:amod
natur order:amod
element order:nmod
order element:nmod
array return:dep
return array:dep
origin array:amod
remov duplic:acl
natur order:amod
item order:nmod
order item:nmod
array item:nmod
item array:nmod
array return:dep
return array:dep
origin array:amod
remov duplic:acl
suppli compar:amod
remov compar:obl
determin compar:acl
uniqu item:nsubj
uniqu determin:ccomp
determin uniqu:ccomp
aggreg structur:amod
type structur:compound
structur type:compound
data type:conj
type data:conj
data structur:compound
structur data:compound
iter structur:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
custom type:compound
type custom:compound
util type:nsubj
util method:obj
provid util:advcl
util provid:advcl
iter method:compound
method iter:compound
provid method:obj
return item:nsubj
result iter:amod
return iter:obl
pass iter:acl
pass closur:obl
aggreg structur:amod
type structur:compound
structur type:compound
data type:conj
type data:conj
data structur:compound
structur data:compound
iter structur:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
iter type:amod
iter type:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
iter type:compound
type iter:compound
iter type:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
iter collect:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
iter list:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
iter sort set:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
item index:nmod
index item:nmod
pass index:obj
index item:conj
item index:conj
counter index:dep
index counter:dep
start counter:acl
pass closur:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
iter collect:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
iter list:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
iter sort set:obl
pass iter:xcomp
iter pass:xcomp
pass item:obj
pass closur:obl
iter map:acl
revers order:amod
iter order:obl
general guarante:advcl
guarante general:advcl
guarante order:nsubj
map content:compound
content map:compound
process content:nsubj
process order:acl
special form:amod
map form:nmod
form map:nmod
tree map map:appos
map tree map:appos
process content:acl
process revers:obl
natur order:amod
order revers:nmod
revers order:nmod
map order:nmod
order map:nmod
iter map:acl
item index:nmod
index item:nmod
pass index:obj
counter index:dep
index counter:dep
start counter:acl
pass key:obj
pass valu:obj
valu key:conj
key valu:conj
pass index:obj
index key:conj
key index:conj
iter element:obl
list element:nmod
element list:nmod
revers order:amod
order list:nmod
list order:nmod
iter element:obl
array element:nmod
element array:nmod
revers order:amod
order array:nmod
array order:nmod
predic closur:compound
closur predic:compound
valid closur:nsubj
valid determin:advcl
determin valid:advcl
true return:dep
true item:obl
data structur:compound
structur data:compound
structur item:nmod
item structur:nmod
predic closur:compound
closur predic:compound
valid closur:nsubj
valid determin:advcl
determin valid:advcl
true return:dep
true item:obl
iter item:nmod
item iter:nmod
predic closur:compound
closur predic:compound
valid closur:nsubj
valid determin:advcl
determin valid:advcl
true return:dep
true item:obl
iter item:nmod
item iter:nmod
valid iter:nsubj
entri iter:nmod
iter entri:nmod
map entri:nmod
entri map:nmod
check iter:nmod
iter check:nmod
check entri:conj
entri check:conj
predic check:nmod
check predic:nmod
valid entri:obl
pass key:obj
pass valu:obj
valu key:conj
key valu:conj
element iter:nmod
iter element:nmod
collect element:nmod
element collect:nmod
check iter:conj
iter check:conj
true element:nsubj
true check:dep
groovi truth:compound
truth groovi:compound
true truth:obl
element predic:compound
predic element:compound
equival predic:dep
valid iter:nsubj
content iter:nmod
iter content:nmod
object content:nmod
content object:nmod
collect content:nmod
content collect:nmod
collect object:conj
object collect:conj
check iter:nmod
iter check:nmod
check content:conj
content check:conj
predic check:nmod
check predic:nmod
valid element:obl
valid iter:nsubj
content iter:nmod
iter content:nmod
iter content:nmod
content iter:nmod
check iter:nmod
iter check:nmod
check content:conj
content check:conj
predic check:nmod
check predic:nmod
valid element:obl
valid iter:nsubj
content iter:nmod
iter content:nmod
iter content:nmod
check iter:nmod
iter check:nmod
check content:conj
content check:conj
predic check:nmod
check predic:nmod
valid element:obl
valid iter:nsubj
entri iter:nmod
iter entri:nmod
map entri:nmod
entri map:nmod
check iter:nmod
iter check:nmod
check entri:conj
entri check:conj
predic check:nmod
check predic:nmod
valid entri:obl
pass key:obj
pass valu:obj
valu key:conj
key valu:conj
true iter:nsubj
element iter:nmod
iter element:nmod
collect element:nmod
element collect:nmod
check iter:nmod
iter check:nmod
check element:conj
element check:conj
element check:nmod
check element:nmod
groovi truth:compound
truth groovi:compound
true truth:obl
collect iter:nmod
iter collect:nmod
item collect:nmod
collect item:nmod
repres object:nsubj
return object:nsubj
repres item:acl
return item:acl
return repres:conj
repres return:conj
repres item:obj
match item:acl
match filter:obj
call match:xcomp
match call:xcomp
call method:obj
switch statement:compound
statement switch:compound
filter kind:nmod
kind filter:nmod
regular rang:amod
express rang:compound
rang express:compound
class rang:dep
rang class:dep
rang filter:nmod
filter rang:nmod
collect iter:nmod
iter collect:nmod
item collect:nmod
collect item:nmod
return collect:nmod
collect return:nmod
return item:conj
item return:conj
match item:acl
match filter:obj
call match:xcomp
match call:xcomp
call method:obj
switch statement:compound
statement switch:compound
filter kind:nmod
kind filter:nmod
regular rang:amod
express rang:compound
rang express:compound
class rang:dep
rang class:dep
rang filter:nmod
filter rang:nmod
collect iter:nmod
iter collect:nmod
item collect:nmod
collect item:nmod
return collect:nmod
collect return:nmod
return item:conj
item return:conj
match item:acl
match filter:obj
call match:xcomp
match call:xcomp
call method:obj
switch statement:compound
statement switch:compound
filter kind:nmod
kind filter:nmod
regular rang:amod
express rang:compound
rang express:compound
class rang:dep
rang class:dep
rang filter:nmod
filter rang:nmod
collect iter:nmod
iter collect:nmod
item collect:nmod
collect item:nmod
return collect:nmod
collect return:nmod
return item:conj
item return:conj
match item:acl
match filter:obj
call match:xcomp
match call:xcomp
call method:obj
switch statement:compound
statement switch:compound
filter kind:nmod
kind filter:nmod
regular rang:amod
express rang:compound
rang express:compound
class rang:dep
rang class:dep
rang filter:nmod
filter rang:nmod
return iter:nsubj
array iter:nmod
iter array:nmod
item array:nmod
array item:nmod
return collect:obj
item collect:nmod
collect item:nmod
match item:acl
match filter:obj
call match:xcomp
match call:xcomp
call method:obj
switch statement:compound
statement switch:compound
filter kind:nmod
kind filter:nmod
regular rang:amod
express rang:compound
rang express:compound
class rang:dep
rang class:dep
rang filter:nmod
filter rang:nmod
collect iter:nmod
iter collect:nmod
item collect:nmod
collect item:nmod
repres object:nsubj
return object:nsubj
repres item:acl
return item:acl
return repres:conj
repres return:conj
repres item:obj
match item:acl
ident closur:compound
closur ident:compound
filter closur:nmod
closur filter:nmod
return closur:acl
return element:obj
satisfi element:acl
groovi truth:amod
satisfi truth:obj
collect iter:nmod
iter collect:nmod
return iter:acl
return element:obj
match element:acl
ident closur:compound
closur ident:compound
filter closur:nmod
closur filter:nmod
return closur:acl
return element:obj
satisfi element:acl
groovi truth:amod
satisfi truth:obj
collect iter:nmod
iter collect:nmod
return iter:acl
return element:obj
match element:acl
ident closur:compound
closur ident:compound
filter closur:nmod
closur filter:nmod
return closur:acl
return element:obj
satisfi element:acl
groovi truth:amod
satisfi truth:obj
collect iter:nmod
iter collect:nmod
return iter:acl
return element:obj
match element:acl
ident closur:compound
closur ident:compound
filter closur:nmod
closur filter:nmod
return closur:acl
return element:obj
satisfi element:acl
groovi truth:amod
satisfi truth:obj
array iter:nmod
iter array:nmod
return iter:acl
return element:obj
match element:acl
ident closur:compound
closur ident:compound
filter closur:nmod
closur filter:nmod
return closur:acl
return element:obj
satisfi element:acl
groovi truth:amod
satisfi truth:obj
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
item valu:nmod
valu item:nmod
iter item:nmod
item iter:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
exhaust element:obl
count valu:compound
valu count:compound
determin valu:obj
count number:obj
occurr number:nmod
number occurr:nmod
satisfi occurr:acl
satisfi closur:obj
satisfi item:obl
iter item:nmod
item iter:nmod
exhaust element:obl
count valu:compound
valu count:compound
determin valu:obj
count closur:dep
closur count:dep
iter closur:dep
closur iter:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
iter valu:nmod
valu iter:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count closur:dep
closur count:dep
iter closur:dep
closur iter:dep
count number:obj
occurr number:nmod
number occurr:nmod
satisfi occurr:acl
satisfi closur:obj
satisfi iter:obl
count number:obj
occurr number:nmod
number occurr:nmod
satisfi occurr:acl
satisfi closur:obj
satisfi map:obl
pass closur:nsubj
pass key:obj
pass valu:obj
valu key:conj
key valu:conj
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
satisfi occurr:acl
satisfi closur:obj
satisfi array:obl
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
count number:obj
occurr number:nmod
number occurr:nmod
valu occurr:nmod
occurr valu:nmod
array valu:nmod
valu array:nmod
equal oper:nsubj
valu oper:dep
oper valu:dep
iter version:compound
version iter:compound
list version:nmod
version list:nmod
convert iter:obj
convert list:obl
exhaust element:obl
convert iter:obj
convert list:obl
exhaust element:obl
convert enumer:obj
convert list:obl
collat iter:obj
length size:compound
size length:compound
iter variant:compound
variant iter:compound
collat iter:obj
length size:compound
size length:compound
step size:acl
code element:compound
element code:compound
step element:compound
element step:compound
step element:obl
list element:nmod
element list:nmod
iter variant:compound
variant iter:compound
collat iter:obj
length size:compound
size length:compound
remain element:amod
drop element:nsubj
iter element:nmod
iter subdivis:nmod
fals remaind:nsubj
fals drop:advcl
drop fals:advcl
iter variant:compound
variant iter:compound
iter variant:compound
variant iter:compound
aggreg object:amod
iter object:obl
transform object:acl
transform item:obj
transform valu:obl
transform closur:compound
return iter:xcomp
iter return:xcomp
return list:obj
transform valu:amod
valu list:nmod
list valu:nmod
aggreg object:amod
iter object:obl
transform object:acl
transform item:obj
transform valu:obl
return iter:xcomp
iter return:xcomp
return list:obj
item list:nmod
list item:nmod
copi item:acl
origin object:amod
copi object:obl
aggreg object:amod
iter object:obl
transform object:acl
transform item:obj
transform valu:obl
transform closur:compound
ad valu:dep
suppli collector:amod
ad collector:obl
iter collect:obl
transform collect:acl
transform entri:obj
transform valu:obl
transform closur:compound
return list:obj
transform valu:amod
valu list:nmod
list valu:nmod
iter collect:obl
transform collect:acl
transform entri:obj
transform valu:obl
return iter:xcomp
iter return:xcomp
return list:obj
item list:nmod
list item:nmod
copi item:acl
origin collect:amod
copi collect:obl
iter collect:obl
transform collect:acl
transform valu:obj
transform valu:obl
transform closur:compound
ad valu:dep
suppli collector:amod
ad collector:obl
deprec alia:amod
collect nest alia:nmod
alia collect nest:nmod
collect iter:nmod
iter collect:nmod
transform collect:acl
transform valu:obj
transform valu:obl
nest list:amod
list return:dep
return list:dep
transform valu:amod
valu return:nmod
return valu:nmod
transform iter:nsubj
transform iter:dep
transform valu:obj
transform valu:obl
nest list:amod
list return:dep
return list:dep
transform valu:amod
valu return:nmod
return valu:nmod
deprec alia:amod
collect nest alia:nmod
alia collect nest:nmod
iter version:compound
version iter:compound
collect nest version:acl
transform iter:nsubj
transform iter:dep
transform valu:obj
transform valu:obl
transform closur:compound
nest collect:amod
collect return:dep
return collect:dep
transform valu:amod
valu return:nmod
return valu:nmod
iter version:compound
version iter:compound
collect version:nmod
version collect:nmod
iter version:compound
version iter:compound
collect version:nmod
version collect:nmod
item project:dep
project item:dep
sourc collect:compound
collect sourc:compound
collect item:nmod
item collect:nmod
result collect:compound
collect result:compound
concaten item:nmod
item concaten:nmod
concaten collect:conj
collect concaten:conj
flatten concaten:dep
concaten flatten:dep
result collect:amod
collect concaten:dep
concaten collect:dep
ad collect:acl
ad collector:obl
item project:dep
project item:dep
sourc map:compound
map sourc:compound
map item:nmod
item map:nmod
result collect:compound
collect result:compound
collect map:nmod
map collect:nmod
concaten item:nmod
item concaten:nmod
concaten map:conj
map concaten:conj
flatten concaten:dep
concaten flatten:dep
result collect:amod
collect concaten:dep
concaten collect:dep
ad collect:acl
ad collector:obl
item project:dep
project item:dep
sourc map:compound
map sourc:compound
map item:nmod
item map:nmod
result collect:compound
collect result:compound
collect map:nmod
map collect:nmod
concaten item:nmod
item concaten:nmod
concaten map:conj
map concaten:conj
flatten concaten:dep
concaten flatten:dep
result collect:amod
collect concaten:dep
concaten collect:dep
ad collect:acl
ad collect:obl
project collect:dep
collect project:dep
item project:dep
project item:dep
sourc array:compound
array sourc:compound
array item:nmod
item array:nmod
collect array:nmod
array collect:nmod
concaten array:nmod
array concaten:nmod
concaten collect:conj
collect concaten:conj
flatten item:dep
item flatten:dep
result collect:amod
singl list:amod
list collect:nmod
collect list:nmod
project collect:dep
collect project:dep
item project:dep
project item:dep
sourc iter:compound
iter sourc:compound
iter item:nmod
item iter:nmod
collect iter:nmod
iter collect:nmod
concaten iter:nmod
iter concaten:nmod
concaten collect:conj
collect concaten:conj
flatten item:dep
item flatten:dep
result collect:amod
singl list:amod
list collect:nmod
collect list:nmod
iter ad:csubj
ad iter:csubj
iter map:obl
transform map:acl
map entri:compound
entri map:compound
transform entri:obj
transform valu:obl
transform closur:compound
return collector:obj
transform valu:amod
valu collector:nmod
collector valu:nmod
iter map:obl
transform map:acl
map entri:compound
entri map:compound
transform entri:obj
transform valu:obl
transform closur:compound
return list:obj
transform valu:amod
valu list:nmod
list valu:nmod
iter version:compound
version iter:compound
collect entri version:nmod
version collect entri:nmod
collect entri variant:nmod
variant collect entri:nmod
iter collect entri:nmod
collect entri iter:nmod
return map:obj
element list:compound
list element:compound
return list:obj
result key:amod
valu key:conj
key valu:conj
iter version:compound
version iter:compound
collect entri version:nmod
version collect entri:nmod
collect entri variant:nmod
variant collect entri:nmod
iter collect entri:nmod
collect entri iter:nmod
ident closur:compound
closur ident:compound
collect entri variant:nmod
variant collect entri:nmod
iter object:amod
object collect entri:nmod
collect entri object:nmod
ident closur:compound
closur ident:compound
sourc iter:compound
iter sourc:compound
key list:nmod
list key:nmod
valu key:appos
key valu:appos
tupl key:dep
key tupl:dep
object key:dep
key object:dep
object tupl:conj
tupl object:conj
iter version:compound
version iter:compound
collect entri version:nmod
version collect entri:nmod
collect entri variant:nmod
variant collect entri:nmod
iter collect entri:nmod
collect entri iter:nmod
suppli map:amod
destin variant:nmod
variant destin:nmod
transform entri:amod
entri variant:nmod
variant entri:nmod
return map:obj
element list:compound
list element:compound
return list:obj
result key:amod
valu key:conj
key valu:conj
iter version:compound
version iter:compound
collect entri version:nmod
version collect entri:nmod
collect entri variant:nmod
variant collect entri:nmod
iter collect entri:nmod
collect entri iter:nmod
ident closur:compound
closur ident:compound
suppli map:amod
map collect entri:nmod
collect entri map:nmod
map iter:conj
iter map:conj
destin variant:nmod
variant destin:nmod
transform entri:amod
entri variant:nmod
variant entri:nmod
collect entri variant:nmod
variant collect entri:nmod
iter collect entri:nmod
collect entri iter:nmod
ident closur:compound
closur ident:compound
suppli map:amod
map collect entri:nmod
collect entri map:nmod
map iter:conj
iter map:conj
destin variant:nmod
variant destin:nmod
transform entri:amod
entri variant:nmod
variant entri:nmod
collect entri variant:nmod
variant collect entri:nmod
ident closur:compound
closur ident:compound
collect entri variant:nmod
variant collect entri:nmod
ident closur:compound
closur ident:compound
find valu:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
find item:obj
match find:xcomp
find match:xcomp
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
treat repres:dep
repres treat:dep
treat object:obj
iter treat:advcl
treat iter:advcl
iter treat:advcl
treat iter:advcl
iter valu:obl
return repres:conj
repres return:conj
result return:ccomp
return result:ccomp
obtain result:dep
result obtain:dep
call obtain:advcl
obtain call:advcl
call closur:obj
return repres:dep
repres return:dep
return default result:obj
treat object:obj
iter result:advcl
result iter:advcl
iter result:csubj
result iter:csubj
iter valu:obl
repres valu:acl
return valu:acl
return repres:conj
repres return:conj
result treat:ccomp
treat result:ccomp
obtain result:dep
result obtain:dep
call obtain:advcl
obtain call:advcl
null closur:nsubj
return closur:appos
closur return:appos
null call:xcomp
call null:xcomp
find valu:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
find element:obj
array element:nmod
element array:nmod
match array:acl
closur condit:compound
condit closur:compound
match condit:obj
find item:obj
match find:xcomp
find match:xcomp
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
iter collect:obl
call iter:ccomp
iter call:ccomp
call closur:obj
call item:obl
stop iter:ccomp
iter stop:ccomp
stop call:conj
call stop:conj
return call:conj
call return:conj
return stop:conj
stop return:conj
return result:obj
null return:advcl
return null:advcl
return default result:nsubj
iter collect:obl
call iter:ccomp
iter call:ccomp
call closur:obj
call item:obl
stop iter:ccomp
iter stop:ccomp
stop call:conj
call stop:conj
return call:conj
call return:conj
return stop:conj
stop return:conj
return result:obj
null result:nsubj
null return:advcl
return null:advcl
null return:nsubj
return null:nsubj
iter version:compound
version iter:compound
find result version:nmod
version find result:nmod
iter item:compound
item iter:compound
transform item:amod
collect item:nsubj
suppli closur:amod
collect iter:advcl
iter collect:advcl
collect result:obj
iter map:obl
transform map:acl
transform item:obj
suppli closur:amod
collect transform:dep
transform collect:dep
collect result:obj
entri key:compound
key entri:compound
pass key:nsubj
valu key:conj
key valu:conj
pass valu:nsubj
pass object:nsubj
find entri:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
entri key:compound
key entri:compound
pass key:nsubj
valu key:conj
key valu:conj
pass valu:nsubj
pass object:nsubj
closur result:compound
result closur:compound
result return:dep
return result:dep
map entri:compound
entri map:compound
pass entri:obj
pass closur:obl
entri key:compound
key entri:compound
pass key:nsubj
valu key:conj
key valu:conj
pass valu:nsubj
pass object:nsubj
find valu:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
find valu:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
find valu:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
find element:obj
array element:nmod
element array:nmod
match array:acl
closur condit:compound
condit closur:compound
match condit:obj
find item:obj
match find:xcomp
find match:xcomp
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
find item:obj
match find:xcomp
find match:xcomp
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
find item:obj
match find:xcomp
find match:xcomp
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
find element:obj
array element:nmod
element array:nmod
match array:acl
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
find item:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
find item:obj
match find:xcomp
find match:xcomp
ident closur:compound
closur ident:compound
match closur:iobj
groovi truth:amod
match truth:obj
true return:dep
true return:dep
array element:nmod
element array:nmod
iter variant:compound
variant iter:compound
modifi collect:obj
remov modifi:advcl
modifi remov:advcl
remov element:obj
object array:compound
array object:compound
grep find:conj
find grep:conj
produc list:obj
match item:acl
match criteria:obj
leav match:advcl
match leav:advcl
origin collect:amod
leav collect:obj
unchang leav:xcomp
leav unchang:xcomp
modifi collect:obj
retain modifi:advcl
modifi retain:advcl
retain element:obj
remov word:obl
remov collect:obl
grep find:conj
produc list:obj
match item:acl
match item:obj
leav find:acl
origin collect:amod
leav collect:obj
unchang leav:xcomp
leav unchang:xcomp
modifi collect:obj
retain modifi:advcl
modifi retain:advcl
retain element:obj
match element:acl
closur condit:compound
condit closur:compound
match condit:obl
remov word:obl
remov collect:obl
grep find:conj
find grep:conj
produc list:obj
match item:acl
match criteria:obj
leav find:acl
origin collect:amod
leav collect:obj
unchang leav:xcomp
leav unchang:xcomp
modifi collect:obj
remov modifi:advcl
modifi remov:advcl
remov element:obj
match element:acl
closur condit:compound
condit closur:compound
match condit:obl
grep find:conj
find grep:conj
produc list:obj
match item:acl
match criteria:obj
leav match:advcl
match leav:advcl
origin collect:amod
leav collect:obj
unchang leav:xcomp
leav unchang:xcomp
modifi collect:obj
ad modifi:advcl
modifi ad:advcl
ad array:obl
collect array:nmod
array collect:nmod
undefin behavior:nsubj
oper behavior:nmod
behavior oper:nmod
modifi array:nsubj
modifi undefin:advcl
undefin modifi:advcl
oper progress:nsubj
progress oper:nsubj
modifi progress:advcl
produc collect:obj
addit item:amod
leav collect:dep
origin collect:amod
leav collect:obj
unchang leav:xcomp
leav unchang:xcomp
split item:obj
split list:obl
base condit:case
closur condit:compound
condit closur:compound
condit list:nmod
list condit:nmod
closur express:compound
express closur:compound
match express:obj
split item:obj
split collect:obl
base condit:case
closur condit:compound
condit closur:compound
condit collect:nmod
collect condit:nmod
match item:acl
closur express:compound
express closur:compound
match express:obj
split item:obj
split collect:obl
base condit:case
closur condit:compound
condit closur:compound
condit collect:nmod
collect condit:nmod
match item:acl
closur express:compound
express closur:compound
match express:obj
split item:obj
split collect:obl
base condit:case
closur condit:compound
condit closur:compound
condit collect:nmod
collect condit:nmod
match item:acl
closur express:compound
express closur:compound
match express:obj
iter version:compound
version iter:compound
combin version:nmod
version combin:nmod
iter method:nmod
method iter:nmod
iter closur:compound
closur iter:compound
collect method:nmod
method collect:nmod
appli function:obj
combin function:nmod
function combin:nmod
input list:compound
list input:compound
list combin:nmod
combin list:nmod
find subsequ:obj
list subsequ:nmod
subsequ list:nmod
find permut:obj
iter permut:nmod
permut iter:nmod
iter version:compound
version iter:compound
permut version:nmod
version permut:nmod
find permut:obj
iter permut:nmod
appli find:conj
find appli:conj
appli function:obj
appli permut:obl
collect find:conj
find collect:conj
collect result:obj
collect list:obl
iter version:compound
version iter:compound
permut version:nmod
version permut:nmod
iter version:compound
version iter:compound
permut version:nmod
version permut:nmod
run iter:nsubj
permut iter:nmod
iter permut:nmod
collect permut:nmod
permut collect:nmod
run closur:obj
iter closur:nmod
closur iter:nmod
groovi collect list:nsubj
list groovi collect:nsubj
add list:xcomp
method list:nmod
list method:nmod
list method:nmod
method list:nmod
transpos function:compound
function transpos:compound
return function:nsubj
column collect:nmod
collect column:nmod
return collect:obj
row collect:nmod
collect row:nmod
consist row:nsubj
consist element:obl
column element:nmod
element column:nmod
success row:amod
construct row:nsubj
find entri:obj
match find:xcomp
find match:xcomp
closur condit:compound
condit closur:compound
match condit:obj
key paramet:acl
paramet key:acl
valu paramet:acl
paramet valu:acl
valu key:conj
key valu:conj
link hash map tree map:conj
tree map link hash map:conj
hashtabl tree map:conj
tree map hashtabl:conj
properti tree map:conj
tree map properti:conj
return map:amod
preserv map:nsubj
preserv type:obj
return hash map:nsubj
return preserv:parataxis
preserv return:parataxis
iter version:compound
version iter:compound
group version:nmod
version group:nmod
iter member:compound
member iter:compound
member sort:dep
sort member:dep
group sort:obl
sort group:obl
determin group:acl
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
return closur:nsubj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
return link hash map:amod
distinct key:amod
key distinct:amod
key entri:nmod
return key:acl
key return:acl
return closur:obl
valu list:nsubj
list valu:nsubj
return list:advcl
item list:nmod
list item:nmod
group item:nmod
item group:nmod
array member:compound
member array:compound
member sort:dep
sort member:dep
group member:nmod
member group:nmod
determin group:acl
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
return closur:nsubj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
return link hash map:amod
distinct key:amod
key distinct:amod
key entri:nmod
return key:acl
key return:acl
return closur:obl
valu list:nsubj
list valu:nsubj
return list:advcl
item list:nmod
list item:nmod
group item:nmod
item group:nmod
iter version:compound
version iter:compound
group version:nmod
version group:nmod
determin sort:nsubj
array member:compound
member array:compound
member sort:dep
sort member:dep
group member:nmod
member group:nmod
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
iter variant:compound
variant iter:compound
variant closur:nmod
closur variant:nmod
method variant:nmod
variant method:nmod
iter version:compound
version iter:compound
group version:nmod
version group:nmod
determin sort:nsubj
array member:compound
member array:compound
member sort:dep
sort member:dep
group member:nmod
member group:nmod
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
list variant:compound
variant list:compound
variant closur:nmod
closur variant:nmod
method variant:nmod
variant method:nmod
iter version:compound
version iter:compound
count version:nmod
version count:nmod
determin sort:nsubj
count sort:nsubj
collect member:compound
member collect:compound
member sort:dep
sort member:dep
group member:nmod
member group:nmod
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
count determin:conj
determin count:conj
group size:compound
size group:compound
count size:obj
return closur:nsubj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
return map:amod
distinct key:amod
key distinct:amod
key entri:nmod
return key:acl
key return:acl
return closur:obl
valu frequenc:nsubj
frequenc valu:nsubj
return frequenc:advcl
item frequenc:nmod
frequenc item:nmod
occur item:acl
occur group:obl
determin sort:nsubj
count sort:nsubj
array member:compound
member array:compound
member sort:dep
sort member:dep
group member:nmod
member group:nmod
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
count determin:conj
determin count:conj
group size:compound
size group:compound
count size:obj
return closur:nsubj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
return map:amod
distinct key:amod
key distinct:amod
key entri:nmod
return key:acl
key return:acl
return closur:obl
valu frequenc:nsubj
frequenc valu:nsubj
return frequenc:advcl
item frequenc:nmod
frequenc item:nmod
occur item:acl
occur group:obl
determin sort:nsubj
count sort:nsubj
iter item:compound
item iter:compound
item sort:dep
sort item:dep
group item:nmod
item group:nmod
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
count determin:conj
determin count:conj
group size:compound
size group:compound
count size:obj
return closur:nsubj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
return map:amod
distinct key:amod
key distinct:amod
key entri:nmod
return key:acl
key return:acl
return closur:obl
valu frequenc:nsubj
frequenc valu:nsubj
return frequenc:advcl
item frequenc:nmod
frequenc item:nmod
occur item:acl
occur group:obl
map group:nsubj
map entri:obj
map group:obl
determin group:acl
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
pass closur:nsubj
return closur:nsubj
pass key:obj
valu key:conj
key valu:conj
depend number:case
accept number:advcl
paramet number:nmod
number paramet:nmod
accept closur:nsubj
accept pass:parataxis
pass accept:parataxis
return pass:conj
pass return:conj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
result map:amod
group entri:nmod
entri group:nmod
key group:dep
return group:acl
return closur:obl
valu list:nsubj
list valu:nsubj
return list:advcl
map entri:compound
entri map:compound
entri list:nmod
list entri:nmod
belong entri:acl
belong group:obl
map entri:compound
entri map:compound
entri list:nmod
list entri:nmod
group code:compound
code group:compound
determin group:nsubj
count group:nsubj
member group:dep
group member:dep
map member:nmod
member map:nmod
group map:nmod
map group:nmod
suppli closur:amod
map closur:compound
closur map:compound
determin closur:obl
count determin:conj
determin count:conj
count frequenc:obj
creat group:amod
group frequenc:nmod
frequenc group:nmod
pass closur:nsubj
return closur:nsubj
pass key:obj
valu key:conj
key valu:conj
depend number:case
accept number:advcl
paramet number:nmod
number paramet:nmod
accept closur:nsubj
accept pass:parataxis
pass accept:parataxis
return pass:conj
pass return:conj
return key:obj
group item:nsubj
group return:ccomp
return group:ccomp
result map:amod
group entri:nmod
entri group:nmod
key count:nsubj
count key:nsubj
return key:acl
key return:acl
return closur:obl
valu frequenc:nsubj
frequenc valu:nsubj
return frequenc:advcl
count group:acl
count group:obl
current group:dep
element group:parataxis
group element:parataxis
valu element:dep
element valu:dep
perform function:obj
perform version:obl
inject version:acl
initi valu:amod
collect head:nmod
head collect:nmod
initi valu:amod
iter inject:ccomp
inject iter:ccomp
iter tail:obl
iter map:obl
pass iter:parataxis
iter pass:parataxis
initi valu:amod
pass valu:obl
arg closur:compound
closur arg:compound
pass closur:obl
iter item:obl
arg closur:compound
closur arg:compound
iter closur:obl
closur item:conj
item closur:conj
key closur:nmod
closur key:nmod
valu closur:nmod
closur valu:nmod
valu key:conj
key valu:conj
pass result:nsubj
inject pass:ccomp
pass inject:ccomp
pass closur:obl
pass item:obl
inject result:nsubj
inject closur:obl
entir collect:amod
function parlanc:amod
reduc parlanc:obl
pass iter:xcomp
iter pass:xcomp
initi valu:amod
pass valu:obl
pass closur:obl
pass result:nsubj
inject pass:ccomp
pass inject:ccomp
pass closur:obl
pass item:obl
inject result:nsubj
inject closur:obl
inject item:dep
expir iter:nsubj
expir valu:obl
function parlanc:amod
parlanc fold left:nmod
fold left parlanc:nmod
iter object:obl
pass object:acl
pass valu:obl
pass closur:obl
pass result:nsubj
inject pass:ccomp
pass inject:ccomp
pass closur:obl
pass item:obl
inject result:nsubj
inject closur:obl
object iter:nmod
iter object:nmod
function parlanc:amod
parlanc fold left:nmod
fold left parlanc:nmod
iter object:obl
pass object:acl
initi valu:amod
pass valu:obl
pass closur:obl
pass result:nsubj
inject pass:ccomp
pass inject:ccomp
pass closur:obl
pass item:obl
inject result:nsubj
inject closur:obl
object iter:nmod
iter object:nmod
function parlanc:amod
parlanc fold left:nmod
fold left parlanc:nmod
iter array:obl
inject array:acl
inject object:obj
initi valu closur:dep
closur initi valu:dep
iter closur:dep
array element:nmod
element array:nmod
initi valu array:nmod
array initi valu:nmod
remain element:amod
iter element:obj
array element:nmod
element array:nmod
iter array:obl
pass array:acl
initi valu:amod
pass valu:obl
pass closur:obl
pass result:nsubj
inject pass:ccomp
pass inject:ccomp
pass closur:obl
pass item:obl
inject result:nsubj
inject closur:obl
array element:nmod
element array:nmod
function parlanc:amod
parlanc fold left:nmod
fold left parlanc:nmod
iter version:compound
version iter:compound
sum version:nmod
version sum:nmod
item sum:dep
sum item:dep
iter item:nmod
item iter:nmod
invok equival:advcl
equival invok:advcl
invok method:obj
invok item:obl
iter item:nmod
item iter:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
invok equival:advcl
equival invok:advcl
invok method:obj
invok item:obl
array item:nmod
item array:nmod
item sum:dep
sum item:dep
iter item:nmod
item iter:nmod
invok equival:advcl
equival invok:advcl
invok method:obj
invok item:obl
iter item:nmod
item iter:nmod
exhaust element:obl
sum valu:compound
valu sum:compound
determin valu:obj
item sum:dep
sum item:dep
array item:nmod
item array:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
item sum:dep
sum item:dep
array item:nmod
item array:nmod
iter version:compound
version iter:compound
sum version:nmod
version sum:nmod
item sum:dep
sum item:dep
iter item:nmod
item iter:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
iter item:nmod
item iter:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
invok equival:advcl
equival invok:advcl
invok method:obj
invok item:obl
iter item:nmod
item iter:nmod
exhaust element:obl
sum valu:compound
valu sum:compound
determin valu:obj
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
item sum:dep
sum item:dep
array item:nmod
item array:nmod
ad sum:acl
ad result:obj
initi valu:amod
ad valu:obl
iter version:compound
version iter:compound
sum version:nmod
version sum:nmod
appli sum:nsubj
result sum:nmod
sum result:nmod
appli closur:obj
appli item:obl
iter item:nmod
item iter:nmod
equival closur:nsubj
equival closur:dep
iter item:nmod
item iter:nmod
appli sum:nsubj
result sum:nmod
sum result:nmod
appli closur:obj
appli item:obl
array item:nmod
item array:nmod
equival closur:dep
array item:nmod
item array:nmod
return sum:nsubj
result sum:dep
sum result:dep
appli sum:acl
appli closur:obj
appli item:obl
return iter:obl
equival closur:dep
exhaust element:obl
sum valu:compound
valu sum:compound
determin valu:obj
iter item:nmod
item iter:nmod
iter version:compound
version iter:compound
sum version:nmod
version sum:nmod
result sum:dep
sum result:dep
appli result:acl
appli closur:obj
appli item:obl
iter item:nmod
item iter:nmod
initi valu:amod
appli valu:obl
closur init val:appos
init val closur:appos
equival closur:dep
init val sum:dep
sum init val:dep
collect item:nmod
item collect:nmod
result sum:dep
sum result:dep
appli result:acl
appli closur:obj
appli item:obl
array item:nmod
item array:nmod
initi valu:amod
appli valu:obl
closur init val:appos
init val closur:appos
equival closur:dep
init val sum:dep
sum init val:dep
array item:nmod
item array:nmod
result sum:dep
sum result:dep
appli result:acl
appli closur:obj
appli item:obl
iter item:nmod
item iter:nmod
initi valu:amod
appli valu:obl
closur init val:appos
init val closur:appos
equival closur:dep
init val sum:dep
sum init val:dep
exhaust element:obl
sum valu:compound
valu sum:compound
determin valu:obj
iter item:nmod
item iter:nmod
string represent:compound
represent string:compound
concaten represent:obl
item represent:dep
represent item:dep
iter item:nmod
item iter:nmod
string item:nmod
item string:nmod
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
exhaust element:obl
result valu:amod
conjoin valu:amod
determin valu:obj
iter version:compound
version iter:compound
join version:acl
string represent:compound
represent string:compound
concaten represent:obl
item represent:dep
represent item:dep
iter item:nmod
item iter:nmod
string item:nmod
item string:nmod
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obl
item represent:dep
represent item:dep
array item:nmod
item array:nmod
string item:nmod
item string:nmod
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
string represent:compound
represent string:compound
concaten represent:obj
item represent:nmod
represent item:nmod
array item:nmod
item array:nmod
concaten string:obl
separ string:nmod
string separ:nmod
item separ:nmod
separ item:nmod
iter version:compound
version iter:compound
min version:nmod
version min:nmod
min method:compound
method min:compound
add method:obl
collect object:compound
object collect:compound
object method:obl
method object:obl
min method:compound
method min:compound
add method:obl
iter object:compound
object iter:compound
object method:obl
method object:obl
exhaust element:obl
minimum valu:amod
determin valu:obj
min method:compound
method min:compound
add method:obl
object array:compound
array object:compound
array method:dep
method array:dep
iter version:compound
version iter:compound
min version:nmod
version min:nmod
minimum valu:amod
select valu:obj
minimum valu:amod
select valu:obj
minimum valu:amod
select valu:obj
object array:compound
array object:compound
iter version:compound
version iter:compound
min version:nmod
version min:nmod
minimum valu:amod
select valu:obj
correct order:amod
determin order:obj
exhaust element:obl
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
minimum valu:amod
select valu:obj
object array:compound
array object:compound
correct order:amod
determin order:obj
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
iter version:compound
version iter:compound
max version:nmod
version max:nmod
max method:compound
method max:compound
add method:obl
iter object:compound
object iter:compound
object method:obl
method object:obl
max method:compound
method max:compound
add method:obl
iter object:compound
object iter:compound
object method:obl
method object:obl
exhaust element:obl
maximum valu:amod
determin valu:obj
max method:compound
method max:compound
add method:obl
object array:compound
array object:compound
array method:dep
method array:dep
iter version:compound
version iter:compound
max version:nmod
version max:nmod
maximum valu:amod
select valu:obj
correct order:amod
determin order:obj
exhaust element:obl
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
maximum valu:amod
select valu:obj
object array:compound
array object:compound
correct order:amod
determin order:obj
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
iter version:compound
version iter:compound
max version:nmod
version max:nmod
maximum valu:amod
select valu:obj
maximum valu:amod
select valu:obj
maximum valu:amod
select valu:obj
object array:compound
array object:compound
return indic:compound
indic return:compound
collect indic:nmod
indic collect:nmod
return indic:compound
indic return:compound
array indic:nmod
indic array:nmod
standard method:amod
groovi method:amod
size method:compound
method size:compound
provid method:obl
iter method:dep
method iter:dep
exhaust element:obl
size valu:compound
valu size:compound
determin valu:obj
standard method:amod
groovi method:amod
size method:compound
method size:compound
provid method:obl
iter method:dep
method iter:dep
standard method:amod
groovi method:amod
size method:compound
method size:compound
provid method:obl
array method:dep
method array:dep
rang oper:compound
oper rang:compound
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
list oper:nmod
oper list:nmod
item list:nmod
list item:nmod
eager list:amod
lazi eager:conj
eager lazi:conj
lazi list:amod
list item:nmod
item list:nmod
identifi indic:obj
select identifi:advcl
identifi select:advcl
rang oper:compound
oper rang:compound
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
eager list:amod
lazi eager:conj
eager lazi:conj
lazi list:amod
list oper:nmod
oper list:nmod
rang oper:compound
oper rang:compound
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
eager list:amod
lazi eager:conj
eager lazi:conj
lazi list:amod
list oper:nmod
oper list:nmod
rang oper:compound
oper rang:compound
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
list oper:nmod
oper list:nmod
select list:obj
item list:nmod
list item:nmod
list item:nmod
item list:nmod
identifi indic:obj
select identifi:advcl
identifi select:advcl
select list:obj
item list:nmod
list item:nmod
array item:nmod
item array:nmod
identifi indic:obj
select identifi:advcl
identifi select:advcl
similar method:nsubj
index rang:compound
rang index:compound
rang key:conj
key rang:conj
similar method:nsubj
index rang:compound
rang index:compound
rang key:conj
key rang:conj
origin map:amod
unalt map:nsubj
map item:nmod
item map:nmod
key map:nmod
map key:nmod
return valu:obj
key entri:nmod
entri key:nmod
add case:nsubj
add key:acl
default valu:compound
valu default:compound
add valu:obj
add map:obl
add return:obl
return map:conj
map return:conj
exist entri:csubj
key entri:nmod
entri key:nmod
rang oper:compound
oper rang:compound
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
array oper:nmod
oper array:nmod
includ rang:case
rang oper:nmod
oper rang:nmod
valu rang:nmod
rang valu:nmod
includ rang:xcomp
includ valu:obl
includ rang:xcomp
includ valu:obl
array convers:nmod
convers array:nmod
mutabl list:amod
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
list oper:nmod
oper list:nmod
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
iter oper:nmod
oper iter:nmod
typic usag:amod
helper method:compound
method helper:compound
subscript oper:compound
oper subscript:compound
work oper:obl
helper method:compound
method helper:compound
subscript oper:compound
oper subscript:compound
work oper:obl
helper method:compound
method helper:compound
subscript oper:compound
oper subscript:compound
work oper:obl
list oper:compound
oper list:compound
subscript oper:compound
oper subscript:compound
assign oper:compound
oper assign:compound
oper collect:nsubj
collect oper:nsubj
assign operand:compound
operand assign:compound
operand index:conj
index operand:conj
replac item:nsubj
rang item:nmod
item rang:nmod
replac item:obl
collect item:nmod
item collect:nmod
list oper:compound
oper list:compound
subscript oper:compound
oper subscript:compound
assign oper:compound
oper assign:compound
index rang:nmod
rang index:nmod
replac item:nsubj
rang item:nmod
item rang:nmod
replac operand:obl
valu operand:compound
operand valu:compound
treat operand:nsubj
singl valu:amod
treat valu:obl
helper method:compound
method helper:compound
subscript oper:compound
oper subscript:compound
work oper:obl
helper method:compound
method helper:compound
subscript oper:compound
oper subscript:compound
work oper:obl
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
map oper:nmod
oper map:nmod
map return:dep
return map:dep
give preced:obj
result map:amod
valu map:nmod
map valu:nmod
operand valu:nmod
valu operand:nmod
left map:amod
link hash map tree map:conj
tree map link hash map:conj
hashtabl tree map:conj
tree map hashtabl:conj
properti tree map:conj
tree map properti:conj
return map:amod
preserv map:nsubj
preserv type:obj
return hash map:nsubj
return preserv:parataxis
preserv return:parataxis
equival map:obl
addit logic:amod
preserv logic:acl
left map:amod
map type:compound
type map:compound
preserv type:obj
common case:amod
case type:nmod
type case:nmod
helper method:compound
method helper:compound
subscript oper:compound
oper subscript:compound
work oper:obl
subscript oper:compound
oper subscript:compound
oper support:dep
support oper:dep
collect oper:nmod
oper collect:nmod
conveni method:compound
method conveni:compound
creat method:acl
immut map:amod
creat map:obj
conveni method:compound
method conveni:compound
creat method:acl
immut creat:obj
creat immut:obj
sort method:acl
sort map:obj
conveni method:compound
method conveni:compound
creat method:acl
immut list:amod
creat list:obj
conveni method:compound
method conveni:compound
creat method:acl
immut list:amod
creat list:obj
conveni method:compound
method conveni:compound
creat method:acl
immut creat:obj
creat immut:obj
sort method:acl
sort set:obj
conveni method:compound
method conveni:compound
creat method:acl
immut collect:amod
creat collect:obj
conveni method:compound
method conveni:compound
creat method:acl
synchron map:amod
creat map:obj
conveni method:compound
method conveni:compound
creat method:acl
synchron sort map:amod
creat sort map:obj
conveni method:compound
method conveni:compound
creat method:acl
synchron collect:amod
creat collect:obj
conveni method:compound
method conveni:compound
creat method:acl
synchron list:amod
creat list:obj
conveni method:compound
method conveni:compound
set method:nsubj
creat method:acl
conveni method:compound
method conveni:compound
creat method:acl
synchron sort set:amod
creat sort set:obj
spread map return:dep
return spread map:dep
map spread map:nmod
spread map map:nmod
show case:obj
note case:dep
groovi cover:nmod
cover groovi:nmod
spreadabl map:amod
creat map:obj
creat array:obl
spreadabl map:amod
creat map:obj
creat list:obl
spreadabl map:amod
creat map:obj
creat iter:obl
wrap map:obj
decor pattern:compound
pattern decor:compound
call intercept:dep
intercept call:dep
key wrap:dep
wrap key:dep
unknown key:amod
default valu:compound
valu default:compound
store valu:nsubj
store map:obl
return store:advcl
store return:advcl
default valu:compound
valu default:compound
valu result:nsubj
result valu:nsubj
store valu:acl
call result:acl
suppli closur:amod
call closur:obj
call key:obl
paramet key:nmod
key paramet:nmod
call closur:obl
lazi default alia:nmod
alia lazi default:nmod
decor lazi default:acl
decor list:obj
call grow:advcl
grow call:advcl
index valu:compound
valu index:compound
call valu:obl
normal bound:amod
list bound:compound
bound list:compound
bound valu:nmod
valu bound:nmod
zip iter:obj
zip indic:obl
valu indic:nmod
indic valu:nmod
index valu:appos
valu index:appos
order valu:dep
valu order:dep
zip iter:obj
zip indic:obl
index indic:nmod
indic index:nmod
valu index:appos
index valu:appos
order index:dep
index order:dep
zip iter:obj
zip indic:obl
valu indic:nmod
indic valu:nmod
index valu:appos
valu index:appos
order valu:dep
valu order:dep
zip iter:obj
zip indic:obl
index indic:nmod
indic index:nmod
valu index:appos
index valu:appos
order index:dep
index order:dep
zip iter:obj
zip indic:obl
valu indic:nmod
indic valu:nmod
index valu:appos
valu index:appos
order valu:dep
valu order:dep
zip iter:obj
zip indic:obl
index indic:nmod
indic index:nmod
valu index:appos
index valu:appos
order index:dep
index order:dep
zip iter:obj
zip indic:obl
valu indic:nmod
indic valu:nmod
index valu:appos
valu index:appos
order valu:dep
valu order:dep
zip iter:obj
zip indic:obl
index indic:nmod
indic index:nmod
valu index:appos
index valu:appos
order index:dep
index order:dep
iter version:compound
version iter:compound
collect sort:dep
sort collect:dep
collect item:compound
item collect:compound
compar item:nsubj
compar sume:ccomp
sume compar:ccomp
natur order:amod
result order:amod
determin order:obj
collect list:nsubj
list collect:nsubj
sort list:advcl
sort place:obl
return sort:conj
sort return:conj
element collect:nsubj
collect element:nsubj
sort list:acl
return list:acl
return sort:conj
sort return:conj
origin collect:amod
unchang collect:advmod
iter version:compound
version iter:compound
iter sort:dep
sort iter:dep
iter item:amod
compar item:nsubj
compar sume:ccomp
sume compar:ccomp
natur order:amod
result order:amod
determin order:obj
iter list:nsubj
list iter:nsubj
sort list:advcl
mutat list:conj
list mutat:conj
sort mutat:advcl
true list:acl
sort place:obl
return sort:conj
sort return:conj
element iter:nsubj
iter element:nsubj
sort list:acl
return list:acl
return sort:conj
sort return:conj
origin iter:amod
unchang iter:advmod
element sort:dep
sort element:dep
map element:nmod
element map:nmod
order map:amod
determin order:obj
origin map:amod
unchang map:nsubj
element sort:dep
sort element:dep
map element:nmod
element map:nmod
order map:amod
key compar:amod
determin order:obj
origin map:amod
unchang map:nsubj
element sort:dep
sort element:dep
map element:nmod
element map:nmod
order map:amod
natur order:amod
key order:nmod
order key:nmod
determin order:obj
origin map:amod
unchang map:nsubj
modifi array:obj
sort element:nsubj
sort modifi:advcl
modifi sort:advcl
sort order:obj
array item:compound
item array:compound
assum item:nsubj
compar assum:xcomp
assum compar:xcomp
array sort:dep
sort array:dep
sort order:amod
order array:nmod
array order:nmod
array item:compound
item array:compound
assum item:nsubj
compar assum:xcomp
assum compar:xcomp
true mutat:nsubj
true sort:advcl
sort true:advcl
sort array:nsubj
return array:nsubj
sort place:obl
return sort:conj
sort return:conj
sort array:obj
origin array:amod
remain array:nsubj
remain return:conj
return remain:conj
unchang remain:xcomp
remain unchang:xcomp
iter item:compound
item iter:compound
item sort:dep
sort item:dep
sort iter:amod
iter item:nmod
item iter:nmod
assum item:nsubj
compar assum:xcomp
assum compar:xcomp
origin iter:amod
exhaust element:obl
method call:compound
call method:compound
complet call:obj
produc iter:nsubj
travers produc:ccomp
produc travers:ccomp
travers item:obj
sort order:amod
order item:nmod
item order:nmod
iter item:compound
item iter:compound
item sort:dep
sort item:dep
sort iter:amod
iter item:nmod
item iter:nmod
origin iter:amod
exhaust element:obl
method call:compound
call method:compound
complet call:obj
produc iter:nsubj
travers produc:ccomp
produc travers:ccomp
travers item:obj
sort order:amod
order item:nmod
item order:nmod
iter version:compound
version iter:compound
iter version:compound
version iter:compound
iter sort:dep
sort iter:dep
iter list:nsubj
list iter:nsubj
sort list:advcl
mutat list:conj
list mutat:conj
sort mutat:advcl
true list:acl
sort place:obl
return sort:conj
sort return:conj
element iter:nsubj
iter element:nsubj
sort list:acl
return list:acl
return sort:conj
sort return:conj
origin iter:amod
unchang iter:advmod
array sort:dep
sort array:dep
sort order:amod
order array:nmod
array order:nmod
modifi array:obj
sort element:nsubj
sort modifi:advcl
modifi sort:advcl
sort order:obj
determin sort:advcl
sort determin:advcl
determin compar:obl
true mutat:nsubj
true sort:advcl
sort true:advcl
sort array:nsubj
return array:nsubj
sort place:obl
return sort:conj
sort return:conj
sort array:obj
origin array:amod
remain array:nsubj
remain return:conj
return remain:conj
unchang remain:xcomp
remain unchang:xcomp
iter item:compound
item iter:compound
item sort:dep
sort item:dep
sort iter:amod
iter item:nmod
item iter:nmod
correct order:amod
determin order:obj
origin iter:amod
process iter:nsubj
method call:compound
call method:compound
process call:obl
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
element sort:dep
sort element:dep
array sort:obl
sort array:obl
creat array:amod
array sort:obl
sort array:obl
correct order:amod
determin order:obj
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
iter version:compound
version iter:compound
iter version:compound
version iter:compound
unnecessari work:amod
sort set:amod
sort set:iobj
ident function:compound
function ident:compound
function set:dep
set function:dep
sort set:amod
set function:nmod
function set:nmod
unnecessari work:amod
sort map:amod
sort map:iobj
ident function:compound
function ident:compound
function map:dep
map function:dep
sort map:amod
map function:nmod
function map:nmod
iter sort:dep
sort iter:dep
iter element:amod
compar element:nsubj
compar sume:ccomp
sume compar:ccomp
result order:amod
determin order:obj
special treatment:amod
number treatment:nmod
treatment number:nmod
natur order:amod
iter element:amod
element order:nmod
order element:nmod
element iter:nsubj
iter element:nsubj
sort list:acl
return list:acl
return sort:conj
sort return:conj
origin iter:amod
unchang iter:advmod
iter sort:dep
sort iter:dep
element iter:nsubj
iter element:nsubj
sort list:acl
return list:acl
return sort:conj
sort return:conj
origin iter:amod
unchang iter:advmod
iter sort:dep
sort iter:dep
iter element:compound
element iter:compound
compar element:nsubj
compar sume:ccomp
sume compar:ccomp
result order:amod
determin order:obj
special treatment:amod
number treatment:nmod
treatment number:nmod
natur order:amod
iter element:compound
element iter:compound
element order:nmod
order element:nmod
produc iter:nsubj
travers produc:ccomp
produc travers:ccomp
travers item:obj
sort order:amod
order item:nmod
item order:nmod
iter item:compound
item iter:compound
origin iter:amod
exhaust element:obl
method call:compound
call method:compound
complet call:obj
produc iter:nsubj
travers produc:ccomp
produc travers:ccomp
travers item:obj
sort order:amod
order item:nmod
item order:nmod
iter item:compound
item iter:compound
item sort:dep
sort item:dep
sort iter:amod
iter item:nmod
item iter:nmod
correct order:amod
determin order:obj
origin iter:amod
process iter:nsubj
method call:compound
call method:compound
process call:obl
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
sort version:amod
version return:dep
return version:dep
array version:nmod
version array:nmod
suppli compar:amod
sort version:amod
version return:dep
return version:dep
array version:nmod
version array:nmod
suppli compar:amod
result order:amod
determin order:obj
element sort:dep
sort element:dep
array sort:obl
sort array:obl
creat array:amod
array sort:obl
sort array:obl
correct order:amod
determin order:obj
tradit compar:amod
compar paramet:obj
compar order:obl
return compar:obl
compar return:obl
return order:conj
negat integ:amod
return integ:obj
posit integ:amod
compar integ:obl
integ order:conj
order integ:conj
equal paramet:nsubj
greater paramet:nsubj
equal integ:acl
greater integ:acl
assum closur:nsubj
singl paramet:amod
return assum:xcomp
assum return:xcomp
compar return:obj
return compar:obj
compar integ:acl
map sort:nsubj
element sort:dep
sort element:dep
map element:nmod
element map:nmod
order map:amod
entri valu:compound
valu entri:compound
map valu:obj
determin map:advcl
map determin:advcl
result order:amod
determin order:obj
special treatment:amod
number treatment:nmod
treatment number:nmod
natur order:amod
iter element:compound
element iter:compound
element order:nmod
order element:nmod
origin map:amod
unchang map:nsubj
element sort:dep
sort element:dep
map element:nmod
element map:nmod
order map:amod
suppli compar:amod
determin order:obj
origin map:amod
unchang map:nsubj
unnecessari work:amod
sort set:amod
sort set:obj
unnecessari work:amod
sort map:amod
sort map:obj
remov item:obj
remov list:obl
ing similar:csubj
similar ing:csubj
ing add:obj
ing pop:dep
push similar:xcomp
similar push:xcomp
pop similar:xcomp
similar pop:xcomp
pop push:conj
push pop:conj
push stack:obl
multipl valu:amod
append valu:obj
append map:obl
map return:dep
return map:dep
give preced:obj
give entri:obl
result map:amod
valu map:nmod
map valu:nmod
entri operand:compound
operand entri:compound
operand valu:nmod
valu operand:nmod
link hash map tree map:conj
tree map link hash map:conj
hashtabl tree map:conj
tree map hashtabl:conj
properti tree map:conj
tree map properti:conj
return map:amod
preserv map:nsubj
preserv type:obj
return hash map:nsubj
return preserv:parataxis
preserv return:parataxis
append item:obj
append list:obl
add synonym:nmod
synonym add:nmod
item return:dep
return item:dep
list item:nmod
item list:nmod
item return:dep
return item:dep
iter item:nmod
item iter:nmod
return element:nsubj
return element:acl
return iter:obl
guarante iter:nsubj
defin order:amod
guarante order:obj
random element:amod
return element:nsubj
item return:dep
return item:dep
array item:nmod
item array:nmod
item return:dep
return item:dep
list item:nmod
item list:nmod
item return:dep
return item:dep
iter item:nmod
item iter:nmod
return element:nsubj
return element:acl
return iter:obl
guarante iter:nsubj
defin order:amod
guarante order:obj
random element:amod
return element:nsubj
item return:dep
return item:dep
array item:nmod
item array:nmod
item return:dep
return item:dep
iter item:nmod
item iter:nmod
return element:nsubj
return element:acl
return iter:obl
guarante iter:nsubj
defin order:amod
guarante order:obj
random element:amod
return element:nsubj
item return:dep
return item:dep
list item:nmod
item list:nmod
item return:dep
return item:dep
object array:compound
array object:compound
array item:nmod
item array:nmod
item return:dep
return item:dep
list item:nmod
item list:nmod
exclud item:case
item list:nmod
list item:nmod
item return:dep
return item:dep
sort set item:nmod
item sort set:nmod
exclud item:case
item sort set:nmod
sort set item:nmod
item return:dep
return item:dep
iter item:nmod
item iter:nmod
exclud item:case
item iter:nmod
iter item:nmod
item return:dep
return item:dep
array item:nmod
item array:nmod
exclud item:case
item array:nmod
array item:nmod
origin iter:amod
iter return:dep
return iter:dep
throw iter:acl
throw element:obj
item return:dep
return item:dep
iter item:nmod
item iter:nmod
exclud item:case
item iter:nmod
iter item:nmod
origin iter:amod
iter leav:dep
leav iter:dep
unchang leav:dep
item return:dep
return item:dep
list item:nmod
item list:nmod
exclud item:case
item list:nmod
list item:nmod
origin list:amod
list leav:dep
leav list:dep
unchang leav:dep
item return:dep
return item:dep
sort set item:nmod
item sort set:nmod
exclud item:case
item sort set:nmod
sort set item:nmod
origin sort set:amod
sort set leav:dep
leav sort set:dep
unchang leav:dep
iter return:dep
return iter:dep
item return:dep
return item:dep
object array:compound
array object:compound
array item:nmod
item array:nmod
exclud item:case
item array:nmod
array item:nmod
num element:compound
element num:compound
element return:dep
return element:dep
head element:nmod
element head:nmod
list head:nmod
head list:nmod
list element:nmod
element list:nmod
num element:compound
element num:compound
num element:compound
element num:compound
element return:dep
return element:dep
head element:nmod
element head:nmod
sort set head:nmod
head sort set:nmod
sort set element:nmod
element sort set:nmod
num element:compound
element num:compound
num element:compound
element num:compound
element return:dep
return element:dep
head element:nmod
element head:nmod
array head:nmod
head array:nmod
num element:compound
element num:compound
num element:compound
element num:compound
element return:dep
return element:dep
head element:nmod
element head:nmod
iter head:nmod
head iter:nmod
iter element:nmod
element iter:nmod
num element:compound
element num:compound
add item:obj
iter item:nmod
item iter:nmod
add collect:obl
add item:obj
iter item:nmod
item iter:nmod
add collect:obl
map return:dep
return map:dep
num element:compound
element num:compound
map head:nmod
head map:nmod
map instanc:compound
instanc map:compound
order instanc:nsubj
order return:advcl
return order:advcl
order key:obj
return function:nsubj
random entri:amod
num entri:compound
entri num:compound
return entri:obj
groovi default:nmod
main issu:nmod
num element:compound
element num:compound
iter return:dep
return iter:dep
element iter:nmod
iter element:nmod
iter element:nmod
element iter:nmod
origin iter:amod
step iter:nsubj
num element:compound
element num:compound
step element:obl
num element:compound
element num:compound
element return:dep
return element:dep
tail element:nmod
element tail:nmod
array tail:nmod
tail array:nmod
num element:compound
element num:compound
num element:compound
element num:compound
element return:dep
return element:dep
tail element:nmod
element tail:nmod
list tail:nmod
tail list:nmod
list element:nmod
element list:nmod
num element:compound
element num:compound
num element:compound
element num:compound
element return:dep
return element:dep
tail element:nmod
element tail:nmod
sort set tail:nmod
tail sort set:nmod
sort set element:nmod
element sort set:nmod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
head element:nmod
element head:nmod
list head:nmod
head list:nmod
empti list:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
head element:nmod
element head:nmod
list head:nmod
head list:nmod
empti list:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
head element:nmod
element head:nmod
iter head:nmod
head iter:nmod
empti list:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
head element:nmod
element head:nmod
array head:nmod
head array:nmod
empti array:amod
num element:nummod
element num:nummod
drop number:obj
key valu:compound
valu key:compound
valu number:nmod
number valu:nmod
drop pair:nsubj
head pair:nmod
pair head:nmod
map head:nmod
head map:nmod
map instanc:compound
instanc map:compound
order instanc:nsubj
order drop:advcl
drop order:advcl
order key:obj
drop function:nsubj
random entri:amod
num entri:compound
entri num:compound
drop entri:obj
groovi default:nmod
main issu:nmod
empti map:amod
num element:nummod
element num:nummod
drop number:obj
element number:nmod
number element:nmod
head element:nmod
element head:nmod
iter head:nmod
head iter:nmod
origin iter:amod
step iter:nsubj
num element:compound
element num:compound
step element:obl
drop number:obj
element number:nmod
number element:nmod
tail element:nmod
element tail:nmod
sort set tail:nmod
tail sort set:nmod
empti sort set:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
tail element:nmod
element tail:nmod
list tail:nmod
tail list:nmod
empti list:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
tail element:nmod
element tail:nmod
iter tail:nmod
tail iter:nmod
empti list:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
tail element:nmod
element tail:nmod
iter tail:nmod
tail iter:nmod
empti iter:amod
num element:compound
element num:compound
drop number:obj
element number:nmod
number element:nmod
tail element:nmod
element tail:nmod
array tail:nmod
tail array:nmod
empti array:amod
num element:nummod
element num:nummod
evalu return:nsubj
longest prefix:amod
prefix return:dep
return prefix:dep
list prefix:nmod
prefix list:nmod
pass element:nsubj
pass return:acl
closur condit:compound
condit closur:compound
pass condit:obl
true evalu:advcl
evalu true:advcl
preserv attempt:xcomp
attempt preserv:xcomp
preserv type:obj
origin list:amod
list type:nmod
type list:nmod
evalu closur:nsubj
evalu element:acl
true evalu:advcl
evalu true:advcl
evalu return:nsubj
collect return:dep
return collect:dep
longest prefix:amod
element prefix:nmod
prefix element:nmod
pass element:nsubj
pass iter:acl
pass closur:obl
true evalu:advcl
evalu true:advcl
pass element:nsubj
pass element:acl
pass closur:obl
evalu continu:ccomp
continu evalu:ccomp
true evalu:advcl
evalu true:advcl
evalu return:nsubj
longest prefix:amod
prefix return:dep
return prefix:dep
sort set prefix:nmod
prefix sort set:nmod
pass element:nsubj
pass return:acl
closur condit:compound
condit closur:compound
pass condit:obl
true evalu:advcl
evalu true:advcl
preserv attempt:xcomp
attempt preserv:xcomp
preserv type:obj
origin sort set:amod
sort set type:nmod
type sort set:nmod
evalu closur:nsubj
evalu element:acl
true evalu:advcl
evalu true:advcl
evalu return:nsubj
longest prefix:amod
prefix return:dep
return prefix:dep
array prefix:nmod
prefix array:nmod
pass element:nsubj
pass return:acl
pass closur:obl
true evalu:advcl
evalu true:advcl
evalu closur:nsubj
evalu element:acl
true evalu:advcl
evalu true:advcl
evalu return:nsubj
longest prefix:amod
prefix return:dep
return prefix:dep
element prefix:nmod
prefix element:nmod
iter element:nmod
element iter:nmod
pass element:nsubj
pass return:acl
condit closur:compound
closur condit:compound
pass closur:obl
true evalu:advcl
evalu true:advcl
pass element:nsubj
pass element:acl
pass closur:obl
evalu continu:ccomp
continu evalu:ccomp
true evalu:advcl
evalu true:advcl
suffix return:dep
return suffix:dep
sort set suffix:nmod
suffix sort set:nmod
drop element:nsubj
drop return:dep
drop front:obl
evalu closur:nsubj
evalu drop:advcl
drop evalu:advcl
true evalu:advcl
evalu true:advcl
preserv attempt:xcomp
attempt preserv:xcomp
preserv type:obj
origin sort set:amod
sort set type:nmod
type sort set:nmod
true evalu:advcl
evalu true:advcl
drop element:nsubj
drop evalu:advcl
evalu drop:advcl
drop front:obl
sort set front:nmod
front sort set:nmod
suffix return:dep
return suffix:dep
list suffix:nmod
suffix list:nmod
drop element:nsubj
drop return:dep
drop front:obl
evalu closur:nsubj
evalu drop:advcl
drop evalu:advcl
true evalu:advcl
evalu true:advcl
preserv attempt:xcomp
attempt preserv:xcomp
preserv type:obj
origin list:amod
list type:nmod
type list:nmod
true evalu:advcl
evalu true:advcl
drop element:nsubj
drop evalu:advcl
evalu drop:advcl
drop front:obl
list front:nmod
front list:nmod
suffix return:dep
return suffix:dep
iter suffix:nmod
suffix iter:nmod
drop element:nsubj
drop return:dep
drop front:obl
evalu closur:nsubj
evalu drop:advcl
drop evalu:advcl
true evalu:advcl
evalu true:advcl
true evalu:advcl
evalu true:advcl
drop element:nsubj
drop evalu:advcl
evalu drop:advcl
drop front:obl
iter front:nmod
front iter:nmod
creat suffix:obj
array suffix:nmod
suffix array:nmod
drop array:acl
drop front:obl
origin array:amod
array front:nmod
front array:nmod
call evalu:csubj
evalu call:csubj
closur condit:compound
condit closur:compound
call condit:obj
evalu drop:ccomp
drop evalu:ccomp
true evalu:advcl
evalu true:advcl
pass evalu:advcl
evalu pass:advcl
drop element:compound
pass element:obl
drop continu:xcomp
continu drop:xcomp
evalu element:nsubj
evalu drop:ccomp
drop evalu:ccomp
true evalu:advcl
evalu true:advcl
drop element:nsubj
drop evalu:advcl
evalu drop:advcl
drop front:obl
array front:nmod
front array:nmod
convert iter:obj
convert collect:obl
origin iter:amod
iter return:dep
return iter:dep
collect return:dep
return collect:dep
iter version:compound
version iter:compound
list version:nmod
version list:nmod
convert iter:obj
convert list:obl
origin iter:amod
iter return:dep
return iter:dep
list return:dep
return list:dep
object instanc:compound
instanc object:compound
coerc instanc:obj
boolean valu:amod
coerc valu:obl
coerc object:nsubj
true coerc:advcl
coerc true:advcl
null coerc:advcl
coerc null:advcl
fals null:advcl
null fals:advcl
boolean instanc:amod
coerc instanc:obj
boolean valu:amod
coerc valu:obl
collect instanc:compound
instanc collect:compound
coerc instanc:obj
boolean valu:amod
coerc valu:obl
coerc collect:nsubj
true collect:nsubj
fals coerc:advcl
coerc fals:advcl
empti coerc:advcl
coerc empti:advcl
true coerc:conj
coerc true:conj
map instanc:compound
instanc map:compound
coerc instanc:obj
boolean valu:amod
coerc valu:obl
coerc map:nsubj
true map:nsubj
fals coerc:advcl
coerc fals:advcl
empti coerc:advcl
coerc empti:advcl
true coerc:conj
coerc true:conj
iter instanc:compound
instanc iter:compound
coerc instanc:obj
boolean valu:amod
coerc valu:obl
coerc iter:nsubj
fals coerc:advcl
coerc fals:advcl
iter element:acl
true element:conj
enumer instanc:compound
instanc enumer:compound
coerc instanc:obj
boolean valu:amod
coerc valu:obl
coerc enumer:nsubj
fals coerc:advcl
coerc fals:advcl
enumer element:acl
true element:conj
object array:compound
array object:compound
coerc array:obj
boolean valu:amod
coerc valu:obl
object array:compound
array object:compound
fals array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
byte array:compound
array byte:compound
coerc array:obj
boolean valu:amod
coerc valu:obl
byte array:compound
array byte:compound
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
short array:amod
coerc array:obj
boolean valu:amod
coerc valu:obl
short array:amod
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
int array:compound
array int:compound
coerc array:obj
boolean valu:amod
coerc valu:obl
int array:compound
array int:compound
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
long array:amod
coerc array:obj
boolean valu:amod
coerc valu:obl
long array:amod
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
float array:compound
array float:compound
coerc array:obj
boolean valu:amod
coerc valu:obl
float array:compound
array float:compound
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
doubl array:amod
coerc array:obj
boolean valu:amod
coerc valu:obl
doubl array:amod
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
boolean array:amod
coerc array:obj
boolean valu:amod
coerc valu:obl
boolean array:amod
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
char array:compound
array char:compound
coerc array:obj
boolean valu:amod
coerc valu:obl
char array:compound
array char:compound
fals array:nsubj
true array:nsubj
array length:nsubj
length array:nsubj
fals length:advcl
true fals:conj
fals true:conj
coerc charact:obj
boolean valu:amod
coerc valu:obl
coerc charact:nsubj
fals coerc:advcl
coerc fals:advcl
charact valu:compound
valu charact:compound
coerc valu:advcl
equal valu:acl
equal valu:acl
true equal:obl
equal true:obl
coerc number:obj
boolean valu:amod
coerc valu:obl
coerc number:nsubj
true number:nsubj
fals coerc:advcl
coerc fals:advcl
doubl valu:amod
equal valu:nsubj
equal valu:nsubj
equal coerc:advcl
coerc equal:advcl
equal coerc:advcl
coerc equal:advcl
true equal:obl
equal true:obl
true coerc:conj
coerc true:conj
convert collect:obj
convert type:obl
default type:compound
type default:compound
concret type:amod
set list:acl
sort set list:conj
list sort set:conj
defer call:nsubj
collect type:nsubj
type collect:nsubj
return type:advcl
return instanc:nsubj
convert array:obj
list array:nmod
array list:nmod
set list:acl
convert sort set:obj
sort set array:conj
array sort set:conj
defer call:nsubj
coerc closur:obj
coerc implement:obl
class implement:nmod
implement class:nmod
assum class:nsubj
assum interfac:xcomp
assum class:xcomp
class interfac:conj
interfac class:conj
singl definit:amod
method definit:compound
definit method:compound
definit interfac:nmod
interfac definit:nmod
singl method:amod
method implement:nmod
implement method:nmod
coerc map:obj
type map:nmod
map type:nmod
map key:nmod
key map:nmod
valu closur:nsubj
closur valu:nsubj
behav closur:acl
method implement:compound
implement method:compound
behav implement:obl
creat list:obj
ident content:amod
creat content:obl
creat content:obl
list content:nmod
content list:nmod
revers order:amod
order content:nmod
content order:nmod
revers element:obj
list element:nmod
element list:nmod
true mutat:nsubj
true modifi:advcl
modifi true:advcl
origin list:amod
modifi list:nsubj
return list:nsubj
modifi place:obl
return modifi:conj
modifi return:conj
produc list:nsubj
revers item:amod
creat array:obj
revers order:amod
revers item:obj
revers array:obl
true mutat:nsubj
true modifi:advcl
modifi true:advcl
origin array:amod
modifi array:nsubj
return array:nsubj
modifi place:obl
return modifi:conj
modifi return:conj
produc array:nsubj
revers item:amod
revers iter:obj
origin iter:amod
exhaust element:obl
revers valu:amod
determin valu:obj
return iter:nsubj
revers valu:amod
iter valu:obl
creat array:obj
creat union:obl
array union:nmod
union array:nmod
creat array:obj
origin array:amod
addit element:amod
append element:amod
element array:nmod
array element:nmod
creat array:obj
origin array:amod
creat array:obj
origin array:amod
creat collect:obj
creat union:obl
collect union:nmod
union collect:nmod
left collect:amod
return collect:amod
set list:obj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat collect:obj
creat union:obl
iter union:nmod
union iter:nmod
left iter:amod
return collect:amod
set list:obj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat collect:obj
creat union:obl
collect union:nmod
union collect:nmod
iter union:nmod
union iter:nmod
iter collect:conj
collect iter:conj
left collect:amod
return collect:amod
set list:obj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat list:obj
creat union:obl
list union:nmod
union list:nmod
iter union:nmod
union iter:nmod
iter list:conj
list iter:conj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat list:obj
creat union:obl
list union:nmod
union list:nmod
collect union:nmod
union collect:nmod
collect list:conj
list collect:conj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
set creat:dep
creat set:dep
set union:obl
iter union:nmod
union iter:nmod
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
set creat:dep
creat set:dep
set union:obl
collect union:nmod
union collect:nmod
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat sort set:obj
creat union:obl
sort set union:nmod
union sort set:nmod
iter union:nmod
union iter:nmod
iter sort set:conj
sort set iter:conj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat sort set:obj
creat union:obl
sort set union:nmod
union sort set:nmod
collect union:nmod
union collect:nmod
collect sort set:conj
sort set collect:conj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat list:obj
insert creat:advcl
creat insert:advcl
iter element:nmod
element iter:nmod
insert element:obl
list element:nmod
element list:nmod
index list:nmod
list index:nmod
creat collect:obj
creat union:obl
collect union:nmod
union collect:nmod
object union:nmod
union object:nmod
object collect:conj
collect object:conj
return collect:amod
set list:obj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat collect:obj
creat union:obl
iter union:nmod
union iter:nmod
object union:nmod
union object:nmod
object iter:conj
iter object:conj
return collect:amod
set list:obj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat list:obj
creat union:obl
list union:nmod
union list:nmod
object union:nmod
union object:nmod
object list:conj
list object:conj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
set creat:dep
creat set:dep
set union:obl
object union:nmod
union object:nmod
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
creat sort set:obj
creat union:obl
sort set union:nmod
union sort set:nmod
object union:nmod
union object:nmod
object sort set:conj
sort set object:conj
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
iter variant:compound
variant iter:compound
compos collect:nsubj
compos creat:ccomp
creat compos:ccomp
compos element:obl
iter element:nmod
element iter:nmod
repeat compos:dep
compos repeat:dep
compos number:obj
time number:nmod
number time:nmod
ad element:obl
multipl refer:amod
ad refer:nsubj
instanc refer:nmod
refer instanc:nmod
ad note:ccomp
note ad:ccomp
support duplic:obj
return method:nsubj
return note:appos
return collect:obj
singl copi:amod
return copi:obl
iter item:nmod
item iter:nmod
item copi:nmod
copi item:nmod
repeat list:nsubj
compos list:acl
compos element:obl
iter element:nmod
element iter:nmod
repeat creat:ccomp
creat repeat:ccomp
repeat number:obj
time number:nmod
number time:nmod
ad element:obl
multipl refer:amod
ad refer:nsubj
instanc refer:nmod
refer instanc:nmod
ad note:ccomp
note ad:ccomp
support duplic:obj
return method:nsubj
return note:appos
return collect:obj
singl copi:amod
return copi:obl
iter item:nmod
item iter:nmod
item copi:nmod
copi item:nmod
compos collect:nsubj
compos creat:dep
creat compos:dep
compos intersect:obl
collect intersect:nmod
intersect collect:nmod
ad element:nsubj
exist element:acl
exist collect:obl
result collect:amod
ad collect:obl
compos collect:nsubj
compos creat:dep
creat compos:dep
compos intersect:obl
iter intersect:nmod
intersect iter:nmod
ad element:nsubj
exist element:acl
exist iter:obl
result collect:amod
ad collect:obl
creat list:obj
compos list:acl
compos intersect:obl
list intersect:nmod
intersect list:nmod
iter intersect:nmod
intersect iter:nmod
iter list:conj
list iter:conj
ad element:nsubj
exist element:acl
exist iter:obl
result collect:amod
ad collect:obl
compos intersect:obl
iter intersect:nmod
intersect iter:nmod
ad element:nsubj
exist element:acl
exist iter:obl
result collect:amod
ad collect:obl
compos sort set:nsubj
compos creat:dep
creat compos:dep
compos intersect:obl
sort set intersect:nmod
intersect sort set:nmod
iter intersect:nmod
intersect iter:nmod
iter sort set:conj
sort set iter:conj
ad element:nsubj
exist element:acl
exist iter:obl
result collect:amod
ad collect:obl
creat map:obj
compos map:acl
compos intersect:obl
map intersect:nmod
intersect map:nmod
ad entri:nsubj
exist entri:acl
exist map:obl
result map:amod
ad map:obl
true return:dep
empti intersect:nsubj
iter intersect:nmod
intersect iter:nmod
empti true:ccomp
true empti:ccomp
empti fals:amod
fals empti:amod
iter variant:compound
variant iter:compound
compar content:obj
array content:nmod
content array:nmod
compar content:obl
array content:nmod
content array:nmod
equal content:nsubj
array content:nmod
content array:nmod
equal determin:advcl
determin equal:advcl
equal content:obl
list content:nmod
content list:nmod
order content:nmod
content order:nmod
fals return:xcomp
return fals:xcomp
null collect:nsubj
null return:advcl
return null:advcl
equal content:nsubj
list content:nmod
content list:nmod
equal determin:advcl
determin equal:advcl
equal content:obl
array content:nmod
content array:nmod
order array:nmod
array order:nmod
fals return:xcomp
return fals:xcomp
null collect:nsubj
null return:advcl
return null:advcl
compar content:obj
list content:nmod
content list:nmod
matter order:dep
order matter:dep
exist number:nsubj
exist compar:advcl
compar exist:advcl
exist list:obl
compar number:obl
null list:nsubj
null true:advcl
true null:advcl
true result:nsubj
null list:nsubj
null fals:advcl
fals null:advcl
fals result:nsubj
fals true:parataxis
true fals:parataxis
compar map:obj
treat compar:xcomp
compar treat:xcomp
coerc valu:amod
numer valu:amod
treat valu:obj
ident treat:advcl
treat ident:advcl
set creat:ccomp
creat set:ccomp
compos set:dep
set compos:dep
compos element:obl
set element:obl
collect element:nmod
element collect:nmod
set creat:ccomp
creat set:ccomp
compos set:dep
set compos:dep
compos element:obl
set element:obl
iter element:nmod
element iter:nmod
compos element:obl
compos sort set:nsubj
compos creat:dep
creat compos:dep
compos element:obl
sort set element:nmod
element sort set:nmod
element sort set:nmod
sort set element:nmod
collect element:nmod
element collect:nmod
compos sort set:nsubj
compos creat:dep
creat compos:dep
compos element:obl
sort set element:nmod
element sort set:nmod
element sort set:nmod
sort set element:nmod
iter element:nmod
element iter:nmod
compos sort set:nsubj
compos creat:dep
creat compos:dep
compos element:obl
sort set element:nmod
element sort set:nmod
element sort set:nmod
sort set element:nmod
creat array:obj
compos array:acl
compos element:obl
array element:nmod
element array:nmod
element array:nmod
array element:nmod
iter element:nmod
element iter:nmod
creat array:obj
compos array:acl
compos element:obl
array element:nmod
element array:nmod
element array:nmod
array element:nmod
array element:nmod
element array:nmod
creat list:obj
compos list:acl
compos element:obl
list element:nmod
element list:nmod
occurr list:nmod
list occurr:nmod
element occurr:nmod
occurr element:nmod
collect element:nmod
element collect:nmod
compos collect:nsubj
compos creat:dep
creat compos:dep
compos element:obl
collect element:nmod
element collect:nmod
occurr collect:nmod
collect occurr:nmod
element occurr:nmod
occurr element:nmod
collect element:nmod
element collect:nmod
creat list:obj
compos list:acl
compos element:obl
list element:nmod
element list:nmod
occurr list:nmod
list occurr:nmod
element occurr:nmod
occurr element:nmod
iter element:nmod
element iter:nmod
compos collect:nsubj
compos creat:dep
creat compos:dep
compos element:obl
iter element:nmod
element iter:nmod
occurr iter:nmod
iter occurr:nmod
element occurr:nmod
occurr element:nmod
iter element:nmod
element iter:nmod
creat list:obj
compos list:acl
compos element:obl
list element:nmod
element list:nmod
occurr list:nmod
list occurr:nmod
element occurr:nmod
occurr element:nmod
remov element:acl
compos collect:nsubj
compos creat:dep
creat compos:dep
compos element:obl
iter element:nmod
element iter:nmod
occurr iter:nmod
iter occurr:nmod
element occurr:nmod
occurr element:nmod
remov element:acl
object array:compound
array object:compound
creat array:obj
compos array:acl
compos element:obl
array element:nmod
element array:nmod
element array:conj
array element:conj
remov compos:xcomp
compos remov:xcomp
creat map:obj
compos map:acl
compos entri:obl
map entri:nmod
entri map:nmod
entri map:nmod
map entri:nmod
map entri:nmod
entri map:nmod
flatten collect:obj
nest array:amod
array collect:conj
collect array:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten iter:obj
nest array:amod
array iter:conj
iter array:conj
collect iter:conj
iter collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten list:obj
nest array:amod
array list:conj
list array:conj
collect list:conj
list collect:conj
collect array:conj
array collect:conj
ad content:acl
ad list:obl
set flatten:dep
flatten set:dep
nest array:amod
collect array:conj
array collect:conj
ad content:acl
ad set:obl
flatten sort set:obj
nest array:amod
array sort set:conj
sort set array:conj
collect sort set:conj
sort set collect:conj
collect array:conj
array collect:conj
ad content:acl
ad sort set:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
flatten array:obj
nest array:amod
collect array:conj
array collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
iter version:compound
version iter:compound
flatten version:acl
flatten iter:obj
nest array:amod
array iter:conj
iter array:conj
collect iter:conj
iter collect:conj
collect array:conj
array collect:conj
ad content:acl
ad collect:obl
yield object:obl
repres object:acl
repres sort:obj
collect type:amod
type sort:nmod
sort type:nmod
suppli closur:amod
yield closur:nsubj
yield item:obj
return closur:nsubj
return yield:parataxis
yield return:parataxis
return element:obj
correspond element:acl
correspond leaf:obl
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
append provid:advcl
provid append:advcl
append object:obj
append collect:obl
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
append provid:advcl
provid append:advcl
append object:obj
append list:obl
set overload:nsubj
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
append provid:advcl
provid append:advcl
append object:obj
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
append provid:advcl
provid append:advcl
append object:obj
append sort set:obl
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
append provid:advcl
provid append:advcl
append object:obj
append block queue:obl
bound queue:amod
block queue:obl
block method:nsubj
block queue:dep
block space:obl
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
append provid:advcl
provid append:advcl
append valu:obj
append map:obl
map overload:nsubj
left oper:amod
shift oper:compound
oper shift:compound
provid oper:nsubj
provid overload:acl
put provid:advcl
provid put:advcl
map entri:obj
put synonym:nmod
synonym put:nmod
return synonym:advcl
origin map:amod
return map:obj
void method:amod
return method:advcl
left oper:amod
shift oper:compound
oper shift:compound
oper implement:nmod
implement oper:nmod
integr type:amod
type oper:nmod
oper type:nmod
integr type:amod
number type:compound
type number:compound
throw type:nsubj
throw unsupport oper:obj
shift oper:compound
oper shift:compound
oper implement:nmod
implement oper:nmod
integr type:amod
type oper:nmod
oper type:nmod
integr type:amod
number type:compound
type number:compound
throw type:nsubj
throw unsupport oper:obj
shift oper:compound
oper shift:compound
unsign shift:dep
oper implement:nmod
implement oper:nmod
integr type:amod
type oper:nmod
oper type:nmod
integr type:amod
number type:compound
type number:compound
throw type:nsubj
throw unsupport oper:obj
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
byte array:compound
array byte:compound
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
char array:compound
array char:compound
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
short array:amod
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
int array:compound
array int:compound
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
long array:amod
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
float array:compound
array float:compound
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
doubl array:amod
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
rang oper:obl
oper rang:obl
boolean array:amod
array rang:nmod
rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
byte array:compound
array byte:compound
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
char array:compound
array char:compound
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
short array:amod
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
int array:compound
array int:compound
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
long array:amod
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
float array:compound
array float:compound
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
doubl array:amod
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
int rang oper:obl
oper int rang:obl
boolean array:amod
array int rang:nmod
int rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
byte array:compound
array byte:compound
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
char array:compound
array char:compound
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
short array:amod
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
int array:compound
array int:compound
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
long array:amod
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
float array:compound
array float:compound
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
doubl array:amod
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
object rang oper:obl
oper object rang:obl
byte array:compound
array byte:compound
array object rang:nmod
object rang array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
byte array:compound
array byte:compound
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
char array:compound
array char:compound
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
short array:amod
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
int array:compound
array int:compound
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
long array:amod
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
float array:compound
array float:compound
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
doubl array:amod
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
collect oper:obl
oper collect:obl
boolean array:amod
array collect:nmod
collect array:nmod
subscript oper:compound
oper subscript:compound
oper support:obl
support oper:obl
bitset oper:dep
oper bitset:dep
retriev support:dep
retriev subset:obj
bit set subset:nmod
subset bit set:nmod
assign support:acl
assign rang:obj
valu rang:nmod
rang valu:nmod
singl statement:amod
assign statement:compound
statement assign:compound
statement valu:nmod
valu statement:nmod
subscript style:compound
style subscript:compound
style assign:compound
assign style:compound
assign support:dep
support assign:dep
bit set support:obl
support bit set:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
similar behav:xcomp
behav similar:xcomp
similar collect:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
convert list:obl
size list:nmod
list size:nmod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad list:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert array:obj
uniqu element:amod
ad element:nsubj
ad convert:advcl
convert ad:advcl
ad set:obl
convert collect:obj
return set:nsubj
convert iter:obj
return set:nsubj
convert iter:obj
exhaust element:obl
convert enumer:obj
int method:compound
method int:compound
method implement:dep
implement method:dep
primit type:amod
type array:compound
array type:compound
array method:nmod
method array:nmod
rang method:compound
method rang:compound
method implement:dep
implement method:dep
primit type:amod
type array:compound
array type:compound
array method:nmod
method array:nmod
collect method:compound
method collect:compound
method implement:dep
implement method:dep
primit type:amod
type array:compound
array type:compound
array method:nmod
method array:nmod
assum valu:nsubj
collect argument:compound
argument collect:compound
argument valu:nmod
valu argument:nmod
valid index:amod
array index:compound
index array:compound
assum index:xcomp
ad valu:nsubj
index valu:nmod
valu index:nmod
ad list:obl
return list:acl
set method:compound
method set:compound
int idx:compound
idx int:compound
idx set:dep
set idx:dep
method implement:dep
implement method:dep
primit type:amod
type array:compound
array type:compound
array method:nmod
method array:nmod
ident convers:compound
convers ident:compound
return convers:acl
true boolean:amod
fals boolean:amod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
array check:nmod
check array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
map represent:nmod
represent map:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
map represent:nmod
represent map:nmod
display string:nsubj
display content:obj
map content:nmod
content map:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
map represent:nmod
represent map:nmod
display string:nsubj
display content:obj
map content:nmod
content map:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
collect represent:nmod
represent collect:nmod
display string:nsubj
display content:obj
collect content:nmod
content collect:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
list represent:nmod
represent list:nmod
display string:nsubj
display content:obj
list content:nmod
content list:nmod
similar list:amod
similar list:obl
liter list:amod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
list represent:nmod
represent list:nmod
display string:nsubj
display content:obj
list content:nmod
content list:nmod
similar list:amod
similar list:obl
liter list:amod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array content:nmod
content array:nmod
content represent:nmod
represent content:nmod
string represent:compound
represent string:compound
represent return:dep
return represent:dep
array represent:nmod
represent array:nmod
display string:nsubj
display content:obj
array content:nmod
content array:nmod
similar array:amod
similar array:obl
liter array:dep
string represent:compound
represent string:compound
creat represent:obj
object represent:nmod
represent object:nmod
charact increment:dep
increment charact:dep
number increment:dep
increment number:dep
charact decrement:dep
decrement charact:dep
number decrement:dep
decrement number:dep
add charact:obj
add number:obj
number charact:conj
charact number:conj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
add number:obj
add charact:obj
charact number:conj
number charact:conj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
add charact:obj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
creat oper:nsubj
creat object:obj
creat result:obl
remain operand:nsubj
remain creat:advcl
creat remain:advcl
unchang remain:xcomp
remain unchang:xcomp
compar charact:obj
compar number:obj
number charact:conj
charact number:conj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
compar number:obj
compar charact:obj
charact number:conj
number charact:conj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
compar charact:obj
ordin valu:amod
compar valu:nsubj
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
compar valu:parataxis
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
compar number:obj
subtract number:obj
subtract charact:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
subtract charact:obj
subtract number:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
subtract charact:obj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
multipli charact:obj
multipli number:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
multipli number:obj
multipli charact:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
multipli charact:obj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
multipli big decim:obj
doubl multipli:obj
multipli doubl:obj
doubl big decim:conj
groovi rule:amod
enforc rule:obj
big decim doubl rule:nmod
rule big decim doubl:nmod
respond method:obl
multipli method:compound
multipli big decim:obj
respond method:nsubj
return method:nsubj
big decim method:nmod
method big decim:nmod
return respond:conj
respond return:conj
respond big decim:obj
prefer big decim:nsubj
prefer chosen:advcl
chosen prefer:advcl
prefer number:obl
number number method:compound
method number number:compound
chosen method:nsubj
older version:amod
chosen version:obl
groovi version:nmod
version groovi:nmod
multipli big decim:obj
multipli big integ:obj
big integ big decim:conj
big decim big integ:conj
groovi rule:amod
enforc rule:obj
big decimallong rule:nmod
rule big decimallong:nmod
respond method:obl
multipli method:compound
multipli big decim:obj
respond method:nsubj
return method:nsubj
big decim method:nmod
method big decim:nmod
return respond:conj
respond return:conj
respond big decim:obj
prefer big decim:nsubj
prefer chosen:advcl
chosen prefer:advcl
prefer number:obl
number number method:compound
method number number:compound
chosen method:nsubj
older version:amod
chosen version:obl
groovi version:nmod
version groovi:nmod
big integ fallback:nsubj
fallback big integ:nsubj
integ type:compound
type integ:compound
type fallback:nmod
fallback type:nmod
groovi type:nmod
type groovi:nmod
number power:nmod
power number:nmod
expon number:nmod
number expon:nmod
call oper:obl
big decim power:nmod
power big decim:nmod
integ expon:compound
expon integ:compound
expon power:nmod
power expon:nmod
posit expon:nsubj
posit call:advcl
call posit:advcl
int method:compound
method int:compound
call method:obj
maintain call:advcl
call maintain:advcl
maintain precis:obj
call oper:obl
big integ power:nmod
power big integ:nmod
integ expon:compound
expon integ:compound
expon power:nmod
power expon:nmod
posit expon:nsubj
posit call:advcl
call posit:advcl
int method:compound
method int:compound
call method:obj
maintain call:advcl
call maintain:advcl
maintain precis:obj
call oper:obl
integ power:nmod
power integ:nmod
integ expon:compound
expon integ:compound
expon integ:nmod
integ expon:nmod
posit expon:nsubj
posit convert:advcl
convert posit:advcl
convert big integ:obl
call convert:conj
convert call:conj
call method:obj
maintain call:advcl
call maintain:advcl
maintain precis:obj
call oper:obl
long expon:amod
long integ:obl
expon power:nmod
power expon:nmod
posit expon:nsubj
posit convert:advcl
convert posit:advcl
convert big integ:obl
call convert:conj
convert call:conj
call method:obj
maintain call:advcl
call maintain:advcl
maintain precis:obj
call oper:obl
big integ power:nmod
power big integ:nmod
big integ expon:compound
expon big integ:compound
expon power:nmod
power expon:nmod
call oper:obl
divid charact:obj
divid number:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
divid number:obj
divid charact:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
divid charact:obj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
divid integ:nsubj
divid charact:obj
divid number:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
divid integ:nsubj
divid number:obj
divid charact:obl
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
divid integ:nsubj
divid charact:obj
ordin valu:amod
charact valu:nmod
valu charact:nmod
ordin valu:amod
unicod valu:amod
simpl set:amod
charact set:compound
set charact:compound
set valu:obl
valu set:obl
ascii valu:compound
valu ascii:compound
divid integ:nsubj
divid number:obj
number bitwis:conj
bitwis number:conj
bit set bitwis:conj
bitwis bit set:conj
bitwis xor:compound
xor bitwis:compound
bit set xor:dep
xor bit set:dep
bit set:compound
set bit:compound
negat bitwis:nsubj
negat bit set:obj
negat bitwis:nsubj
negat number:obj
bit set:compound
set bit:compound
bitwis xor:compound
xor bitwis:compound
number xor:dep
xor number:dep
divis oper:compound
oper divis:compound
modulus oper:compound
oper modulus:compound
perform oper:obj
call oper:obl
negat number:obj
prece equival:dep
equival prece:dep
singl operand:amod
prece operand:obj
return noop:nsubj
noop return:nsubj
number return:dep
return number:dep
number noop:nmod
noop number:nmod
overload oper:nsubj
overload form:obj
prece overload:advcl
overload prece:advcl
singl operand:amod
prece operand:obj
execut closur:obj
execut time:obl
start execut:advcl
execut start:advcl
current index:amod
pass index:nsubj
pass closur:obl
pass time:obl
number print:dep
print number:dep
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
print number:compound
number print:compound
number iter:nmod
iter number:nmod
inclus increment:dep
increment inclus:dep
increment iter:parataxis
increment time:obl
number print:dep
print number:dep
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
number iter:nmod
iter number:nmod
inclus decrement:dep
decrement inclus:dep
decrement iter:parataxis
decrement time:obl
pass number:nsubj
pass closur:obl
print number:compound
number print:compound
number iter:nmod
iter number:nmod
step increment:compound
increment step:compound
intermedi number:amod
pass number:nsubj
pass closur:obl
number print:dep
print number:dep
absolut valu:amod
absolut valu:amod
absolut valu:amod
absolut valu:amod
truncat valu:obj
truncat valu:obj
truncat valu:obj
truncat valu:obj
uppercas charact:nsubj
uppercas determin:advcl
determin uppercas:advcl
charact lowercas:nsubj
lowercas charact:nsubj
determin lowercas:advcl
charact letter:nsubj
letter charact:nsubj
determin letter:advcl
charact digit:nsubj
digit charact:nsubj
determin digit:advcl
charact letter:nsubj
letter charact:nsubj
determin letter:advcl
determin digit:advcl
digit letter:conj
letter digit:conj
whitespac charact:compound
charact whitespac:compound
determin charact:advcl
convert charact:obj
uppercas convert:advcl
convert uppercas:advcl
convert charact:obj
convert lowercas:obl
transform number:obj
transform integ:obl
transform number:obj
transform long:obl
transform number:obj
transform float:obl
transform number:obj
doubl transform:obl
transform doubl:obl
transform number:obj
transform big decim:obl
transform number:obj
support type:nsubj
support addit:obl
support default:obl
big decim big integ:compound
big integ big decim:compound
big integ default:dep
default big integ:dep
doubl float:amod
float big integ:dep
big integ float:dep
transform number:obj
transform big integ:obl
logic conjunct:amod
boolean oper:amod
oper conjunct:nmod
conjunct oper:nmod
logic disjunct:amod
boolean oper:amod
oper disjunct:obl
disjunct oper:obl
logic implic:amod
boolean oper:amod
oper implic:obl
implic oper:obl
exclus disjunct:amod
boolean oper:amod
oper disjunct:obl
disjunct oper:obl
simpl syntax:amod
execut timer:nsubj
execut closur:obj
execut delay:obl
byte travers:obl
travers byte:obl
byte array:compound
array byte:compound
array byte:nmod
byte array:nmod
byte travers:obl
travers byte:obl
byte array:compound
array byte:compound
array byte:nmod
byte array:nmod
return iter:nsubj
element iter:nmod
iter element:nmod
iter collect:amod
collect element:nmod
element collect:nmod
item collect:nmod
collect item:nmod
return index:obj
item index:nmod
index item:nmod
match item:acl
match condit:obj
element iter:nmod
iter element:nmod
iter collect:amod
collect element:nmod
element collect:nmod
item collect:nmod
collect item:nmod
start iter:dep
start start index:obl
return iter:dep
return start:conj
start return:conj
return index:obj
item index:nmod
index item:nmod
match item:acl
match condit:obj
return iter:nsubj
element iter:nmod
iter element:nmod
iter collect:amod
collect element:nmod
element collect:nmod
item collect:nmod
collect item:nmod
return index:obj
item index:nmod
index item:nmod
match item:acl
match condit:obj
element iter:nmod
iter element:nmod
iter collect:amod
collect element:nmod
element collect:nmod
item collect:nmod
collect item:nmod
start iter:dep
start start index:obl
return iter:dep
return start:conj
start return:conj
return index:obj
item index:nmod
index item:nmod
match item:acl
match condit:obj
return iter:nsubj
element iter:nmod
iter element:nmod
iter collect:amod
collect element:nmod
element collect:nmod
item collect:nmod
collect item:nmod
index valu:compound
valu index:compound
return valu:obj
item valu:nmod
valu item:nmod
match item:acl
match condit:obj
element iter:nmod
iter element:nmod
iter collect:amod
collect element:nmod
element collect:nmod
item collect:nmod
collect item:nmod
start iter:dep
start start index:obl
return iter:dep
return start:conj
start return:conj
index valu:compound
valu index:compound
return valu:obj
item valu:nmod
valu item:nmod
match item:acl
match condit:obj
classload parent:compound
parent classload:compound
iter parent:obl
find iter:advcl
iter find:advcl
find loader:obj
find class:obl
null class:obl
direct comparison:amod
load class:nsubj
load fail:advcl
fail load:advcl
load classload:obl
convert object:obj
convert type:obl
overload method:nsubj
overload oper:obl
conveni method:amod
creat method:acl
creat instanc:obj
class instanc:nmod
instanc class:nmod
default constructor:compound
constructor default:compound
constructor call:dep
call constructor:dep
construct helper:acl
construct instanc:obj
construct argument:obl
call constructor:nsubj
base number:case
call number:advcl
call type:advcl
type number:conj
number type:conj
arg array:compound
array arg:compound
array number:nmod
number array:nmod
instanc constructor:compound
constructor instanc:compound
null instanc:dep
instanc arg:dep
arg instanc:dep
default instanc:dep
instanc default:dep
arg instanc:conj
instanc arg:conj
arg constructor:compound
constructor arg:compound
meta class properti:compound
properti meta class:compound
add properti:obj
class object:compound
object class:compound
add object:obl
foo println:dep
println foo:dep
obtain meta class:obj
object meta class:nmod
meta class object:nmod
obtain registri:obl
obtain case:obl
groovi object case:nmod
case groovi object:nmod
object groovi object:nmod
groovi object object:nmod
obtain meta class:obj
object meta class:nmod
meta class object:nmod
obtain registri:obl
obtain case:obl
groovi object case:nmod
case groovi object:nmod
object groovi object:nmod
groovi object object:nmod
set metaclass:obj
class metaclass:nmod
metaclass class:nmod
set metaclass:obj
set object:obl
set metaclass:obj
set groovi object:obl
set updat:compound
updat set:compound
metaclass updat:dep
updat metaclass:dep
class metaclass:nmod
metaclass class:nmod
closur class:nmod
class closur:nmod
set updat:compound
updat set:compound
metaclass updat:dep
updat metaclass:dep
object metaclass:nmod
metaclass object:nmod
closur object:nmod
object closur:nmod
creat attempt:nsubj
creat iter:obj
object iter:nmod
iter object:nmod
convert collect:obl
creat attempt:nsubj
creat iter:obj
object iter:nmod
iter object:nmod
convert collect:obl
behav enumer:acl
behav iter:obl
unsupport method:nsubj
unsupport note:ccomp
note unsupport:ccomp
provid enumer:nsubj
provid unsupport:advcl
unsupport provid:advcl
provid mechan:obj
remov provid:advcl
provid remov:advcl
remov item:obj
ident function:compound
function ident:compound
support function:nsubj
iter function:nmod
function iter:nmod
support duck:obj
type duck:amod
object iter:nmod
iter object:nmod
iter collect:acl
collect iter:acl
object return:dep
return object:dep
satisfi return:dep
groovi truth:amod
satisfi truth:obj
implement respond:nsubj
respond implement:nsubj
implement meta class:obj
respond satisfi:advcl
satisfi respond:advcl
respond method:obl
argument type:compound
type argument:compound
type method:nmod
method type:nmod
method valu:nmod
valu method:nmod
return valu:compound
valu return:compound
base valu:nsubj
base note:ccomp
note base:ccomp
realis method:amod
base method:obl
account object:compound
object account:compound
class object:conj
object class:conj
implement object:acl
implement invok method:obj
implement method:obj
method invok method:conj
invok method method:conj
safe method:nsubj
safe implement:dep
implement safe:dep
return safe:advcl
safe return:advcl
return valu:obj
throw safe:advcl
safe throw:advcl
throw return:conj
return throw:conj
object return:dep
return object:dep
satisfi return:dep
groovi truth:amod
satisfi truth:obj
implement respond:nsubj
respond implement:nsubj
implement meta class:obj
respond satisfi:advcl
satisfi respond:advcl
respond method:obl
method valu:nmod
valu method:nmod
return valu:compound
valu return:compound
base valu:nsubj
base note:ccomp
note base:ccomp
realis method:amod
base method:obl
account object:compound
object account:compound
class object:conj
object class:conj
implement object:acl
implement invok method:obj
implement method:obj
method invok method:conj
invok method method:conj
safe method:nsubj
safe implement:dep
implement safe:dep
return safe:advcl
safe return:advcl
return valu:obj
throw safe:advcl
safe throw:advcl
throw return:conj
return throw:conj
true return:amod
return method:nsubj
return note:ccomp
note return:ccomp
true return:xcomp
return true:xcomp
realis properti:amod
return properti:obl
true implement:obl
properti return:nmod
return properti:nmod
properti return:nmod
return properti:nmod
wrap instanc:nsubj
implement instanc:acl
suppli class:amod
trait class:compound
class trait:compound
implement class:obj
return object:amod
implement object:nsubj
implement guarante:ccomp
guarante implement:ccomp
interfac trait:nsubj
interfac implement:ccomp
implement interfac:ccomp
origin type:amod
lost type:nsubj
object type:nmod
type object:nmod
lost guarante:conj
guarante lost:conj
replac lost:parataxis
lost replac:parataxis
replac proxi:obl
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
element swap:dep
swap element:dep
posit element:nmod
element posit:nmod
modifi list:obj
remov modifi:advcl
modifi remov:advcl
remov element:obj
remov posit:obl
list posit:nmod
posit list:nmod
remov element:amod
element return:dep
return element:dep
alia integ:nsubj
integ alia:nsubj
alia integ:nsubj
integ alia:nsubj
list int:compound
int list:compound
int alia:nmod
alia int:nmod
ambigu alia:nmod
alia ambigu:nmod
list ambigu:nmod
ambigu list:nmod
modifi collect:obj
remov modifi:advcl
modifi remov:advcl
singl instanc:amod
remov instanc:obj
element instanc:nmod
instanc element:nmod
collect element:nmod
element collect:nmod
present modifi:advcl
modifi present:advcl
ambigu alia:nmod
alia ambigu:nmod
collect ambigu:nmod
ambigu collect:nmod
