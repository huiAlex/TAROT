I know this is probably a loaded issue but please hear me out.    It would be nice if org.jboss.seam.util.Transactions was replaced with a Seam Component just like everything else in Seam.  This would allow for pluggable Transaction Management providers and pave the way for support for Spring Managed Transactions, JPA Local Transactions, and true Hibernate Local Transactions.  This will allow Seam applications to run without a dependency on microcontainer in tomcat and allow for tighter Framework integration with spring and others.
I would personally be more than willing to do the work of making the an initial JTATransaction component(s) as a replacement for org.jboss.seam.util.Transactions and would also create a SpringTransaction component as a proof of concept for extending the Transaction component.
One problem I can see off hand is we may have to interact with a transaction in some places where a Seam ApplicationContext is not available.  However, I wonder if confining Seam transactions to a seam call might help simplify matters anyway?  For example transaction cleanup could take place in the @Destroy of the transaction component instead of in the ExceptionFilter?
Also, this wouldn t be looked at as a JTA replacement but rather a service abstraction.  Just like any other java webapp if you re using enterprise services such as EJBs or JCA JTA would be required.  if you re running on tomcat or some other simple web container a resource local transaction manager (Spring s abstraction, JPA s, or Hibernate s) can be used.
I m sure there are tons of other problems I m not looking at but worst case scenario this issue would be a great place to document them and to refer rejected feature requests. (for example  )
What do you think?
Mike .
