During the execution of one JSF request, I noticed a lot of calls to the org.jboss.seam.Component.hasAnnotation method. Couldn t this information be cached somewhere? I know the reflection API is quite fast but in this particular context, couldn t all the  metadata  of a component be stored as class members of the Component class? I know some if already is but I found something that could be added. In the org.jboss.seam.contexts.ServerConversationContext class, the following method seems to be called hundreds of times per request:
Code:
private boolean isPerNestedConversation(String name)  {
Component component = Component.forName(name);
return (component != null) &amp;&amp; component.beanClassHasAnnotation(PerNestedConversation.class);
}
Could t a  perNestedConversation  class member be added on the org.jboss.seam.Component class and initialized when initializing the component instead of looking for the annotation every time? This is just one example. I haven t looked everywhere where the org.jboss.seam.Component.hasAnnotation is called but perhaps similar optimizations could be done elsewhere.  .
