Currently, JpaIdentityStore uses the username as salt when hashing the user password. If you want to use a different property as salt, you need to override JpaIdentityStore.
Since the salt is usually stored together with the user principal, it would be easier to select the property used as salt by annotating it, without having to override the IdentityStore component.
Using a randomly generated salt is a generally accepted practice, so it should also be possible to generate the salt value automatically when creating the user via IdentityManager s API.
Suggestion:
A new annotation, UserPasswordSalt, to annotate property used as salt. Attributes:
generate=true|false &#8211; whether to generate random value
length=salt length in bits (used when generate=true)
Example usage:
class User {
@UserPasswordSalt(generate=true, length=64)
String getSalt()
{..}
@UserPassword(hash= sha1
String getPasswordHash()
{...}
} .
