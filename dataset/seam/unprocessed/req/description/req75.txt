I m using the seam-gen generated class SubcategoriesList which is derived from EntityQuery and modified it to accept any query passed by a calling object as below:
public class SubCategoriesList extends EntityQuery {
private SubCategories subCategories = new SubCategories();
private String query;
private Integer maxResults;
public SubCategoriesList()
{
query =  select subCategories from SubCategories subCategories ;
this.maxResults = 25;
}
@Override
public String getEjbql()
{
return query;
}
@Override
public Integer getMaxResults()
{
return this.maxResults;
}
public SubCategories getSubCategories()
{
return subCategories;
}
@Override
public List&lt;String&gt; getRestrictions()
{
return Arrays.asList(RESTRICTIONS);
}
public List&lt;SubCategories&gt; forCategory(String categoryId)
{
query =  select subCategories from SubCategories subCategories where subCategories.categories.id =   + Integer.parseInt(categoryId);
return  getResultList();
}
}
In my calling object, I instantiate this class and use the method forCategory to get the list of subcategories for a given category id. If I reuse the object after calling refresh() and pass a different category id, it gives the same resultlist.  After looking in EntityQuery and Query classes, I see refresh() does not nullify parsedEjbql and therefore createQuery() uses the same query everytime to get the resultlist. .
