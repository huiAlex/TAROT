<Class>
    <Id>346</Id>
    <Package>org.jboss.seam.bpm</Package>
    <ClassName>SeamExpressionEvaluator</ClassName>
    <SuperClass>ExpressionEvaluator</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SeamExpressionEvaluator  /** 
 * Plugs the JBoss EL expression language and Seam EL resolvers into jBPM. Note that this current  implementation does not allow jBPM to see stuff defined only by the JSF ELResolvers.
 * @author Gavin King
 * @author Pete Muir
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
        <Field>
            <FieldName>elContext</FieldName>
            <FieldType>ELContext</FieldType>
        </Field>
        <Field>
            <FieldName>me</FieldName>
            <FieldType>MethodExpression</FieldType>
        </Field>
        <Field>
            <FieldName>ve</FieldName>
            <FieldType>ValueExpression</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>returnType</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resolver</ParamName>
                    <ParamType>VariableResolver</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mapper</ParamName>
                    <ParamType>FunctionMapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ELException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>returnType</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mapper</ParamName>
                    <ParamType>FunctionMapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ELException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Expression</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>returnType</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mapper</ParamName>
                    <ParamType>FunctionMapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initMethodExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initValueExpression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>evaluate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resolver</ParamName>
                    <ParamType>VariableResolver</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;javax.el.ELException&gt; [exceptions=new ArrayList&lt;javax.el.ELException&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ELException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>decorateFunctionMapper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>javax.el.FunctionMapper</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>functionMapper</ParamName>
                    <ParamType>FunctionMapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resolveFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Method</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prefix</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>localName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createELContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ELContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resolver</ParamName>
                    <ParamType>VariableResolver</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>functionMapper</ParamName>
                    <ParamType>FunctionMapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CompositeELResolver [composite=new CompositeELResolver()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>composite;add;[EL.EL_RESOLVER]</InnerMethodInvoke>
                <InnerMethodInvoke>composite;add;[new JbpmELResolver(resolver)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>