<Class>
    <Id>1104</Id>
    <Package>org.jboss.seam.deployment</Package>
    <ClassName>StandardDeploymentStrategy</ClassName>
    <SuperClass>DeploymentStrategy</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StandardDeploymentStrategy  /** 
 * The standard deployment strategy used with Seam, deploys non-hot-deployable Seam components and namespaces
 * @author Pete Muir
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>classLoader</FieldName>
            <FieldType>ClassLoader</FieldType>
        </Field>
        <Field>
            <FieldName>servletContext</FieldName>
            <FieldType>ServletContext</FieldType>
        </Field>
        <Field>
            <FieldName>RESOURCE_NAMES</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HANDLERS_KEY</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>componentDeploymentHandler</FieldName>
            <FieldType>ComponentDeploymentHandler</FieldType>
        </Field>
        <Field>
            <FieldName>componentsXmlDeploymentHandler</FieldName>
            <FieldType>ComponentsXmlDeploymentHandler</FieldType>
        </Field>
        <Field>
            <FieldName>namespaceDeploymentHandler</FieldName>
            <FieldType>NamespaceDeploymentHandler</FieldType>
        </Field>
        <Field>
            <FieldName>annotationDeploymentHandler</FieldName>
            <FieldType>AnnotationDeploymentHandler</FieldType>
        </Field>
        <Field>
            <FieldName>dotComponentDotXmlDeploymentHandler</FieldName>
            <FieldType>DotComponentDotXmlDeploymentHandler</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StandardDeploymentStrategy</MethodName>
            <MethodComment>/** 
 * @param classLoader The classloader used to load and handle resources
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>servletContext</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getDeploymentHandlers();put;[ComponentDeploymentHandler.NAME, componentDeploymentHandler]</InnerMethodInvoke>
                <InnerMethodInvoke>getDeploymentHandlers();put;[ComponentsXmlDeploymentHandler.NAME, componentsXmlDeploymentHandler]</InnerMethodInvoke>
                <InnerMethodInvoke>getDeploymentHandlers();put;[DotComponentDotXmlDeploymentHandler.NAME, dotComponentDotXmlDeploymentHandler]</InnerMethodInvoke>
                <InnerMethodInvoke>getDeploymentHandlers();put;[NamespaceDeploymentHandler.NAME, namespaceDeploymentHandler]</InnerMethodInvoke>
                <InnerMethodInvoke>getDeploymentHandlers();put;[AnnotationDeploymentHandler.NAME, annotationDeploymentHandler]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassLoader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDeploymentHandlersKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAnnotatedComponents</MethodName>
            <MethodComment>/** 
 * Get all annotated components known to this strategy
 */
</MethodComment>
            <ReturnType>ClassDescriptor</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getXmlComponents</MethodName>
            <MethodComment>/** 
 * Get all XML defined (throught components.xml and component.xml) components
 */
</MethodComment>
            <ReturnType>FileDescriptor</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;FileDescriptor&gt; [fileDescriptors=new HashSet&lt;FileDescriptor&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>fileDescriptors;addAll;[componentsXmlDeploymentHandler.getResources()]</InnerMethodInvoke>
                <InnerMethodInvoke>fileDescriptors;addAll;[dotComponentDotXmlDeploymentHandler.getResources()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScannedNamespaces</MethodName>
            <MethodComment>/** 
 * Get all scanned and handled Seam namespaces
 */
</MethodComment>
            <ReturnType>Package</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAnnotatedClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getScanner();scanResources;[RESOURCE_NAMES]</InnerMethodInvoke>
                <InnerMethodInvoke>getScanner();scanDirectories;[getFiles().toArray(new File[0])]</InnerMethodInvoke>
                <InnerMethodInvoke>null;postScan;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>instance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StandardDeploymentStrategy</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServletContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ServletContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>