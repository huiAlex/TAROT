<Class>
    <Id>530</Id>
    <Package>org.jboss.seam.resteasy</Package>
    <ClassName>ResourceQuery</ClassName>
    <SuperClass>AbstractResource</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ResourceQuery  /** 
 * This component exposes EntityQuery component as a REST resource responding to HTTP GET request.
 * @author Jozef Hartinger
 * @param &lt; T &gt; entity type
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>entityQuery</FieldName>
            <FieldType>Query</FieldType>
        </Field>
        <Field>
            <FieldName>entityQuery</FieldName>
            <FieldType>?</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>create</MethodName>
            <MethodComment>/** 
 * Called at component instantiation.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getResourceList</MethodName>
            <MethodComment>/** 
 * Called by RESTEasy to respond for an HTTP GET request. Retrieves a list of entities matching criteria set by query parameters from database and returns it wrapped in Response instance.
 * @param start first entity in the list
 * @param show  maximum size of the list
 * @return representation of a list of database entries
 * @see #getEntityList
 */
</MethodComment>
            <ReturnType>Response</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>show</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MediaType [selectedMediaType=selectResponseMediaType()]</InnerVar>
                <InnerVar>List&lt;T&gt; [result=getEntityList(start,show)]</InnerVar>
                <InnerVar>Type [responseType=new ParameterizedType(){
  public Type getRawType(){
    return result.getClass();
  }
  public Type getOwnerType(){
    return null;
  }
  public Type[] getActualTypeArguments(){
    return new Type[]{getEntityClass()};
  }
}
]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Type</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOwnerType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Type</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getActualTypeArguments</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Type[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEntityList</MethodName>
            <MethodComment>/** 
 * Retrieve a list of database entities.
 * @param start first entity in the list
 * @param show  maximum size of the list, 0 for unlimited
 * @return list of database entries
 */
</MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>show</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>entityQuery;setFirstResult;[start]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEntityQuery</MethodName>
            <MethodComment>/** 
 * EntityQuery getter
 * @return EntityQuery instance
 */
</MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setEntityQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createEntityQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Query&lt;?,T&gt; [entityQuery=new EntityQuery&lt;T&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>entityQuery;setEjbql;["select entity from " + getEntityClass().getName() + " entity"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>