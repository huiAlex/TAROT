<Class>
    <Id>132</Id>
    <Package>org.jboss.seam.ioc.guice</Package>
    <ClassName>GuiceInterceptor</ClassName>
    <SuperClass>AbstractInterceptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GuiceInterceptor  /** 
 * Triggers Guice injection on a Seam component.
 * @author Pawel Wrzeszcz (pwrzeszcz [at] jboss . org)
 * @author Tomasz Szymanski (tszymanski [at] jboss.org)
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>GUICE_COMPONENT_FIELDS_MAP</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>defaultInjector</FieldName>
            <FieldType>Injector</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>aroundInvoke</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocationContext</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [result=invocationContext.proceed()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;inject;[invocationContext.getTarget()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;disinject;[invocationContext.getTarget()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getGuiceInjector();injectMembers;[target]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disinject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGuiceInjector</MethodName>
            <MethodComment>/** 
 * @return a Guice injector for the current component
 */
</MethodComment>
            <ReturnType>Injector</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [expr]</InnerVar>
                <InnerVar>Guice [guice=getComponent().getBeanClass().getAnnotation(Guice.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCachedDefaultInjector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Injector</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInjectorByName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Injector</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [result]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGuiceAnnotatedFields</MethodName>
            <MethodComment>/** 
 * @return a collection of all component fields injected by Guice (annotated with the @Inject annotation)
 */
</MethodComment>
            <ReturnType>Field</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;Class,Collection&lt;Field&gt;&gt; [fieldsMap=getGuiceComponentFieldsMap()]</InnerVar>
                <InnerVar>Collection&lt;Field&gt; [annotatedFields=fieldsMap.get(getComponent().getBeanClass())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGuiceComponentFieldsMap</MethodName>
            <MethodComment>/** 
 * @return a cache that stores fields annotated with the @Inject annotation for the Guice component classes
 */
</MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isInterceptorEnabled</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>