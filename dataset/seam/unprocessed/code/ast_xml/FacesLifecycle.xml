<Class>
    <Id>70</Id>
    <Package>org.jboss.seam.contexts</Package>
    <ClassName>FacesLifecycle</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FacesLifecycle  /** 
 * Methods for setup and teardown of Seam contexts at the beginning and end of JSF requests.
 * @see org.jboss.seam.jsf.SeamPhaseListener
 * @author Gavin King
 * @author &lt;a href="mailto:theute@jboss.org"&gt;Thomas Heute&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>phaseId</FieldName>
            <FieldType>ThreadLocal</FieldType>
        </Field>
        <Field>
            <FieldName>phaseId</FieldName>
            <FieldType>PhaseId</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setPhaseId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>phase</ParamName>
                    <ParamType>PhaseId</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>phaseId;set;[phase]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPhaseId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PhaseId</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearPhaseId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setPhaseId;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Session [session=Session.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["&gt;&gt;&gt; Begin JSF request for " + getRequestPath(externalContext)]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.eventContext;set;[new EventContext(externalContext.getRequestMap())]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[new ApplicationContext(externalContext.getApplicationMap())]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.sessionContext;set;[new SessionContext(externalContext.getSessionMap())]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;saveRequestPath;[externalContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>saveRequestPath</MethodName>
            <MethodComment>/** 
 * with rewriting, the filter chain might not have access to the post-rewrite request information. we'll save some of the information that we may need.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;String,Object&gt; [map=externalContext.getRequestMap()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>map;put;["org.jboss.seam.web.requestServletPath", externalContext.getRequestServletPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["org.jboss.seam.web.requestContextPath", externalContext.getRequestContextPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>map;put;["org.jboss.seam.web.requestPathInfo", externalContext.getRequestPathInfo()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginExceptionRecovery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [conversationContextFlushed=!Contexts.isConversationContextActive()]</InnerVar>
                <InnerVar>ServerConversationContext [conversationContext=new ServerConversationContext(externalContext.getSessionMap())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["&gt;&gt;&gt; Begin exception recovery"]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[new ApplicationContext(externalContext.getApplicationMap())]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.sessionContext;set;[new SessionContext(externalContext.getSessionMap())]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.pageContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.businessProcessContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[conversationContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["After render response, destroying contexts"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invalidateSession</MethodName>
            <MethodComment>/** 
 * Invalidate the session, no matter what kind of session it is (portlet or servlet). Why is this method not on ExternalContext?! Oh boy, those crazy rascals in the JSF EG...
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [session=externalContext.getSession(false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resumeConversation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ServerConversationContext [conversationContext=new ServerConversationContext(externalContext.getSessionMap())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Contexts.conversationContext;set;[conversationContext]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.businessProcessContext;set;[new BusinessProcessContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>conversationContext;unflush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resumePage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Contexts.pageContext;set;[new PageContext()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRequestPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>externalContext</ParamName>
                    <ParamType>ExternalContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>