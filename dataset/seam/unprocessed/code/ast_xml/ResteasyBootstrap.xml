<Class>
    <Id>38</Id>
    <Package>org.jboss.seam.resteasy</Package>
    <ClassName>ResteasyBootstrap</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ResteasyBootstrap  /** 
 * Detects (through scanning and configuration) JAX-RS resources and providers, then registers them with RESTEasy. &lt;p&gt; This class is a factory for &lt;tt&gt;org.jboss.seam.resteasy.dispatcher&lt;/tt&gt; and it has been designed for extension. Alternatively, you can ignore what this class is doing and provide a different &lt;tt&gt;org.jboss.seam.resteasy.dispatcher&lt;/tt&gt; yourself without extending this class. &lt;/p&gt; &lt;p&gt; The main methods of this class are &lt;tt&gt;registerProviders()&lt;/tt&gt; and &lt;tt&gt;registerResources()&lt;/tt&gt;. These methods call out to the individual fine-grained registration procedures, which you can override if a different registration strategy for a particular type/component is desired. &lt;/p&gt;
 * @author Christian Bauer
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>application</FieldName>
            <FieldType>Application</FieldType>
        </Field>
        <Field>
            <FieldName>dispatcher</FieldName>
            <FieldType>Dispatcher</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDispatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Dispatcher</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SeamResteasyProviderFactory [providerFactory=createProviderFactory()]</InnerVar>
                <InnerVar>Map [contextDataMap=SeamResteasyProviderFactory.getContextDataMap()]</InnerVar>
                <InnerVar>DeploymentStrategy [deployment=(DeploymentStrategy)Component.getInstance("deploymentStrategy")]</InnerVar>
                <InnerVar>AnnotationDeploymentHandler [handler=(AnnotationDeploymentHandler)deployment.getDeploymentHandlers().get(AnnotationDeploymentHandler.NAME)]</InnerVar>
                <InnerVar>Collection&lt;Class&lt;?&gt;&gt; [providers=findProviders(handler)]</InnerVar>
                <InnerVar>Collection&lt;Class&lt;?&gt;&gt; [resources=findResources(handler)]</InnerVar>
                <InnerVar>Collection&lt;Component&gt; [seamComponents=findSeamComponents()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["bootstrapping JAX-RS application"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initDispatcher;[]</InnerMethodInvoke>
                <InnerMethodInvoke>SeamResteasyProviderFactory;setInstance;[new ThreadLocalResteasyProviderFactory(providerFactory)]</InnerMethodInvoke>
                <InnerMethodInvoke>dispatcher.getDefaultContextObjects();put;[Providers.class, providerFactory]</InnerMethodInvoke>
                <InnerMethodInvoke>dispatcher.getDefaultContextObjects();put;[Registry.class, dispatcher.getRegistry()]</InnerMethodInvoke>
                <InnerMethodInvoke>dispatcher.getDefaultContextObjects();put;[Dispatcher.class, dispatcher]</InnerMethodInvoke>
                <InnerMethodInvoke>contextDataMap;putAll;[dispatcher.getDefaultContextObjects()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerProviders;[seamComponents, providers]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerResources;[seamComponents, resources]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createProviderFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SeamResteasyProviderFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDispatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Dispatcher</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>providerFactory</ParamName>
                    <ParamType>SeamResteasyProviderFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initDispatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>getDispatcher();setLanguageMappings;[application.getLanguageMappings()]</InnerMethodInvoke>
                <InnerMethodInvoke>getDispatcher();setMediaTypeMappings;[application.getMediaTypeMappings()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findProviders</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;?&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>AnnotationDeploymentHandler</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;?&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>AnnotationDeploymentHandler</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findTypes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class&lt;?&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>handler</ParamName>
                    <ParamType>AnnotationDeploymentHandler</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scanClasspathForAnnotations</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>annotationFQName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>includeTypeNames</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;Class&lt;?&gt;&gt; [types=new HashSet()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findSeamComponents</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Component</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Collection&lt;Component&gt; [seamComponents=new HashSet()]</InnerVar>
                <InnerVar>String[] [applicationContextNames=Contexts.getApplicationContext().getNames()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["discovering all Seam components"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerProviders</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seamComponents</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providerClasses</ParamName>
                    <ParamType>Class&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;Class&gt; [handledProviders=new HashSet()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seamComponents</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resourceClasses</ParamName>
                    <ParamType>Class&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;Class&gt; [handledResources=new HashSet()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>handledResources;add;[ResourceHome.class]</InnerMethodInvoke>
                <InnerMethodInvoke>handledResources;add;[ResourceQuery.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerHomeQueryResources</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seamComponent</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>AbstractResource [instance=(AbstractResource)seamComponent.newInstance()]</InnerVar>
                <InnerVar>String [path=instance.getPath()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerSeamComponentResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seamComponent</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ResourceFactory [factory=new SeamResteasyResourceFactory(seamComponent.getBeanClass(),seamComponent,getDispatcher().getProviderFactory())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["registering resource as Seam component: {0}", seamComponent.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>getDispatcher().getRegistry();addResourceFactory;[factory]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerInterfaceSeamComponentResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seamComponent</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resourceInterface</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ResourceFactory [factory=new SeamResteasyResourceFactory(resourceInterface,seamComponent,getDispatcher().getProviderFactory())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["registering resource, annotated interface {1}, as Seam component: {0}", seamComponent.getName(), resourceInterface.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>getDispatcher().getRegistry();addResourceFactory;[factory]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerStatelessEJBResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ejbImplementationClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [jndiName=getJndiName(ejbImplementationClass)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["registering resource, stateless EJB implementation {1}, as RESTEasy JNDI resource name: {0}", jndiName, ejbImplementationClass.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>getDispatcher().getRegistry();addJndiResource;[jndiName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerPlainResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plainResourceClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["registering resource, event-scoped JAX-RS lifecycle: {0}", plainResourceClass.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>getDispatcher().getRegistry();addResourceFactory;[new POJOResourceFactory(plainResourceClass)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerSeamComponentProvider</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seamComponent</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["registering provider as Seam component: {0}", seamComponent.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>getDispatcher().getProviderFactory();registerProviderInstance;[Component.getInstance(seamComponent.getName())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAnnotatedInterface</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>? extends Annotation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>seamComponent</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class [resourceInterface=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJndiName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>beanClass</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>