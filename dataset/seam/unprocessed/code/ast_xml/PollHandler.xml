<Class>
    <Id>599</Id>
    <Package>org.jboss.seam.remoting</Package>
    <ClassName>PollHandler</ClassName>
    <SuperClass>BaseRequestHandler</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RequestHandler</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PollHandler  /** 
 * Handles JMS Message poll requests.
 * @author Shane Bryzak
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
        <Field>
            <FieldName>ERRORS_TAG_OPEN_START</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>ERRORS_TAG_OPEN_END</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR_TAG_OPEN_START</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR_TAG_OPEN_END</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR_TAG_CLOSE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MESSAGES_TAG_OPEN_START</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MESSAGES_TAG_OPEN_END</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MESSAGES_TAG_CLOSE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MESSAGE_TAG_OPEN_START</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MESSAGE_TAG_OPEN_END</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MESSAGE_TAG_CLOSE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>VALUE_TAG_OPEN</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>VALUE_TAG_CLOSE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>handle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SAXReader [xmlReader=XML.getSafeSaxReader()]</InnerVar>
                <InnerVar>Document [doc=xmlReader.read(request.getInputStream())]</InnerVar>
                <InnerVar>Element [env=doc.getRootElement()]</InnerVar>
                <InnerVar>List&lt;PollRequest&gt; [polls=unmarshalRequests(env)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>response;setContentType;["text/xml"]</InnerMethodInvoke>
                <InnerMethodInvoke>new ContextualHttpServletRequest(request){
  @Override public void process() throws Exception {
    for (    PollRequest req : polls) {
      req.poll();
    }
    marshalResponse(polls,response.getOutputStream());
  }
}
;run;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;marshalResponse;[polls, response.getOutputStream()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unmarshalRequests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PollRequest</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>env</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>marshalResponse</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reqs</ParamName>
                    <ParamType>PollRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;write;[ENVELOPE_TAG_OPEN]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[BODY_TAG_OPEN]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[BODY_TAG_CLOSE]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[ENVELOPE_TAG_CLOSE]</InnerMethodInvoke>
                <InnerMethodInvoke>out;flush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeMessage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>m</ParamName>
                    <ParamType>Message</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CallContext [ctx=new CallContext()]</InnerVar>
                <InnerVar>Object [value=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;write;[MESSAGE_TAG_OPEN_START]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[MESSAGE_TAG_OPEN_END]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[VALUE_TAG_OPEN]</InnerMethodInvoke>
                <InnerMethodInvoke>ctx.createWrapperFromObject(value,"");marshal;[out]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[VALUE_TAG_CLOSE]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[REFS_TAG_OPEN]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[REFS_TAG_CLOSE]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[MESSAGE_TAG_CLOSE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>JMSException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>error</ParamName>
                    <ParamType>PollError</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;write;[ERROR_TAG_OPEN_START]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[error.getCode().getBytes()]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[ERROR_TAG_OPEN_END]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[error.getMessage().getBytes()]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[ERROR_TAG_CLOSE]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>