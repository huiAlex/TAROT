<Class>
    <Id>469</Id>
    <Package>org.jboss.seam.remoting.gwt</Package>
    <ClassName>GWTToSeamAdapter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GWTToSeamAdapter  /** 
 * This class adapts GWT RPC mechanism to Seam actions.
 * @author Michael Neale
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>METHOD_CACHE</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>returnType</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>returnedObject</FieldName>
            <FieldType>Object</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>instance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GWTToSeamAdapter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>GWTToSeamAdapter [adapter=(GWTToSeamAdapter)Component.getInstance(GWTToSeamAdapter.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>callWebRemoteMethod</MethodName>
            <MethodComment>/** 
 * Call the service.
 * @param serviceIntfName The interface name - this will be the fully qualified name of the remote service interface as understood by GWT. This correlates to a component name in seam.
 * @param methodName The method name of the service being invoked.
 * @param paramTypes The types of parameters - needed for method lookup for polymorphism.
 * @param args The values to be passed to the service method.
 * @return A populated ReturnedObject - the returned object payload may benull, but the type will not be.
 * @throws InvocationTargetException
 * @throws IllegalAccessException
 */
</MethodComment>
            <ReturnType>ReturnedObject</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serviceIntfName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>paramTypes</ParamName>
                    <ParamType>Class[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Component [component=Component.forName(serviceIntfName)]</InnerVar>
                <InnerVar>Object [instance=getServiceComponent(serviceIntfName)]</InnerVar>
                <InnerVar>Class [clz=null]</InnerVar>
                <InnerVar>Method [method=getMethod(serviceIntfName,methodName,clz,paramTypes)]</InnerVar>
                <InnerVar>Object [result=method.invoke(instance,args)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InvocationTargetException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>SecurityException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMethod</MethodName>
            <MethodComment>/** 
 * Get the method on the class, including walking up the class heirarchy if needed. Methods have to be marked as "@WebRemote" to be allowed.
 * @param methodName
 * @param clz
 * @param paramTypes
 */
</MethodComment>
            <ReturnType>Method</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serviceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>paramTypes</ParamName>
                    <ParamType>Class[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [key=getKey(serviceName,methodName,paramTypes)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serviceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>paramTypes</ParamName>
                    <ParamType>Class[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findMethod</MethodName>
            <MethodComment>/** 
 * Recurse up the class hierarchy, looking for a compatable method that is marked as "@WebRemote". If one is not found (or we hit Object.class) then we barf - basically trust nothing from the client other then what we want to allow them to call.
 */
</MethodComment>
            <ReturnType>Method</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>methodName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>paramTypes</ParamName>
                    <ParamType>Class[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NoSuchMethodException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isWebRemoteAnnotated</MethodName>
            <MethodComment>/** 
 * Only allow methods annotated with
 * @WebRemote for security reasons.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>method</ParamName>
                    <ParamType>Method</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServiceComponent</MethodName>
            <MethodComment>/** 
 * Return the service component that has been bound to the given name.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serviceIntfName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReturnedObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>result</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>