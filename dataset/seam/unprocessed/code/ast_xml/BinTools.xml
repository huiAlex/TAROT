<Class>
    <Id>731</Id>
    <Package>org.jboss.seam.security.crypto</Package>
    <ClassName>BinTools</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BinTools  /** 
 * Copied from Matthias Gartner's PKCS#5 implementation - see http://rtner.de/software/PBKDF2.html &lt;p&gt; Free auxiliary functions. Copyright (c) 2007 Matthias G&amp;auml;rtner &lt;/p&gt; &lt;p&gt; This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. &lt;/p&gt; &lt;p&gt; This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. &lt;/p&gt; &lt;p&gt; You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA &lt;/p&gt; &lt;p&gt; For Details, see &lt;a href="http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html" &gt;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&lt;/a&gt;. &lt;/p&gt;
 * @author Matthias G&amp;auml;rtner
 * @version 1.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>hex</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>bin2hex</MethodName>
            <MethodComment>/** 
 * Simple binary-to-hexadecimal conversion.
 * @param b Input bytes. May be &lt;code&gt;null&lt;/code&gt;.
 * @return Hexadecimal representation of b. Uppercase A-F, two characters perbyte. Empty string on &lt;code&gt;null&lt;/code&gt; input.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>b</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuffer [sb=new StringBuffer(2 * b.length)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hex2bin</MethodName>
            <MethodComment>/** 
 * Convert hex string to array of bytes.
 * @param s String containing hexadecimal digits. May be &lt;code&gt;null&lt;/code&gt;. On odd length leading zero will be assumed.
 * @return Array on bytes, non-&lt;code&gt;null&lt;/code&gt;.
 * @throws IllegalArgumentException when string contains non-hex character
 */
</MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [m=s]</InnerVar>
                <InnerVar>byte [r[]=new byte[m.length() / 2]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hex2bin</MethodName>
            <MethodComment>/** 
 * Convert hex digit to numerical value.
 * @param c 0-9, a-f, A-F allowd.
 * @return 0-15
 * @throws IllegalArgumentException on non-hex character
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>char</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>