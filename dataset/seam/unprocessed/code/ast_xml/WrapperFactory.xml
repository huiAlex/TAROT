<Class>
    <Id>874</Id>
    <Package>org.jboss.seam.remoting.wrapper</Package>
    <ClassName>WrapperFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>WrapperFactory  /** 
 * @author Shane Bryzak
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>WrapperFactory</FieldType>
        </Field>
        <Field>
            <FieldName>wrapperRegistry</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>wrapperRegistry</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classRegistry</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>classRegistry</FieldName>
            <FieldType>Class</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>WrapperFactory</MethodName>
            <MethodComment>/** 
 * Private constructor
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;registerWrapper;["str", StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["bool", BooleanWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["bean", BeanWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["number", NumberWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["null", NullWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["bag", BagWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["map", MapWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapper;["date", DateWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[String.class, StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[StringBuilder.class, StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[StringBuffer.class, StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Character.class, StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[BigDecimal.class, StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[BigInteger.class, StringWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Integer.class, NumberWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Long.class, NumberWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Short.class, NumberWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Double.class, NumberWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Float.class, NumberWrapper.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerWrapperClass;[Byte.class, NumberWrapper.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerWrapper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wrapperClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>wrapperRegistry;put;[type, wrapperClass]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerWrapperClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>wrapperClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>classRegistry;put;[cls, wrapperClass]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WrapperFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createWrapper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Wrapper</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class [wrapperClass=wrapperRegistry.get(type)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWrapperForObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Wrapper</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Wrapper [w=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>w;setValue;[obj]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>