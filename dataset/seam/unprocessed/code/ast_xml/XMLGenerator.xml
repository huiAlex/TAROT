<Class>
    <Id>376</Id>
    <Package>org.jboss.seam.maven.helper</Package>
    <ClassName>XMLGenerator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>XMLGenerator  /** 
 * Generates JSF taglib descriptor xml
 * @author Rafael Benevides &lt;https://community.jboss.org/people/rafabene&gt;
 * @author Marek Novotny &lt;https://community.jboss.org/people/manaRH&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>XMLGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>log</ParamName>
                    <ParamType>Log</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFaceletsTagElementFromFacesconfig</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Element</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>xml</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tagName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>converterOrValidator</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DocumentBuilder [dstDB=DocumentBuilderFactory.newInstance().newDocumentBuilder()]</InnerVar>
                <InnerVar>DocumentBuilder [srcDB=DocumentBuilderFactory.newInstance().newDocumentBuilder()]</InnerVar>
                <InnerVar>Document [destDocument=dstDB.newDocument()]</InnerVar>
                <InnerVar>Document [srcDocument=srcDB.parse(xml)]</InnerVar>
                <InnerVar>XPath [xpath=XPathFactory.newInstance().newXPath()]</InnerVar>
                <InnerVar>Element [tagElement=destDocument.createElement("tag")]</InnerVar>
                <InnerVar>Node [tagNode=destDocument.appendChild(tagElement)]</InnerVar>
                <InnerVar>Element [tagNameElement=destDocument.createElement("tag-name")]</InnerVar>
                <InnerVar>Element [component=destDocument.createElement(converterOrValidator)]</InnerVar>
                <InnerVar>Node [componentNode=tagNode.appendChild(component)]</InnerVar>
                <InnerVar>Element [description=destDocument.createElement("description")]</InnerVar>
                <InnerVar>String [descriptionContent=xpath.evaluate("//" + converterOrValidator + "/description/text()",srcDocument)]</InnerVar>
                <InnerVar>Element [componentType=destDocument.createElement(converterOrValidator + "-id")]</InnerVar>
                <InnerVar>String [componentTypeContent=xpath.evaluate("//" + converterOrValidator + "-id/text()",srcDocument)]</InnerVar>
                <InnerVar>NodeList [propertyNodes=(NodeList)xpath.evaluate("//property",srcDocument,XPathConstants.NODESET)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["Generating taglib from " + xml]</InnerMethodInvoke>
                <InnerMethodInvoke>tagNameElement;setTextContent;[tagName]</InnerMethodInvoke>
                <InnerMethodInvoke>tagNode;appendChild;[tagNameElement]</InnerMethodInvoke>
                <InnerMethodInvoke>description;setTextContent;[descriptionContent]</InnerMethodInvoke>
                <InnerMethodInvoke>componentNode;appendChild;[description]</InnerMethodInvoke>
                <InnerMethodInvoke>componentType;setTextContent;[componentTypeContent]</InnerMethodInvoke>
                <InnerMethodInvoke>componentNode;appendChild;[componentType]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTagValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sTag</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eElement</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>NodeList [nlList=eElement.getElementsByTagName(sTag).item(0).getChildNodes()]</InnerVar>
                <InnerVar>Node [nValue=(Node)nlList.item(0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeFileContent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outXML</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>content</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FileOutputStream [fos=new FileOutputStream(outXML)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["Updating " + outXML]</InnerMethodInvoke>
                <InnerMethodInvoke>fos;write;[content.getBytes()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outXML</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tags</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DocumentBuilderFactory [docFactory=DocumentBuilderFactory.newInstance()]</InnerVar>
                <InnerVar>DocumentBuilder [docBuilder=docFactory.newDocumentBuilder()]</InnerVar>
                <InnerVar>Document [doc=docBuilder.parse(outXML)]</InnerVar>
                <InnerVar>TransformerFactory [tf=TransformerFactory.newInstance()]</InnerVar>
                <InnerVar>Transformer [transformer=tf.newTransformer()]</InnerVar>
                <InnerVar>DOMImplementation [domImplementation=doc.getImplementation()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tf;setAttribute;["indent-number", new Integer(4)]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.ENCODING, "utf-8"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.OMIT_XML_DECLARATION, "no"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;[OutputKeys.INDENT, "yes"]</InnerMethodInvoke>
                <InnerMethodInvoke>transformer;setOutputProperty;["{http://xml.apache.org/xslt}indent-amount", "4"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>