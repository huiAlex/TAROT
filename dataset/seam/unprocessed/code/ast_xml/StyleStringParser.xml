<Class>
    <Id>1071</Id>
    <Package>org.jboss.seam.excel.css</Package>
    <ClassName>StyleStringParser</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>STYLE_SEPARATOR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>KEY_VALUE_SEPARATOR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>STYLE_SHORTHAND_SEPARATOR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ESCAPE_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>styleString</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>propertyBuilderMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>propertyBuilderMap</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>styleMap</FieldName>
            <FieldType>StyleMap</FieldType>
        </Field>
        <Field>
            <FieldName>escaping</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>of</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StyleStringParser</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>styleString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>propertyBuilderMap</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StyleStringParser</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>styleString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>propertyBuilderMap</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addStyle</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>styleBuilder</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [styleString=styleBuilder.toString()]</InnerVar>
                <InnerVar>int [keyValueBreakpointIndex=styleString.indexOf(KEY_VALUE_SEPARATOR)]</InnerVar>
                <InnerVar>String [styleName=styleString.substring(0,keyValueBreakpointIndex).toLowerCase().trim()]</InnerVar>
                <InnerVar>PropertyBuilder [propertyBuilder=propertyBuilderMap.get(styleName)]</InnerVar>
                <InnerVar>String [styleValue=styleString.substring(keyValueBreakpointIndex + 1)]</InnerVar>
                <InnerVar>String[] [styleValues=trimArray(styleValue.trim().split(STYLE_SHORTHAND_SEPARATOR))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;trace;["Parsed style #0 to #1 =&gt; #2", styleString, styleName, styleValue]</InnerMethodInvoke>
                <InnerMethodInvoke>styleMap;putAll;[propertyBuilder.parseProperty(styleName,styleValues)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>trimArray</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>array</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;String&gt; [validValues=new ArrayList&lt;String&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parse</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StyleMap</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>CharacterIterator [iterator=new StringCharacterIterator(styleString)]</InnerVar>
                <InnerVar>StringBuilder [styleBuilder=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>