<Class>
    <Id>471</Id>
    <Package>org.jboss.seam.flex</Package>
    <ClassName>MessageBrokerManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>SEAM_ENDPOINT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
        <Field>
            <FieldName>WAR_CONFIG_PREFIX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>EAR_CONFIG_PREFIX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>broker</FieldName>
            <FieldType>flex.messaging.MessageBroker</FieldType>
        </Field>
        <Field>
            <FieldName>servletConfig</FieldName>
            <FieldType>ServletConfig</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>servletConfig</ParamName>
                    <ParamType>ServletConfig</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;createThreadLocals;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ServletException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setInitServletContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>broker</ParamName>
                    <ParamType>flex.messaging.MessageBroker</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Method [setMethod=flex.messaging.MessageBroker.class.getDeclaredMethod("setInitServletContext",ServletContext.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>setMethod;setAccessible;[true]</InnerMethodInvoke>
                <InnerMethodInvoke>Reflections;invoke;[setMethod, broker, ctx]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>destroy</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>service</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>req</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>res</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["=========== START FLEX REQUEST"]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["=========== END FLEX REQUEST"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>res</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findEndpoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Endpoint</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>req</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>res</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [contextPath=req.getContextPath()]</InnerVar>
                <InnerVar>String [pathInfo=req.getPathInfo()]</InnerVar>
                <InnerVar>String [endpointPath=req.getServletPath()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["flex request for cp=" + contextPath + " ep="+ endpointPath]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createThreadLocals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>flex.messaging.MessageBroker;createThreadLocalObjects;[]</InnerMethodInvoke>
                <InnerMethodInvoke>FlexContext;createThreadLocalObjects;[]</InnerMethodInvoke>
                <InnerMethodInvoke>flex.messaging.io.SerializationContext;createThreadLocalObjects;[]</InnerMethodInvoke>
                <InnerMethodInvoke>flex.messaging.io.TypeMarshallingContext;createThreadLocalObjects;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>destroyThreadLocals</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>flex.messaging.MessageBroker;releaseThreadLocalObjects;[]</InnerMethodInvoke>
                <InnerMethodInvoke>FlexContext;releaseThreadLocalObjects;[]</InnerMethodInvoke>
                <InnerMethodInvoke>flex.messaging.io.SerializationContext;releaseThreadLocalObjects;[]</InnerMethodInvoke>
                <InnerMethodInvoke>flex.messaging.io.TypeMarshallingContext;releaseThreadLocalObjects;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRemotingService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RemotingService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>RemotingService [remotingService=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>remotingService;setId;["remoting-service"]</InnerMethodInvoke>
                <InnerMethodInvoke>broker;addService;[remotingService]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["Flex remotingservice not found- creating " + remotingService]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findRemotingService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RemotingService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerSeamAdapter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>remotingService</ParamName>
                    <ParamType>RemotingService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDestination</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Destination</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>destinationName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>componentName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RemotingService [remotingService=findRemotingService()]</InnerVar>
                <InnerVar>RemotingDestination [destination=(RemotingDestination)remotingService.createDestination(destinationName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>destination;setFactory;[new FlexSeamFactory(destinationName,componentName)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerSeamAdapter;[remotingService]</InnerMethodInvoke>
                <InnerMethodInvoke>destination;createAdapter;[SeamAdapter.SEAM_ADAPTER_ID]</InnerMethodInvoke>
                <InnerMethodInvoke>destination;addChannel;[SEAM_ENDPOINT]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addDestinations</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>destinations</ParamName>
                    <ParamType>Class&lt;?&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>