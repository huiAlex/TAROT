<Class>
    <Id>487</Id>
    <Package>org.jboss.seam.ioc.spring</Package>
    <ClassName>SpringTaskExecutorDispatcher</ClassName>
    <SuperClass>AbstractDispatcher</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SpringTaskExecutorDispatcher  /** 
 * Dispatcher that can utilizes SpringTaskExecutors for non scheduled asynchronous events but defer to another ScheduledDispatcher for Scheduled asynchronous events.
 * @author Mike Youngstrom
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>scheduleDispatcher</FieldName>
            <FieldType>ValueExpression</FieldType>
        </Field>
        <Field>
            <FieldName>scheduleDispatcher</FieldName>
            <FieldType>Dispatcher&lt;T,S&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>taskExecutor</FieldName>
            <FieldType>ValueExpression</FieldType>
        </Field>
        <Field>
            <FieldName>taskExecutor</FieldName>
            <FieldType>TaskExecutor</FieldType>
        </Field>
        <Field>
            <FieldName>async</FieldName>
            <FieldType>Asynchronous</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>scheduleAsynchronousEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameters</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>taskExecutor.getValue();execute;[new RunnableAsynchronous(new AsynchronousEvent(type,parameters))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scheduleInvocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>invocation</ParamName>
                    <ParamType>InvocationContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Schedule [schedule=createSchedule(invocation)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>taskExecutor.getValue();execute;[new RunnableAsynchronous(new AsynchronousInvocation(invocation,component))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scheduleTimedEvent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>schedule</ParamName>
                    <ParamType>S</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parameters</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScheduleDispatcher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Dispatcher&lt;T,S&gt; [dispatcher=(scheduleDispatcher == null) ? null : scheduleDispatcher.getValue()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setScheduleDispatcher</MethodName>
            <MethodComment>/** 
 * The dispatcher to handle scheduled events
 * @param scheduleDispatcher
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scheduleDispatcher</ParamName>
                    <ParamType>Dispatcher&lt;T,S&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTaskExecutor</MethodName>
            <MethodComment>/** 
 * The Spring TaskExecutor to handle immediate asynchronous events
 * @param taskExecutor
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskExecutor</ParamName>
                    <ParamType>TaskExecutor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>RunnableAsynchronous</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>async</ParamName>
                    <ParamType>Asynchronous</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>async;execute;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>