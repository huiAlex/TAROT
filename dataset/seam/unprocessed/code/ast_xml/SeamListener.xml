<Class>
    <Id>77</Id>
    <Package>org.jboss.seam.servlet</Package>
    <ClassName>SeamListener</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ServletContextListener</SuperInterface>
        <SuperInterface>HttpSessionListener</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SeamListener  /** 
 * Drives certain Seam functionality such as initialization and cleanup of application and session contexts from the web application lifecycle.
 * @author Gavin King
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>contextInitialized</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>ServletContextEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["Welcome to Seam " + Seam.getVersion()]</InnerMethodInvoke>
                <InnerMethodInvoke>event.getServletContext();setAttribute;[Seam.VERSION, Seam.getVersion()]</InnerMethodInvoke>
                <InnerMethodInvoke>ServletLifecycle;beginApplication;[event.getServletContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>new Initialization(event.getServletContext()).create();init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>contextDestroyed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>ServletContextEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ServletLifecycle;endApplication;[event.getServletContext()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sessionCreated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>HttpSessionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ServletLifecycle;beginSession;[event.getSession()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sessionDestroyed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>HttpSessionEvent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JBossClusterMonitor [monitor=JBossClusterMonitor.getInstance(event.getSession().getServletContext())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>