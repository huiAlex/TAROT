<Class>
    <Id>577</Id>
    <Package>org.jboss.seam.ui.renderkit</Package>
    <ClassName>DecorateRendererBase</ClassName>
    <SuperClass>RendererBase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>originalValues</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>originalValues</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>storeOriginals</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getComponentClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUIDecorate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>UIComponent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>decorator</ParamName>
                    <ParamType>UIDecorate</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>storeOriginalValues</MethodName>
            <MethodComment>/** 
 * Store away the attribute from the event context (if it is set)
 * @param names The list of context keys to store away
 * @param context The context to target
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>names</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>Context</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>restoreOriginalValues</MethodName>
            <MethodComment>/** 
 * Restores the state of the event context. If the value is stored away, it is restored It it was not in the map, it was not in the context in the first place so clean up what we have placed there during this run.
 * @param names The list of context keys to restore
 * @param context The context to target
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>names</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>Context</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doEncodeBegin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>ResponseWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>FacesContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>UIComponent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UIDecorate [decorate=(UIDecorate)component]</InnerVar>
                <InnerVar>boolean [hasMessage=decorate.hasMessage()]</InnerVar>
                <InnerVar>UIComponent [aroundDecoration=decorate.getDecoration("aroundField")]</InnerVar>
                <InnerVar>UIComponent [aroundInvalidDecoration=decorate.getDecoration("aroundInvalidField")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;storeOriginalValues;[storeOriginals, Contexts.getEventContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.getEventContext();set;["invalid", Decoration.hasMessage(decorate,context)]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.getEventContext();set;["required", Decoration.hasRequired(component,context)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doEncodeEnd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>ResponseWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>FacesContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>UIComponent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UIDecorate [decorate=(UIDecorate)component]</InnerVar>
                <InnerVar>boolean [hasMessage=decorate.hasMessage()]</InnerVar>
                <InnerVar>UIComponent [aroundDecoration=decorate.getDecoration("aroundField")]</InnerVar>
                <InnerVar>UIComponent [aroundInvalidDecoration=decorate.getDecoration("aroundInvalidField")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;restoreOriginalValues;[storeOriginals, Contexts.getEventContext()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doEncodeChildren</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>ResponseWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>FacesContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>component</ParamName>
                    <ParamType>UIComponent</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UIDecorate [decorate=(UIDecorate)component]</InnerVar>
                <InnerVar>boolean [hasMessage=decorate.hasMessage()]</InnerVar>
                <InnerVar>UIComponent [beforeDecoration=decorate.getDecoration("beforeField")]</InnerVar>
                <InnerVar>UIComponent [beforeInvalidDecoration=decorate.getDecoration("beforeInvalidField")]</InnerVar>
                <InnerVar>UIComponent [afterDecoration=decorate.getDecoration("afterField")]</InnerVar>
                <InnerVar>UIComponent [afterInvalidDecoration=decorate.getDecoration("afterInvalidField")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;renderChildren;[context, decorate]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRendersChildren</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>