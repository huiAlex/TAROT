<Class>
    <Id>158</Id>
    <Package>org.jboss.seam.example.spring</Package>
    <ClassName>BookingService</ClassName>
    <SuperClass>JpaDaoSupport</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BookingService  /** 
 * Example of using the JpaDaoSupport.
 * @author Mike Youngstrom
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>currentThread</FieldName>
            <FieldType>ThreadLocal</FieldType>
        </Field>
        <Field>
            <FieldName>currentThread</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>findHotels</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Hotel</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>searchPattern</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>firstResult</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxResults</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;debug;["Looking for a Hotel."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doInJpa</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>em</ParamName>
                    <ParamType>EntityManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PersistenceException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findBookingsByUsername</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Booking</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>username</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;debug;["Finding Bookings for user {0}", username]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cancelBooking</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bookingId</ParamName>
                    <ParamType>Long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Booking [cancelled=getJpaTemplate().find(Booking.class,bookingId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;debug;["Cancelling booking id: {0}", bookingId]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>validateBooking</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>booking</ParamName>
                    <ParamType>Booking</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Calendar [calendar=Calendar.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>calendar;add;[Calendar.DAY_OF_MONTH, -1]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bookHotel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>booking</ParamName>
                    <ParamType>Booking</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;validateBooking;[booking]</InnerMethodInvoke>
                <InnerMethodInvoke>getJpaTemplate();persist;[booking]</InnerMethodInvoke>
                <InnerMethodInvoke>getJpaTemplate();flush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ValidationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendRegisterEmail</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>username</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UserService [userService=(UserService)Expressions.instance().createValueExpression("#{userService}").getValue()]</InnerVar>
                <InnerVar>User [user=userService.findUser(username)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logger;info;["pretending to send email asyncronously"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findHotelById</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Hotel</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hotelId</ParamName>
                    <ParamType>Long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>