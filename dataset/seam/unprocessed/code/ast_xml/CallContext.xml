<Class>
    <Id>566</Id>
    <Package>org.jboss.seam.remoting</Package>
    <ClassName>CallContext</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CallContext  /** 
 * Represents the context of an individual call.
 * @author Shane Bryzak
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>inRefs</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>inRefs</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outRefs</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>outRefs</FieldName>
            <FieldType>Wrapper</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createWrapperFromElement</MethodName>
            <MethodComment>/** 
 * @param element Element
 * @return Wrapper
 */
</MethodComment>
            <ReturnType>Wrapper</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createWrapperFromObject</MethodName>
            <MethodComment>/** 
 * @return Wrapper
 */
</MethodComment>
            <ReturnType>Wrapper</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Wrapper [w=WrapperFactory.getInstance().getWrapperForObject(value)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>w;setCallContext;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>w;setPath;[path]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInRefs</MethodName>
            <MethodComment>/** 
 * Returns the inbound object references
 * @return Map
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOutRefs</MethodName>
            <MethodComment>/** 
 * Returns the outbound object references
 * @return List
 */
</MethodComment>
            <ReturnType>Wrapper</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addOutRef</MethodName>
            <MethodComment>/** 
 * Add an outbound object reference
 * @param w Wrapper
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>Wrapper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>