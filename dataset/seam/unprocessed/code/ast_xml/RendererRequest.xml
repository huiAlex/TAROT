<Class>
    <Id>407</Id>
    <Package>org.jboss.seam.ui.facelet</Package>
    <ClassName>RendererRequest</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
        <Field>
            <FieldName>originalFacesContext</FieldName>
            <FieldType>FacesContext</FieldType>
        </Field>
        <Field>
            <FieldName>facesContext</FieldName>
            <FieldType>FacesContext</FieldType>
        </Field>
        <Field>
            <FieldName>request</FieldName>
            <FieldType>MockHttpServletRequest</FieldType>
        </Field>
        <Field>
            <FieldName>response</FieldName>
            <FieldType>MockHttpServletResponse</FieldType>
        </Field>
        <Field>
            <FieldName>writer</FieldName>
            <FieldType>StringWriter</FieldType>
        </Field>
        <Field>
            <FieldName>viewId</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>originalClassLoader</FieldName>
            <FieldType>ClassLoader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RendererRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>UIViewRoot [newRoot=facesContext.getApplication().getViewHandler().createView(facesContext,viewId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setContextClassLoader;[]</InnerMethodInvoke>
                <InnerMethodInvoke>DelegatingFacesContext;setCurrentInstance;[facesContext]</InnerMethodInvoke>
                <InnerMethodInvoke>facesContext;setViewRoot;[newRoot]</InnerMethodInvoke>
                <InnerMethodInvoke>facesContext;setResponseWriter;[facesContext.getRenderKit().createResponseWriter(writer,null,null)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>facesContext;release;[]</InnerMethodInvoke>
                <InnerMethodInvoke>DelegatingFacesContext;setCurrentInstance;[originalFacesContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setContextClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ServletContext [ctx=request.getSession().getServletContext()]</InnerVar>
                <InnerVar>WeakReference&lt;ClassLoader&gt; [ref=(WeakReference&lt;ClassLoader&gt;)ctx.getAttribute("seam.context.classLoader")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetContextClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOutput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>faceletForViewId</MethodName>
            <MethodComment>/** 
 * Get a Facelet for a URL
 */
</MethodComment>
            <ReturnType>Facelet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>viewId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>URL [url=ResourceLoader.instance().getResource(viewId)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>renderFacelet</MethodName>
            <MethodComment>/** 
 * Render a Facelet
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>facesContext</ParamName>
                    <ParamType>FacesContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>facelet</ParamName>
                    <ParamType>Facelet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UIViewRoot [root=facesContext.getViewRoot()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>facelet;apply;[facesContext, root]</InnerMethodInvoke>
                <InnerMethodInvoke>JSF;renderChildren;[facesContext, root]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>