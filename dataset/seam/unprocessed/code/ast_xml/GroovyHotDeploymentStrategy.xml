<Class>
    <Id>871</Id>
    <Package>org.jboss.seam.deployment</Package>
    <ClassName>GroovyHotDeploymentStrategy</ClassName>
    <SuperClass>HotDeploymentStrategy</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GroovyHotDeploymentStrategy  /** 
 * A deployment strategy for hot deploying Seam groovy components
 * @author Pete Muir
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DEFAULT_SCRIPT_EXTENSION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classLoader</FieldName>
            <FieldType>ClassLoader</FieldType>
        </Field>
        <Field>
            <FieldName>groovyDeploymentHandler</FieldName>
            <FieldType>GroovyDeploymentHandler</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>GroovyHotDeploymentStrategy</MethodName>
            <MethodComment>/** 
 * @param classLoader The parent classloader of the hot deployment classloader
 * @param hotDeployDirectory The directory in which hot deployable java and groovy Seam components are placed
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>classLoader</ParamName>
                    <ParamType>ClassLoader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hotDeployDirectory</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>servletContext</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>enabled</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassLoader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFromHotDeployClassLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>componentClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScannedComponentClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ClassDescriptor</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Set&lt;ClassDescriptor&gt; [set=new HashSet&lt;ClassDescriptor&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>set;addAll;[super.getScannedComponentClasses()]</InnerMethodInvoke>
                <InnerMethodInvoke>set;addAll;[groovyDeploymentHandler.getClasses()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>