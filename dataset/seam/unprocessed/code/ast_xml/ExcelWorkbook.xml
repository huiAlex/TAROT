<Class>
    <Id>1096</Id>
    <Package>org.jboss.seam.excel</Package>
    <ClassName>ExcelWorkbook</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExcelWorkbook  /** 
 * General interface interacting with an Excel Workbook abstraction 
 * @author Nicklas Karlsson (nickarls@gmail.com)
 * @author Daniel Roth (danielc.roth@gmail.com)
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getDocumentType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DocumentType</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextColumn</MethodName>
            <MethodComment>/** 
 * Moves the internal column pointer to the next column, called by the tag to indicate that a new column has been started. If the pointer exceeds the maximum allowed, throws an exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createOrSelectWorksheet</MethodName>
            <MethodComment>/** 
 * Creates a new worksheet in the workbook (or selects one if it exists). Will require a rework for auto-renaming when support for auto-adding of new worksheets if there are more than 65k rows.
 * @param uiWorksheet Worksheet to create or select
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uiWorksheet</ParamName>
                    <ParamType>UIWorksheet</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBytes</MethodName>
            <MethodComment>/** 
 * Returns the binary data from the internal representation of the workbook
 * @return the bytes
 */
</MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createWorkbook</MethodName>
            <MethodComment>/** 
 * Initializes a new workbook. Must be called first
 * @param uiWorkbook the workbook UI item to create
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uiWorkbook</ParamName>
                    <ParamType>UIWorkbook</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>applyColumnSettings</MethodName>
            <MethodComment>/** 
 * Applies column settings to the current column
 * @param uiColumn The UI column to inspect for settings
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uiColumn</ParamName>
                    <ParamType>UIColumn</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addItem</MethodName>
            <MethodComment>/** 
 * Adds an item (cell, image, hyperlink) to add to the worksheet
 * @param item The item to add
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>item</ParamName>
                    <ParamType>WorksheetItem</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeCommand</MethodName>
            <MethodComment>/** 
 * Executes a command for a worksheet
 * @param command The command to execute
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>Command</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addWorksheetHeader</MethodName>
            <MethodComment>/** 
 * Places an item in the worksheet header
 * @param item The item to add
 * @param colspan The number of columns to span
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>item</ParamName>
                    <ParamType>WorksheetItem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colspan</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addWorksheetFooter</MethodName>
            <MethodComment>/** 
 * Places an item in the worksheet footer
 * @param item The item to add
 * @param colspan The number of columns to span
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>item</ParamName>
                    <ParamType>WorksheetItem</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colspan</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStylesheets</MethodName>
            <MethodComment>/** 
 * Sets stylesheets for the workbook
 * @param stylesheets The stylesheets to set
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stylesheets</ParamName>
                    <ParamType>UILink</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>