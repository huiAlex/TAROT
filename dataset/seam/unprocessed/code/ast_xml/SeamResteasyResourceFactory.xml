<Class>
    <Id>569</Id>
    <Package>org.jboss.seam.resteasy</Package>
    <ClassName>SeamResteasyResourceFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ResourceFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SeamResteasyResourceFactory  /** 
 * Looks up Seam component in Seam contexts when a JAX-RS resource is requested.
 * @author Christian Bauer
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>resourceType</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>resourceType</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>seamComponent</FieldName>
            <FieldType>Component</FieldType>
        </Field>
        <Field>
            <FieldName>providerFactory</FieldName>
            <FieldType>ResteasyProviderFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SeamResteasyResourceFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resourceType</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>seamComponent</ParamName>
                    <ParamType>Component</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providerFactory</ParamName>
                    <ParamType>ResteasyProviderFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScannableClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factory</ParamName>
                    <ParamType>InjectorFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>seamComponent;addInterceptor;[new ResteasyContextInjectionInterceptor(new PropertyInjectorImpl(getScannableClass(),providerFactory))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>HttpResponse</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>factory</ParamName>
                    <ParamType>InjectorFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Contexts.getEventContext();set;[ResteasyContextInjectionInterceptor.RE_HTTP_REQUEST_VAR, request]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.getEventContext();set;[ResteasyContextInjectionInterceptor.RE_HTTP_RESPONSE_VAR, response]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debug;["creating RESTEasy resource instance by looking up Seam component: " + seamComponent.getName()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>requestFinished</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>HttpResponse</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resource</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregistered</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>