<Class>
    <Id>349</Id>
    <Package>org.jboss.seam.contexts</Package>
    <ClassName>ServletLifecycle</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ServletLifecycle  /** 
 * Methods for setup and teardown of Seam contexts at the beginning and end of servlet requests.
 * @author Gavin King
 * @author &lt;a href="mailto:theute@jboss.org"&gt;Thomas Heute&lt;/a&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
        <Field>
            <FieldName>servletContext</FieldName>
            <FieldType>ServletContext</FieldType>
        </Field>
        <Field>
            <FieldName>SERVLET_CONTEXT_KEY</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getServletContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ServletContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;beginRequest;[request, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ServletContext [ctx=context]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["&gt;&gt;&gt; Begin web request"]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.eventContext;set;[new EventContext(new ServletRequestMap(request))]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.sessionContext;set;[new SessionContext(new ServletRequestSessionMap(request))]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[new ApplicationContext(new ServletApplicationMap(ctx))]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["After request, destroying contexts"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginReinitialization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;beginReinitialization;[request, servletContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginReinitialization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>servletContext</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["&gt;&gt;&gt; Begin re-initialization"]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[new ApplicationContext(new ServletApplicationMap(servletContext))]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.eventContext;set;[new BasicContext(ScopeType.EVENT)]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.sessionContext;set;[new SessionContext(new ServletRequestSessionMap(request))]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[new BasicContext(ScopeType.CONVERSATION)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endReinitialization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Contexts;startup;[ScopeType.APPLICATION]</InnerMethodInvoke>
                <InnerMethodInvoke>Events.instance();raiseEvent;["org.jboss.seam.postReInitialization"]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts;destroy;[Contexts.getConversationContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts;destroy;[Contexts.getEventContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.eventContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.sessionContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debug;["&lt;&lt;&lt; End re-initialization"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginInitialization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["&gt;&gt;&gt; Begin initialization"]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[new ApplicationContext(Lifecycle.getApplication())]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.eventContext;set;[new BasicContext(ScopeType.EVENT)]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[new BasicContext(ScopeType.CONVERSATION)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endInitialization</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Contexts;startup;[ScopeType.APPLICATION]</InnerMethodInvoke>
                <InnerMethodInvoke>Events.instance();raiseEvent;["org.jboss.seam.postInitialization"]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts;destroy;[Contexts.getConversationContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.conversationContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts;destroy;[Contexts.getEventContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.eventContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.sessionContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.applicationContext;set;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debug;["&lt;&lt;&lt; End initialization"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginApplication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>WeakReference&lt;ClassLoader&gt; [ref=new WeakReference&lt;ClassLoader&gt;(Thread.currentThread().getContextClassLoader())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;setAttribute;["seam.context.classLoader", ref]</InnerMethodInvoke>
                <InnerMethodInvoke>log;debug;["Cached the context classloader in servletContext as 'seam.context.classLoader'"]</InnerMethodInvoke>
                <InnerMethodInvoke>context;setAttribute;[SERVLET_CONTEXT_KEY, context]</InnerMethodInvoke>
                <InnerMethodInvoke>Lifecycle;beginApplication;[new ServletApplicationMap(context)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endApplication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;endApplication;[servletContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endApplication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>ServletContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Lifecycle;endApplication;[new ServletApplicationMap(context)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>HttpSession</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Lifecycle;beginSession;[new ServletSessionMap(session), new ServletApplicationMap(session.getServletContext())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endSession</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>session</ParamName>
                    <ParamType>HttpSession</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Lifecycle;endSession;[new ServletSessionMap(session), new ServletApplicationMap(session.getServletContext())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resumeConversation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ServerConversationContext [conversationContext=new ServerConversationContext(new ServletRequestSessionMap(request))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Contexts.conversationContext;set;[conversationContext]</InnerMethodInvoke>
                <InnerMethodInvoke>Contexts.businessProcessContext;set;[new BusinessProcessContext()]</InnerMethodInvoke>
                <InnerMethodInvoke>conversationContext;unflush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentServletContext</MethodName>
            <MethodComment>/** 
 * Convenience method that retrieves the servlet context from application scope.
 * @return the current servlet context
 */
</MethodComment>
            <ReturnType>ServletContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>