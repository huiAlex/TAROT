<Class>
    <Id>604</Id>
    <Package>org.jboss.seam.remoting.wrapper</Package>
    <ClassName>BeanWrapper</ClassName>
    <SuperClass>BaseWrapper</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Wrapper</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BeanWrapper  /** 
 * @author Shane Bryzak
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>REF_START_TAG_OPEN</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>REF_START_TAG_END</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>BEAN_START_TAG_OPEN</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>BEAN_START_TAG_CLOSE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>BEAN_CLOSE_TAG</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MEMBER_START_TAG_OPEN</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MEMBER_START_TAG_CLOSE</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>MEMBER_CLOSE_TAG</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setElement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>element</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [beanType=element.attributeValue("type")]</InnerVar>
                <InnerVar>Component [component=Component.forName(beanType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unmarshal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List [members=element.elements("member")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convert</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>Type</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ConversionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>marshal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>context;addOutRef;[this]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[REF_START_TAG_OPEN]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[Integer.toString(context.getOutRefs().indexOf(this)).getBytes()]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[REF_START_TAG_END]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;serialize;[out, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>constraints</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class [cls=value.getClass()]</InnerVar>
                <InnerVar>String [componentName=Seam.getComponentName(cls)]</InnerVar>
                <InnerVar>Component [component=componentName != null ? Component.forName(componentName) : null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;write;[BEAN_START_TAG_OPEN]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[BEAN_START_TAG_CLOSE]</InnerMethodInvoke>
                <InnerMethodInvoke>out;write;[BEAN_CLOSE_TAG]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>conversionScore</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ConversionScore</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cls</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>