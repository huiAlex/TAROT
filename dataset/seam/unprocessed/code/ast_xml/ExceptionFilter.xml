<Class>
    <Id>418</Id>
    <Package>org.jboss.seam.web</Package>
    <ClassName>ExceptionFilter</ClassName>
    <SuperClass>AbstractFilter</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExceptionFilter  /** 
 * Delegate uncaught exceptions to Seam exception handling. As a last line of defence, rollback uncommitted transactions, and clean up Seam contexts.
 * @author Gavin King
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>doFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>ServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>ServletResponse</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>chain</ParamName>
                    <ParamType>FilterChain</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ServletException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endWebRequestAfterException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>Exception</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Manager [manager=Contexts.isEventContextActive() ? (Manager)Contexts.getEventContext().get(Manager.class) : (Manager)request.getAttribute(Seam.getComponentName(Manager.class))]</InnerVar>
                <InnerVar>String [conversationId=manager == null ? null : manager.getCurrentConversationId()]</InnerVar>
                <InnerVar>MockFacesContext [facesContext=createFacesContext(request,response)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["running exception handlers"]</InnerMethodInvoke>
                <InnerMethodInvoke>Lifecycle;endRequest;[]</InnerMethodInvoke>
                <InnerMethodInvoke>facesContext;setCurrent;[]</InnerMethodInvoke>
                <InnerMethodInvoke>FacesLifecycle;beginExceptionRecovery;[facesContext.getExternalContext()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ServletException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createFacesContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MockFacesContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>request</ParamName>
                    <ParamType>HttpServletRequest</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>response</ParamName>
                    <ParamType>HttpServletResponse</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>MockFacesContext [mockFacesContext=new MockFacesContext(new MockExternalContext(getServletContext(),request,response),new MockApplication())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mockFacesContext;setViewRoot;[new UIViewRoot()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rollbackTransactionIfNecessary</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>