<Class>
    <Id>973</Id>
    <Package>org.jboss.seam.security.permission</Package>
    <ClassName>JpaPermissionStore</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>PermissionStore</SuperInterface>
        <SuperInterface>Serializable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JpaPermissionStore  /** 
 * A permission store implementation that uses JPA as its persistence mechanism.
 * @author Shane Bryzak
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>LogProvider</FieldType>
        </Field>
        <Field>
            <FieldName>entityManager</FieldName>
            <FieldType>ValueExpression</FieldType>
        </Field>
        <Field>
            <FieldName>entityManager</FieldName>
            <FieldType>EntityManager</FieldType>
        </Field>
        <Field>
            <FieldName>userPermissionClass</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>rolePermissionClass</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>userProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>userProperty</FieldName>
            <FieldType>PermissionUser</FieldType>
        </Field>
        <Field>
            <FieldName>roleProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>roleProperty</FieldName>
            <FieldType>PermissionRole</FieldType>
        </Field>
        <Field>
            <FieldName>targetProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>targetProperty</FieldName>
            <FieldType>PermissionTarget</FieldType>
        </Field>
        <Field>
            <FieldName>actionProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>actionProperty</FieldName>
            <FieldType>PermissionAction</FieldType>
        </Field>
        <Field>
            <FieldName>discriminatorProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>discriminatorProperty</FieldName>
            <FieldType>PermissionDiscriminator</FieldType>
        </Field>
        <Field>
            <FieldName>roleTargetProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>roleTargetProperty</FieldName>
            <FieldType>PermissionTarget</FieldType>
        </Field>
        <Field>
            <FieldName>roleActionProperty</FieldName>
            <FieldType>AnnotatedBeanProperty</FieldType>
        </Field>
        <Field>
            <FieldName>roleActionProperty</FieldName>
            <FieldType>PermissionAction</FieldType>
        </Field>
        <Field>
            <FieldName>queryCache</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>queryCache</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>identifierPolicy</FieldName>
            <FieldType>IdentifierPolicy</FieldType>
        </Field>
        <Field>
            <FieldName>metadata</FieldName>
            <FieldType>PermissionMetadata</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initProperties;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createPermissionQuery</MethodName>
            <MethodComment>/** 
 * Creates a Query that returns a list of permission records for the specified parameters. 
 * @param target The target of the permission, may be null
 * @param targets A set of permission targets, may be null
 * @param recipient The permission recipient, may be null
 * @param discrimination A discrimination (either user, role or both), required
 * @return Query The query generated for the provided parameters
 */
</MethodComment>
            <ReturnType>Query</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targets</ParamName>
                    <ParamType>Set</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recipient</ParamName>
                    <ParamType>Principal</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>discrimination</ParamName>
                    <ParamType>Discrimination</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [queryKey=(target != null) ? 1 : 0]</InnerVar>
                <InnerVar>boolean [isRole=discrimination.equals(Discrimination.role)]</InnerVar>
                <InnerVar>boolean [useRoleTable=isRole &amp;&amp; rolePermissionClass != null]</InnerVar>
                <InnerVar>Query [query=lookupEntityManager().createQuery(queryCache.get(queryKey))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>grantPermission</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>permission</ParamName>
                    <ParamType>Permission</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>revokePermission</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>permission</ParamName>
                    <ParamType>Permission</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updatePermissionActions</MethodName>
            <MethodComment>/** 
 * This is where the bulk of the actual work happens. 
 * @param target The target object to update permissions for
 * @param recipient The recipient to update permissions for
 * @param actions The actions that will be updated
 * @param set true if the specified actions are to be granted, false if they are to be revoked
 * @return true if the operation is successful
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recipient</ParamName>
                    <ParamType>Principal</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actions</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>set</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [recipientIsRole=recipient instanceof Role]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>grantPermissions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>permissions</ParamName>
                    <ParamType>Permission</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;Object,Map&lt;Principal,List&lt;Permission&gt;&gt;&gt; [groupedPermissions=groupPermissions(permissions)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>revokePermissions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>permissions</ParamName>
                    <ParamType>Permission</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;Object,Map&lt;Principal,List&lt;Permission&gt;&gt;&gt; [groupedPermissions=groupPermissions(permissions)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>groupPermissions</MethodName>
            <MethodComment>/** 
 * Groups a list of arbitrary permissions into a more easily-consumed structure
 * @param permissions The list of permissions to group
 * @return 
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>permissions</ParamName>
                    <ParamType>Permission</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;Object,Map&lt;Principal,List&lt;Permission&gt;&gt;&gt; [groupedPermissions=new HashMap&lt;Object,Map&lt;Principal,List&lt;Permission&gt;&gt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDiscriminatorValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>isRole</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PermissionDiscriminator [discriminator=discriminatorProperty.getAnnotation()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resolvePrincipalEntity</MethodName>
            <MethodComment>/** 
 * If the user or role properties in the entity class refer to other entities, then this method uses the JpaIdentityStore (if available) to lookup that user or role entity.  Otherwise it simply returns the name of the recipient. 
 * @param recipient
 * @return The entity or name representing the permission recipient
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>recipient</ParamName>
                    <ParamType>Principal</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [recipientIsRole=recipient instanceof Role]</InnerVar>
                <InnerVar>JpaIdentityStore [identityStore=(JpaIdentityStore)Component.getInstance(JpaIdentityStore.class,true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resolvePrincipal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Principal</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>principal</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isUser</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IdentityStore [ids=IdentityManager.instance().getRoleIdentityStore()]</InnerVar>
                <InnerVar>JpaIdentityStore [identityStore=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listPermissions</MethodName>
            <MethodComment>/** 
 * Returns a list of all user and role permissions for the specified action for all specified target objects
 */
</MethodComment>
            <ReturnType>Permission</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>targets</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listPermissions</MethodName>
            <MethodComment>/** 
 * Returns a list of all user and role permissions for a specific permission target and action.
 */
</MethodComment>
            <ReturnType>Permission</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listPermissions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Permission</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targets</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Permission&gt; [permissions=new ArrayList&lt;Permission&gt;()]</InnerVar>
                <InnerVar>Query [permissionQuery=targets != null ? createPermissionQuery(null,targets,null,Discrimination.either) : createPermissionQuery(target,null,null,Discrimination.either)]</InnerVar>
                <InnerVar>List [userPermissions=permissionQuery.getResultList()]</InnerVar>
                <InnerVar>Map&lt;String,Principal&gt; [principalCache=new HashMap&lt;String,Principal&gt;()]</InnerVar>
                <InnerVar>boolean [useDiscriminator=rolePermissionClass == null &amp;&amp; discriminatorProperty.isSet()]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [identifierCache=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookupPrincipal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Principal</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cache</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>permission</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isUser</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Principal [principal=resolvePrincipal(isUser ? userProperty.getValue(permission) : roleProperty.getValue(permission),isUser)]</InnerVar>
                <InnerVar>String [key=(isUser ? "u:" : "r:") + principal.getName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listPermissions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Permission</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listAvailableActions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookupEntityManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>EntityManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEntityManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ValueExpression</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setEntityManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expression</ParamName>
                    <ParamType>ValueExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserPermissionClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUserPermissionClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userPermissionClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRolePermissionClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setRolePermissionClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rolePermissionClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearPermissions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>target</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EntityManager [em=lookupEntityManager()]</InnerVar>
                <InnerVar>String [identifier=identifierPolicy.getIdentifier(target)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>em.createQuery("delete from " + userPermissionClass.getName() + " p where p."+ targetProperty.getName()+ " = :target").setParameter("target",identifier);executeUpdate;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>