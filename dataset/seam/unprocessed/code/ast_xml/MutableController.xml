<Class>
    <Id>365</Id>
    <Package>org.jboss.seam.framework</Package>
    <ClassName>MutableController</ClassName>
    <SuperClass>PersistenceController</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Serializable</SuperInterface>
        <SuperInterface>Mutable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MutableController  /** 
 * Base class for controllers which implement the Mutable interface.
 * @author Gavin King
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>dirty</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>clearDirty</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [result=dirty]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setDirty</MethodName>
            <MethodComment>/** 
 * Set the dirty flag if the value has changed. Call whenever a subclass attribute is updated.
 * @param oldValue the old value of an attribute
 * @param newValue the new value of an attribute
 * @return true if the newValue is not equal to the oldValue
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oldValue</ParamName>
                    <ParamType>U</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newValue</ParamName>
                    <ParamType>U</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [attributeDirty=oldValue != newValue &amp;&amp; (oldValue == null || !oldValue.equals(newValue))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setDirty</MethodName>
            <MethodComment>/** 
 * Set the dirty flag.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>