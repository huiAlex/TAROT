/**
 * An exception that is thrown when {@link BijectionInterceptor} detects that a
 * component's dependencies cannot be injected due to a cyclic dependency. As
 * the exception is passed up the stack, the call sequence is recorded so that a
 * useful exception message can be constructed.
 * 
 *  * 
 */

/**
    * stores the invocations in reverse call order
    */

/**
    * Records this invocation's component name and method to be displayed in
    * {@link #getMessage()}, unless this invocation is not part of the detected
    * cycle. This method will be successively called as the exception is
    * propagated up the stack.
    * 
    * @param componentName
    * @param method
    */

/**
    * returns e.g. "foo.doSomething()"
    */

