/**
 * The Seam conversation manager.
 *
 *  *  */

/**
    * Kills all conversations except the current one 
    */

/**
    * @return Map session
    */

/**
    * Only public for the unit tests!
    * @param id
    */

/**
    * Change the id of the current conversation.
    * 
    * @param id the new conversation id
    */

/**
    * Clean up timed-out conversations
    */

/**
    * Clean up all state associated with a conversation
    */

/**
    * Touch the conversation stack, destroy ended conversations, 
    * and timeout inactive conversations.
    */

/**
    * Look for a conversation propagation style in the request
    * parameters and begin, nested or join the conversation,
    * as necessary.
    * 
    * @param parameters the request parameters
    */

/**
    * Initialize the request conversation context, given the 
    * conversation id and optionally a parent conversation id.
    * If no conversation entry is found for the first id, try
    * the parent, and if that also fails, initialize a new 
    * temporary conversation context.
    * 
    * @return false if the conversation entry was not found
    *         and it was required
    */

/**
    * Initialize a new temporary conversation context,
    * and assign it a conversation id.
    */

/**
    * Promote a temporary conversation and make it long-running
    */

/**
    * Begin a new nested conversation.
    */

/**
    * Make a long-running conversation temporary.
    */

/**
    * Make the root conversation in the current conversation stack temporary.
    */

/**
    * Leave the scope of the current conversation, leaving
    * it completely intact.
    */

/**
    * Switch to another long-running conversation and mark the conversation as long-running,
    * overriding a previous call in the same thread to demote a long-running conversation.
    * 
    * @param id the id of the conversation to switch to
    * @return true if the conversation exists
    */

/**
    * Switch to another long-running conversation.
    * 
    * @param id the id of the conversation to switch to
    * @param promote promote the current conversation to long-running, overriding any previous demotion
    * @return true if the conversation exists
    */

/**
    * Temporarily promote a temporary conversation to
    * a long running conversation for the duration of
    * a browser redirect. After the redirect, the 
    * conversation will be demoted back to a temporary
    * conversation.
    */

/**
    * Add the conversation id to a URL, if necessary
    * 
    * @deprecated use encodeConversationId(String url, String viewId)
    */

/**
    * Add the conversation id to a URL, if necessary
    */

/**
    * Add the conversation id to a URL, if necessary
    */

/**
    * Add the parameters to a URL
    */

