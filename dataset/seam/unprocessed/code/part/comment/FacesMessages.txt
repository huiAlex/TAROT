/**
 * A Seam component that propagates FacesMessages across redirects
 * and interpolates EL expressions in the message string.
 * 
 *  *  */

/**
    * Called by Seam to transfer messages from FacesMessages to JSF
    */

/**
    * Called by Seam to transfer any messages added in the phase just processed
    * to the FacesMessages component.
    * 
    * A task runner is used to allow the messages access to outjected values.
    */

/**
    * Convert a StatusMessage to a FacesMessage
    */

/**
    * Convert a StatusMessage.Severity to a FacesMessage.Severity
    */

/**
    * Convert a FacesMessage.Severity to a StatusMessage.Severity
    */

/**
    * Calculate the JSF client ID from the provided widget ID
    */

/**
    * Get all faces messages that have already been added
    * to the context.
    * 
    */

/**
    * Get all faces global messages that have already been added
    * to the context.
    * 
    */

/**
    * Get all faces messages that have already been added
    * to the control.
    * 
    */

/**
    * Utility method to create a FacesMessage from a Severity, messageTemplate 
    * and params.
    * 
    * This method interpolates the parameters provided
    */

/**
    * Utility method to create a FacesMessage from a Severity, key, 
    * defaultMessageTemplate and params.
    * 
    * This method interpolates the parameters provided
    */

/**
    * Add a FacesMessage that will be used
    * the next time a page is rendered.
    * 
    * Deprecated, use a method in {@link StatusMessages} instead
    */

/**
    * Create a new status message, with the messageTemplate is as the message.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    * Deprecated, use {@link #add(org.jboss.seam.international.StatusMessage.Severity, String, Object...)} 
    * instead
    */

/**
    * Create a new status message, with the messageTemplate is as the message.
    *
    * A severity of INFO will be used, and you can specify paramters to be
    * interpolated
    * 
    * Deprecated, use {@link #addToControl(String, org.jboss.seam.international.StatusMessage.Severity, String, Object...)}
    * instead
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    * Deprecated, use {@link #addFromResourceBundle(org.jboss.seam.international.StatusMessage.Severity, String, Object...)}
    * instead
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    * Deprecated, use {@link #addFromResourceBundleOrDefault(javax.faces.application.FacesMessage.Severity, String, String, Object...)}
    * instead
    */

/**
    * Create a new status message, looking up the message in the resource bundle
    * using the provided key.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    * Deprecated, use {@link #addToControlFromResourceBundle(String, org.jboss.seam.international.StatusMessage.Severity, String, Object...)}
    * instead
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    * Deprecated, use {@link #addToControlFromResourceBundleOrDefault(String, org.jboss.seam.international.StatusMessage.Severity, String, String, Object...)}
    * instead
    */

