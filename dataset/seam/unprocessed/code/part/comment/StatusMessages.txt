/**
 * Abstract base class for providing status messages. View layers should provide
 * a concrete implementation.
 * 
 *  *
 */

/**
    * Clear all status messages
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * You can also specify the severity, and parameters to be interpolated
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used. 
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Create a new status message, with the messageTemplate is as the message.
    *
    * A severity of INFO will be used, and you can specify paramters to be
    * interpolated
    */

/**
    * Create a new status message, with the messageTemplate is as the message.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Create a new status message, with the messageTemplate is as the message.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * A severity of INFO will be used, and you can specify parameters to be 
    * interpolated
    * 
    */

/**
    * Create a new status message, with the messageTemplate is as the message.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * A severity of INFO will be used, and you can specify parameters to be 
    * interpolated
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * A severity of INFO will be used, and you can specify parameters to be 
    * interpolated
    * 
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Create a new status message, looking up the message in the resource bundle
    * using the provided key.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * A severity of INFO will be used, and you can specify parameters to be 
    * interpolated
    * 
    */

/**
    * Create a new status message, looking up the message in the resource bundle
    * using the provided key.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * A severity of INFO will be used, and you can specify parameters to be 
    * interpolated
    * 
    */

/**
    * Add a status message, looking up the message in the resource bundle
    * using the provided key. If the message is found, it is used, otherwise, 
    * the defaultMessageTemplate will be used.
    * 
    * The message will be added to the widget specified by the ID. The algorithm
    * used determine which widget the id refers to is determined by the view 
    * layer implementation in use.
    * 
    * You can also specify the severity, and parameters to be interpolated
    * 
    */

/**
    * Add an array of InvalidValues from Hibernate Validator. Each message will
    * be added with a severity of WARN.
    */

/**
    * Add an array of InvalidValues from Hibernate Validator. Each message will
    * be added with a severity of WARN.
    * 
    * The name of the property that was validated will be used as the widget ID
    */

/**
    * Add an InvalidValue from Hibernate Validator. The message will
    * be added with a severity of WARN.
    */

/**
    * Add an InvalidValue from Hibernate Validator. The message will
    * be added with a severity of WARN.
    * 
    * The name of the property that was validated will be used as the widget ID
    */

/**
    * Add an InvalidValue from Hibernate Validator. The message will
    * be added with a severity of WARN.
    * 
    * You can also specify the id of the widget to add the message to
    */

