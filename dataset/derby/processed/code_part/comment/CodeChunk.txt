class repres:nsubj
chunk repres:obj
code chunk:nmod
code attribut repres:obl
code attribut repres:nsubj
code repres:obj
method code:nmod
catch block:compound
catch block:compound
code chunk:compound
catch block:nsubj
put block:compound
generat code:amod
method code:nmod
elimin method:acl
jump generat:obj
catch generat:obl
refer block:acl
start point:case
byte stream:compound
code stream:compound
stream point:nmod
stream array:compound
array stream:nmod
common action:amod
action repres:obj
push action:nmod
byte word:appos
instruct byte:nmod
common action:amod
action repres:obj
push action:nmod
byte word:appos
instruct byte:nmod
constant support:nsubj
repres valu:acl
number repres:obj
word number:nmod
pop word:acl
push word:acl
push pop:conj
variabl pop:advcl
inform piec:nmod
byte array:compound
element number:nsubj
array element:nmod
stack word:compound
word number:nmod
doubl long:amod
long count:compound
count word:dep
push word:acl
opcod push:obl
opcod pop:nsubj
pop negat:advcl
valu pop:obj
element number:nsubj
array element:nmod
byte number:nmod
instruct stream:compound
stream byte:nmod
opcod instruct:nmod
includ opocod:case
opocod number:obl
limit hit:nsubj
class file:compound
file format:compound
format limit:nmod
instruct add:obj
opcod larg:nsubj
byte larg:dep
instruct add:obj
bit operand:compound
instruct add:obj
bit operand:compound
instruct add:obj
bit operand:compound
narrow access:amod
wide form:amod
form narrow:conj
form access:amod
cpe form:nmod
generat instruct:acl
narrow instruct:amod
wide form:amod
form instruct:nsubj
wrap instruct:acl
instruct ad:obj
operand ad:obl
current counter:amod
program counter:compound
complet length:amod
instruct length:compound
length return:obj
pass opcod:amod
opcod return:obl
space includ:obj
opcod includ:obl
operand includ:obl
operand opcod:conj
initi chunk:amod
code chunk:compound
byte written:nsubj
nest return:amod
code chunk return:compound
return correspond:obl
insert code space return:nmod
delta correspond:nsubj
generat class:acl
code generat:obj
limit hit:nsubj
code generat:compound
generat hit:obl
code chunk return:obj
limit code chunk:acl
visibl limit:obj
code chunk limit:obl
instruct insert:obj
exist stream:amod
stream insert:obl
length field:compound
field fix:obj
reflect fix:advcl
store reflect:ccomp
limit check:nsubj
section check:ccomp
jvm spec:compound
spec section:nmod
code attribut:compound
java machin:compound
virtual machin:amod
machin limit:nmod
entri wrap:iobj
stuff wrap:iobj
stuff entri:conj
class wrap:obl
hold wrap:advcl
tabl instruct:conj
opcod return:obj
unsign valu:amod
short valu:amod
unsign valu:amod
bit valu:compound
insert room:compound
byte count byte:amod
byte room:dep
instruct byte:dep
prepar room:dep
prepar byte:conj
replac prepar:xcomp
instruct replac:obj
instruct modifi:nsubj
modifi alloc:ccomp
call modifi:obl
space alloc:nsubj
insert space:amod
space fill:nsubj
nop instruct:compound
instruct fill:obl
return posit:nsubj
code chunk return:dep
instruct length:dep
upto length:dep
byte code length:compound
length write:iobj
exist instruct:amod
instruct length:dep
byte posit:obl
chunk left:nsubj
posit left:dep
code stream:compound
readi left:xcomp
accept readi:xcomp
code accept:obj
addit byte increas:obl
caller respons:nmod
patch caller:nmod
branch patch:nmod
goto patch:nmod
goto branch:conj
block start:nsubj
byte code:compound
code block:nmod
start return:advcl
program counter:compound
counter start:obl
code length byte:compound
maximum valu:amod
stack valu:compound
valu return:obj
assum return:advcl
initi depth:amod
stack depth:compound
depth assum:obj
number return:obj
stack word:compound
word number:nmod
push word:dep
posit push:dep
pop word:dep
pop push:conj
negat pop:dep
instruct pop:obl
type descriptor:compound
virtual format:amod
machin format:compound
type format:nmod
defin type:acl
constant index:amod
pool index:compound
index defin:obl
instruct index:nmod
word count:compound
type descriptor:compound
format descriptor:nmod
virual machin:amod
machin format:nmod
method return:obl
word count:compound
count return:obj
return type:compound
type return:obl
word number:nmod
push word:dep
posit push:dep
pop word:dep
pop push:conj
negat pop:dep
instruct pop:obl
instruct put:nsubj
field defin:nsubj
method call:compound
call field:conj
call defin:nsubj
size defin:nsubj
word size:nmod
defin put:acl
field defin:obl
method defin:obl
method field:conj
access defin:xcomp
calcul push:csubj
number calcul:obj
stack word:compound
word number:nmod
argument word:nmod
method descriptor:compound
descriptor push:obl
limit find:obj
condit block:amod
block limit:nmod
start block:acl
instruct start:obl
opcod instruct:nmod
element array:compound
integ array:compound
array return:dep
program counter:compound
counter array:nmod
length array:nmod
length counter:conj
program counter:compound
opcod counter:nmod
pass opcod:acl
program counter:compound
block length:compound
length program:compound
block length:nmod
program counter:compound
counter start:nmod
block counter:nmod
block exist:nsubj
block exist:nsubj
program counter:compound
counter point:compound
condit handl:obj
written condit:acl
condit class:amod
class written:obl
opcod start:nsubj
start null:dep
condit array:amod
array start:nmod
valu array:nmod
method start:obj
split start:dep
portion split:obj
current code:amod
code portion:nmod
start split:dep
includ split:dep
includ start:conj
code length byte:compound
byte includ:obj
code byte:nmod
method return:obj
obtain method:acl
pass type:amod
return pass:obl
type obtain:obl
paramet obtain:obl
paramet type:conj
code block:compound
move block:acl
code paramet:compound
paramet section:nmod
instanc method:compound
complet implement:amod
byte implement:compound
code implement:compound
local variabl:amod
block split:dep
code block:nmod
method code:nmod
call split:dep
call block:conj
call method:nmod
code push:nsubj
program push:obl
split start:nsubj
start counter:ccomp
split length length:compound
length start:obl
code split:compound
split length:nmod
block remov:obj
code block:nmod
method remov:obl
push method:acl
call remov:conj
call method:nmod
code push:nsubj
program push:obl
split start:nsubj
start counter:ccomp
split length length:compound
length start:obl
code split:compound
split length:nmod
opcod instruct:nsubj
return instruct:compound
opcod instruct:nsubj
check opcod:acl
true check:xcomp
return instruct:compound
fals instruct:acl
minimum length:amod
split length:compound
number exceed:nsubj
instruct number:nmod
call instruct:acl
length exceed:obj
point split:compound
number base:nsubj
byte number:nmod
code stream:compound
stream byte:nmod
call byte:acl
number base:obl
method arg:compound
arg number:nmod
word maximum:nmod
argument word:nmod
section spec:compound
jvm spec:compound
spec argument:appos
worst case:amod
word argument:appos
paramet argument:dep
aload iload:compound
iload method:obl
number lead:obl
instruct number:nmod
singl instruct:amod
byte instruct:compound
remain paramet:amod
byte instruct:compound
invok instruct:compound
