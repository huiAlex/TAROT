class implement:nsubj
implement order:dep
memori implement:obj
set order:dep
base algorithm:case
balanc algorithm:amod
binari algorithm:amod
tree algorithm:compound
algorithm set:advcl
knuth algorithm:nmod
node intermix:nsubj
maintain node:acl
insert maintain:advcl
delet node:acl
delet maintain:conj
algorithm insert:nsubj
delet insert:ccomp
element delet:obj
time delet:obl
insert return:obl
row insert:nsubj
incid insert:obl
insert return:obl
row duplic:nsubj
insert row:acl
duplic insert:acl
set aggreg:nsubj
return full:nsubj
insert return:nmod
set insert:obl
sort set:nsubj
node alloc:obj
special head:amod
head node:compound
tree node:nmod
tree root:nmod
current height:amod
tree height:nmod
side effect:compound
effect set:obl
delet left effect:nmod
key set:obl
node key:nmod
delet node:acl
tree delet:obl
field valid:nsubj
call valid:obl
delet left call:nmod
side effect:compound
effect set:obl
delet left effect:nmod
rotat effect:nmod
rotat delet left:conj
subtre decreas:nsubj
work subtre:acl
decreas set:advcl
height decreas:obl
field valid:nsubj
call valid:obl
delet left call:nmod
rotat call:nmod
rotat delet left:conj
set aux method:compound
method set:obl
valu stuf:nsubj
aux field:compound
field stuf:obl
node field:nmod
alloc node:acl
aux method:compound
method read:obl
valu read:nsubj
node read:obl
dealloc node:acl
tree dealloc:obl
alloc node:acl
tree alloc:obl
aux field:amod
set field:acl
argument set:obl
aux valu:compound
valu retriev:obj
node retriev:obl
dealloc node:acl
tree dealloc:obl
caller call:nsubj
caller check:nsubj
init call:obj
check call:conj
return code:compound
code check:obj
fals return:dep
alloc initi:nsubj
initi fals:ccomp
percent grow:obl
number return:obj
element number:nmod
node alloc:compound
alloc capac:nmod
head node:nmod
tree insert:obl
return true:nsubj
key insert:nsubj
insert true:dep
fals true:dep
tree full:nsubj
full fals:dep
duplic key:amod
key ignor:obj
lowest key:amod
key return:obj
delet return:conj
tree delet:obl
preserv delet:advcl
balanc preserv:obj
tree balanc:nmod
node delet:obj
lowest key:amod
key delet:obl
subtre key:nmod
defin subtre:acl
node defin:obl
maintain defin:xcomp
balanc maintain:obj
subtre maintain:obl
node return:dep
root return:acl
subtre root:nmod
method set:nsubj
subtre decreas:nsubj
node subtre:nmod
decreas set:advcl
height decreas:obl
key save:obj
delet node:amod
node key:acl
delet key node:nmod
singl rotat:amod
doubl singl:conj
doubl rotat:amod
rotat perform:obj
assum balanc:acl
subtre higher:nsubj
node subtre:nmod
higher assum:ccomp
left subtre:amod
subtre higher:obl
node return:dep
root return:acl
subtre root:nmod
depict case:acl
diagram depict:obl
knuth diagram:obl
reflect case:conj
diagram reflect:obj
delet encount:obl
singl rotat:amod
rotat encount:nsubj
case encount:obj
beta gamma:conj
gamma subtre:compound
subtre height:nsubj
height encount:advcl
mirror imag:compound
imag case:compound
case work:parataxis
encount case:acl
delet encount:advcl
leftmost node:amod
node delet:obj
tree node:nmod
