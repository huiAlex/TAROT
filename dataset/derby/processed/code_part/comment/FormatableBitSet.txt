format bit set implement:nsubj
pack array:amod
array implement:obl
byte array:nmod
class implement:nsubj
format implement:obj
format stream:amod
stream write:obl
field add:obj
class add:obl
read write:ccomp
write extern read:obl
read extern write:dep
inbetween releas:compound
releas add:nsubj
add bump:advcl
field add:obj
class add:obl
version number:compound
number bump:obj
emit number:acl
type format method:compound
method emit:obl
bit store:nsubj
array store:obl
byte array:nmod
bit number:nsubj
number track:nsubj
byte number:nmod
part track:obl
byte array:compound
array part:nmod
number deriv:nsubj
bit number:nmod
number deriv:obl
byte number:nmod
number byte:conj
bit number:nmod
unus byte:amod
lowest bit:amod
bit byte:nmod
unus bit:acl
length bit:compound
bit store:nsubj
length array:compound
byte array:compound
bit store:obl
mark bit:acl
unus mark:advcl
nilad constructor:amod
bit construct:obl
initi number:amod
number bit:obl
bit number:nmod
bit construct:dep
array bit:nmod
byte array:nmod
byte array:nmod
constructor copi:obj
origin constructor:amod
method return:nsubj
true return:xcomp
condit hold:nsubj
hold return:advcl
number fit:nsubj
bit number:nmod
bitset bit:nmod
alloc array:amod
byte array:compound
array fit:obl
length bit consist:nsubj
bit byte length bit:conj
bit byte consist:nsubj
unus bit:amod
bit unset:nsubj
byte array:compound
array bit:nmod
invari method:amod
class invari:obl
method return:nsubj
return repres:ccomp
true return:xcomp
method public:nsubj
method intend:nsubj
intend public:conj
test intend:obl
assert public:conj
assert intend:conj
invari fals:dep
hold invari:ccomp
fals true:dep
bit valu:compound
valu byte:nmod
length valu:dep
valu byte:nmod
length chang:nsubj
bit length:nmod
valu note:compound
note bit:nmod
long chang:obl
gig restrict:dep
long chang:obl
read write extern:compound
write extern chang:obj
write write extern:acl
length write:obj
bit length:nmod
alia bit:dep
length alia:nmod
bit length:nmod
valu bit:nmod
byte array:compound
array valu:nmod
byte array:compound
array valu:nmod
widen grow:parataxis
format bit set grow:obj
negat valu:amod
extra bit:amod
byte bit:nmod
bit number:nmod
bit ad:nsubj
bit append:nsubj
append ad:conj
bit array:compound
shrink format bit set:dep
narrow shrink:dep
bit format bit set:nmod
current size:amod
bitset size:compound
size larger:obl
negat larger:conj
bit number:nmod
caller bit:dep
bit remov:nsubj
bit array:compound
bit equival:compound
equal short:amod
short circuit:amod
reli compar:csubj
length bit:compound
bit consid:nsubj
consid note:ccomp
equal consid:xcomp
compar bit:acl
true fals:amod
fals compar:obl
bit comparison:compound
similar bit:amod
unequ length:amod
length bit:nmod
bit compar:nsubj
hash code:compound
code produc:obj
put produc:advcl
valu byte:compound
byte put:obj
int byte:nmod
exclus int:appos
ing put:advcl
hash code:compound
set posit:compound
posit bit:dep
bit check:nsubj
check bit:parataxis
set alia:nmod
bit posit:dep
check posit:acl
bit set:dep
set posit:amod
bit posit:dep
set bit:acl
clear posit:amod
posit bit:dep
bit clear:nsubj
clear bit:parataxis
bit clear:obj
format bit set clear:obl
input number:compound
number store:obj
bit number:nmod
number bit:dep
byte number:nmod
bit byte:nsubj
byte figur:dep
total number:amod
number byte:nmod
bit number:nmod
number bit:dep
bit number:nmod
string format:obj
bit set format:compound
set format:dep
format bit:dep
bit valu:amod
bit fit:nsubj
fit calcul:ccomp
number fit:obl
byte number:nmod
bit object:compound
object extern:nsubj
extern fit:advcl
implement valid:nmod
bit implement:nmod
util method:compound
treat method:acl
byte argument:compound
argument treat:obj
bit bitset:compound
bitset treat:obl
find method:acl
find treat:conj
set bit:compound
bit find:obj
byte find:obl
set sume:ccomp
check byte:acl
set bit:amod
bit byte:nmod
base index:amod
index byte:dep
set bit:compound
bit index:nmod
argument byte:compound
byte bit:nmod
bit set:nsubj
set return:advcl
base index:amod
bit index:compound
index return:obj
bit index:nmod
set bit:acl
bit set:nsubj
bit set bit:appos
entir array:amod
bit array:compound
set bit:amod
bit return:obj
base index:amod
bit index:nmod
set bit:acl
bit set:nsubj
set bit return:obl
set bit:compound
bit return:obj
number bigger:nsubj
bigger bit:acl
bit bigger:obl
bit set:nsubj
set return:advcl
bit set:obl
bit set bit:appos
entir array:amod
bit array:compound
set bit:amod
bit return:obj
greater bit:acl
bit number:compound
number greater:obl
valu suppli:obj
call equival:nsubj
bit number:compound
bit number:nmod
set bit:acl
bit set:nsubj
format bit set bitwis:conj
format bit set bitwis:obl
result store:nsubj
bitset store:obl
operand unaffect:nsubj
null operand:amod
operand treat:nsubj
empti bitset:amod
bitset treat:obl
noop bitset:dep
bitset expand:nsubj
smaller bitset:acl
operand smaller:obl
size expand:obl
bit operand:amod
bitset operand:compound
byte copi:obj
format bit set copi:obl
bit set:compound
argument set:nmod
bit set:compound
set sume:ccomp
format bit set bitwis:conj
format bit set bitwis:obl
result store:nsubj
bitset store:obl
operand unaffect:nsubj
null operand:amod
operand treat:nsubj
empti bitset:amod
bitset treat:obl
clear treat:parataxis
bitset clear:obj
bitset expand:nsubj
smaller bitset:acl
operand smaller:obl
size expand:obl
bit operand:amod
bitset operand:compound
bitwis xor:compound
format bit set xor:dep
result store:nsubj
bitset store:obl
operand unaffect:nsubj
null operand:amod
operand treat:nsubj
empti bitset:amod
bitset treat:obl
noop bitset:dep
bitset expand:nsubj
smaller bitset:acl
operand smaller:obl
size expand:obl
bit operand:amod
bitset operand:compound
number count:nmod
bit number:nmod
set bit:acl
bit number:nmod
set bit:acl
int byte:compound
length byte:compound
bit length:nmod
byte format:dep
note creat:nsubj
handl note:acl
length bit:compound
bit handl:dep
length array:compound
array creat:obj
bit creat:obl
length array:compound
special code:amod
method warn:dep
chang method:acl
chang method:acl
sql bit chang:obj
sql bit call:nsubj
call chang:advcl
read write object:compound
write object call:obj
case store:obl
correspond format:acl
class correspond:obl
class format:obl
