generic class:amod
implement class:acl
basic function:amod
function implement:obj
open conglomer:amod
conglomer oper:obl
class assum:nsubj
access method:compound
access method:compound
method page:nsubj
base page:acl
raw store:amod
store maintain:obl
class field:obl
group paramet:nsubj
field group:nmod
basic paramet:amod
input paramet:compound
code call:obj
oper sort:nmod
open conglomer:amod
conglomer requir:obj
open cost control paramet:dep
valu save:obj
input save:advcl
conveni mode:nsubj
boolean conveni:amod
scratch space:compound
export row:compound
row templat:appos
class constructor:nmod
privat method:amod
class method:nmod
abstract method:amod
class method:nmod
empti row:amod
row return:obj
locat object:compound
object return:xcomp
correct type:amod
type object:nmod
empti rowloc:amod
polici standard:dep
public method:amod
implement method:dep
standard store:amod
store lock:compound
row lock:compound
lock interfac:nsubj
interfac implement:ccomp
latch page row posit:dep
row posit lock posit read:compound
latch page reposit scan lock posit read:compound
row posit lock posit read:compound
lock posit read interfac:iobj
row posit lock posit read:dep
move row disappear row posit:appos
lock posit write lock posit read:dep
row posit wait:dep
insert row posit:appos
wait lock posit read:dep
unlock posit read lock posit read:dep
row posit unlock posit read:appos
page latch:obj
current row posit:amod
updat implement:dep
row posit point:nsubj
point updat:acl
slot point:obl
current row posit:amod
slot valu:compound
valu valid:nsubj
latch held:nsubj
held valid:advcl
row point:nsubj
point latch:advcl
pos point:obl
exist pos:acl
includ case:case
case exist:obl
exist case:acl
page latch:nsubj
set latch:conj
null set:obl
row posit:nmod
page row:nmod
latch posit:acl
true latch:obj
page latch:nsubj
fals posit:conj
standard polici:compound
standard polici:compound
polici fals:dep
row lock:obj
posit lock:obl
write posit:nmod
page assum:nsubj
point page:acl
row posit point:obl
latch assum:xcomp
method call:nsubj
call latch:advcl
lock obtain:nsubj
obtain latch:advcl
wait obtain:advcl
releas latch:ccomp
lock acquir:nsubj
acquir releas:advcl
latch releas:nsubj
releas latch:advcl
wait releas:advcl
lock wait:obl
row exist:nsubj
exist releas:advcl
exist wait:conj
lock obtain:nsubj
obtain exist:advcl
releas latch:ccomp
method return:compound
return releas:obl
set latch:conj
null set:obl
record unlock:obj
previous request:amod
request unlock:obl
lock unlock:advcl
record unlock:obj
previous call:amod
call unlock:obl
lock record read unlock:obl
record lock:obj
import expect:parataxis
singl row posit:amod
scan track:obj
call track:advcl
unlock call:obj
move call:advcl
posit move:obj
record move:obl
note assum:ccomp
routin assum:nsubj
assum note:ccomp
row lock:nsubj
lock assum:ccomp
updat lock:obj
open conglomer updat:nsubj
updat lock:advcl
record lock:nsubj
lock assum:ccomp
read lock:obl
polici standard:dep
public method:amod
implement method:acl
conglom properti queryabl interfac:compound
interfac implement:obj
public accessor:amod
class accessor:nmod
public method:amod
implement method:acl
conglomer control implement:xcomp
interfac conglomer control:dep
consist check:obj
conglomer consist:nmod
consist check:dep
data consist:nmod
conglomer data:nmod
consist check:obj
extern consist:amod
conglomer check:obl
base check:obj
tabl row:compound
row point:nsubj
point check:parataxis
secondari index:amod
index point:obl
exist point:dep
default implement:compound
implement check:nmod
conglomer consist:compound
specif consist:amod
check consist:acl
polici standard:dep
open tabl:amod
btree tabl:compound
tabl lock:nsubj
public method:amod
class method:nmod
obtain open:parataxis
lock obtain:obj
polici standard:dep
obtain open:parataxis
lock obtain:obj
open reopen:advcl
polici standard:dep
close handl:xcomp
polici standard:dep
