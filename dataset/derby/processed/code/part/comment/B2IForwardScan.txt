btree implement:compound
secondari index:amod
index implement:compound
scan manag implement:nmod
delet read:conj
entri read:obl
btree index:compound
secondari index:amod
index entri:nmod
set support:ccomp
iter support:ccomp
iter set:conj
iter set:conj
set iter:obl
row set:nmod
provid iter:advcl
start key:compound
key provid:obj
stop provid:parataxis
key stop:xcomp
set skip:nsubj
qualifi set:nmod
skip iter:advcl
unwant row:amod
row skip:obj
derbi support:nsubj
scan support:obj
individu column:amod
descend order:amod
row delet:obj
conglomer delet:obl
note implement:ccomp
updat support:nsubj
support note:ccomp
delet implement:obl
note inherit:csubj
work note:obj
class work:nmod
generic implement:amod
btree implement:compound
implement inherit:obl
class initi:nsubj
top level:amod
level object:compound
object initi:obj
deal initi:obj
deal object:conj
lock initi:advcl
inform lock:obj
specif lock:xcomp
secondari implement:amod
index implement:compound
implement specif:obl
btree implement:nmod
scan close:obj
scan close:obj
abort commit:conj
close open:advcl
obtain open:parataxis
lock obtain:obj
open reopen:advcl
polici standard:dep
scan initi:obj
close reflect:advcl
btree init:amod
init open:nsubj
store open:obj
actual search:amod
search delay:nsubj
posit search:nmod
call delay:obl
polici standard:dep
