code chunk opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod expr byte opcod expr short opcod expr int opcod expr int opcod expr int opcod expr int opcod expr char opcod expr refer opcod expr byte opcod expr short opcod expr int opcod expr int opcod expr int opcod expr int opcod expr char opcod expr refer opcod expr byte opcod expr short opcod expr int opcod expr long opcod expr float opcod expr doubl opcod expr char opcod expr refer opcod expr int opcod expr int opcod expr int opcod expr long opcod expr float opcod expr doubl opcod expr int opcod expr refer opcod expr int opcod expr int opcod expr int opcod expr long opcod expr float opcod expr doubl opcod expr int opcod expr refer opcod expr int opcod expr int opcod expr int opcod expr long opcod expr float opcod expr doubl opcod expr int opcod expr refer opcod expr byte opcod expr short opcod expr int opcod expr int opcod expr int opcod expr int opcod expr char opcod expr refer opcod expr byte opcod expr short opcod expr int opcod expr long opcod expr float opcod expr doubl opcod expr char opcod expr refer push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push opcod opcod opcod opcod opcod opcod opcod opcod opcod opcod delta cout limit hit ioe add instr opcod add instr opcod operand add instr opcod operand add instr opcod operand add instr opcod cpe num add instr wide opcod var num add instr opcod operand operand operand instruct length opcod code chunk code chunk main byte count fix length max stack max local code length complet method max stack max local opcod insert code space addit byte find max stack code length stack word delta opcod type descriptor descriptor word count descriptor variabl stack delta opcod paramet word count method descriptor find condit opcod split stack split optim min length start method return type split block length paramet code length split code method method split split length remov push code method split split length split express optim min length max stack return opcod split min length assum limit class file format hit add instruct operand opcod byte larg add instruct bit operand add instruct bit operand add instruct bit operand instruct narrow wide form access generat accord assum narrow instruct wide form possibl instruct instruct wrap wide larg variabl doe ad instruct operand opcod current program counter return complet instruct length pass opcod includ space opcod operand return code chunk limit visibl code chunk caller insert instruct exist stream param param byte count code byte fix length field reflect store limit check section spec code attribut limit java virtual machin wrap entri stuff class hold instruct tabl return opcod unsign short valu opcod program counter unsign bit valu opcod program counter insert room byte count byte instruct prepar replac instruct instruct modifi call space alloc newli insert space fill instruct return code chunk posit avail write instruct upto byte code length exist instruct byte chunk left correct posit code stream readi accept code increas addit byte respons caller patch ani branch goto param param addit byte block byte code start program counter code length byte return maximum stack valu assum initi stack depth return number stack word push posit pop negat instruct type descriptor virtual machin format type defin constant pool index instruct word count type descriptor format virual machin method return word count return type number word push posit pop negat instruct instruct put field method call size word defin field method access calcul number stack word argument push method descriptor find limit condit block start instruct opcod program counter return element integ array program counter length code program counter opcod pass program counter start block length block program counter els block els block exist length els block els block exist program counter common point code handl condit written condit class return null opcod start condit otherwis array valu attempt split current method push chunk code method start point split split correspond stack depth repons caller ensur split onli exist chunk code start split stack depth termin method tri split code section greater optim min length split earlier block exist method aim split method mani independ statement split possibl method perform split creat void method move code method setup method call method befor continu method max stack current correct set method creat param method chunk param class definit param optim min length minimum length requir split start method split portion current code start start includ code length byte code return method obtain method method pass return type paramet code block move paramet doe section code paramet ani load instanc method paramet complet byte code implement doe local variabl split block code method method call return method call method param method param class param method method code push param split program counter split start param split length length code split remov block code method push method call method return method call method param method param class param method method code push param split program counter split start param split length length code split split express larg method method method call express form expr method arg instanc method call method arg static method call special case instanc method call handl incarn split express categori method arg getter method arg call choosen easier case map code generat statement futur coder expand method cover case method split express method replac origin code call submethod method arg paramet getter method arg paramet assumpt cours call method smaller code replac byte code call exampl argument method code arg arg arg method arg arg arg arg getter metod arg code bytecod argument arbitari long consist express typic derbi code generat queri deepli nest method call argument requr paramet pass method case replac bytecod code code paramet handl method split stack becaus stack machin origin byte code sequenc stack start sequenc method call void method method return singl word method return doubl word java long doubl code handl word refer typic case generat code code becaus general byte code argument push pop valu drop stack valu start byte code sequenc exampl stack befor arg objectref method call byte code arg depend arg singl doubl word argument dure execut byte code stack mani argument push pop drop code arg independ stack previous valu extend arguement method call push objectref method call complet sequenc break case simpl method call method byte code code push swap invok code case byte code arg swap reli earlier stack valu identifi block code walk byte code maintain histori program counter indic start independ sequenc stack word depend instruct push depend instruct follow top word depend previous word depend equal depend previous word inform earliest indep array process instruct stream instruct instanc method return singl doubl word depend return valu depend word stack objectref call complet sequenc objectref depend instruct sequenc split method block split follow similar logic split stack increment develop current walk method maintain earliest indep array identifi potenti block splt perform split requir call method comment submit code test local chang call method split general work larg code gen show problem fix befor code enabl real opcod return instruct param opcod opcod check return true return instruct fals otherwis minimum split length method number instruct call method exceed length method point split number byte code stream call generat method base number method arg method maximum word argument section spec worst case word paramet method argument paramet method lead number instruct paramet singl byte instruct remain paramet byte instruct invok instruct class repres chunk code code attribut typic code attribut repres code method tri catch block catch block code chunk catch block put generat code method elimin generat jump catch block refer 