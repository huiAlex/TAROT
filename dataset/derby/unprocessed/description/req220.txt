Since Derby is open source and (obviously) contains the code to read database files and is modular the potential exists that routines could utilize code on the classpath to read/modify database information directly, bypassing SQL level security.
Derby is a special case here as it is known that Derby code will be on the classpath and that it will have the correct permissions to read/write database files.
Existing routines from upgraded databases will fail at execute time when they try to resolve such classes.
