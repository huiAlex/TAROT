Add a mechanism for system functions to be easily added. Resolution of functions will check SYSFUN.&lt;name&gt; for a function call in SQL when the function is not qualified by a schema. If the current schema does not have a function matching the name, then an additional resolution is made using SYSFUN.&lt;name&gt;.
Add a table driven mechanism for simple single argument functions (could be expanded in the future).
Add these functions
/*
SYSFUN functions
* &#91;0&#93;  = FUNCTION name
* &#91;1&#93;  = RETURNS type
* &#91;2&#93;  = Java class
* &#91;3&#93;  = method name
* &#91;4&#93;  = parameter type (single parameter)
*
*/
private static final String SYSFUN_FUNCTIONS =
{
{ ACOS ,  DOUBLE ,  java.lang.Math ,  acos ,  DOUBLE }
,
{ ASIN ,  DOUBLE ,  java.lang.Math ,  asin ,  DOUBLE }
,
{ ATAN ,  DOUBLE ,  java.lang.Math ,  atan ,  DOUBLE }
,
{ COS ,  DOUBLE ,  java.lang.Math ,  cos ,  DOUBLE }
,
{ SIN ,  DOUBLE ,  java.lang.Math ,  sin ,  DOUBLE }
,
{ TAN ,  DOUBLE ,  java.lang.Math ,  tan ,  DOUBLE }
,
{ DEGREES ,  DOUBLE ,  java.lang.Math ,  toDegrees ,  DOUBLE }
,
{ RADIANS ,  DOUBLE ,  java.lang.Math ,  toRadians ,  DOUBLE }
,
{ LN ,  DOUBLE ,  java.lang.Math ,  log ,  DOUBLE }
,
{ EXP ,  DOUBLE ,  java.lang.Math ,  exp ,  DOUBLE }
,
{ CEIL ,  DOUBLE ,  java.lang.Math ,  ceil ,  DOUBLE }
,
{ CEILING ,  DOUBLE ,  java.lang.Math ,  ceil ,  DOUBLE }
,
{ FLOOR ,  DOUBLE ,  java.lang.Math ,  floor ,  DOUBLE }
,
};
