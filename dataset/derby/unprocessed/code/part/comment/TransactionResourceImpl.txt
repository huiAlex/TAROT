/**
	 * create a brand new connection for a brand new transaction
	 */

/**
	 * Called only in EmbedConnection construtor.
	 * The Local Connection sets up the database in its constructor and sets it
	 * here.
	 */

/**
	 * Return instance variables to EmbedConnection.  RESOLVE: given time, we
	 * should perhaps stop giving out reference to these things but instead use
	 * the transaction resource itself.
	 */

/**
	 * need to be public because it is in the XATransactionResource interface
	 */

/**
	 * local transaction demarcation - note that global or xa transaction
	 * cannot commit thru the connection, they can only commit thru the
	 * XAResource, which uses the xa_commit or xa_rollback interface as a 
	 * safeguard. 
	 */

/**
	 * An error happens in the constructor, pop the context.
	 */

/**
	 * Resolve: probably superfluous
	 */

/**
	 * clean up the error and wrap the real exception in some SQLException.
	 */

/**
     * Determine if the exception thrown is a login exception.
     * Needed for DERBY-5427 fix to prevent inappropriate thread dumps
     * and javacores. This exception is special because it is 
     * SESSION_SEVERITY and database.isActive() is true, but the 
     * session hasn't started yet,so it is not an actual crash and 
     * should not report extended diagnostics.
     * 
     * @param thrownException
     * @return true if this is a login failure exception
     */

/**
     * Wrap a Throwable in an SQLException.
     *
     * @param thrownException a Throwable
     * @return thrownException, if it is an
     * SQLException; otherwise, an SQLException which
     * wraps thrownException
     */

/**
     * clean up error and print it to derby.log if diagActive is true
     * @param e the error we want to clean up
     * @param diagActive
     *        true if extended diagnostics should be considered, 
     *        false not interested of extended diagnostic information
     * @return true if the context manager is shutdown, false otherwise.
     */

