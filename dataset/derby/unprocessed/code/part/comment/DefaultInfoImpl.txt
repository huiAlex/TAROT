/********************************************************
	**
	**	This class implements Formatable. That means that it
	**	can write itself to and from a formatted stream. If
	**	you add more fields to this class, make sure that you
	**	also write/read them with the writeExternal()/readExternal()
	**	methods.
	**
	**	If, inbetween releases, you add more fields to this class,
	**	then you should bump the version number emitted by the getTypeFormatId()
	**	method.
	**
	********************************************************/

/**
	 * Public niladic constructor. Needed for Formatable interface to work.
	 *
	 */

/**
	 * Constructor for use with numeric types
	 *
	 * @param defaultText	The text of the default.
	 */

/**
	 * Constructor for use with generated columns
     *
     * @param   defaultText Text of generation clause.
     * @param   referencedColumnNames   names of other columns in the base row which are mentioned in the generation clause.
     * @param   originalCurrentSchema   Schema in effect when the generate column was added to the table.
	 */

/**
	 * 	 */

/**
	 * 	 */

/**
	 * 	 */

/**
	 * Read this object from a stream of stored objects.
	 *
	 * @param in read this.
	 *
	 * @exception IOException					thrown on error
	 * @exception ClassNotFoundException		thrown on error
	 */

/**
	 * Write this object to a stream of stored objects.
	 *
	 * @param out write bytes here.
	 *
	 * @exception IOException		thrown on error
	 */

/**
	 * Get the formatID which corresponds to this class.
	 *
	 *	@return	the formatID of this class
	 */

/**
	 * Get the default value.
	 * (NOTE: This returns null if 
	 * the default is not a constant.)
	 *
	 * @return The default value.
	 */

/**
	 * Set the default value.
	 *
	 * @param defaultValue The default value.
	 */

/**
	 * 	 */

/**
	 * 	 */

/**
	 * This function returns stored value for flags and so on.
	 */

