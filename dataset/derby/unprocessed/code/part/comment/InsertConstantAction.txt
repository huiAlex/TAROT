/**
 *	This class  describes compiled constants that are passed into
 *	InsertResultSets.
 *
 */

/********************************************************
	**
	**	This class implements Formatable. But it is NOT used
 	**	across either major or minor releases.  It is only
	** 	written persistently in stored prepared statements, 
	**	not in the replication stage.  SO, IT IS OK TO CHANGE
	**	ITS read/writeExternal.
	**
	********************************************************/

/**
	 * An array of row location objects (0 based), one for each
	 * column in the table. If the column is an 
	 * autoincrement table then the array points to
	 * the row location of the column in SYSCOLUMNS.
	 * if not, then it contains null.
	 */

/** Position of autogenerated column */

/**
	 * Public niladic constructor. Needed for Formatable interface to work.
	 *
	 */

/**
	 * Write this object to a stream of stored objects.
	 *
	 * @param out write bytes here.
	 *
	 * @exception IOException		thrown on error
	 */

/** Get the 0-based position of the autogenerated column */

/**
	  *	Gets the name of the schema that the table is in
	  *
	  *	@return	schema name
	  */

/**
	  *	Gets the name of the table being inserted into
	  *
	  *	@return	name of table being inserted into
	  */

/**
	 * gets the name of the desired column in the taget table.
	 * 
	 * @param 	i	the column number
	 */

/**
	 * get the array of column names in the target table.
	 */

/**
	 * gets the increment value for a column.
	 *
	 * @param 	i 	the column number
	 */

/**
	 * Does the target table has autoincrement columns.
	 *
	 * @return 	True if the table has ai columns
	 */

/**
	 * gets the row location 
	 */

/**
	 * Get the formatID which corresponds to this class.
	 *
	 *	@return	the formatID of this class
	 */

