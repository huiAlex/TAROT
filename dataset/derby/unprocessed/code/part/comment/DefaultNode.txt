/**
 * DefaultNode represents a column/parameter default.
 */

/**
     * Constructor for a generated by default as identity column.
     *
     * @param cm            The context manager
     */

/**
     * Constructor for a column/parameter default.
	 *
     * @param defaultTree   Query tree for default
	 * @param defaultText	The text of the default.
     * @param cm            The context manager
	 */

/**
     * Constructor for insert/update
     * @param columnName The column name for which a default is to be applied
	 */

/**
	  * Get the text of the default.
	  */

/**
	 * Get the query tree for the default.
	 *
	 * @return The query tree for the default.
	 */

/**
	 * Convert this object to a String.  See comments in QueryTreeNode.java
	 * for how this should be done for tree printing.
	 *
	 * @return	This object as a String
	 */

/**
	 * Prints the sub-nodes of this object.  See QueryTreeNode.java for
	 * how tree printing is supposed to work.
	 *
	 * @param depth		The depth of this node in the tree
	 */

/**
	 * Bind this expression.  This means binding the sub-expressions,
	 * as well as figuring out what the return type is for this expression.
	 * In this case, there are no sub-expressions, and the return type
	 * is already known, so this is just a stub.
	 *
	 * @param fromList		The FROM list for the query this
	 *				expression is in, for binding columns.
	 * @param subqueryList		The subquery list being built as we find SubqueryNodes
     * @param aggregates        The aggregate list being built as we find AggregateNodes
	 *
	 * @return	The new top of the expression tree.
	 *
	 * @exception StandardException		Thrown on failure
	 */

/**
	  *	Parse a default and turn it into a query tree.
	  *
	  *	@param	defaultText			Text of Default.
	  * @param	lcc					LanguageConnectionContext
	  * @param	cc					CompilerContext
	  *
	  * @return	The parsed default as a query tree.
	  *
	  * @exception StandardException		Thrown on failure
	  */

/**
	 * @exception StandardException		Thrown on failure
	 */

/**
     * @inheritDoc
     */

