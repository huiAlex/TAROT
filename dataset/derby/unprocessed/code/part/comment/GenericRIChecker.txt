/**
 * Generic implementation of a Referential Integrity
 * checker.  Abstract.
 */

/**
     * Cached value (for efficiency) of the intermediate table of violations
     * we use in the presence of deferred FK constraints.
     */

/**
     * @param lcc       the language connection context
	 * @param tc		the xact controller
	 * @param fkinfo	the foreign key information 
	 *
	 * @exception StandardException		Thrown on failure
	 */

/**
	 * Check the validity of this row
	 *
     * @param a     The activation
     * @param row   The row to check
     * @param restrictCheckOnly
     *              {@code true} if the check is relevant only for RESTRICTED
     *              referential action.
     * @param deferredRowReq
     *              For referenced keys: The required number of duplicates that
     *              need to be present. Only used if {@code postCheck==false}.
	 *
	 * @exception StandardException on error
	 */

/**
	 * Are any of the fields null in the row passed
	 * in.  The only fields that are checked are those
	 * corresponding to the colArray in fkInfo.
     *
     * @param baseRow the row to check for null fields
     * @return {@code true} if any are null
	 */

/**
	 * Clean up all scan controllers
	 *
	 * @exception StandardException on error
	 */

/**
	 * Get the isolation level for the scan for
	 * the RI check.
	 *
	 * NOTE: The level will eventually be instantaneous
     * locking once the implementation changes.
	 *
	 * @return The isolation level for the scan for
	 * the RI check.
	 */

