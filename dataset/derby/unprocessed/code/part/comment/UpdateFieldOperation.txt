/**
	Represents the update of a particular field of a row on a page.

	
	@derby.formatId	LOGOP_UPDATE_FIELD
		the formatId is written by FormatIdOutputStream when this object is
		written out by writeObject
	@derby.purpose	update a field of a record on the page
	@derby.upgrade
	@derby.diskLayout
		LogicalPageOperation	the super class
		doMeSlot(CompressedInt) the slot of the record being updated
		fieldId(CompressedInt)	the recordId of the record being updated

		OptionalData	The after image of the column (length included),
						follow by the old image of the record (length
						included).  If this is logically undoable, then the
						before image of the entire row is logged
	@derby.endFormat
	
*/

/**
		Read this in
		@exception IOException error reading from log stream
		@exception ClassNotFoundException log stream corrupted
	*/

/**
		Return my format identifier.
	*/

/**
		Change the value of a field.

		@exception IOException Can be thrown by any of the methods of ObjectInput.
		@exception StandardException Standard Derby policy.

			*/

/**
		Restore field to its old value.

		@exception IOException Can be thrown by any of the methods of ObjectInput.
		@exception StandardException Standard Derby policy.

			*/

/**
		Restore the row stored in the optional data of the log record.

		@exception IOException error reading from log stream
		@exception StandardException Standard Derby error policy
	*/

/**
	 * restore the before image of the page
	 *
	 * @exception StandardException Standard Derby Error Policy
	 * @exception IOException problem reading the complete log record from the
	 * input stream
	 */

/**
	  Write the old column value and and new column value as optional data.
	  If logical undo, writes out the entire row's before image.

		@exception IOException Can be thrown by any of the methods of ObjectOutput.
		@exception StandardException Standard Derby policy.
	*/

/**
	  DEBUG: Print self.
	*/

