/**

**/

/**************************************************************************
     * Fields of the class
     **************************************************************************
     */

/** The scan that owns this position object. */

/**
     * The version number of the leaf page when this position was saved by
     * key. Only valid if {@link #current_positionKey} is non-null. This value
     * is used to decide whether repositioning should be performed by using
     * the key, or if {@link #current_rh} could be used directly.
     */

/** Cached template for saving this position by key. */

/**
     * Cached fetch descriptor that can be used to fetch the key columns that
     * are not already fetched by the scan. The fetch descriptor is used when
     * this position is about to be saved by its full key.
     */

/**************************************************************************
     * Constructors for This class:
     **************************************************************************
     */

/**************************************************************************
     * Private/Protected methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Public Methods of This class:
     **************************************************************************
     */

/**
     * Save this position by key and release the latch on the current leaf.
     *      *      */

/**
     * Get a template into which the position key can be copied. The value
     * is cached, so two calls to this method on the same object will return
     * the same object.
     *
     * @return an array into which the position key can be copied
     *      * template array
     */

/**
     * Get a fetch descriptor that can be used to fetch the missing columns
     * in a partial key. The fetch descriptor is only created on the first
     * call to this method. The returned descriptor will be cached, so
     * subsequent calls will return the same descriptor and the arguments
     * to this method should be the same between invokations.
     *
     * @param vcols an array which tells which columns the partial key contains
     * (valid columns have non-zero values in the array)
     * @param fullLength the length of the full key to create a fetch
     * descriptor for (may be greater than {@code vcols.length})
     * @return a fetch descriptor
     */

/**************************************************************************
     * Public Methods of XXXX class:
     **************************************************************************
     */

