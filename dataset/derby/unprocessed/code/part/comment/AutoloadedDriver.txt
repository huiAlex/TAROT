/**
   This is the dummy driver which is registered with the DriverManager and
   which is autoloaded by JDBC4. Loading this class will NOT automatically
   boot the Derby engine, but it will register this class as a valid
   Driver with the DriverManager.
   Instead, the engine boots lazily when you ask for a
   Connection. Alternatively, you can force the engine to boot as follows:

   	 
	 Class.forName("org.apache.derby.jdbc.EmbeddedDriver").newInstance();

	 // or

     new org.apache.derby.jdbc.EmbeddedDriver();

    
	
*/

/**
		Accept anything that starts with jdbc:derby:.
		@exception SQLException if a database-access error occurs.
    	*/

/**
		Connect to the URL if possible
		@exception SQLException illegal url or problem with connectiong
      */

/**
   * Returns an array of DriverPropertyInfo objects describing possible properties.
    @exception SQLException if a database-access error occurs.
       */

/**
     * Returns the driver's major version number. 
          */

/**
     * Returns the driver's minor version number.
          */

/**
   * Report whether the Driver is a genuine JDBC COMPLIANT (tm) driver.
        */

/**
	** Record which driver module actually booted.
	*  @param driver the driver register to DriverManager is not AutoloadedDriver
	**/

/**
	** Unregister the driver and the AutoloadedDriver if exists. 
	*  This happens when the engine is forcibly shut down.
	*  
	**/

/**
     * Load the most capable driver available.
     * But if the vm level doesn't support it, then we fall
     * back on a lower-level driver.
     * @return AutoloadedDriver 
     */

