/**
 * Generates stream headers for non-Clob string data types.
 * 
 * The stream header encodes the byte length of the stream. Since two bytes
 * are used for the header, the maximum encodable length is 65535 bytes. There
 * are three special cases, all handled by encoding zero into the header and
 * possibly appending an EOF-marker to the stream:
 *  Unknown length - with EOF marker
 *      Length longer than maximum encodable length - with EOF marker
 *      Length of zero - no EOF marker
 * 
 * The length is encoded like this:
 * 
 */

/** The Derby-specific end-of-stream marker. */

/** The maximum length that can be encoded by the header. */

/**
     * A byte count is expected.
     *
     * @return {@code false}.
     */

/** Write the EOF marker to a byte array and return the EOF marker's length */

/** Write the EOF marker to an Object stream  and return the EOF marker's length */

/**
     * Generates the header for the specified length and writes it into the
     * provided buffer, starting at the specified offset.
     *
     * @param buffer the buffer to write into
     * @param offset starting offset in the buffer
     * @param byteLength the length to encode in the header
     * @return The number of bytes written into the buffer.
     */

/**
     * Generates the header for the specified length.
     *
     * @param out the destination stream
     * @param byteLength the byte length to encode in the header
     * @return The number of bytes written to the destination stream.
     *      */

/**
     * Writes a Derby-specific end-of-stream marker to the buffer for a stream
     * of the specified byte length, if required.
     *
     * @param buffer the buffer to write into
     * @param offset starting offset in the buffer
     * @param byteLength the byte length of the stream
     * @return Number of bytes written (zero or more).
     */

/**
     * Writes a Derby-specific end-of-stream marker to the destination stream
     * for the specified byte length, if required.
     *
     * @param out the destination stream
     * @param byteLength the length of the stream
     * @return Number of bytes written (zero or more).
     */

/**
     * Returns the maximum header length.
     *
     * @return Maximum header length in bytes.
     */

