/**
  RunTimeStatistics implemenation.


*/

/**
	 * 
	 */

/**
	 * Get the total compile time for the associated query in milliseconds.
	 * Compile time can be divided into parse, bind, optimize and generate times.
	 * 
	 * @return long		The total compile time for the associated query in milliseconds.
	 */

/**
	 * Get the parse time for the associated query in milliseconds.
	 * 
	 * @return long		The parse time for the associated query in milliseconds.
	 */

/**
	 * Get the bind time for the associated query in milliseconds.
	 * 
	 * @return long		The bind time for the associated query in milliseconds.
	 */

/**
	 * Get the optimize time for the associated query in milliseconds.
	 * 
	 * @return long		The optimize time for the associated query in milliseconds.
	 */

/**
	 * Get the generate time for the associated query in milliseconds.
	 * 
	 * @return long		The generate time for the associated query in milliseconds.
	 */

/**
	 * Get the execute time for the associated query in milliseconds.
	 * 
	 * @return long		The execute time for the associated query in milliseconds.
	 */

/**
	 * Get the timestamp for the beginning of query compilation. 
	 *
	 * @return java.sql.Timestamp	The timestamp for the beginning of query compilation.
	 */

/**
	 * Get the timestamp for the end of query compilation. 
	 *
	 * @return java.sql.Timestamp	The timestamp for the end of query compilation.
	 */

/**
	 * Get the timestamp for the beginning of query execution. 
	 *
	 * @return java.sql.Timestamp	The timestamp for the beginning of query execution.
	 */

/**
	 * Get the timestamp for the end of query execution. 
	 *
	 * @return java.sql.Timestamp	The timestamp for the end of query execution.
	 */

/**
	 * Get the name of the associated query or statement.
	 * (This will be an internally generated name if the
	 * user did not assign a name.)
	 *
	 * @return java.lang.String	The name of the associated query or statement.
	 */

/**
	 * Get the name of the Stored Prepared Statement 
	 * for the statement.
	 *
	 * @return java.lang.String	The SPS name of the associated query or statement.
	 */

/**
	 * Get the text for the associated query or statement.
	 *
	 * @return java.lang.String	The text for the associated query or statement.
	 */

/**
	 * Get the estimated row count for the number of rows returned
	 * by the associated query or statement.
	 *
	 * @return	The estimated number of rows returned by the associated
	 * query or statement.
	 */

/**
	 * Get the execution plan for the associated query or statement as a String.
	 *
	 * @return java.lang.String	The execution plan for the associated query or statement.
	 */

/**
	 * Get the information on the nodes relating to table and index scans
	 * from the execution plan for the associated query or statement as a String.
	 *
	 * @return java.lang.String	The nodes relating to table and index scans
	 * from the execution plan for the associated query or statement.
	 */

/**
	 * Get the information on the nodes relating to table and index scans
	 * for table tableName from the execution plan for the associated query 
	 * or statement as a String.
	 *
	 * @param tableName table for which user seeks statistics.
	 *
	 * @return java.lang.String	The nodes relating to table and index scans
	 * from the execution plan for the associated query or statement for 
	 * tableName.
	 */

/**
	 * Get the objects to be displayed when this tree object is expanded.
	 * 
	 * The objects returned can be of any type, including addtional Inspectables.
   *
	 * @return java.util.Vector	A vector of objects.
	 */

/**
   * initiate a visit of an XPLAINVisitor from the top of the RS tree
   */

