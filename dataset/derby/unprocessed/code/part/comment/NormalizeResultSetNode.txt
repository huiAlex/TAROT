/**
 *
 * A NormalizeResultSetNode represents a normalization result set for any 
 * child result set that needs one.  See non-javadoc comments for 
 * a walk-through of a couple sample code paths.
 */

/**
	 * this indicates if the normalize is being performed for an Update
	 * statement or not. The row passed to update also has
	 * before values of the columns being updated-- we need not 
	 * normalize these values. 
	 */

/**
     *
	 *
	 * @exception StandardException		Thrown on error
     */

/**
	 * set the Information gathered from the parent table that is 
     * required to perform a referential action on dependent table.
	 */

/**
	 * Push the order by list down from InsertNode into its child result set so
	 * that the optimizer has all of the information that it needs to consider
	 * sort avoidance.
	 *
	 * @param orderByList	The order by list
	 */

/**
     * Push through the offset and fetch first parameters, if any, to the child
     * result set.
     *
     * @param offset    the OFFSET, if any
     * @param fetchFirst the OFFSET FIRST, if any
     * @param hasJDBClimitClause true if the clauses were added by (and have the semantics of) a JDBC limit clause
     */

