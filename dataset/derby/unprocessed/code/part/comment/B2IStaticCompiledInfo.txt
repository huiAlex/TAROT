/**

This class implements the static compiled information relevant to a btree
secondary index.  It is what is returned by 
B2I.getStaticCompiledOpenConglomInfo().

Currently the only interesting information stored is Conglomerate for this
index and the Conglomerate for the base table of this conglomerate.

**/

/**************************************************************************
     * Fields of the class 
     **************************************************************************
     */

/**
     * Conglomerate data structure for this index.
     **/

/**
     * Conglomerate data structure for this base table of this index.
     **/

/**************************************************************************
     * Constructors for This class:
     **************************************************************************
     */

/**
     * Empty arg constructor used by the monitor to create object to read into.
     **/

/**
     * Constructor used to build class from scratch.
     * 
     * @param b2i    the btree Conglomerate that we are compiling.
     **/

/**************************************************************************
     * Private/Protected methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Public Methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Public Methods of StaticCompiledOpenConglomInfo Interface:
     **************************************************************************
     */

/**
     * return the "Conglomerate".
     * 
     * For secondaryindex compiled info return the secondary index conglomerate.
     * 
     *
	 * @return the secondary index Conglomerate Object.
     **/

/**************************************************************************
     * Public Methods of Storable Interface (via StaticCompiledOpenConglomInfo):
     *     This class is responsible for re/storing its own state.
     **************************************************************************
     */

/**
	Return whether the value is null or not.
	The containerid being zero is what determines nullness;  subclasses
	are not expected to override this method.
		**/

/**
	Restore the in-memory representation to the null value.
	The containerid being zero is what determines nullness;  subclasses
	are not expected to override this method.

		**/

/**
     * Return my format identifier.
     *
     *      **/

/**
	Restore the in-memory representation from the stream.

	@exception ClassNotFoundException Thrown if the stored representation is
	serialized and a class named in the stream could not be found.

    @exception IOException thrown by readObject()

	
		*/

/**
	Store the stored representation of the column value in the stream.
	It might be easier to simply store the properties - which would certainly
	make upgrading easier.

    @exception IOException thrown by writeObject()

	*/

