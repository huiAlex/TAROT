/**
 * Tracks the most recently piggy-backed session attributes, and provides
 * methods to determine if they have been modified and need to be re-sent
 * to the client.
 */

/**
     * Get a reference (handle) to the PiggyBackedSessionData object. Null will
     * be returned either if the conn argument is not valid, or if the
     * createOnDemand argument is false and the existing argument is null.
     * @param existing the PBSD object from the previous piggybacking or null if
     * none has yet taken place
     * @param conn the current EngineConnection
     * @param createOnDemand if true; create the instance when needed
     * @return a reference to the PBSD object or null
     *      */

/**
     * Constructs a new instance with an associated EngineConnection.
     * A newly constructed instance is invalid. refresh() must be called before
     * the xModified() methods can be used.
     * @param conn the connection to obtain data from
     */

/**
     * Refresh with the latest session attribute values from
     * the connection. Any changes will be reflected in the corresponding
     * xModified() methods, until setUnmodified() is called.
     */

/**
     * Clear the modified status. Called after session attributes have
     * been sent to the client so that the xModified methods will
     * return false.
     */

/**
     * @return true if the isolation level was modified by the last call
     * to fetchLatest
     */

/**
     * @return true if the current schema name was modified by the last
     * call to fetchLatest
     */

/**
     * @return true if any piggy-backed session attribute was modified by
     * the last call to fetchLatest
     */

/**
     * @return the saved jdbc isolation level
     */

/**
     * @return the saved schema name
     */

