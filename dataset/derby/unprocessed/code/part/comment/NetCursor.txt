/**
     * Queue to hold EXTDTA data that hasn't been correlated to its
     * column number.
     */

/** Flag indicating whether the result set on the server is
     * implicitly closed when end-of-data is received. */

/**
     * Scan the data buffer to see if end of data (SQL state 02000)
     * has been received. This method should only be called when the
     * cursor is being closed since the pointer to the current row can
     * be modified.
     *
     * @exception SqlException
     */

/**
     * Adjust column offsets after fetching the next part of a split row.
     * @param index the index of the column that was split, or -1 when not
     * fetching column data
     */

/**
     * Get locator for LOB of the designated column
     * 
     * Note that this method cannot be invoked on a LOB column that is NULL.
     *
     * @param column column number, starts at 1
     * @return locator value, Lob.INVALID_LOCATOR if LOB
     *         value was sent instead of locator
     */

/**
     *      */

/**
     *      */

/**
     * Check if the data we want crosses a row split, and fetch more data
     * if necessary.
     *
     * @param length the length in bytes of the data needed
     * @param index the index of the column to be fetched, or -1 when not
     * fetching column data
     */

/**
     * Check if the data we want crosses a row split, and fetch more data
     * if necessary. This method is not for column data; use
     * {@link #checkForSplitRowAndComplete(int, int)} for that.
     *
     * @param length the length in bytes of the data needed
     */

/**
     * Fetch more data for a row that has been split up.
     *
     * @param index the index of the column that was split, or -1 when not
     * fetching column data
     * @return the value of {@code lastValidBytePosition_} before more data
     * was fetched
     */

/**
     * Set the value of value of allRowsReceivedFromServer_.
     *
     * @param b a boolean value indicating whether all
     * rows are received from the server
     */

/**
     * Set a flag indicating whether QRYCLSIMP is enabled.
     *
     * @param flag true if QRYCLSIMP is enabled
     */

/**
     * Check whether QRYCLSIMP is enabled on this cursor.
     *
     * @return true if QRYCLSIMP is enabled
     */

