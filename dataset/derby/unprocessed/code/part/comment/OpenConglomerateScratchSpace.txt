/**

A utility class to store and use temporary scratch space associated with
a conglomerate.

**/

/**************************************************************************
     * Fields of the class
     **************************************************************************
     */

/**
     * A template of info about the classes in the returned row.
     * 
     * This template is allocated on demand, and is used to efficiently
     * create new rows for export from this class.  This variable is for
     * use by get_row_for_export().
     **/

/**
     * A Scratch template used for searching and qualifying rows in the 
     * conglomerate.  This is a full template, independent of the 
     * FormatableBitSet used for access.
     **/

/**
     * A Scratch row used for qualifying rows in the 
     * conglomerate.  This is a row which matches the FormatableBitSet of rows
     * being returned.
     **/

/**
     * A complete array of format id's and collation_ids for this conglomerate.
     **/

/**
     * Tells if there is at least one type in the conglomerate whose collation
     * isn't StringDataValue.COLLATION_TYPE_UCS_BASIC. This can be determined
     * by looking at the collation ids, but now the caller is passing in the
     * value to avoid having to look at all the collation ids multiple times.
     */

/**
     * Scratch space used by ConglomerateController.
     * 
     *      *      */

/**************************************************************************
     * Constructors for This class:
     **************************************************************************
     */

/**
     * Creates a new scratch space.
     *
     * @param format_ids format identifiers for columns in the row
     * @param collation_ids collation identifiers for the columns in the row
     * @param hasCollatedTypes whether there is at least one collated type with
     *      a collation other than UCS BASIC in the conglomerate
     */

/**************************************************************************
     * Private/Protected methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Public Methods of This class:
     **************************************************************************
     */

/**
     * Return an empty template (possibly partial) row to be given back to 
     * a client.
     * 
     * The main use of this is for fetchSet() and fetchNextGroup() which
     * allocate rows and then give them back entirely to the caller.
     * 
     *
	 * @return The row to use.
     *
	 * @exception  StandardException  Standard exception policy.
     **/

/**
     * Return an empty template (possibly partial) row to be used and 
     * reused internally for processing.
     * 
     * The main use of this is for qualifying rows where a row has not been
     * provided by the client.  This routine cache's a single row for reuse
     * by the caller, if the caller needs 2 concurrent scratch rows, some other
     * mechanism must be used.
     * 
     *
	 * @return The row to use.
     *
	 * @exception  StandardException  Standard exception policy.
     **/

/**
     * Return a complete empty row.  
     * 
     * The main use of this is for searching a tree where a complete copy of
     * the row is needed for searching.
     * 
     *
	 * @return The template to use.
     *
	 * @exception  StandardException  Standard exception policy.
     **/

/**
     * Return a scratch RowPosition.
     * 
     * Used by GenericConglomerateController.delete() and 
     * GenericConglomerateController.replace().  It may be reused so callers
     * must insure that object no longer needed before next possible call
     * to get it again.
     * 
     *
	 * @return a scratch RowPosition.
     **/

/**
     * Tells if there is at least one column with a collation different
     * than UCS BASIC in the conglomerate.
     *
     * @return {@code true} if there is at least one column with a collation
     *      different than UCS BASIC.
     */

