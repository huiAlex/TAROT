/**
 * @derby.formatId ACCESS_B2IUNDO_V1_ID
 *
 * @derby.purpose   Implements the LogicalUndo and Formatable interfaces, basically
 *            providing a way for raw store recovery to "call back" access code
 *            to provide logical undo ability.
 *
 * @derby.upgrade   RESOLVE.
 *
 * @derby.diskLayout 
 *     No state associated with this format.
 *
 **/

/**

The B2IUndo interface packages up the routines which the rawstore needs
to call to perform logical undo of a record in a B2i.  The rawstore will
determine that a page has changed since the record was written, and if it
has it will call the findUndo() interface, to find the page where the record
exists (as it may have moved).

This class must not contain any persistent state, as this class is stored
in the log record of the insert/delete.

**/

/**
	 * Find the page and record to undo.  If no logical undo is necessary,
	 * i.e., row has not moved, then just return the latched page where undo
	 * should go.  If the record has moved, it has a new recordId on the new
	 * page, this routine needs to call pageOp.resetRecord with the new
	 * RecordHandle so that the logging system can update the compensation
	 * Operation with the new location.
     *
	 * @param rawtran   the transaction doing the rollback
	 * @param pageOp    the page operation that supports logical undo.  This
	 * 		            LogicalUndo function pointer is a field of that 
     * 		            pageOperation
	 * @param in        data stored in the log stream that contains the record 
     *                  data necessary to restore the row.
     *
     * @exception StandardException Standard Derby error policy
	 * @exception IOException Method may read from InputStream
     *
	 */

/**
		Return my format identifier.

			*/

/**
    This object has no state, so nothing to write.*/

/**
	Restore the in-memory representation from the stream.

    This object has no state, so nothing to restore.
	@exception ClassNotFoundException Thrown if the stored representation is
	serialized and a class named in the stream could not be found.

		*/

