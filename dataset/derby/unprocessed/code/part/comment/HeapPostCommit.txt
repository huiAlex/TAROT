/**************************************************************************
     * Fields of the class
     **************************************************************************
     */

/**************************************************************************
     * Constructors for This class:
     **************************************************************************
     */

/**************************************************************************
     * Private/Protected methods of This class:
     **************************************************************************
     */

/**
     * Reclaim space taken of committed deleted rows or aborted inserted rows.
     * 
     * This routine assumes it has been called by an internal transaction which
     * has performed no work so far, and that it has an exclusive intent table 
     * lock.  It will attempt obtain exclusive row locks on rows marked 
     * deleted, where successful those rows can be reclaimed as they must be 
     * "committed deleted" or "aborted inserted" rows.
     * 
     * This routine will latch the page and hold the latch due to interface
     * requirement from Page.purgeAtSlot.
     *
     * @param heap_control  The heap, already opened.
     * @param pageno        number of page to look for committed deletes.
     *
     *      * @exception  StandardException  Standard exception policy.
     **/

/**************************************************************************
     * Public Methods implementing the Serviceable interface:
     **************************************************************************
     */

/**
     * The urgency of this post commit work.
     * 
     * This determines where this Serviceable is put in the post commit 
     * queue.  Post commit work in the heap can be safely delayed until there
     * is not user work to do.
     *
     * @return false, this work should not be serviced ASAP
     **/

/**
     * perform the work described in the postcommit work.
     * 
     * In this implementation the only work that can be executed by this
     * post commit processor is this class itself.
     * 
     *
     * @return Returns Serviceable.DONE when work has completed, or
     *         returns Serviceable.REQUEUE if work needs to be requeued.
     *
     * @param contextMgr the context manager started by the post commit daemon
     *
     * @exception  StandardException  Standard exception policy.
     **/

