/**
	Static methods to write and read compressed forms of numbers
	to DataOut and DataIn interfaces. Format written is platform
	independent like the Data* interfaces and must remain fixed
	once a product is shipped. If a different format is required
	then write a new set of methods, e.g. writeInt2. The formats
	defined by stored format identifiers are implicitly dependent
	on these formats not changing.
*/

/**
		Write a compressed integer only supporting signed values.
		Formats are (with x representing value bits):
		
		1 Byte - 00xxxxxx                              Represents the value &lt;= 63 (0x3f)
		2 Byte - 01xxxxxx xxxxxxxx                     Represents the value &gt; 63 &amp;&amp; &lt;= 16383 (0x3fff)
		4 byte - 1xxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx   Represents the value &gt; 16383 &amp;&amp; &lt;= MAX_INT
		


		@exception IOException value is negative or an exception was thrown by a method on out.
	*/

/**
		Write a compressed integer directly to an OutputStream.
		@exception IOException an exception was thrown by a method on in.
	*/

/**
		Read an integer previously written by writeInt().

		@exception IOException an exception was thrown by a method on in.
	*/

/**
		Read an integer previously written by writeInt().

		@exception IOException an exception was thrown by a method on in.
	*/

/**
		Skip an integer previously written by writeInt().

		@exception IOException an exception was thrown by a method on in.
	*/

/**
		Return the number of bytes that would be written by a writeInt call
	*/

/**
		Write a compressed long only supporting signed values.

		Formats are (with x representing value bits):
		
		2 byte - 00xxxxxx xxxxxxxx                     Represents the value &lt;= 16383 (0x3fff)
		4 byte - 01xxxxxx xxxxxxxx xxxxxxxx xxxxxxxx   Represents the value &gt; 16383  &amp;&amp; &lt;= 0x3fffffff
		8 byte - 1xxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx   Represents the value &gt; 0x3fffffff &amp;&amp; &lt;= MAX_LONG
		


		@exception IOException value is negative or an exception was thrown by a method on out.
	*/

/**
		Write a compressed integer only supporting signed values.

		@exception IOException value is negative or an exception was thrown by a method on out.
	*/

/**
		Read a long previously written by writeLong().

		@exception IOException an exception was thrown by a method on in.
	*/

/**
		Read a long previously written by writeLong().

		@exception IOException an exception was thrown by a method on in.
	*/

