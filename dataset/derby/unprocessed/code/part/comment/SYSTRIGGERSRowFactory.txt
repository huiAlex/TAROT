/**
 * Factory for creating a SYSTRIGGERS row.
 *
 *
 *  */

/** TimeZone object representing Coordinated Universal Time. */

/**
	 * Make a SYSTRIGGERS row. 
	 * 
	 * @return	Row suitable for inserting into SYSTRIGGERS.
	 *
	 * @exception   StandardException thrown on failure
	 */

/**
     * Helper method that contains common logic for {@code makeRow()} and
     * {@code makeEmptyRowForCurrentVersion()}. Creates a row for the
     * SYSTRIGGERS conglomerate.
     *
     * @param td the {@code TriggerDescriptor} to create a row from (can be
     *   {@code null} if the returned row should be empty)
     * @param columnCount the number of columns in the returned row (used for
     *   trimming off columns in soft upgrade mode to match the format in
     *   the old dictionary version)
     * @return a row for the SYSTRIGGERS conglomerate
     *      */

/**
     * Get a calendar instance with the correct time zone for storing and
     * retrieving creation timestamps. Creation timestamps are stored in UTC
     * to avoid ambiguities around the change from daylight saving time to
     * standard time, or other time zone changes. If the data dictionary
     * version is less than 10.11, however, the timestamps are stored in the
     * local time zone.
     *
     * @return a calendar instance that can be used for storing and retrieving
     *   trigger creation timestamps
     *      */

/**
	 * Make an  Tuple Descriptor out of a SYSTRIGGERS row
	 *
	 * @param row 					a SYSTRIGGERS row
	 * @param parentTupleDescriptor	unused
	 * @param dd 					dataDictionary
	 *
	 * @return	a  descriptor equivalent to a SYSTRIGGERS row
	 *
	 * @exception   StandardException thrown on failure
	 */

/**
	 * Builds a list of columns suitable for creating this Catalog.
	 * The last column, the serialized statement, is not added
	 * to the column list.  This is done deliberately to make it
	 * a 'hidden' column -- one that is not visible to customers,
	 * but is visible to the system.
	 *
	 *
	 * @return array of SystemColumn suitable for making this catalog.
	 */

