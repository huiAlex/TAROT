/**
  A ByteHolder that stores all its bytes in memory.
  */

/**
	  Create a new MemByteHolder. Store bytes as a list of buffers
	  of size 'bufSize'.
	  */

/**
	  	  @exception IOException		Thrown on error
	  */

/**
	  	  @exception IOException		Thrown on error
	  */

/**
	  	  @exception IOException		Thrown on error
	  */

/**
	  
	  @exception IOException		Thrown on error
	  */

/**
	  	  */

/**
	  	  @exception IOException	Thrown on error
	  */

/**
	  	  @exception IOException	Thrown on error
	  */

/**
	  	  @exception IOException	Thrown on error
	  */

/**
	  	  @exception IOException	Thrown on error
	  */

/**
	  	  @exception IOException	Thrown on error
	  */

/**
	  	  */

/**
 	  Return the number of bytes that have been saved to this byte holder.
      This result is different from available() as it is unaffected by the
      current read position on the ByteHolder.

	  	  */

/**
	  	  @exception IOException	Thrown on error
	  */

/**
	  	 */

/**
     *      */

/**
	  Get the next buffer for writing bytes.
	  @exception IOException	Thrown on error
	  */

/** Do sanity checking when getting the next write buffer */

/** Initialize a buffer for writing */

/**
	  Get the next buffer for reading bytes.

	  @return true if the user has read all the bytes
	  in this ByteHolder.

	  @exception IOException		Thrown on error
	  */

/**
	  Create a string representation of an internal buffer of bytes.
	  This is useful during debugging.
	  */

/**
	  Produce a string describing the state of this ByteHolder.
	  This is mainly for debugging.
	  */

