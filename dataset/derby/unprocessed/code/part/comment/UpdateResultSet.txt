/**
 * Update the rows from the specified
 * base table. This will cause constraints to be checked
 * and triggers to be executed based on the c's and t's
 * compiled into the update plan.
 *
 */

/**
	 * @param source update rows come from source
	 * @param generationClauses	Generated method for computed generation clauses
	 * @param checkGM	Generated method for enforcing check constraints
     * @param activation The activation
	 * @exception StandardException thrown on error
     */

/**
	 * @param source update rows come from source
	 * @param generationClauses	Generated method for computed generation clauses
	 * @param checkGM	Generated method for enforcing check constraints
	 * @param activation Activation
     * @param constantActionItem  id of the update constant action saved object
	 * @param rsdItem  id of the Result Description saved object
	 * @exception StandardException thrown on error
     */

/**
	 * @param source update rows come from source
	 * @param generationClauses	Generated method for computed generation clauses
	 * @param checkGM	Generated method for enforcing check constraints
     * @param activation
     * @param passedInConstantAction
     * @param passedInRsd
	 * @exception StandardException thrown on error
     */

/**
		@exception StandardException Standard Derby error policy
	*/

/**
		@exception StandardException Standard Derby error policy
	*/

/**
     * Run check constraints against the current row. Raise an error if
     * a check constraint is violated, unless all the offending checks are
     * deferred, in which case a false value will be returned. A NULL value
     * will be interpreted as success (not violation).
     *
     * @exception StandardException thrown on error
     */

/**
     * 
     * Special handling if this is an UPDATE action of a MERGE statement.
     * 
     */

/**
	 * 	 *
	 * @exception StandardException		Thrown on error
	 */

/**
     * getSetAutoincrementValue will get the autoincrement value of the 
     * columnPosition specified for the target table. If increment is 
     * non-zero we will also update the autoincrement value. 
     *
     * @param columnPosition	position of the column in the table (1-based)
     * @param increment			amount of increment. 
     *
     * @exception StandardException if anything goes wrong.
     */

