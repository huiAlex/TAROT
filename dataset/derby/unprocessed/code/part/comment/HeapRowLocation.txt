/**
 * A heap row location represents the location of a row in the heap.
 * 
 * It is implementad as a wrapper around a raw store record handle.
 * 
 * @derby.formatId ACCESS_HEAP_ROW_LOCATION_V1_ID
 *
 * @derby.purpose   Object used to store the location of a row within a Heap table.  
 *            One of these is stored in every row of a btree secondary index 
 *            built on a heap base table.
 *
 * @derby.upgrade   The type of the btree determines the type of rowlocation stored.
 *            In current btree implementations only one type of rowlocation can
 *            be stored per tree, and it's type is stored in the format id 
 *            array stored in the Conglomerate object.
 *
 * @derby.diskLayout 
 *     page number(CompressedNumber.writeLong())
 *     record id(CompressedNumber.writeInt())
 **/

/**
	The HeapRowLocation simply maintains a raw store record handle.
	**/

/**
     * Recycle this HeapRowLocation object.
     *
     * @return this object reset to its initial state
     */

/**
		Return my format identifier.

			*/

/**
	  @exception java.lang.ClassNotFoundException A class needed to read the
	  stored form of this object could not be found.
	  	  */

/**
		Implement value equality.
		
		MT - Thread safe
	*/

/**
		Return a hashcode based on value.
		
		MT - thread safe
	*/

