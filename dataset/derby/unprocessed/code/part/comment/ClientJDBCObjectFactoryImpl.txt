/**
 * Implements the the ClientJDBCObjectFactory interface and returns the classes
 * that implement the JDBC3.0/2.0 interfaces
 * For example, newCallableStatement would return ClientCallableStatement
 */

/** 
     *  The message utility instance we use to find messages
     *  It's primed with the name of the client message bundle so that
     *  it knows to look there if the message isn't found in the
     *  shared message bundle.
     */

/**
     * @return an instance of {@link
     * org.apache.derby.client.ClientPooledConnection}
     */

/**
     * @return an instance of {@link org.apache.derby.client.ClientXAConnection}
     */

/**
     * @return an instance of {@link
     * org.apache.derby.client.am.LogicalConnection}
     */

/**
    * Returns an instance of a {@link
    * org.apache.derby.client.am.CachingLogicalConnection}, which provides
    * caching of prepared statements.
    *
    * @param physicalConnection the underlying physical connection
    * @param pooledConnection the pooled connection
    * @param stmtCache statement cache
    * @return A logical connection with statement caching capabilities.
    *
    *     */

/**
     * Returns a new logical prepared statement object.
     *
     * @param ps underlying physical prepared statement
     * @param stmtKey key for the underlying physical prepared statement
     * @param cacheInteractor the statement cache interactor
     * @return A logical prepared statement.
     */

/**
     * Returns a new logical callable statement object.
     *
     * @param cs underlying physical callable statement
     * @param stmtKey key for the underlying physical callable statement
     * @param cacheInteractor the statement cache interactor
     * @return A logical callable statement.
     */

/**
     * @return an instance of {@link org.apache.derby.client.net.NetConnection}
     */

/**
     * @return an instance of {@link org.apache.derby.client.net.NetConnection}
     */

/**
     * Returns an instance of NetConnection.
     * @param logWriter    LogWriter object associated with this connection.
     * @param user         user id for this connection.
     * @param password     password for this connection.
     * @param dataSource   The DataSource object passed from the PooledConnection
     *                     object from which this constructor was called.
     * @param rmId         The Resource Manager ID for XA Connections
     * @param isXAConn     true if this is a XA connection
     * @param cpc          The ClientPooledConnection object from which this
     *                     NetConnection constructor was called. This is used to
     *                     pass StatementEvents back to the pooledConnection
     *                     object.
     * @return a {@link ClientConnection} object
     *      */

/**
     * @return an instance of {@link NetResultSet}
     */

/**
     * @return an instance of {@link NetDatabaseMetaData}
     */

/**
     * This method provides an instance of Statement 
     * @param  agent            Agent
     * @param  connection       Connection
     * @param  type             int
     * @param  concurrency      int
     * @param  holdability      int
     * @param autoGeneratedKeys int
     * @param columnNames       String[]
     * @param columnIndexes     int[]
     * @return a ClientStatement implementation
     *      *
     */

/**
     * Returns an instance of ColumnMetaData
     *
     * @param logWriter LogWriter
     * @return a ColumnMetaData implementation
     *
     */

/**
     * Returns an instance of ColumnMetaData or ColumnMetaData40 depending
     * on the JDK version under use
     *
     * @param logWriter  LogWriter
     * @param upperBound int
     * @return a ColumnMetaData implementation
     *
     */

/**
     * 
     * returns an instance of ParameterMetaData 
     *
     * @param columnMetaData ColumnMetaData
     * @return a ParameterMetaData implementation
     *
     */

/**
     * Creates a BatchUpdateException depending on the JVM level.
     */

/** This method is overridden on JVM 8 */

