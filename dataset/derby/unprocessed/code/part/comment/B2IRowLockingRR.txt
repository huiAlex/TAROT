/**

**/

/**************************************************************************
     * Constructors for This class:
     **************************************************************************
     */

/**************************************************************************
     * Public Methods of This class:
     **************************************************************************
     */

/**
     * Unlock a record after it has been locked for read.
     * 
     * In repeatable read only unlock records which "did not qualify".  For
     * example in a query like "select * from foo where a = 1" on a table
     * with no index it is only necessary to hold locks on rows where a=1, but
     * in the process of finding those rows the system will get locks on other
     * rows to verify they are committed before applying the qualifier.  Those
     * locks can be released under repeatable read isolation.
     * 
     * if it is forUpdate then get S lock and release U lock, else there is 
     * nothing to do in serializable - we keep the S locks until end of 
     * transaction.
     *
     * @param forUpdate         Is the scan for update or for read only.
     *
     **/

