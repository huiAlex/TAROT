/**
 * A formatable holder for an array of formatables.
 * Used to avoid serializing arrays.
 */

/********************************************************
	**
	**	This class implements Formatable. That means that it
	**	can write itself to and from a formatted stream. If
	**	you add more fields to this class, make sure that you
	**	also write/read them with the writeExternal()/readExternal()
	**	methods.
	**
	**	If, inbetween releases, you add more fields to this class,
	**	then you should bump the version number emitted by the getTypeFormatId()
	**	method.
	**
	********************************************************/

/**
	 * Niladic constructor for formatable
	 */

/**
	 * Construct a FormatableArrayHolder using the input
	 * array.
	 *
	 * @param array the array to hold
	 */

/**
	 * Set the held array to the input array.
	 *
	 * @param array the array to hold
	 */

/**
	 * Get the held array of formatables, and return
     * it in an array that is an instance of {@code arrayClass}.
	 *
     * @param arrayClass the type of array to return
	 *
	 * @return an array of formatables
	 */

/**
	 * Write this array out
	 *
	 * @param out write bytes here
	 *
 	 * @exception IOException thrown on error
	 */

/**
	 * Read this array from a stream of stored objects.
	 *
	 * @param in read this.
	 *
	 * @exception IOException					thrown on error
	 * @exception ClassNotFoundException		thrown on error
	 */

/**
	 * Get the formatID which corresponds to this class.
	 *
	 *	@return	the formatID of this class
	 */

