/**
 * Class used to transport that fact that we had a timeout and should
 * *NOT* disconnect the connection.
 * See DRDAConnThread.run()
 */

/**  Create a new Protocol exception 
     *
     * @param agent     DRDAConnThread  that threw this exception
     *
     * @param cpArg     CODPNT value  to pass to send
     *
     *
     * @param msgid       The messageid for this message. (needs to be
     * integrated into logging mechanism)
     *
     * @param args         Argments for the message in an Object[]
     *
     */

/** write will write the Error information to the buffer.
     * Most errors will write only the codepoint and svrcod 
     * Where appropriate the codepoint specific error code and
     * codePoint of origin will be written
     *
     * @param writer  The DDMWriter for the agent.
     */

/**
     * Override getMessage() 
     * @return the server diagnostic error message for this exception
     */

