/**
 * A CreateAliasNode represents a CREATE ALIAS statement.
 *
 */

/**
     * Constructor
	 *
	 * @param aliasName				The name of the alias
     * @param targetObject          Target name string or, if
     *        aliasType == ALIAS_TYPE_SYNONYM_AS_CHAR, a TableName
	 * @param methodName		    The method name
     * @param aliasSpecificInfo     An array of objects, see code for
     *                              interpretation
     * @param cm                    The context manager
     * @exception StandardException Thrown on error
	 */

/**
	 * Bind this CreateAliasNode.  This means doing any static error
	 * checking that can be done before actually creating the table.
	 * For example, verifying that the column name list does not
	 * contain any duplicate column names.
	 *
	 *
	 * @exception StandardException		Thrown on error
	 */

/** Extra logic for binding user-defined aggregate definitions */

/** Construct an exception flagging an illegal aggregate name */

/** Bind the class names for UDTs */

/**
	 * Create the Constant information that will drive the guts of Execution.
	 *
	 * @exception StandardException		Thrown on failure
	 */

