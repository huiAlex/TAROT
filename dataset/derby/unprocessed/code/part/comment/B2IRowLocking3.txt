/**

Implements the jdbc serializable isolation level using row locks.

Holds read and write locks until end of transaction.
Obtains previous key locks to protect from phantom reads.

**/

/**************************************************************************
     * Private/Protected fields of This class:
     **************************************************************************
     */

/**
     * The container id of the base container for this index.  Used to build
     * record handles to make lock calls on.
     **/

/**
     * The OpenBtree to use if we have to lock anything in the btree vs.
     * base row locking.
     **/

/**
     * The transaction to associate lock requests with.
     **/

/**************************************************************************
     * Constructors for This class:
     **************************************************************************
     */

/**************************************************************************
     * Private methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Protected methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Public Methods of This class:
     **************************************************************************
     */

/**************************************************************************
     * Abstract Protected lockScan*() locking methods of BTree:
     *     lockScanRow              - lock row
     *     unlockScanRecordAfterRead- unlock the scan record
     **************************************************************************
     */

/**
     * Lock a btree row to determine if it is a committed deleted row.
     * 
     *      *
	 * @exception  StandardException  Standard exception policy.
     **/

/**
     * Release read lock on a row.
     *
     * For serializable, there is no work to do.
     *
     *
     **/

/**************************************************************************
     * Abstract Protected lockNonScan*() locking methods of BTree:
     *
     *     lockNonScanPreviousRow   - lock the row previous to the current
     *     lockNonScanRow           - lock the input row
     **************************************************************************
     */

/**
     * Lock the row previous to the input row.
     * 
     * See BTreeLockingPolicy.lockNonScanPreviousRow
     *
	 * @exception  StandardException  Standard exception policy.
     **/

/**
     * Lock the in memory row.
     * 
     * See BTree.lockRow() for more info.
     *
	 * @exception  StandardException  Standard exception policy.
     **/

