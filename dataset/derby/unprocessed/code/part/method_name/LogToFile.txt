getTypeFormatId
LogToFile
markCorrupt
checkCorrupt
getLogger
setRawStoreFactory
recover
checkpoint
checkpointWithTran
flush
flushAll
verifyLogFormat
verifyLogFormat
initLogFile
switchLogFile
flushBuffer
truncateLog
truncateLog
getFirstLogNeeded
writeControlFile
readControlFile
createLogDirectory
createDataWarningFile
getLogDirectory
getCanonicalLogPath
getControlFileName
getMirrorControlFileName
getLogFileName
findCheckpoint
openBackwardsScan
openBackwardsScan
openFlushedScan
openForwardsScan
getLogFileAtBeginning
getLogFileAtPosition
canSupport
boot
getLogStorageFactory
stop
deleteObsoleteLogfiles
serviceASAP
serviceImmediately
getLogFactoryProperties
performWork
appendLogRecord
currentInstant
endPosition
getLogFileNumber
firstLogInstant
flush
syncFile
openForwardsFlushedScan
openForwardsScan
databaseEncrypted
setDatabaseEncrypted
startNewLogFile
isCheckpointInLastLogFile
deleteLogFileAfterCheckpointLogFile
encrypt
decrypt
getEncryptionBlockSize
getEncryptedDataLength
getFirstUnflushedInstant
getFirstUnflushedInstantAsLong
freezePersistentStore
unfreezePersistentStore
logArchived
checkVersion
checkVersion
logErrMsg
logErrMsg
logErrMsgForDurabilityTestModeNoSync
printErrorStack
logtest_appendPartialLogRecord
testLogFull
getLogFileToSimulateCorruption
inReplicationMasterMode
enableLogArchiveMode
disableLogArchiveMode
deleteOnlineArchivedLogFiles
startLogBackup
backupLogFiles
endLogBackup
abortLogBackup
inRFR
checkpointInRFR
startReplicationMasterRole
stopReplicationMasterRole
stopReplicationSlaveRole
checkForReplication
initializeReplicationSlaveRole
failoverSlave
restoreLogs
preAllocateNewLogFile
openLogFileInWriteMode
getLogDirPath
checkJvmSyncError
privExists
privDelete
privRandomAccessFile
privGetOutputStreamWriter
privCanWrite
privMkdirs
privList
privList
privCopyFile
privCopyFile
privRemoveDirectory
runBooleanAction
setEndPosition
run
toString
getContextService
run
getMonitor
run
findServiceModule
run
getServiceModule
run
isFullUpgrade
run
