<Class>
    <Id>892</Id>
    <Package>org.apache.derby.iapi.jdbc</Package>
    <ClassName>DRDAServerStarter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ModuleControl</SuperInterface>
        <SuperInterface>Runnable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DRDAServerStarter  /** 
 * Class that starts the network server in its own daemon thread. Works in two situations. &lt;BR&gt; As a module in the engine's Monitor, booted if the property derby.drda.startNetworkServer is set to true. In this case the boot and shutdown is through the standard ModuleControl methods. &lt;BR&gt; Direct calls from the NetworkServerControlImpl start methods. This is to centralize the creation of the daemon thread in this class in the engine code, since the Monitor provides the thread. This means that NetworkServerControlImpl calls this class to create a thread which in turn calls back to NetworkServerControlImpl.runServer to start the server.
 * @see ModuleControl#boot
 * @see ModuleControl#stop
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>server</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>runServerMethod</FieldName>
            <FieldType>Method</FieldType>
        </Field>
        <Field>
            <FieldName>serverShutdownMethod</FieldName>
            <FieldType>Method</FieldType>
        </Field>
        <Field>
            <FieldName>serverThread</FieldName>
            <FieldType>Thread</FieldType>
        </Field>
        <Field>
            <FieldName>serverClassName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serverClass</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>serverClass</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>listenAddress</FieldName>
            <FieldType>InetAddress</FieldType>
        </Field>
        <Field>
            <FieldName>portNumber</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>userArg</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>passwordArg</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>consoleWriter</FieldName>
            <FieldType>PrintWriter</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setStartInfo</MethodName>
            <MethodComment>/** 
 * Sets configuration information for the network server to be started.
 * @param listenAddress InetAddress to listen on
 * @param portNumber    portNumber to listen on
 * @param userName      the user name for actions requiring authorization
 * @param password      the password for actions requiring authorization
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listenAddress</ParamName>
                    <ParamType>InetAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>portNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>userName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>consoleWriter</ParamName>
                    <ParamType>PrintWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setStartInfo;[listenAddress, portNumber, consoleWriter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStartInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listenAddress</ParamName>
                    <ParamType>InetAddress</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>portNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>consoleWriter</ParamName>
                    <ParamType>PrintWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findStartStopMethods</MethodName>
            <MethodComment>/** 
 * Find the methods to start and shutdown the server. Perfomed through reflection so that the engine code is not dependent on the network server code.
 * @param serverClass
 * @throws NoSuchMethodException 
 * @throws SecurityException 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverClass</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SecurityException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>boot</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>create</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>java.util.Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Constructor</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>SecurityException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>serverThread;interrupt;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMonitor</MethodName>
            <MethodComment>/** 
 * Privileged Monitor lookup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>ModuleFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ModuleFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>