<Class>
    <Id>1892</Id>
    <Package>org.apache.derby.iapi.services.io</Package>
    <ClassName>DerbyIOException</ClassName>
    <SuperClass>IOException</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DerbyIOException  /** 
 * A subclass of &lt;code&gt;IOException&lt;/code&gt; that carries a SQL state. The original reason for adding it was to separate between &lt;code&gt;IOException&lt;/code&gt;s generated by the application stream and the ones generated by the Derby wrapper streams, see for instance &lt;code&gt;RawToBinaryFormatStream&lt;/code&gt;. Without this distinction, the user would not be able to easily write &lt;code&gt;catch&lt;/code&gt;-blocks to handle specific errors happening when reading streams.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>sqlState</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DerbyIOException</MethodName>
            <MethodComment>/** 
 * Create a new Derby IO exception.
 * @param msg a string describing the error
 * @param sqlState a Derby SQLState describing the error
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>msg</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlState</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSQLState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>