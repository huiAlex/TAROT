<Class>
    <Id>1739</Id>
    <Package>org.apache.derby.iapi.sql.dictionary</Package>
    <ClassName>ForeignKeyConstraintDescriptor</ClassName>
    <SuperClass>KeyConstraintDescriptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ForeignKeyConstraintDescriptor  /** 
 * A foreign key.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>referencedConstraintDescriptor</FieldName>
            <FieldType>ReferencedKeyConstraintDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>referencedConstraintId</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>raDeleteRule</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>raUpdateRule</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ForeignKeyConstraintDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a ForeignKeyConstraintDescriptor
 * @param dataDictionary		The data dictionary that this descriptor lives in
 * @param table		The descriptor of the table the constraint is on
 * @param constraintName	The name of the constraint.
 * @param deferrable		If the constraint can be deferred.
 * @param initiallyDeferred If the constraint starts life deferred.
 * @param fkColumns 			columns in the foreign key
 * @param constraintId		UUID of constraint
 * @param indexId			The UUID for the backing index
 * @param schemaDesc		The SchemaDescriptor for the constraint
 * @param referencedConstraintDescriptor	is referenced constraint descriptor
 * @param enforced          is the constraint enforced?
 * @param raDeleteRule      The {@code ON DELETE} action rule
 * @param raUpdateRule      The {@code ON UPDATE} action rule
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dataDictionary</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>table</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>constraintName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>deferrable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initiallyDeferred</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fkColumns</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>constraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>schemaDesc</ParamName>
                    <ParamType>SchemaDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>referencedConstraintDescriptor</ParamName>
                    <ParamType>ReferencedKeyConstraintDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>enforced</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raDeleteRule</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raUpdateRule</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ForeignKeyConstraintDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a ForeignKeyConstraintDescriptor
 * @param dataDictionary		The data dictionary that this descriptor lives in
 * @param table		The descriptor of the table the constraint is on
 * @param constraintName	The name of the constraint.
 * @param deferrable		If the constraint can be deferred.
 * @param initiallyDeferred If the constraint starts life deferred.
 * @param fkColumns 			columns in the foreign key
 * @param constraintId		UUID of constraint
 * @param indexId			The UUID for the backing index
 * @param schemaDesc		The SchemaDescriptor for the constraint
 * @param referencedConstraintId	is referenced constraint id
 * @param enforced          {@code true} if this constraint is enforced
 * @param raDeleteRule      The {@code ON DELETE} action rule 
 * @param raUpdateRule      The {@code ON UPDATE} action rule 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dataDictionary</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>table</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>constraintName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>deferrable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initiallyDeferred</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fkColumns</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>constraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>schemaDesc</ParamName>
                    <ParamType>SchemaDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>referencedConstraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>enforced</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raDeleteRule</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raUpdateRule</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferencedConstraint</MethodName>
            <MethodComment>/** 
 * Get the constraint that this FK references.  Will return either a primary key or a unique key constraint.
 * @return	the constraint
 * @exception StandardException on error
 */
</MethodComment>
            <ReturnType>ReferencedKeyConstraintDescriptor</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>TableDescriptor [refTd=getDataDictionary().getConstraintTableDescriptor(referencedConstraintId)]</InnerVar>
                <InnerVar>ConstraintDescriptorList [cdl=getDataDictionary().getConstraintDescriptors(refTd)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReferencedConstraintId</MethodName>
            <MethodComment>/** 
 * Get the constraint id for the constraint that this FK references.   Will return either a primary key or a unique key constriant.
 * @return	the constraint id
 * @exception StandardException on error
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SubKeyConstraintDescriptor [subKey]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConstraintType</MethodName>
            <MethodComment>/** 
 * Gets an identifier telling what type of descriptor it is (UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK).
 * @return	An identifier telling what type of descriptor it is(UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK).
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>needsToFire</MethodName>
            <MethodComment>/** 
 * Does this constraint need to fire on this type of DML?  True if insert or update and columns intersect
 * @param stmtType	the type of DML (StatementType.INSERT|StatementType.UPDATE|StatementType.DELETE)
 * @param modifiedCols	the columns modified, or null for all
 * @return true/false
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stmtType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>modifiedCols</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSelfReferencingFK</MethodName>
            <MethodComment>/** 
 * Am I a self-referencing FK?  True if my referenced constraint is on the same table as me.
 * @return	true/false
 * @exception StandardException on error
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ReferencedKeyConstraintDescriptor [refcd=getReferencedConstraint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRaDeleteRule</MethodName>
            <MethodComment>/** 
 * Gets a referential action rule on a  DELETE
 * @return referential rule defined by the user during foreign key creattionfor a delete (like CASCDE , RESTRICT ..etc)
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRaUpdateRule</MethodName>
            <MethodComment>/** 
 * Gets a referential action rule on a UPDATE
 * @return referential rule defined by the user during foreign key creattionfor an UPDATE (like CASCDE , RESTRICT ..etc)
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>