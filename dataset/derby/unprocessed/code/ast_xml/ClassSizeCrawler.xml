<Class>
    <Id>1117</Id>
    <Package>org.apache.derbyBuild</Package>
    <ClassName>ClassSizeCrawler</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ClassSizeCrawler  /** 
 * This class implements a program that catalogs the size estimate coefficients of various classes.
 * @see ClassSize#getSizeCoefficients.&lt;p&gt; The program is invoked as: &lt;p&gt; java -DWS=&lt;i&gt;work-space&lt;/i&gt; [-DclassDir=&lt;i&gt;class-dir&lt;/i&gt;] [-Dout=&lt;i&gt;out-file&lt;/i&gt; [-Dprefix[.&lt;i&gt;x&lt;/i&gt;=&lt;i&gt;package-prefix&lt;/i&gt;]] [-Dverbose=true] org.apache.derby.iapi.services.cache.ClassSizeCrawler &lt;i&gt;class-or-interface&lt;/i&gt; ...&lt;br&gt; &lt;p&gt; This program gets the size coefficients for each class in the &lt;i&gt;class-or-interface&lt;/i&gt; list, and for each class that implements an interface in the list. If there is an interface in the list this program crawls through the classes hierarcy, starting at points specified by the prefix properties, looking for classes that implement the interfaces. &lt;p&gt; If the &lt;i&gt;class-or-interface&lt;/i&gt; list is empty then this program searches for implementations of org.apache.derby.iapi.types.DataValueDescriptor, and at least one prefix property must be specified &lt;p&gt; The catalog is written as a java source file into &lt;i&gt;out-file&lt;/i&gt;, by default &lt;i&gt;work-space&lt;/i&gt;/java/org.apache.derby.iapi.services.cache.ClassSizeCatalogImpl.java. &lt;p&gt; &lt;i&gt;work-space&lt;/i&gt; is the directory containing the java and classes directories. $WS in the standard development environment. This property is required. &lt;p&gt; &lt;i&gt;class-dir&lt;/i&gt; is the directory containing the compiled classes. By default it is &lt;i&gt;work-space&lt;/i&gt;/classes. &lt;p&gt; &lt;i&gt;package-prefix&lt;/i&gt; is the first part of a package name. e.g. "com.ibm.db2j.impl". At least one prefix property must be specified if there is an interface in the list. &lt;p&gt; For example:&lt;br&gt; &lt;pre&gt; &lt;code&gt; java -DWS=$WS \ -Dprefix.1=org.apache.derby.iapi.types \ org.apache.derby.iapi.services.cache.ClassSizeCrawler \ org.apache.derby.iapi.types.DataValueDescriptor \ java.math.BigDecimal \ org.apache.derby.impl.services.cache.Generic.CachedItem &lt;/code&gt; &lt;/pre&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>interfaceList</FieldName>
            <FieldType>Class&lt;?&gt;[]</FieldType>
        </Field>
        <Field>
            <FieldName>interfaceCount</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>classSizes</FieldName>
            <FieldType>Hashtable</FieldType>
        </Field>
        <Field>
            <FieldName>classSizes</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>verbose</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [classAndInterfaceList={"org.apache.derby.iapi.types.DataValueDescriptor"}]</InnerVar>
                <InnerVar>Class[] [interfaceList=new Class[classAndInterfaceList.length]]</InnerVar>
                <InnerVar>int [interfaceCount=0]</InnerVar>
                <InnerVar>Class[] [classList=new Class[classAndInterfaceList.length]]</InnerVar>
                <InnerVar>int [classCount=0]</InnerVar>
                <InnerVar>Class [classSizeClass=ClassSize.class]</InnerVar>
                <InnerVar>String [WS=System.getProperty("WS")]</InnerVar>
                <InnerVar>StringBuffer [baseDir=new StringBuffer(System.getProperty("classDir",""))]</InnerVar>
                <InnerVar>int [baseDirLength=baseDir.length()]</InnerVar>
                <InnerVar>StringBuffer [packagePrefix=new StringBuffer()]</InnerVar>
                <InnerVar>Hashtable&lt;String,int[]&gt; [classSizes=new Hashtable&lt;String,int[]&gt;()]</InnerVar>
                <InnerVar>ClassSizeCrawler [crawler=new ClassSizeCrawler(interfaceList,interfaceCount,classSizes)]</InnerVar>
                <InnerVar>String [outputFileName=System.getProperty("out",WS + "/java/org.apache.derby.iapi.services.cache.ClassSizeCatalogImpl.java")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ClassSize;setDummyCatalog;[]</InnerMethodInvoke>
                <InnerMethodInvoke>baseDir;setLength;[baseDirLength]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ClassSizeCrawler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>interfaceList</ParamName>
                    <ParamType>Class[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>interfaceCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>classSizes</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>crawl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>curDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>StringBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [filenames=curDir.list()]</InnerVar>
                <InnerVar>int [classNameLength=className.length()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>targetClass</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int[] [coefficients=ClassSize.getSizeCoefficients(targetClass)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>classSizes;put;[targetClass.getName(), coefficients]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>