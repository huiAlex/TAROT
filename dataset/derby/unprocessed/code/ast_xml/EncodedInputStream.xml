<Class>
    <Id>1973</Id>
    <Package>org.apache.derby.client.net</Package>
    <ClassName>EncodedInputStream</ClassName>
    <SuperClass>InputStream</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EncodedInputStream  /** 
 * Create an encoded stream from a &lt;code&gt;Reader&lt;/code&gt;. This is an internal class, used to pass readers of characters as streams of bytes. The characters will be represented according to the specified encoding. It is up to the caller to ensure the specified encoding is available, and in general only encodings available as default from Java 1.3 and up should be used. Currently, the encodings 'UTF8' and 'UTF-16BE' are used. Streams are obtained by calling the static methods of this class, for instance &lt;code&gt;createUTF8Stream&lt;/code&gt;.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>UTF_8</FieldName>
            <FieldType>Charset</FieldType>
        </Field>
        <Field>
            <FieldName>UTF_16BE</FieldName>
            <FieldType>Charset</FieldType>
        </Field>
        <Field>
            <FieldName>BUFFERED_CHAR_LEN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>suspendMarker</FieldName>
            <FieldType>ByteArrayInputStream</FieldType>
        </Field>
        <Field>
            <FieldName>reader_</FieldName>
            <FieldType>Reader</FieldType>
        </Field>
        <Field>
            <FieldName>decodedBuffer_</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>encodedStreamWriter_</FieldName>
            <FieldType>OutputStreamWriter</FieldType>
        </Field>
        <Field>
            <FieldName>encodedOutputStream_</FieldName>
            <FieldType>PublicBufferOutputStream</FieldType>
        </Field>
        <Field>
            <FieldName>encodedInputStream_</FieldName>
            <FieldType>ByteArrayInputStream</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>createUTF8Stream</MethodName>
            <MethodComment>/** 
 * Create a UTF-8 encoded stream from the given &lt;code&gt;Reader&lt;/code&gt;.
 * @param reader the &lt;code&gt;Reader&lt;/code&gt; to read characters from.
 * @return a byte-stream with UTF-8 encoded characters
 */
</MethodComment>
            <ReturnType>EncodedInputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>Reader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createUTF16BEStream</MethodName>
            <MethodComment>/** 
 * Create a UTF-16BE encoded stream from the given &lt;code&gt;Reader&lt;/code&gt;.
 * @param reader the &lt;code&gt;Reader&lt;/code&gt; to read characters from.
 * @return a byte-stream with UTF-16BE encoded characters
 */
</MethodComment>
            <ReturnType>EncodedInputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>Reader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>EncodedInputStream</MethodName>
            <MethodComment>/** 
 * Create an encoded stream for the specified &lt;code&gt;Reader&lt;/code&gt;.
 * @param reader the &lt;code&gt;Reader&lt;/code&gt; to read characters from
 * @param encoding the encoding to use in the encoded stream
 * @param charBufferSize the size of the char buffer. This is the numberof characters read at once from the &lt;code&gt;Reader&lt;/code&gt;.
 * @param initialByteBufferSize the initial size of the byte buffer.holding the encoded bytes
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>Reader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encoding</ParamName>
                    <ParamType>Charset</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>charBufferSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initialByteBufferSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reEncode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ByteArrayInputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>Reader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [count]</InnerVar>
                <InnerVar>int [encodedLength=encodedOutputStream_.size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>encodedOutputStream_;reset;[]</InnerMethodInvoke>
                <InnerMethodInvoke>encodedStreamWriter_;write;[decodedBuffer_, 0, count]</InnerMethodInvoke>
                <InnerMethodInvoke>encodedStreamWriter_;flush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>available</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [c=encodedInputStream_.read()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>