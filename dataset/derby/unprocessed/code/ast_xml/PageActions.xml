<Class>
    <Id>1305</Id>
    <Package>org.apache.derby.impl.store.raw.data</Package>
    <ClassName>PageActions</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>actionDelete</MethodName>
            <MethodComment>/** 
 * Set the Delete status of the record at the given slot. &lt;p&gt; Subclass that implements this method has to call  BasePage.setDeleteStatus to update the delete status on the in-memory  slot table. &lt;p&gt; &lt;BR&gt; MT - latched, page is latched when this methods is called.
 * @param t				    The transaction
 * @param page				the target page
 * @param slot				the slot number of the record 
 * @param recordId			the recordID of the record 
 * @param delete			set the delete status to this value
 * @param undo				logical undo logic if necessary
 * @exception StandardException	Standard Derby error policy
 * @see org.apache.derby.iapi.store.raw.Page#deleteAtSlot
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>delete</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>undo</ParamName>
                    <ParamType>LogicalUndo</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionUpdate</MethodName>
            <MethodComment>/** 
 * Update record at the given slot with this row. &lt;p&gt; &lt;BR&gt; MT - latched, page is latched when this methods is called.
 * @param t         	    The transaction
 * @param page			    the updated page
 * @param slot			    the slot number of the record 
 * @param recordId		    the recordID of the record 
 * @param row			    The new storable row
 * @param validColumns	    the columns that needs to be updated
 * @param realStartColumn	the first column that is updated
 * @param logBuffer		    where to prepare the log record
 * @param realSpaceOnPage	??
 * @param headRowHandle	the record handle of the head row
 * @return the next column to update in the row or,-1 if the update has been completed.
 * @exception StandardException	Standard Derby error policy
 * @see org.apache.derby.iapi.store.raw.Page#updateAtSlot
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>validColumns</ParamName>
                    <ParamType>FormatableBitSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>realStartColumn</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logBuffer</ParamName>
                    <ParamType>DynamicByteArrayOutputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>realSpaceOnPage</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>headRowHandle</ParamName>
                    <ParamType>RecordHandle</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionPurge</MethodName>
            <MethodComment>/** 
 * Purge the record at the given slot. &lt;p&gt; Subclass that implements this method has to remove the slot from the  base page in-memory slot table (removeAndShiftDown). &lt;p&gt; &lt;BR&gt; MT - latched, page is latched when this methods is called.
 * @param t				The transaction
 * @param slot			the starting slot number of the record 
 * @param num_rows		how many rows to purge
 * @param recordIds		the recordIDs of the record (an array of num_rows)
 * @exception StandardException	Standard Derby error policy
 * @see org.apache.derby.iapi.store.raw.Page#purgeAtSlot
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>num_rows</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordIds</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logData</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionUpdateField</MethodName>
            <MethodComment>/** 
 * Update a field of the record at the given slot with this value. &lt;p&gt; &lt;BR&gt; MT - latched, page is latched when this methods is called.
 * @param t         	The transaction
 * @param slot			the slot number of the record 
 * @param recordId		the recordID of the record 
 * @param fieldId		the fieldId of the value
 * @param newValue      the new value for the field
 * @param undo          if logical undo may be necessary, a function pointer to the access code where the logical undo  logic resides.   Null if logical undo is not  necessary.
 * @exception StandardException	Standard Derby error policy
 * @see org.apache.derby.iapi.store.raw.Page#updateFieldAtSlot
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newValue</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>undo</ParamName>
                    <ParamType>LogicalUndo</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionInsert</MethodName>
            <MethodComment>/** 
 * Insert record at the given slot with this recordId.  &lt;p&gt; &lt;BR&gt; MT - latched, page is latched when this methods is called.
 * @param t             	The transaction
 * @param slot			    the slot number of the record 
 * @param recordId		    the recordID of the record 
 * @param row			    The storable row
 * @param undo              if logical undo may be necessary, a function pointer to the access code where the logical  undo logic resides.   Null if logical undo is  not necessary.
 * @param insertFlag		see Page value for insertFlag
 * @exception StandardException	Standard Derby error policy
 * @see org.apache.derby.iapi.store.raw.Page#insertAtSlot
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>validColumns</ParamName>
                    <ParamType>FormatableBitSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>undo</ParamName>
                    <ParamType>LogicalUndo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>insertFlag</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>startColumn</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLongColumn</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>realStartColumn</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logBuffer</ParamName>
                    <ParamType>DynamicByteArrayOutputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>realSpaceOnPage</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>overflowThreshold</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionCopyRows</MethodName>
            <MethodComment>/** 
 * Copy num_rows from srcPage into deestpage. &lt;p&gt; Longer descrption of routine. &lt;p&gt;
 * @param t             	The transaction
 * @param destPage			the destination page
 * @param srcPage			the source page
 * @param destSlot			starting slot # of destination page to copy to
 * @param numRows			the number of rows to be copied
 * @param srcSlot			starting slot number of source page to copy from
 * @param recordIds		    an array of record ids to use in the destination page
 * @exception StandardException Standard Derby policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>destPage</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcPage</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>destSlot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numRows</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>srcSlot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordIds</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionInvalidatePage</MethodName>
            <MethodComment>/** 
 * Invalidate the page due to deallocation. Short one line description of routine. &lt;p&gt; Invalidate the page due to deallocation - this is the action on the page that is being deallocated as opposed to the action on the allocation  page. &lt;p&gt;
 * @param t             	The transaction
 * @param page				that page to be invalidated
 * @exception StandardException Standard Derby policy.  
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionInitPage</MethodName>
            <MethodComment>/** 
 * Initialize the page due to allocation. &lt;p&gt; Initialize the page due to allocation - this page could be brand new or  it could be being re-allocated. &lt;p&gt;
 * @param t             	The transaction
 * @param page				that page to be initialized
 * @param initFlag			flags set to values in BasePage.INIT_PAGE_* which indicates how the new page is to be initialized.
 * @param pageFormatId		The format Id of the page being initialized.
 * @exception StandardException Standard Derby policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>initFlag</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pageFormatId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pageOffset</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionShrinkReservedSpace</MethodName>
            <MethodComment>/** 
 * Shrink the reserved space to the new value.   &lt;p&gt; Shrink the reserved space to the new value.  This action is not undoable. &lt;p&gt;
 * @param t             	The transaction
 * @param page				that page to be initialized
 * @param slot				the slot number of the record 
 * @param recordId			the recordID of the record 
 * @param newValue			the new reserved space value
 * @exception StandardException Unexpected exception from the implementation
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>page</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slot</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newValue</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oldValue</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>