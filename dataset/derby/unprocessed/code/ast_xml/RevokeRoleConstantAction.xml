<Class>
    <Id>1242</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>RevokeRoleConstantAction</ClassName>
    <SuperClass>DDLConstantAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RevokeRoleConstantAction  /** 
 * This class performs actions that are ALWAYS performed for a REVOKE role statement at execution time.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>roleNames</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>grantees</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>withAdminOption</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RevokeRoleConstantAction</MethodName>
            <MethodComment>/** 
 * Make the ConstantAction for a CREATE ROLE statement. When executed, will create a role by the given name.
 * @param roleNames     List of the name of the role names being revoked
 * @param grantees       List of the authorization ids granted to role
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>roleNames</ParamName>
                    <ParamType>List</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>grantees</ParamName>
                    <ParamType>List</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeConstantAction</MethodName>
            <MethodComment>/** 
 * This is the guts of the Execution-time logic for REVOKE role.
 * @see org.apache.derby.iapi.sql.execute.ConstantAction#executeConstantAction
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
                <InnerVar>String [grantor=lcc.getCurrentUserId(activation)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dd;startWriting;[lcc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuffer [sb1=new StringBuffer()]</InnerVar>
                <InnerVar>StringBuffer [sb2=new StringBuffer()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>