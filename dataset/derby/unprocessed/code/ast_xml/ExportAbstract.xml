<Class>
    <Id>113</Id>
    <Package>org.apache.derby.impl.load</Package>
    <ClassName>ExportAbstract</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExportAbstract  /** 
 * &lt;P&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>controlFileReader</FieldName>
            <FieldType>ControlInfo</FieldType>
        </Field>
        <Field>
            <FieldName>exportResultSetForObject</FieldName>
            <FieldType>ExportResultSetForObject</FieldType>
        </Field>
        <Field>
            <FieldName>exportWriteData</FieldName>
            <FieldType>ExportWriteDataAbstract</FieldType>
        </Field>
        <Field>
            <FieldName>con</FieldName>
            <FieldType>Connection</FieldType>
        </Field>
        <Field>
            <FieldName>entityName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>schemaName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>selectStatement</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>lobsInExtFile</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>resultSetForEntity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ResultSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ResultSet [rs=exportResultSetForObject.getResultSet()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOneRowAtATime</MethodName>
            <MethodComment>/** 
 * convert resultset data for the current row to string array.  If large objects are being exported to an external file,  then write the lob  data into the external file and store  the lob data location  in the string array for that column.
 * @param rs   resultset that contains the data to export.
 * @param isLargeBinary  boolean array, whose elements willbe true, if the column type is blob/or  other large binary type, otherwise false. 
 * @param isLargeChar   boolean array, whose elements willbe true, if the column type is clob/  other large char type, otherwise false. 
 * @return A string array of the row data to write to export file.
 * @exception Exception  if any errors during conversion. 
 */
</MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rs</ParamName>
                    <ParamType>ResultSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLargeBinary</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLargeChar</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>exportResultSetForObject;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stringifyObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>udt</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DynamicByteArrayOutputStream [dbaos=new DynamicByteArrayOutputStream()]</InnerVar>
                <InnerVar>ObjectOutputStream [oos=new ObjectOutputStream(dbaos)]</InnerVar>
                <InnerVar>byte[] [buffer=dbaos.getByteArray()]</InnerVar>
                <InnerVar>int [length=dbaos.getUsed()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>oos;writeObject;[udt]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getControlFileReader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ControlInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExportWriteData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExportWriteDataAbstract</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doAllTheWork</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ResultSet [rs=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>