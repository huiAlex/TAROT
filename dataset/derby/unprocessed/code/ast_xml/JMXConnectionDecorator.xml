<Class>
    <Id>1790</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.management</Package>
    <ClassName>JMXConnectionDecorator</ClassName>
    <SuperClass>BaseTestSetup</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JMXConnectionDecorator  /** 
 * Interface for MBeanTest to get a MBeanServerConnection connection from. A decorator will setup mbeanServerConnector to point to an implementation of this class to obtain JMX connections.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>remote</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>oldGetter</FieldName>
            <FieldType>JMXConnectionGetter</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>remoteNoSecurity</MethodName>
            <MethodComment>/** 
 * Decorate a test so to use JMX connections from the passed in url. 
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>test</ParamName>
                    <ParamType>Test</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>platformMBeanServer</MethodName>
            <MethodComment>/** 
 * Decorate a test to use JMX connections directly from the platform MBean Server.
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>test</ParamName>
                    <ParamType>Test</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JMXConnectionDecorator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>test</ParamName>
                    <ParamType>Test</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>remote</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>JMXConnectionGetter [getter=remote ? new RemoteConnectionGetter(getJmxUrl()) : new PlatformConnectionGetter()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>JMXConnectionGetter.mbeanServerConnector;set;[getter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>JMXConnectionGetter.mbeanServerConnector;set;[oldGetter]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJmxUrl</MethodName>
            <MethodComment>/** 
 * Creates a URL for connecting to the platform MBean server on the host specified by the network server hostname of this test configuration. The JMX port number used is also retreived from the test configuration.
 * @return a service URL for connecting to the platform MBean server
 * @throws MalformedURLException if the URL is malformed
 */
</MethodComment>
            <ReturnType>JMXServiceURL</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [hostname=TestConfiguration.getCurrent().getHostName()]</InnerVar>
                <InnerVar>int [jmxPort=TestConfiguration.getCurrent().getJmxPort()]</InnerVar>
                <InnerVar>JMXServiceURL [url=new JMXServiceURL("service:jmx:rmi:///jndi/rmi://" + hostname + ":"+ jmxPort+ "/jmxrmi")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MalformedURLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>