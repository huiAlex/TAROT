<Class>
    <Id>954</Id>
    <Package>org.apache.derbyTesting.unitTests.services</Package>
    <ClassName>T_DaemonService</ClassName>
    <SuperClass>T_MultiThreadedIterations</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>T_DaemonService  /** 
 * This test exercices the DaemonFactory and DaemonService implementation
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>testDaemon</FieldName>
            <FieldType>DaemonService</FieldType>
        </Field>
        <Field>
            <FieldName>random</FieldName>
            <FieldType>Random</FieldType>
        </Field>
        <Field>
            <FieldName>serviceRecord</FieldName>
            <FieldType>Vector</FieldType>
        </Field>
        <Field>
            <FieldName>serviceRecord</FieldName>
            <FieldType>T_Serviceable</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>T_DaemonService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModuleToTestProtocolName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setupTest</MethodName>
            <MethodComment>/** 
 * Methods required by T_MultiIterations
 * @exception T_Fail unexpected behaviour from the API
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DaemonFactory [daemonFactory]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>joinSetupTest</MethodName>
            <MethodComment>/** 
 * Methods required by T_MultiThreadedIterations
 * @exception T_Fail unexpected behaviour from the API
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newTestObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T_MultiThreadedIterations</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTestSet</MethodName>
            <MethodComment>/** 
 * @exception T_Fail - test failed
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>serviceRecord;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T01</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>daemon</ParamName>
                    <ParamType>DaemonService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>T_Serviceable [s1=new T_Serviceable(false)]</InnerVar>
                <InnerVar>int [clientNumber1=daemon.subscribe(s1,false)]</InnerVar>
                <InnerVar>T_Serviceable [s2=new T_Serviceable(true)]</InnerVar>
                <InnerVar>int [clientNumber2=daemon.subscribe(s2,true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>serviceRecord;addElement;[s1]</InnerMethodInvoke>
                <InnerMethodInvoke>s1;setClientNumber;[clientNumber1]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceRecord;addElement;[s2]</InnerMethodInvoke>
                <InnerMethodInvoke>s2;setClientNumber;[clientNumber2]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;serviceNow;[clientNumber2]</InnerMethodInvoke>
                <InnerMethodInvoke>s2;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;randomSleep;[]</InnerMethodInvoke>
                <InnerMethodInvoke>s1;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>s2;t_check;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;PASS;["T01"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;randomSleep;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T02</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>daemon</ParamName>
                    <ParamType>DaemonService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [requeue=10]</InnerVar>
                <InnerVar>T_Serviceable [e1=new T_Serviceable(1)]</InnerVar>
                <InnerVar>T_Serviceable [e2=new T_Serviceable(requeue)]</InnerVar>
                <InnerVar>T_Serviceable [e3=new T_Serviceable(1)]</InnerVar>
                <InnerVar>T_Serviceable [e4=new T_Serviceable(requeue)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>serviceRecord;addElement;[e1]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e1, true]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceRecord;addElement;[e2]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e2, true]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceRecord;addElement;[e3]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e3, false]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceRecord;addElement;[e4]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e4, false]</InnerMethodInvoke>
                <InnerMethodInvoke>null;randomSleep;[]</InnerMethodInvoke>
                <InnerMethodInvoke>e1;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>e2;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>e3;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>e4;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>e2;t_wait;[requeue]</InnerMethodInvoke>
                <InnerMethodInvoke>e4;t_wait;[requeue]</InnerMethodInvoke>
                <InnerMethodInvoke>e1;t_check;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>e3;t_check;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;PASS;["T02"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;randomSleep;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T03</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>daemon</ParamName>
                    <ParamType>DaemonService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>T_Serviceable [s1=new T_Serviceable(false)]</InnerVar>
                <InnerVar>int [sub1=daemon.subscribe(s1,false)]</InnerVar>
                <InnerVar>T_Serviceable [e1=new T_Serviceable(1)]</InnerVar>
                <InnerVar>T_Serviceable [s2=new T_Serviceable(false)]</InnerVar>
                <InnerVar>int [sub2=daemon.subscribe(s2,false)]</InnerVar>
                <InnerVar>int [realsub2=daemon.subscribe(s2,false)]</InnerVar>
                <InnerVar>int [save]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>serviceRecord;addElement;[s1]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceRecord;addElement;[e1]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e1, false]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e1, false]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e1, false]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e1, false]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;enqueue;[e1, false]</InnerMethodInvoke>
                <InnerMethodInvoke>serviceRecord;addElement;[s2]</InnerMethodInvoke>
                <InnerMethodInvoke>s2;setClientNumber;[realsub2]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;unsubscribe;[sub1]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;unsubscribe;[sub2]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;serviceNow;[sub1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;randomSleep;[]</InnerMethodInvoke>
                <InnerMethodInvoke>e1;t_wait;[5]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;serviceNow;[sub1]</InnerMethodInvoke>
                <InnerMethodInvoke>s2;t_wait;[3]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;serviceNow;[sub1]</InnerMethodInvoke>
                <InnerMethodInvoke>s1;setClientNumber;[sub1]</InnerMethodInvoke>
                <InnerMethodInvoke>daemon;serviceNow;[sub1]</InnerMethodInvoke>
                <InnerMethodInvoke>s1;t_wait;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>e1;t_check;[5]</InnerMethodInvoke>
                <InnerMethodInvoke>null;PASS;["T03"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;randomSleep;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>t_checkStatus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>daemon</ParamName>
                    <ParamType>DaemonService</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;PASS;["T_CheckStatus"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomSleep</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startSystemModule</MethodName>
            <MethodComment>/** 
 * Privileged startup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factoryInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>