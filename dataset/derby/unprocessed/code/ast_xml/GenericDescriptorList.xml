<Class>
    <Id>1478</Id>
    <Package>org.apache.derby.iapi.sql.dictionary</Package>
    <ClassName>GenericDescriptorList</ClassName>
    <SuperClass>ArrayList</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>scanned</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setScanned</MethodName>
            <MethodComment>/** 
 * Mark whether or not the underlying system table has been scanned.  (If a table does not have any constraints then the size of its CDL will always be 0.  We used these get/set methods to determine when we need to scan the table.
 * @param scanned	Whether or not the underlying system table has been scanned.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scanned</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScanned</MethodName>
            <MethodComment>/** 
 * Return whether or not the underlying system table has been scanned.
 * @return		Where or not the underlying system table has been scanned.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUniqueTupleDescriptor</MethodName>
            <MethodComment>/** 
 * Get the UniqueTupleDescriptor that matches the  input uuid.
 * @param uuid		The UUID for the object
 * @return The matching UniqueTupleDescriptor.
 */
</MethodComment>
            <ReturnType>E</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuid</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>