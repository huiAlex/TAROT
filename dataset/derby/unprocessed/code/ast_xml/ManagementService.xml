<Class>
    <Id>824</Id>
    <Package>org.apache.derby.iapi.services.jmx</Package>
    <ClassName>ManagementService</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ManagementMBean</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ManagementService  /** 
 * This interface represents a Management Service. An implementation of this  service is started by the Derby monitor if the system property derby.system.jmx has been set. The following services are provided: &lt;li&gt; Create and start an instance of MBean server to register MBeans. &lt;li&gt; Create managed beans (MBeans) to instrument derby resources for management and monitoring. The following code can be used to locate an instance of this service if running. ManagementService ms = (ManagementService) Monitor.getSystemModule(Module.JMX);
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DERBY_JMX_DOMAIN</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>registerMBean</MethodName>
            <MethodComment>/** 
 * Registers an MBean with the MBean server. The mbean will be unregistered automatically when Derby shuts down.
 * @param bean The MBean to wrap with a StandardMBean and register
 * @param beanInterface The management interface for the MBean.
 * @param keyProperties The String representation of the MBean's key properties,they will be added into the ObjectName with Derby's domain. Key type should be first with a short name for the bean, typically the class name without the package.
 * @return An identifier that can later be used to unregister the mbean.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bean</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>beanInterface</ParamName>
                    <ParamType>T</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyProperties</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unregisterMBean</MethodName>
            <MethodComment>/** 
 * Unregister a mbean previously registered with registerMBean.
 * @param mbeanIdentifier An identifier returned by registerMBean.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mbeanIdentifier</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>quotePropertyValue</MethodName>
            <MethodComment>/** 
 * Quote an MBean key property value, so that it is safe to pass to {@link #registerMBean} even if it potentially contains specialcharacters.
 * @param value the value to quote
 * @return the quoted value
 * @see javax.management.ObjectName#quote(String)
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>