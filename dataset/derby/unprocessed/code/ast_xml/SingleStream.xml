<Class>
    <Id>1863</Id>
    <Package>org.apache.derby.impl.services.stream</Package>
    <ClassName>SingleStream</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>InfoStreams</SuperInterface>
        <SuperInterface>ModuleControl</SuperInterface>
        <SuperInterface>java.security.PrivilegedAction</SuperInterface>
        <SuperInterface>HeaderPrintWriter</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SingleStream  /** 
 * The Basic Services provide InfoStreams for reporting information. Two streams are provided: trace and error. It is configurable where these streams are directed. &lt;p&gt; Errors will be printed to the error stream in addition to being sent to the client. &lt;p&gt; By default both streams are sent to an error log for the system. When creating a message for a stream, you can create an initial entry with header information and then append to it as many times as desired. &lt;p&gt; Note: if character encodings are needed, the use of java.io.*OutputStream's should be replaced with java.io.*Writer's (assuming the Writer interface remains stable in JDK1.1)
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>theStream</FieldName>
            <FieldType>HeaderPrintWriter</FieldType>
        </Field>
        <Field>
            <FieldName>PBfileName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PBheader</FieldName>
            <FieldType>PrintWriterGetHeader</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SingleStream</MethodName>
            <MethodComment>/** 
 * The no-arg public constructor for ModuleControl's use.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>boot</MethodName>
            <MethodComment>/** 
 * @see org.apache.derby.iapi.services.monitor.ModuleControl#boot
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>create</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * @see org.apache.derby.iapi.services.monitor.ModuleControl#stop
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>((BasicHeaderPrintWriter)theStream);complete;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream</MethodName>
            <MethodComment>/** 
 * @see org.apache.derby.iapi.services.stream.InfoStreams#stream
 */
</MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeStream</MethodName>
            <MethodComment>/** 
 * Make the stream; note that service properties override application and system properties.
 */
</MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>PrintWriterGetHeader [header=makeHeader()]</InnerVar>
                <InnerVar>HeaderPrintWriter [hpw=makeHPW(header)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeHeader</MethodName>
            <MethodComment>/** 
 * Return a new header object.
 */
</MethodComment>
            <ReturnType>PrintWriterGetHeader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeHPW</MethodName>
            <MethodComment>/** 
 * create a HeaderPrintWriter based on the header. Will still need to determine the target type.
 */
</MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [target=PropertyUtil.getSystemProperty(Property.ERRORLOG_STYLE_PROPERTY)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PBmakeFileHPW</MethodName>
            <MethodComment>/** 
 * Make a header print writer out of a file name. If it is a relative path name then it is taken as relative to derby.system.home if that is set, otherwise relative to the current directory. If the path name is absolute then it is taken as absolute.
 */
</MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [appendInfoLog=PropertyUtil.getSystemBoolean(Property.LOG_FILE_APPEND)]</InnerVar>
                <InnerVar>File [streamFile=new File(fileName)]</InnerVar>
                <InnerVar>FileOutputStream [fos]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeMethodHPW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>methodInvocation</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>canClose</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [lastDot=methodInvocation.lastIndexOf('.')]</InnerVar>
                <InnerVar>String [className=methodInvocation.substring(0,lastDot)]</InnerVar>
                <InnerVar>String [methodName=methodInvocation.substring(lastDot + 1)]</InnerVar>
                <InnerVar>Throwable [t]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeStyleHPW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>style</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HeaderPrintWriter [res=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeFieldHPW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldAccess</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [lastDot=fieldAccess.lastIndexOf('.')]</InnerVar>
                <InnerVar>String [className=fieldAccess.substring(0,lastDot)]</InnerVar>
                <InnerVar>String [fieldName=fieldAccess.substring(lastDot + 1,fieldAccess.length())]</InnerVar>
                <InnerVar>Throwable [t]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeValueHPW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>whereFrom</ParamName>
                    <ParamType>Member</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>canClose</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HeaderPrintWriter [hpw=useDefaultStream(header)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDefaultStream</MethodName>
            <MethodComment>/** 
 * Used when no configuration information exists for a stream.
 */
</MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>useDefaultStream</MethodName>
            <MethodComment>/** 
 * Used when creating a stream creates an error.
 */
</MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>useDefaultStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HeaderPrintWriter [hpw=useDefaultStream(header)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeFileHPW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>header</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HeaderPrintWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMonitor</MethodName>
            <MethodComment>/** 
 * Privileged Monitor lookup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>ModuleFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ModuleFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>