<Class>
    <Id>1518</Id>
    <Package>org.apache.derbyTesting.system.oe.client</Package>
    <ClassName>MultiThreadSubmitter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>MultiThreadSubmitter  /** 
 * Execute transactions using multiple threads. A single thread uses a single submitter, submitters are created outside of this class.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>multiRun</MethodName>
            <MethodComment>/** 
 * Execute count transactions per submitter using a newly created thread for each submitter. In total (count*submitter.length) transactions will be executed. The time returned will be the time to execute all the transactions. Each submitter will have its clearTransactionCount called before the run.
 * @param submitters Submitters to use.
 * @param displays Displays for each submitter.If null then null will be passed into each transaction execution
 * @param count Number of transactions per thread.
 * @return Time to excute all of the transactions.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>submitters</ParamName>
                    <ParamType>Submitter[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displays</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Thread[] [threads=new Thread[submitters.length]]</InnerVar>
                <InnerVar>long [start=System.currentTimeMillis()]</InnerVar>
                <InnerVar>long [end=System.currentTimeMillis()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newThread</MethodName>
            <MethodComment>/** 
 * Return a thread that will run count transactions using a submitter.
 * @param threadId Number of thread.
 * @param submitter Submitter
 * @param displayData DisplayData for this submitter
 * @param count Number of transactions to run.
 * @return Thread (not started)
 */
</MethodComment>
            <ReturnType>Thread</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>threadId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>submitter</ParamName>
                    <ParamType>Submitter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Thread [t=new Thread("OE_Thread:" + threadId){
  public void run(){
    try {
      submitter.runTransactions(displayData,count);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>