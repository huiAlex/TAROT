<Class>
    <Id>239</Id>
    <Package>org.apache.derby.impl.jdbc.authentication</Package>
    <ClassName>LDAPAuthenticationSchemeImpl</ClassName>
    <SuperClass>JNDIAuthenticationSchemeBase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LDAPAuthenticationSchemeImpl  /** 
 * This is the Derby LDAP authentication scheme implementation. JNDI system/environment properties can be set at the database level as database properties. They will be picked-up and set in the JNDI initial context if any are found. We do connect first to the LDAP server in order to retrieve the user's distinguished name (DN) and then we reconnect and try to authenticate with the user's DN and passed-in password. In 2.0 release, we first connect to do a search (user full DN lookup). This initial lookup can be done through anonymous bind or using special LDAP search credentials that the user may have configured on the LDAP settings for the database or the system. It is a typical operation with LDAP servers where sometimes it is hard to tell/guess in advance a users' full DN's. NOTE: In a future release, we will cache/maintain the user DN within the the Derby database or system to avoid the initial lookup. Also note that LDAP search/retrieval operations are usually very fast. The default LDAP url is ldap:/// (ldap://localhost:389/)
 * @see org.apache.derby.authentication.UserAuthenticator 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>dfltLDAPURL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>searchBaseDN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>leftSearchFilter</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>rightSearchFilter</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>useUserPropertyAsDN</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>searchAuthDN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>searchAuthPW</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>attrDN</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>LDAP_SEARCH_BASE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LDAP_SEARCH_FILTER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LDAP_SEARCH_AUTH_DN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LDAP_SEARCH_AUTH_PW</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LDAP_LOCAL_USER_DN</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LDAP_SEARCH_FILTER_USERNAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LDAPAuthenticationSchemeImpl</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>as</ParamName>
                    <ParamType>JNDIAuthenticationService</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbProperties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>authenticateUser</MethodName>
            <MethodComment>/** 
 * Authenticate the passed-in user's credentials. We authenticate against a LDAP Server.
 * @param userName		The user's name used to connect to JBMS system
 * @param userPassword	The user's password used to connect to JBMS system
 * @param databaseName	The database which the user wants to connect to.
 * @param info			Additional jdbc connection info.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>userName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>userPassword</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>databaseName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>info</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Exception [e]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>java.sql.SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>privInitialDirContext</MethodName>
            <MethodComment>/** 
 * Call new InitialDirContext in a privilege block
 * @param env environment used to create the initial DirContext. Null indicates an empty environment.
 * @return an initial DirContext using the supplied environment. 
 */
</MethodComment>
            <ReturnType>DirContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>env</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NamingException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DirContext</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>NamingException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setJNDIProviderProperties</MethodName>
            <MethodComment>/** 
 * This method basically tests and sets default/expected JNDI properties for the JNDI provider scheme (here it is LDAP).
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [ldapSearchBase=authenticationService.getProperty(LDAP_SEARCH_BASE)]</InnerVar>
                <InnerVar>String [searchFilterProp=authenticationService.getProperty(LDAP_SEARCH_FILTER)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FileOutputStream</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDNFromUID</MethodName>
            <MethodComment>/** 
 * Search for the full user's DN in the LDAP server. LDAP server bind may or not be anonymous. If the admin does not want us to do anonymous bind/search, then we must have been given principal/credentials in order to successfully bind to perform the user's DN search.
 * @exception NamingException if could not retrieve the user DN.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uid</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [env=null]</InnerVar>
                <InnerVar>DirContext [ctx=privInitialDirContext(env)]</InnerVar>
                <InnerVar>SearchControls [ctls=new SearchControls()]</InnerVar>
                <InnerVar>String [searchFilter=this.leftSearchFilter + uid + this.rightSearchFilter]</InnerVar>
                <InnerVar>NamingEnumeration [results=ctx.search(searchBaseDN,searchFilter,ctls)]</InnerVar>
                <InnerVar>SearchResult [result=(SearchResult)results.next()]</InnerVar>
                <InnerVar>NameParser [parser=ctx.getNameParser(searchBaseDN)]</InnerVar>
                <InnerVar>Name [userDN=parser.parse(searchBaseDN)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ctls;setSearchScope;[SearchControls.SUBTREE_SCOPE]</InnerMethodInvoke>
                <InnerMethodInvoke>ctls;setReturningAttributes;[attrDN]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>javax.naming.NamingException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>