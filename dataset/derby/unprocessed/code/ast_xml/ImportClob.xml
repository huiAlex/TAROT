<Class>
    <Id>1406</Id>
    <Package>org.apache.derby.impl.load</Package>
    <ClassName>ImportClob</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>java.sql.Clob</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ImportClob  /** 
 * This class implements  &lt;code &gt; java.sql.CLOB interface &lt;/code&gt;.   Objects created using the &lt;code&gt; ImportClob &lt;/code&gt; class  are  intended to be be used to create a clob object of the data  stored  in an import file.  Only the routines that are needed  to read the  clob data for the clob columns by the  inserts done through the VTI   have real implementations,  Other routines are dummy ones to satisfy &lt;code&gt; java.sql.Clob &lt;/code&gt;  interface.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>lobFile</FieldName>
            <FieldType>ImportLobFile</FieldType>
        </Field>
        <Field>
            <FieldName>position</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>length</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>clobLength</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>clobData</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ImportClob</MethodName>
            <MethodComment>/** 
 * Create a import Clob object, that reads &lt;code&gt; length &lt;/code&gt; amount of  data  from an external file, starting at &lt;code&gt; position &lt;/code&gt;. 
 * @param lobFile  lob file resource object, using which data is read.
 * @param position  byte offset in the file, of this clob column data. 
 * @param length   length of this clob object data in bytes. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lobFile</ParamName>
                    <ParamType>ImportLobFile</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>position</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>length</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ImportClob</MethodName>
            <MethodComment>/** 
 * Create a Clob object, whose value is given as string.  
 * @param data  String that contains the clob data. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>length</MethodName>
            <MethodComment>/** 
 * Returns the number of characters in this &lt;code&gt;CLOB&lt;/code&gt;  object.
 * @return length of the &lt;code&gt;CLOB&lt;/code&gt; in characters
 * @exception SQLException on any error.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCharacterStream</MethodName>
            <MethodComment>/** 
 * Returns  &lt;code&gt;CLOB&lt;/code&gt; value designated by this &lt;code&gt;Clob&lt;/code&gt; object as a &lt;code&gt; Reader &lt;/code&gt;.
 * @return a Reader containing the &lt;code&gt;CLOB&lt;/code&gt; data.
 * @exception SQLException if any error occurs while setting up this clob data in the import file as Reader. 
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>java.io.Reader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSubString</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>length</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAsciiStream</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>java.io.InputStream</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>position</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>searchstr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>position</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>searchstr</ParamName>
                    <ParamType>Clob</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setString</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>str</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setString</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>str</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>offset</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>len</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setAsciiStream</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>java.io.OutputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCharacterStream</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>java.io.Writer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>truncate</MethodName>
            <MethodComment>/** 
 * This routine is not used by the VTI to read the data, so no  implementation is provided, an exception is thrown if it is called.  
 * @see java.sql.Clob 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>len</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCharacterStream</MethodName>
            <MethodComment>/** 
 * Raise error, not used by import 
 */
</MethodComment>
            <ReturnType>Reader</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>length</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>free</MethodName>
            <MethodComment>/** 
 * Raise error, not used by import 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>methodNotImplemented</MethodName>
            <MethodComment>/** 
 * Return an unimplemented feature error 
 */
</MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>