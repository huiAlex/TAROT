<Class>
    <Id>847</Id>
    <Package>org.apache.derbyBuild</Package>
    <ClassName>propertyconfig</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>propertyconfig  /** 
 * Usage:  java propertyConfig &lt;master file&gt; &lt;config&gt; &lt;output file&gt; &lt;B&gt; e.g., java propertyConfig dbms.properties cloudsync cloudsync.dbms.properties  &lt;P&gt; This program takes a master property file, and using the configuration specification, generate an output file that only contains the properties for that particular configuration. &lt;P&gt; For the different types of legitamite configurations, please see org.apache.derby.modules.properties &lt;P&gt; PropertySplitter will look at cloudscape.config.&lt;tag&gt; to see which configuration a particular module belongs to. &lt;B&gt;E.g., cloudscape.config.dataComm.listen=cloudtarget,cloudsync &lt;B&gt;this means all properties associated with dataComm.listen will be in the output properties file only if we are generating for the cloudsync or cloudtarget configuration.  They will not be in the output properties file if we are generating for the cloud or cloudscape configuration.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>header</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>footer</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [masterfile=new File(args[0])]</InnerVar>
                <InnerVar>File [outputfile=new File(args[2])]</InnerVar>
                <InnerVar>Properties [masterProp=new Properties()]</InnerVar>
                <InnerVar>FileInputStream [is=new FileInputStream(masterfile)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;process;[masterProp, args[1], outputfile]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment>/** 
 * For each module with a particular tag in derby.module.&lt;tag&gt;, see if there is any configuration restriction.  If there is no cloudscape.config.&lt;tag&gt; property, then this module should be present in all configurations.  If there is a cloudscape.config.&lt;tag&gt;, then this module should only be present in the configurations listed. &lt;br&gt;If this module should be present or this configuration, then gather up all the properties belong to this module and send it to the output file.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>moduleList</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>config</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outputfile</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [outputProp=new Properties()]</InnerVar>
                <InnerVar>FileOutputStream [os=new FileOutputStream(outputfile)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printUsageAndExit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuffer [buf=new StringBuffer(400)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>buf.append("Usage propertyConfig &lt;masterFile&gt; &lt;config&gt; &lt;outputFile&gt;\n").append("masterFile must be a pre-existing properties file ").append("containing all the modules properites\n").append("config must be a configuration defined in ").append("org.apache.derby.modules.properties.\n").append("outputFile must not be a pre-existing properties file.\n\n").append("propertyConfig will generate the outputFile based on").append("the masterfile and the configuration specified.");append;["\n\nE.g., java propertyConfig dbms.properties cloudsync dbms.cloudsync.properties\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;[buf.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>System;exit;[1]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>