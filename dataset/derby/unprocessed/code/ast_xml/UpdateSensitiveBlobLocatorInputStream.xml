<Class>
    <Id>1328</Id>
    <Package>org.apache.derby.client.am</Package>
    <ClassName>UpdateSensitiveBlobLocatorInputStream</ClassName>
    <SuperClass>UpdateSensitiveLOBLocatorInputStream</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>UpdateSensitiveBlobLocatorInputStream  /** 
 * This class extends from the UpdateSensitiveLOBLocatorInputStream and creates and returns an implementation of the Blob specific locator InputStream. It also over-rides the reCreateStream method which re-creates the underlying Blob locator stream whenever a update happens on the Blob object associated with this stream.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>blob</FieldName>
            <FieldType>ClientBlob</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>UpdateSensitiveBlobLocatorInputStream</MethodName>
            <MethodComment>/** 
 * Creates an instance of the BlobLocatorInputStream and and calls the super class constructors with  appropriate initializers.
 * @param con connection to be used to read the{@code Blob} value from the server
 * @param blob {@code Blob} object that contains locator forthe  {@code Blob} value on the server.
 * @throws SqlException If any exception occurs during streamcreation.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>con</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>blob</ParamName>
                    <ParamType>ClientBlob</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>UpdateSensitiveBlobLocatorInputStream</MethodName>
            <MethodComment>/** 
 * Creates an instance of the BlobLocatorInputStream.
 * @param con connection to be used to read the{@code Blob} value from the server
 * @param blob {@code Blob} object that contains locator forthe  {@code Blob} value on the server.
 * @param position the position in the {@code Blob} of the firstbyte to read.
 * @param length the maximum number of bytes to read fromthe  {@code Blob}.
 * @throws SqlException If any exception occurs during streamcreation.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>con</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>blob</ParamName>
                    <ParamType>ClientBlob</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>position</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>length</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reCreateStream</MethodName>
            <MethodComment>/** 
 * Re-creates the underlying Locator stream with the current position and the length values if specified.
 * @throws SqlException If any exception occurs whilere-creating the underlying streams.
 */
</MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>InputStream [is_]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>