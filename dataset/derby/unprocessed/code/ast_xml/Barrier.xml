<Class>
    <Id>1101</Id>
    <Package>org.apache.derbyTesting.functionTests.util</Package>
    <ClassName>Barrier</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Barrier  /** 
 * In the absence of java.util.concurrent.CyclicBarrier on some of the platforms we test, create our own barrier class. This class allows threads to wait for one another on specific locations, so that they know they're all in the expected state.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>numThreads</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Barrier</MethodName>
            <MethodComment>/** 
 * Create a barrier for the specified number of threads. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>numThreads</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>await</MethodName>
            <MethodComment>/** 
 * Wait until  {@code numThreads} have called {@code await()} on thisbarrier, then proceed.
 * @throws InterruptedException if the thread is interrupted whilewaiting for the other threads to reach the barrier.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Assert;assertTrue;["Too many threads reached the barrier", numThreads &gt; 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>