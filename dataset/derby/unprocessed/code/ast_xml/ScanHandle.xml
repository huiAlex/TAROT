<Class>
    <Id>2065</Id>
    <Package>org.apache.derby.iapi.store.raw</Package>
    <ClassName>ScanHandle</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ScanHandle  /** 
 * Inteface for scanning the log from outside the RawStore.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment>/** 
 * Position to the next log record. 
 * @return true if the log contains a next flushed log record andfalse otherwise. If this returns false it is incorrect to make any of the other calls on this interface.
 * @exception StandardException Oops
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGroup</MethodName>
            <MethodComment>/** 
 * Get the group for the current log record.
 * @exception StandardException Oops
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLoggable</MethodName>
            <MethodComment>/** 
 * Get the Loggable associated with the currentLogRecord
 * @exception StandardException Oops
 */
</MethodComment>
            <ReturnType>Loggable</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOptionalData</MethodName>
            <MethodComment>/** 
 * Get an InputStream for reading the optional data associated with the current log record. This may only be called once per log record.
 * @exception StandardException Oops
 */
</MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInstant</MethodName>
            <MethodComment>/** 
 * Get the DatabaseInstant for the current log record.
 * @exception StandardException Oops
 */
</MethodComment>
            <ReturnType>DatabaseInstant</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransactionId</MethodName>
            <MethodComment>/** 
 * Get the TransactionId for the current log record.
 * @exception StandardException Oops
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment>/** 
 * Close this scan.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>