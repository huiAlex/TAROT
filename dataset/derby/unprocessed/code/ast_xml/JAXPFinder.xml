<Class>
    <Id>1687</Id>
    <Package>org.apache.derbyTesting.junit</Package>
    <ClassName>JAXPFinder</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JAXPFinder  /** 
 * Simple class used for determining the location of the jar  file (based on the user's classpath) that contains the JAXP implementation.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>jaxpURLString</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getJAXPParserLocation</MethodName>
            <MethodComment>/** 
 * Return the string form of the URL for the jar file that contains whichever JAXP parser implementation is picked up from the user's classpath.  If the JAXP parser is not in the user's classpath, then it must be embedded within the JVM (either implicitly or else through use of "endorsed standards" jars), in which case we return null. NOTE: Assumption is that we only get here if we know there is in fact a JAXP parser available to the JVM.  I.e. if a call to the "classpathHasXalanAndJAXP()" method of junit/XML.java returns true.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>