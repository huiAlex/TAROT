<Class>
    <Id>2117</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>InsertConstantAction</ClassName>
    <SuperClass>WriteCursorConstantAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InsertConstantAction  /** 
 * This class  describes compiled constants that are passed into InsertResultSets.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>indexedCols</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>schemaName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tableName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>columnNames</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>autoincRowLocation</FieldName>
            <FieldType>RowLocation[]</FieldType>
        </Field>
        <Field>
            <FieldName>autoincIncrement</FieldName>
            <FieldType>long[]</FieldType>
        </Field>
        <Field>
            <FieldName>firstAutoGenColumn</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>hasDeferrableChecks</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>identitySequenceUUIDString</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>InsertConstantAction</MethodName>
            <MethodComment>/** 
 * Public niladic constructor. Needed for Formatable interface to work.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>InsertConstantAction</MethodName>
            <MethodComment>/** 
 * Make the ConstantAction for an INSERT statement.
 * @param tableDescriptor
 * @param conglomId	Conglomerate ID.
 * @param heapSCOCI	StaticCompiledOpenConglomInfo for heap.
 * @param irgs			Index descriptors
 * @param indexCIDS	Conglomerate IDs of indices
 * @param indexSCOCIs	StaticCompiledOpenConglomInfos for indexes.
 * @param indexNames   Names of indices on this table for error reporting.
 * @param deferred		True means process as a deferred insert.
 * @param hasDeferrableChecks The target table has deferrable CHECK constraints
 * @param targetProperties	Properties on the target table.
 * @param targetUUID	UUID of target table
 * @param lockMode		The lockMode to use on the target table
 * @param fkInfo		Array of structures containing foreign key info, if any (may be null)
 * @param triggerInfo	Array of structures containing trigger info, if any (may be null)
 * @param streamStorableHeapColIds Null for non rep. (0 based)
 * @param indexedCols	boolean[] of which (0-based) columns are indexed.
 * @param singleRowSource		Whether or not source is a single row source
 * @param autoincRowLocation Array of rowlocations of autoincrement valuesin SYSCOLUMNS for each ai column.
 * @param underMerge   True if this is an action of a MERGE statement.
 * @param identitySequenceUUIDString   For 10.11 and higher, the handle on the sequence for the identity column
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tableDescriptor</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conglomId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>heapSCOCI</ParamName>
                    <ParamType>StaticCompiledOpenConglomInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>irgs</ParamName>
                    <ParamType>IndexRowGenerator[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexCIDS</ParamName>
                    <ParamType>long[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexSCOCIs</ParamName>
                    <ParamType>StaticCompiledOpenConglomInfo[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexNames</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>deferred</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hasDeferrableChecks</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetProperties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetUUID</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lockMode</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fkInfo</ParamName>
                    <ParamType>FKInfo[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>triggerInfo</ParamName>
                    <ParamType>TriggerInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>streamStorableHeapColIds</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexedCols</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>singleRowSource</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>autoincRowLocation</ParamName>
                    <ParamType>RowLocation[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>underMerge</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>identitySequenceUUIDString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readExternal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>ObjectInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object[] [objectArray=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeExternal</MethodName>
            <MethodComment>/** 
 * Write this object to a stream of stored objects.
 * @param out write bytes here.
 * @exception IOException		thrown on error
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ArrayUtil;writeBooleanArray;[out, indexedCols]</InnerMethodInvoke>
                <InnerMethodInvoke>ArrayUtil;writeArray;[out, autoincRowLocation]</InnerMethodInvoke>
                <InnerMethodInvoke>out;writeObject;[schemaName]</InnerMethodInvoke>
                <InnerMethodInvoke>out;writeObject;[tableName]</InnerMethodInvoke>
                <InnerMethodInvoke>ArrayUtil;writeArray;[out, columnNames]</InnerMethodInvoke>
                <InnerMethodInvoke>ArrayUtil;writeLongArray;[out, autoincIncrement]</InnerMethodInvoke>
                <InnerMethodInvoke>out;writeObject;[identitySequenceUUIDString]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAutoGenColumn</MethodName>
            <MethodComment>/** 
 * Get the 0-based position of the autogenerated column 
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSchemaName</MethodName>
            <MethodComment>/** 
 * Gets the name of the schema that the table is in
 * @return	schema name
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTableName</MethodName>
            <MethodComment>/** 
 * Gets the name of the table being inserted into
 * @return	name of table being inserted into
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getColumnName</MethodName>
            <MethodComment>/** 
 * gets the name of the desired column in the taget table.
 * @param i	the column number
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getColumnNames</MethodName>
            <MethodComment>/** 
 * get the array of column names in the target table.
 */
</MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAutoincIncrement</MethodName>
            <MethodComment>/** 
 * gets the increment value for a column.
 * @param i 	the column number
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasAutoincrement</MethodName>
            <MethodComment>/** 
 * Does the target table has autoincrement columns.
 * @return 	True if the table has ai columns
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAutoincRowLocation</MethodName>
            <MethodComment>/** 
 * gets the row location 
 */
</MethodComment>
            <ReturnType>RowLocation[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeFormatId</MethodName>
            <MethodComment>/** 
 * Get the formatID which corresponds to this class.
 * @return	the formatID of this class
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>