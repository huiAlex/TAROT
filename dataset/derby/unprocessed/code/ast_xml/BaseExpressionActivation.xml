<Class>
    <Id>1840</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>BaseExpressionActivation</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BaseExpressionActivation  /** 
 * BaseExpressionActivation Support needed by Expression evaluators (Filters) and by ResultSet materializers (Activations)
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>BaseExpressionActivation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>minValue</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get the minimum value of 4 input values.  If less than 4 values, input {@code null} for the unused parameters and place them at the end.If more than 4 input values, call this multiple times to accumulate results.  Also have judge's type as parameter to have a base upon which the comparison is based.  An example use is for code  generation in bug 3858. &lt;/p&gt; &lt;p&gt; If all the input values are SQL NULL, return SQL NULL. Otherwise, return the minimum value of the non-NULL inputs. &lt;/p&gt;
 * @param v1		1st value
 * @param v2		2nd value
 * @param v3		3rd value
 * @param v4		4th value
 * @param judgeTypeFormatId		type format id of the judge
 * @param judgeUserJDBCTypeId	JDBC type id if judge is user type;-1 if not user type
 * @param judgePrecision		precision of the judge
 * @param judgeScale		    scale of the judge
 * @param judgeIsNullable		nullability of the judge
 * @param judgeMaximumWidth		maximum width of the judge
 * @param judgeCollationType	collation type of the judge
 * @param judgeCollationDerivation		collation derivation of the judge
 * @return	The minimum value of the 4. 
 */
</MethodComment>
            <ReturnType>DataValueDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v1</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v2</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v3</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v4</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeTypeFormatId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeUserJDBCTypeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgePrecision</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeScale</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeIsNullable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeMaximumWidth</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeCollationType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeCollationDerivation</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [judge]</InnerVar>
                <InnerVar>DataValueDescriptor [minVal=v1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>maxValue</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get the maximum value of 4 input values.  If less than 4 values, input {@code null} for the unused parameters and place them at the end.If more than 4 input values, call this multiple times to accumulate results.  Also have judge's type as parameter to have a base upon which the comparison is based.  An example use is for code  generation in bug 3858. &lt;/p&gt; &lt;p&gt; If all the input values are SQL NULL, return SQL NULL. Otherwise, return the maximum value of the non-NULL inputs. &lt;/p&gt;
 * @param v1		1st value
 * @param v2		2nd value
 * @param v3		3rd value
 * @param v4		4th value
 * @param judgeTypeFormatId		type format id of the judge
 * @param judgeUserJDBCTypeId	JDBC type id if judge is user type;-1 if not user type
 * @return	The maximum value of the 4.
 */
</MethodComment>
            <ReturnType>DataValueDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v1</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v2</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v3</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v4</ParamName>
                    <ParamType>DataValueDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeTypeFormatId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeUserJDBCTypeId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgePrecision</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeScale</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeIsNullable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeMaximumWidth</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeCollationType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>judgeCollationDerivation</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [judge]</InnerVar>
                <InnerVar>DataValueDescriptor [maxVal=v1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>