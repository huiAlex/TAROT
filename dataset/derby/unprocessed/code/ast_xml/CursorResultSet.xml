<Class>
    <Id>1523</Id>
    <Package>org.apache.derby.iapi.sql.execute</Package>
    <ClassName>CursorResultSet</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ResultSet</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CursorResultSet  /** 
 * The CursorResultSet interface is used to provide additional operations on result sets that can be used in cursors. &lt;p&gt; Since the ResulSet operations must also be supported by cursor result sets, we extend that interface here as well.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getRowLocation</MethodName>
            <MethodComment>/** 
 * Returns the row location of the current base table row of the cursor. If this cursor's row is composed of multiple base tables' rows, i.e. due to a join, then a null is returned.
 * @return the row location of the current cursor row.
 * @exception StandardException thrown on failure toget location from storage engine
 */
</MethodComment>
            <ReturnType>RowLocation</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentRow</MethodName>
            <MethodComment>/** 
 * Returns the current row of the result set. REMIND: eventually, this will only return the current row for result sets that need to return it; either some field in the activation or a parameter in the constructor will be used to signal that this needs to function. This will let us limit the number of live objects we are holding on to. &lt;p&gt;
 * @return the last row returned by getNextRow. null if closed.
 * @exception StandardException thrown on failure.
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>