<Class>
    <Id>101</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.tools</Package>
    <ClassName>dblook_test</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>SERVER_PORT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FRONT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>REAR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>dbCreationScript_1</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dbCreationScript_2</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_DELIMITER</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>testDirectory</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testDBName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>separator</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dbPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>duplicateCounter</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>sysNameCount</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>jdbcProtocol</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>territoryBased</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>expectedCollation</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ignorableSchemaNames</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>new dblook_test();doTest;[]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["\n[ Done. ]\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;renameDbLookLog;["dblook_test"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doTest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTestDatabase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scriptName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class&lt;?&gt; [clazz=Class.forName("org.apache.derby.jdbc.EmbeddedDriver")]</InnerVar>
                <InnerVar>String [systemhome=System.getProperty("derby.system.home")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>clazz.getConstructor();newInstance;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createDBFromDDL;[testDBName, scriptName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runDBLook</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [newDBName=dbName + "_new"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.err;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpSysCatalogs;[dbName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;lookOne;[dbName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;["dblook.log"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createDBFromDDL;[newDBName, dbName + ".sql"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;deleteFile;[new File(dbName + ".sql")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpSysCatalogs;[newDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;deleteDB;[newDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;deleteFile;[new File(newDBName + ".sql")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runAllTests;[dbName, newDBName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runAllTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newDBName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;runTest;[2, dbName, newDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runTest;[4, dbName, newDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runTest;[5, dbName, newDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runTest;[7, dbName, newDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runTest;[6, dbName, newDBName]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>whichTest</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newDBName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookOne</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [args=new String[]{"-o",dbName + ".sql","-td",""}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping full schema for '" + dbName + "'\nto file '"+ dbName+ ".sql':\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, args]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookTwo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [args=new String[]{"-o",dbName + ".sql","-td","","-z","bar","-noview"}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping DDL for all objects " + "with schema\n'BAR', excluding views:\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, args]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookThree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [hostName=TestUtil.getHostName()]</InnerVar>
                <InnerVar>String [sourceDBUrl]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping DDL for all objects, " + "using\nNetwork Server:\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookFour</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [args=new String[]{"-o",dbName + ".sql","-td","","-z","BAR","-t","t3","\"tWithKeys\"","Multi word name"}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping DDL for all objects " + "with schema 'BAR'\nthat are related to tables " + "'T3', 'tWithKeys',\nand 'MULTI WORD NAME':\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, args]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookFive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [args=new String[]{"-o",dbName + ".sql","-td","","-t","t1","tWithKeys"}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping DDL for all objects " + "related to 'T1'\nand 'TWITHKEYS':\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, args]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookSix</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping DDL w/ invalid url, and " + "writing\nerror to the log:\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lookSeven</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [args=new String[]{"-o",dbName + ".sql","-td","","-z","\"\"Quoted\"Schema\"\""}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;printAsHeader;["\nDumping DDL for all objects " + "with schema\n'\"Quoted\"Schema\"':\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, args]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>go</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [sourceDBUrl=jdbcProtocol + dbPath + separator+ dbName+ ";user=app;password=apppw"]</InnerVar>
                <InnerVar>String[] [fullArgs=new String[args.length + 2]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runMessageCheckTest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [jarPath=(new File(dbPath + separator + dbName)).getAbsolutePath()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["\n************\n" + "Msg Test 1\n" + "************\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;lookOne;[dbName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;[dbName + ".sql"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;["dblook.log"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["\n************\n" + "Msg Test 2\n" + "************\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, new String[]{"-t","t1","-z","bar","-o",dbName + ".sql"}]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;[dbName + ".sql"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;["dblook.log"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["\n************\n" + "Msg Test 3\n" + "************\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["\n************\n" + "Msg Test 4\n" + "************\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, new String[]{"-td"," " + TEST_DELIMITER}]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["\n************\n" + "Msg Test 5\n" + "************\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;deleteFile;[new File(jarPath)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;go;[dbName, new String[]{"-verbose","-o",dbName + ".sql"}]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;["dblook.log"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpSysCatalogs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=DriverManager.getConnection("jdbc:derby:" + dbName + ";user=app;password=apppw")]</InnerVar>
                <InnerVar>Statement [stmt=conn.createStatement()]</InnerVar>
                <InnerVar>ResultSet [rs=null]</InnerVar>
                <InnerVar>HashMap&lt;String,String&gt; [idToNameMap=loadIdMappings(stmt)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["\nDumping system tables for '" + dbName + "'\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n----------------=================---------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["System Tables for: " + dbName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["----------------=================---------------\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;setAutoCommit;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>stmt;executeUpdate;["SET SCHEMA SYS"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSALIASES ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSCHECKS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSCOLUMNS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["--- Columns for Tables ---"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n--- Columns for Statements ---"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSCONGLOMERATES ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSCONSTRAINTS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSDEPENDS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, conn]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSFILES ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSFOREIGNKEYS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSKEYS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSSCHEMAS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSSTATEMENTS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSTABLES ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSTRIGGERS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSVIEWS ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["\n========== SYSROLES ==========\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpResultSet;[rs, idToNameMap, null]</InnerMethodInvoke>
                <InnerMethodInvoke>stmt;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;commit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isIgnorableSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>schemaName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [ret=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpResultSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rs</ParamName>
                    <ParamType>ResultSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>idToNameMap</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuffer [uniqueName=new StringBuffer()]</InnerVar>
                <InnerVar>TreeMap&lt;String,ArrayList&lt;String&gt;&gt; [orderedRows=new TreeMap&lt;String,ArrayList&lt;String&gt;&gt;()]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [rowValues=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [duplicateRowIds=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>ResultSetMetaData [rsmd=rs.getMetaData()]</InnerVar>
                <InnerVar>int [cols=rsmd.getColumnCount()]</InnerVar>
                <InnerVar>Set&lt;String&gt; [objectNames=orderedRows.keySet()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpColumnData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>colName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mappedName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rowVals</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>handleDuplicateRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newRow</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oldRow</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>orderedRows</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuffer [newRowId=new StringBuffer()]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [obj=orderedRows.put(newRowId.toString(),newRow)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createDBFromDDL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newDBName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scriptName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=DriverManager.getConnection("jdbc:derby:" + newDBName + ";create=true;user=app;password=apppw"+ territoryBased)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["\n\nCreating database '" + newDBName + "' from ddl script '"+ scriptName+ "'"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runDDL;[conn, scriptName]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runDDL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scriptName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Statement [stmt=conn.createStatement()]</InnerVar>
                <InnerVar>BufferedReader [ddlScript=new BufferedReader(new FileReader(scriptName))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ddlScript;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>stmt;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeOut</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>str</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;[str]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadIdMappings</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stmt</ParamName>
                    <ParamType>Statement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>HashMap&lt;String,String&gt; [idToNameMap=new HashMap&lt;String,String&gt;()]</InnerVar>
                <InnerVar>ResultSet [rs=stmt.executeQuery("select tableid, tablename from sys.systables")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDependsData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rs</ParamName>
                    <ParamType>ResultSet</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>idToNameMap</ParamName>
                    <ParamType>HashMap</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DependableFinder [dep=(DependableFinder)rs.getObject(3)]</InnerVar>
                <InnerVar>DependableFinder [prov=(DependableFinder)rs.getObject(5)]</InnerVar>
                <InnerVar>String [depType=dep.getSQLObjectType()]</InnerVar>
                <InnerVar>String [provType=prov.getSQLObjectType()]</InnerVar>
                <InnerVar>Statement [dependsStmt=conn.createStatement()]</InnerVar>
                <InnerVar>StringBuffer [dependsData=new StringBuffer()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dependsData;append;[getHiddenDependsData(depType,rs.getString(2),dependsStmt,idToNameMap)]</InnerMethodInvoke>
                <InnerMethodInvoke>dependsData;append;[" -&gt; "]</InnerMethodInvoke>
                <InnerMethodInvoke>dependsData;append;[getHiddenDependsData(provType,rs.getString(4),dependsStmt,idToNameMap)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHiddenDependsData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pStmt</ParamName>
                    <ParamType>Statement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>idToNameMap</ParamName>
                    <ParamType>HashMap</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ResultSet [rs=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deleteDB</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [deletePath=(new File(dbPath + separator + dbName)).getAbsolutePath()]</InnerVar>
                <InnerVar>File [f=new File(deletePath)]</InnerVar>
                <InnerVar>File[] [files=f.listFiles()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;deleteFile;[new File(System.getProperty("user.dir") + separator + "CSJARS")]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Database '" + dbName + "' deleted."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deleteFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>aFile</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File[] [files=aFile.listFiles()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>renameDbLookLog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nameOfTest</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [dbLookTestLog=new File("dblook.log")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpFileToSysOut</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSystemGenerated</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>str</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>looksLikeSysGenName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>looksLikeSysGenId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>columnHoldsObjectName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>colName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printAsHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>str</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;writeOut;["--\n*******************************************"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;[str]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeOut;["*******************************************\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testDerby6387</MethodName>
            <MethodComment>/** 
 * Regression test case for DERBY-6387. Verify that triggers are returned in the order in which they were created.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;createTestDatabase;["dblook_makeDB_derby6387.sql"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;lookOne;[testDBName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;["dblook.log"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;dumpFileToSysOut;[testDBName + ".sql"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>