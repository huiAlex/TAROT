<Class>
    <Id>1480</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>CreateViewConstantAction</ClassName>
    <SuperClass>DDLConstantAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CreateViewConstantAction  /** 
 * This class  describes actions that are ALWAYS performed for a CREATE VIEW Statement at Execution time. A view is represented as: &lt;UL&gt; &lt;LI&gt; TableDescriptor with the name of the view and type VIEW_TYPE &lt;LI&gt; Set of ColumnDescriptor's for the column names and types &lt;LI&gt; ViewDescriptor describing the SQL query that makes up the view. &lt;/UL&gt; Dependencies are created as: &lt;UL&gt; &lt;LI&gt; ViewDescriptor depends on the Providers that its compiled query depends on. &lt;LI&gt; ViewDescriptor depends on the privileges required to execute the view. &lt;/UL&gt; Note there are no dependencies created between the ViewDescriptor, TableDecriptor and the ColumnDescriptor's.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>tableName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>schemaName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>viewText</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tableType</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>checkOption</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>columnInfo</FieldName>
            <FieldType>ColumnInfo[]</FieldType>
        </Field>
        <Field>
            <FieldName>providerInfo</FieldName>
            <FieldType>ProviderInfo[]</FieldType>
        </Field>
        <Field>
            <FieldName>compSchemaId</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CreateViewConstantAction</MethodName>
            <MethodComment>/** 
 * Make the ConstantAction for a CREATE VIEW statement.
 * @param schemaName			name for the schema that view lives in.
 * @param tableName	Name of view.
 * @param tableType	Type of table (ie. TableDescriptor.VIEW_TYPE).
 * @param viewText		Text of query expression for view definition
 * @param checkOption	Check option type
 * @param columnInfo	Information on all the columns in the table.
 * @param providerInfo Information on all the Providers
 * @param compSchemaId 	Compilation Schema Id
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>schemaName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tableName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tableType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>viewText</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>checkOption</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnInfo</ParamName>
                    <ParamType>ColumnInfo[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providerInfo</ParamName>
                    <ParamType>ProviderInfo[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compSchemaId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeConstantAction</MethodName>
            <MethodComment>/** 
 * This is the guts of the Execution-time logic for CREATE VIEW.
 * @see ConstantAction#executeConstantAction
 * @exception StandardException		Thrown on failure
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TableDescriptor [td]</InnerVar>
                <InnerVar>UUID [toid]</InnerVar>
                <InnerVar>ColumnDescriptor [columnDescriptor]</InnerVar>
                <InnerVar>ViewDescriptor [vd]</InnerVar>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>DependencyManager [dm=dd.getDependencyManager()]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
                <InnerVar>SchemaDescriptor [sd=DDLConstantAction.getSchemaDescriptorForCreate(dd,activation,schemaName)]</InnerVar>
                <InnerVar>DataDescriptorGenerator [ddg=dd.getDataDescriptorGenerator()]</InnerVar>
                <InnerVar>ColumnDescriptor[] [cdlArray=new ColumnDescriptor[columnInfo.length]]</InnerVar>
                <InnerVar>int [index=1]</InnerVar>
                <InnerVar>ColumnDescriptorList [cdl=td.getColumnDescriptorList()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dd;startWriting;[lcc]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;addDescriptor;[td, sd, DataDictionary.SYSTABLES_CATALOG_NUM, false, tc]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;addDescriptorArray;[cdlArray, td, DataDictionary.SYSCOLUMNS_CATALOG_NUM, false, tc]</InnerMethodInvoke>
                <InnerMethodInvoke>null;storeViewTriggerDependenciesOnPrivileges;[activation, vd]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;addDescriptor;[vd, sd, DataDictionary.SYSVIEWS_CATALOG_NUM, true, tc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>