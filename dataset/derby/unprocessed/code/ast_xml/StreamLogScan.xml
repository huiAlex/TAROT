<Class>
    <Id>1951</Id>
    <Package>org.apache.derby.impl.store.raw.log</Package>
    <ClassName>StreamLogScan</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>LogScan</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StreamLogScan  /** 
 * LogScan provides methods to read a log record and get its LogInstant in an already defined scan.  A logscan also needs to know how to advance to the next log record.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getNextRecord</MethodName>
            <MethodComment>/** 
 * Get the next record in the scan and place its data in the passed in array.  The scan is advanced to the next log record. If the input array is of insufficient size, getNextRecord must expand the array to accomodate the log record.  User can optionally pass in a transaction Id and a group mask.  If provided, only log record that matches the transaction Id and the group mask is returned.
 * @param input        the ArrayInputStream to put the log record
 * @param tranId       if non-null, only log record that equals tranId will be returned.  If null, log records are not  filtered on transaction Id. 
 * @param groupmask    if non-zero, only log record whose Loggable's groupvalue is included in the groupmask is returned.   groupmask can be a bit wise OR of many Loggable  groups.  If zero, log records are not filtered on  the Loggable's group.
 * @return an object that represents the log record, return null if thescan has completed. 
 * @exception StandardException Standard Clooudscape error policy
 * @exception IOException       Some I/O exception raised during reading the log record.
 */
</MethodComment>
            <ReturnType>LogRecord</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>ArrayInputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tranId</ParamName>
                    <ParamType>TransactionId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>groupmask</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInstant</MethodName>
            <MethodComment>/** 
 * Get the instant of the record just retrieved with getNextRecord(). 
 * @return INVALID_LOG_INSTANT if no records have been returned yet orthe scan has completed.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLogRecordEnd</MethodName>
            <MethodComment>/** 
 * Get the log instant that is right after the record just retrieved with getNextRecord().  Only valid for a forward scan and on a successful retrieval.
 * @return INVALID_LOG_INSTANT if this is not a FORWARD scan or, norecord have been returned yet or the scan has completed.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLogEndFuzzy</MethodName>
            <MethodComment>/** 
 * @return true if  fuzzy log end found during forward scan, this happensif there was a partially written log records before the crash.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLogInstant</MethodName>
            <MethodComment>/** 
 * Get the LogInstant for the record just retrieved with getNextRecord().
 * @return null if no records have been returned yet or the scan hascompleted.
 */
</MethodComment>
            <ReturnType>LogInstant</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetPosition</MethodName>
            <MethodComment>/** 
 * Reset the scan to the given LogInstant so that getNextRecord get the log record AFTER the given LogInstant.
 * @param instant the log instant to reset to
 * @exception IOException       Some I/O exception raised when accessing the log file
 * @exception StandardException reset to illegal position or beyond thelimit of the scan.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>instant</ParamName>
                    <ParamType>LogInstant</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment>/** 
 * Close this log scan.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>