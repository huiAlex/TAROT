<Class>
    <Id>1555</Id>
    <Package>org.apache.derby.iapi.services.loader</Package>
    <ClassName>ClassInfo</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>InstanceGetter</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>noParameters</FieldName>
            <FieldType>Class[]</FieldType>
        </Field>
        <Field>
            <FieldName>noArguments</FieldName>
            <FieldType>Object[]</FieldType>
        </Field>
        <Field>
            <FieldName>clazz</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>clazz</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>useConstructor</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>noArgConstructor</FieldName>
            <FieldType>Constructor</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ClassInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clazz</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassName</MethodName>
            <MethodComment>/** 
 * Return the name of this class.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassObject</MethodName>
            <MethodComment>/** 
 * Return the class object for this class.
 */
</MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewInstance</MethodName>
            <MethodComment>/** 
 * Create an instance of this class. Assumes that clazz has already been initialized. Optimizes Class.newInstance() by caching and using the no-arg Constructor directly. Class.newInstance() looks up the constructor each time.
 * @exception InstantiationException Zero arg constructor can not be executed
 * @exception IllegalAccessException Class or zero arg constructor is not public.
 * @exception InvocationTargetException Exception throw in zero-arg constructor.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InstantiationException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>InvocationTargetException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>