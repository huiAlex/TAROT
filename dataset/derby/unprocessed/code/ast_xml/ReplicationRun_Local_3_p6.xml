<Class>
    <Id>543</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.replicationTests</Package>
    <ClassName>ReplicationRun_Local_3_p6</ClassName>
    <SuperClass>ReplicationRun_Local_3</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReplicationRun_Local_3_p6  /** 
 * Run a replication test on localhost by using default values for master and slave hosts, and master and slave ports. Test for DERBY-3896.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>getDerbyServerPID</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ReplicationRun_Local_3_p6</MethodName>
            <MethodComment>/** 
 * Creates a new instance of ReplicationRun_Local
 * @param testcaseName Identifying the test.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testcaseName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suite</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>BaseTestSuite [suite=new BaseTestSuite("ReplicationRun_Local_3_p6 Suite")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>suite;addTestSuite;[ReplicationRun_Local_3_p6.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReplication_Local_3_p6_autocommit_OK</MethodName>
            <MethodComment>/** 
 * Test the DERBY-3896 scenario but with autocommit on which does not fail. DERBY-3896: Autocommit off during create table before starting replication  causes uncommitted data not being replicated.
 * @throws java.lang.Exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;derby_3896;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>derby_3896</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>autocommit</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(replicatedDb) + ";create=true" + useEncryption(true)]</InnerVar>
                <InnerVar>Connection [mConn=_getConnection(masterDatabasePath,masterDbSubPath,replicatedDb,masterServerHost,masterServerPort)]</InnerVar>
                <InnerVar>PreparedStatement [ps=mConn.prepareStatement("create table t(i integer)")]</InnerVar>
                <InnerVar>int [_noTuplesInserted=4]</InnerVar>
                <InnerVar>Connection [sConn=_getConnection(slaveDatabasePath,slaveDbSubPath,replicatedDb,slaveServerHost,slaveServerPort)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;cleanAllTestHosts;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initEnvironment;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initMaster;[masterServerHost, replicatedDb]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServer;[masterJvmVersion, derbyMasterVersion, masterServerHost, ALL_INTERFACES, masterServerPort, masterDbSubPath]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServer;[slaveJvmVersion, derbySlaveVersion, slaveServerHost, ALL_INTERFACES, slaveServerPort, slaveDbSubPath]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServerMonitor;[slaveServerHost]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;execute;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;execute;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_verifyTable;[mConn, _noTuplesInserted]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["************************** DERBY-???? Preliminary needs to freeze db before copying to slave and setting replication mode."]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["bootMasterDatabase done."]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initSlave;[slaveServerHost, jvmVersion, replicatedDb]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startSlave;[jvmVersion, replicatedDb, slaveServerHost, slaveServerPort, slaveServerHost, slaveReplPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startMaster;[jvmVersion, replicatedDb, masterServerHost, masterServerPort, masterServerHost, slaveServerPort, slaveServerHost, slaveReplPort]</InnerMethodInvoke>
                <InnerMethodInvoke>mConn;commit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;failOver;[jvmVersion, masterDatabasePath, masterDbSubPath, replicatedDb, masterServerHost, masterServerPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;connectPing;[slaveDatabasePath + FS + slaveDbSubPath+ FS+ replicatedDb, slaveServerHost, slaveServerPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_verifyTable;[sConn, _noTuplesInserted]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, slaveServerHost, slaveServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, masterServerHost, masterServerPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>_getConnection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>databasePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds]</InnerVar>
                <InnerVar>Class&lt;?&gt; [clazz]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ds;setDatabaseName;[databasePath + FS + dbSubPath+ FS+ dbName]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setServerName;[serverHost]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setPortNumber;[serverPort]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setConnectionAttributes;[useEncryption(false)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>_verifyTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>noTuplesInserted</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Statement [s=conn.createStatement()]</InnerVar>
                <InnerVar>ResultSet [rs=s.executeQuery("select count(*) from t")]</InnerVar>
                <InnerVar>int [count=rs.getInt(1)]</InnerVar>
                <InnerVar>int [max=rs.getInt(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["_verify: " + count + "/"+ noTuplesInserted+ " "+ max+ "/"+ (noTuplesInserted - 1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Expected " + noTuplesInserted + " tuples, got "+ count+ ".", noTuplesInserted, count]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Expected " + (noTuplesInserted - 1) + " max, got "+ max+ ".", noTuplesInserted - 1, max]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>