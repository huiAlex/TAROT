<Class>
    <Id>1052</Id>
    <Package>org.apache.derby.impl.sql.catalog</Package>
    <ClassName>SYSCONGLOMERATESRowFactory</ClassName>
    <SuperClass>CatalogRowFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SYSCONGLOMERATESRowFactory  /** 
 * Factory for creating a SYSCONGLOMERATES row.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TABLENAME_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_COLUMN_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_SCHEMAID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_TABLEID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_CONGLOMERATENUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_CONGLOMERATENAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_ISINDEX</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_DESCRIPTOR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_ISCONSTRAINT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_CONGLOMERATEID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_INDEX1_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_INDEX2_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSCONGLOMERATES_INDEX3_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>uniqueness</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>indexColumnPositions</FieldName>
            <FieldType>int[][]</FieldType>
        </Field>
        <Field>
            <FieldName>uuids</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SYSCONGLOMERATESRowFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuidf</ParamName>
                    <ParamType>UUIDFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ef</ParamName>
                    <ParamType>ExecutionFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dvf</ParamName>
                    <ParamType>DataValueFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initInfo;[SYSCONGLOMERATES_COLUMN_COUNT, TABLENAME_STRING, indexColumnPositions, uniqueness, uuids]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeRow</MethodName>
            <MethodComment>/** 
 * Make a SYSCONGLOMERATES row
 * @return	Row suitable for inserting into SYSCONGLOMERATES.
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExecRow [row]</InnerVar>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>String [tabID=null]</InnerVar>
                <InnerVar>Long [conglomNumber=null]</InnerVar>
                <InnerVar>String [conglomName=null]</InnerVar>
                <InnerVar>Boolean [supportsIndex=null]</InnerVar>
                <InnerVar>IndexRowGenerator [indexRowGenerator=null]</InnerVar>
                <InnerVar>Boolean [supportsConstraint=null]</InnerVar>
                <InnerVar>String [conglomUUIDString=null]</InnerVar>
                <InnerVar>String [schemaID=null]</InnerVar>
                <InnerVar>ConglomerateDescriptor [conglomerate=(ConglomerateDescriptor)td]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>row;setColumn;[1, new SQLChar(schemaID)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[2, new SQLChar(tabID)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[3, new SQLLongint(conglomNumber)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[4, (conglomName == null) ? new SQLVarchar(tabID) : new SQLVarchar(conglomName)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[5, new SQLBoolean(supportsIndex)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[6, new UserType((indexRowGenerator == null ? (IndexDescriptor)null : indexRowGenerator.getIndexDescriptor()))]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[7, new SQLBoolean(supportsConstraint)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[8, new SQLChar(conglomUUIDString)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeEmptyRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCreateHeapProperties</MethodName>
            <MethodComment>/** 
 * Get the Properties associated with creating the heap.
 * @return The Properties associated with creating the heap.
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Properties [properties=new Properties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>properties;put;["derby.storage.pageSize", "4096"]</InnerMethodInvoke>
                <InnerMethodInvoke>properties;put;["derby.storage.pageReservedSpace", "0"]</InnerMethodInvoke>
                <InnerMethodInvoke>properties;put;["derby.storage.minimumRecordSize", "1"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCreateIndexProperties</MethodName>
            <MethodComment>/** 
 * Get the Properties associated with creating the specified index.
 * @param indexNumber	The specified index number.
 * @return The Properties associated with creating the specified index.
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [properties=new Properties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>properties;put;["derby.storage.pageSize", "4096"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildDescriptor</MethodName>
            <MethodComment>/** 
 * @param row a SYSCOLUMNS row
 * @param parentTupleDescriptor	Null for this kind of descriptor.
 * @param dd dataDictionary
 * @return	a conglomerate descriptor equivalent to a SYSCONGOMERATES row
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>TupleDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentTupleDescriptor</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dd</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataDescriptorGenerator [ddg=dd.getDataDescriptorGenerator()]</InnerVar>
                <InnerVar>long [conglomerateNumber]</InnerVar>
                <InnerVar>String [name]</InnerVar>
                <InnerVar>boolean [isConstraint]</InnerVar>
                <InnerVar>boolean [isIndex]</InnerVar>
                <InnerVar>IndexRowGenerator [indexRowGenerator]</InnerVar>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>ConglomerateDescriptor [conglomerateDesc]</InnerVar>
                <InnerVar>String [conglomUUIDString]</InnerVar>
                <InnerVar>UUID [conglomUUID]</InnerVar>
                <InnerVar>String [schemaUUIDString]</InnerVar>
                <InnerVar>UUID [schemaUUID]</InnerVar>
                <InnerVar>String [tableUUIDString]</InnerVar>
                <InnerVar>UUID [tableUUID]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConglomerateUUID</MethodName>
            <MethodComment>/** 
 * Get the conglomerate's UUID of the row.
 * @param row	The row from sysconglomerates
 * @return UUID	The conglomerates UUID
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>String [conglomerateUUIDString]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTableUUID</MethodName>
            <MethodComment>/** 
 * Get the table's UUID from the row.
 * @param row	The row from sysconglomerates
 * @return UUID	The table's UUID
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>String [tableUUIDString]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSchemaUUID</MethodName>
            <MethodComment>/** 
 * Get the schema's UUID from the row.
 * @param row	The row from sysconglomerates
 * @return UUID	The schema's UUID
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>String [schemaUUIDString]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConglomerateName</MethodName>
            <MethodComment>/** 
 * Get the conglomerate's name of the row.
 * @param row	The row from sysconglomerates
 * @return String	The conglomerates name
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildColumnList</MethodName>
            <MethodComment>/** 
 * Builds a list of columns suitable for creating this Catalog.
 * @return array of SystemColumn suitable for making this catalog.
 */
</MethodComment>
            <ReturnType>SystemColumn[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>