<Class>
    <Id>1648</Id>
    <Package>org.apache.derbyTesting.functionTests.harness</Package>
    <ClassName>RunList</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>jvmName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>javaCmd</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>javaArgs</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jvm</FieldName>
            <FieldType>jvm</FieldType>
        </Field>
        <Field>
            <FieldName>javaVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>majorVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>minorVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jversion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>iminor</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>imajor</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>skip</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>driverNotFound</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>needSync</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>needJdk12</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>needJdk12ext</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>excludedFromJCC</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>clientExclusionMessage</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>needIBMjvm</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>needEncryption</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>jvmflags</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testJavaFlags</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classpath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classpathServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>framework</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>usesystem</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>upgradetest</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jarfile</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>useoutput</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>keepfiles</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>encryption</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testEncryptionProvider</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testEncryptionAlgorithm</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jdk12test</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jdk12exttest</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>runwithibmjvm</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>runwithj9</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>runwithjvm</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>excludeJCC</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>useprocess</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipsed</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>fw_set</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>systemdiff</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>suiteName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>fullsuiteName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>topSuiteName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>topParentSuite</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>topSpecialProps</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>otherSpecialProps</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ijdefaultResourcePackage</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outcopy</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>userdir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mtestdir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>verbose</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>reportstderr</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>timeout</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>shutdownurl</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>pwOut</FieldName>
            <FieldType>PrintWriter</FieldType>
        </Field>
        <Field>
            <FieldName>outputdir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>topsuitedir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>topreportdir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>canondir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>bootcp</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serverJvm</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serverJvmName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>outFile</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>runDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>runFile</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>suiteProperties</FieldName>
            <FieldType>Properties</FieldType>
        </Field>
        <Field>
            <FieldName>specialProperties</FieldName>
            <FieldType>Properties</FieldType>
        </Field>
        <Field>
            <FieldName>runlistFile</FieldName>
            <FieldType>BufferedReader</FieldType>
        </Field>
        <Field>
            <FieldName>hostName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testEncoding</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>upgradejarpath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>derbyTestingXaSingle</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>clientExclusionKeywords</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RunList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>RunList</MethodName>
            <MethodComment>/** 
 * RunList suitesToRun: a Vector of suites from RunSuite outDir: The output directory for the suite(s) pwOut: The output for writing suite and test results suiteProperties: From RunSuite for the top suite (individual suites in the vector may have their own properties which must also be located and applied)
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suitesToRun</ParamName>
                    <ParamType>Vector</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>runDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pwOut</ParamName>
                    <ParamType>PrintWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>suiteProperties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>specialProperties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topParentSuite</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;runSuites;[suitesToRun]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runSuites</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suitesToRun</ParamName>
                    <ParamType>Vector</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [suiteName=""]</InnerVar>
                <InnerVar>Properties [p=null]</InnerVar>
                <InnerVar>Properties [topParentSuiteProps=locateSuiteProperties(topParentSuite,suiteProperties,true,true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setTopSuiteProperties;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setSuiteProperties;[topParentSuiteProps, topParentSuite, suiteProperties, true, true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>FileNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suiteProps</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>suite</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuffer [sb=new StringBuffer()]</InnerVar>
                <InnerVar>Vector&lt;String&gt; [jvmProps=new Vector&lt;String&gt;()]</InnerVar>
                <InnerVar>Properties [sysProps=System.getProperties()]</InnerVar>
                <InnerVar>Vector&lt;String&gt; [v=jvm.getCommandLine()]</InnerVar>
                <InnerVar>String [str=""]</InnerVar>
                <InnerVar>String [lastTest=null]</InnerVar>
                <InnerVar>String [skipTo=System.getProperties().getProperty("skipToFile")]</InnerVar>
                <InnerVar>String [stopAfter=System.getProperties().getProperty("stopAfterFile")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ManageSysProps;saveSysProps;[]</InnerMethodInvoke>
                <InnerMethodInvoke>jvmProps;addElement;["suitename=" + suite]</InnerMethodInvoke>
                <InnerMethodInvoke>jvm;setD;[jvmProps]</InnerMethodInvoke>
                <InnerMethodInvoke>v;addElement;["org.apache.derbyTesting.functionTests.harness.RunTest"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>locateSuiteProperties</MethodName>
            <MethodComment>/** 
 * Locate the suite's properties file
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suiteName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentProps</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isParent</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isTop</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [suitePropsName="suites" + '/' + suiteName+ ".properties"]</InnerVar>
                <InnerVar>InputStream [is=org.apache.derbyTesting.functionTests.harness.RunTest.loadTestResource(suitePropsName)]</InnerVar>
                <InnerVar>Properties [p=new Properties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTopSuiteProperties</MethodName>
            <MethodComment>/** 
 * Properties which may be defined for all suites at the top level suite (such as "nightly")
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [j9config=System.getProperty("com.ibm.oti.configuration")]</InnerVar>
                <InnerVar>String [javavmVersion]</InnerVar>
                <InnerVar>JavaVersionHolder [jvh=new JavaVersionHolder(javavmVersion)]</InnerVar>
                <InnerVar>String [testJVM=jvmName]</InnerVar>
                <InnerVar>String [usepr=suiteProperties.getProperty("useprocess")]</InnerVar>
                <InnerVar>String [dbug=suiteProperties.getProperty("verbose")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSuiteProperties</MethodName>
            <MethodComment>/** 
 * Properties for nested suites
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>suiteName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentProperties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isParent</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isTop</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [totaljvmflags=jvmflags]</InnerVar>
                <InnerVar>String [subjvmflags=p.getProperty("jvmflags")]</InnerVar>
                <InnerVar>String [parentjvmflags=parentProperties.getProperty("jvmflags")]</InnerVar>
                <InnerVar>String [testJVM=jvmName]</InnerVar>
                <InnerVar>String [upr=parentProperties.getProperty("useprocess")]</InnerVar>
                <InnerVar>String [testflags=p.getProperty("testJavaFlags")]</InnerVar>
                <InnerVar>Properties [specialProps=SpecialFlags.getSpecialProperties(p)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setSuiteDir;[suiteName, isParent, isTop]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldSkipTest</MethodName>
            <MethodComment>/** 
 * Determine if a test should be skipped or not. These are ad-hoc rules, see comments within for details. Examples of what is checked: JVM version, framework, encryption, jdk12test,  Sets some global variables so that skip reporting is clearer.
 * @return true if test should not be run.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [result=false]</InnerVar>
                <InnerVar>boolean [isJdk12=false]</InnerVar>
                <InnerVar>boolean [isJdk118=false]</InnerVar>
                <InnerVar>boolean [isJdk117=false]</InnerVar>
                <InnerVar>boolean [isEncryption=false]</InnerVar>
                <InnerVar>boolean [isJdk12Test=false]</InnerVar>
                <InnerVar>boolean [isJdk12ExtTest=false]</InnerVar>
                <InnerVar>boolean [isSyncTest=false]</InnerVar>
                <InnerVar>boolean [isSyncProduct=false]</InnerVar>
                <InnerVar>boolean [isExcludeJCC=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSuiteDir</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suiteName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isParent</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isTop</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSpecialProps</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isTop</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [tmp=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addToSkipFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suiteName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ps</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ps;println;[suiteName]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;flush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkClientExclusion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exclusion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientMajor</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientMinor</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>javaVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [clientComparisonType=0]</InnerVar>
                <InnerVar>int [jvmComparisonType=0]</InnerVar>
                <InnerVar>String [clientVersion=null]</InnerVar>
                <InnerVar>int [comma=exclusion.indexOf(",")]</InnerVar>
                <InnerVar>boolean [jvmDependent]</InnerVar>
                <InnerVar>int[] [excludeInfo=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getVersionArray</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>versionString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resultSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int[] [result=new int[resultSize]]</InnerVar>
                <InnerVar>String [tok=null]</InnerVar>
                <InnerVar>String [text=null]</InnerVar>
                <InnerVar>StringTokenizer [st=new StringTokenizer(versionString,".,_")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getVersionCompareType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>versionString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [colon=versionString.indexOf(":")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>versionExcluded</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>vActual</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>offset1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>vTarget</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>offset2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>numParts</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>comparisonType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [compareLen=(vActual.length &gt;= vTarget.length ? vTarget.length : vActual.length)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isClientExclusionKeyword</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unloadEmbeddedDriver</MethodName>
            <MethodComment>/** 
 * Unloads the embedded JDBC driver and Derby engine in case is has already been loaded.  The purpose for doing this is that using an embedded engine that already is loaded makes it impossible to set new  system properties for each individual suite or test.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System;gc;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>