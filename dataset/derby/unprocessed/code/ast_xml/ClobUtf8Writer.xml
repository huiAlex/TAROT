<Class>
    <Id>52</Id>
    <Package>org.apache.derby.impl.jdbc</Package>
    <ClassName>ClobUtf8Writer</ClassName>
    <SuperClass>Writer</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ClobUtf8Writer  /** 
 * Writer implementation for &lt;code&gt;Clob&lt;/code&gt;.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>control</FieldName>
            <FieldType>TemporaryClob</FieldType>
        </Field>
        <Field>
            <FieldName>pos</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>closed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ClobUtf8Writer</MethodName>
            <MethodComment>/** 
 * Constructor.
 * @param control worker object for the CLOB value
 * @param pos initial &lt;b&gt;byte&lt;/b&gt; position in the CLOB value
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>control</ParamName>
                    <ParamType>TemporaryClob</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flush</MethodName>
            <MethodComment>/** 
 * Flushes the stream. &lt;p&gt; Flushing the stream after  {@link #close} has been called will cause anexception to be thrown. &lt;p&gt; &lt;i&gt;Implementation note:&lt;/i&gt; In the current implementation, this is a no-op. Flushing is left to the underlying stream(s). Note that when programming against/with this class, always follow good practice and call &lt;code&gt;flush&lt;/code&gt;.
 * @throws IOException if the stream has been closed
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment>/** 
 * Closes the stream. &lt;p&gt; Once the stream has been closed, further &lt;code&gt;write&lt;/code&gt; or  {@link #flush} invocations will cause an &lt;code&gt;IOException&lt;/code&gt; to bethrown. Closing a previously closed stream has no effect.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>write</MethodName>
            <MethodComment>/** 
 * Writes a portion of an array of characters to the CLOB value.
 * @param cbuf array of characters
 * @param off offset into &lt;code&gt;cbuf&lt;/code&gt; from which to start writingcharacters
 * @param len number of characters to write
 * @throws IOException if an I/O error occurs
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cbuf</ParamName>
                    <ParamType>char[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>off</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>len</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>