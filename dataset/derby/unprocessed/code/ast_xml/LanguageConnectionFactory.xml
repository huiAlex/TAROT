<Class>
    <Id>430</Id>
    <Package>org.apache.derby.iapi.sql.conn</Package>
    <ClassName>LanguageConnectionFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LanguageConnectionFactory  /** 
 * Factory interface for items specific to a connection in the language system. This is expected to be used internally, and so is not in Language.Interface. &lt;p&gt; This Factory provides pointers to other language factories; the LanguageConnectionContext holds more dynamic information, such as prepared statements and whether a commit has occurred or not. &lt;p&gt; This Factory is for internal items used throughout language during a connection. Things that users need for the Database API are in LanguageFactory in Language.Interface. &lt;p&gt; This factory returns (and thus starts) all the other per-database language factories. So there might someday be properties as to which ones to start (attributes, say, like level of optimization). If the request is relative to a specific connection, the connection is passed in. Otherwise, they are assumed to be database-wide services.
 * @see org.apache.derby.iapi.sql.LanguageFactory
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>MODULE</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getStatement</MethodName>
            <MethodComment>/** 
 * Get a Statement
 * @param compilationSchema schema
 * @param statementText the text for the statement
 * @param forReadOnly true if concurrency mode is CONCUR_READ_ONLY
 * @return	The Statement
 */
</MethodComment>
            <ReturnType>Statement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>compilationSchema</ParamName>
                    <ParamType>SchemaDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>statementText</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forReadOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newLanguageConnectionContext</MethodName>
            <MethodComment>/** 
 * Get a new LanguageConnectionContext. this holds things we want to remember about activity in the language system, where this factory holds things that are pretty stable, like other factories. &lt;p&gt; The returned LanguageConnectionContext is intended for use only by the connection that requested it.
 * @return a language connection context for the context stack.
 * @exception StandardException the usual
 */
</MethodComment>
            <ReturnType>LanguageConnectionContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>ContextManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lf</ParamName>
                    <ParamType>LanguageFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>db</ParamName>
                    <ParamType>Database</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>userName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>drdaID</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbname</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUUIDFactory</MethodName>
            <MethodComment>/** 
 * Get the UUIDFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>UUIDFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassFactory</MethodName>
            <MethodComment>/** 
 * Get the ClassFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>ClassFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJavaFactory</MethodName>
            <MethodComment>/** 
 * Get the JavaFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>JavaFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExecutionFactory</MethodName>
            <MethodComment>/** 
 * Get the ExecutionFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>ExecutionFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPropertyFactory</MethodName>
            <MethodComment>/** 
 * Get the PropertyFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>PropertyFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOptimizerFactory</MethodName>
            <MethodComment>/** 
 * Get the OptimizerFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>OptimizerFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeCompilerFactory</MethodName>
            <MethodComment>/** 
 * Get the TypeCompilerFactory to use with this language connection
 */
</MethodComment>
            <ReturnType>TypeCompilerFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDataValueFactory</MethodName>
            <MethodComment>/** 
 * Get the DataValueFactory to use with this language connection This is expected to get stuffed into the language connection context and accessed from there.
 */
</MethodComment>
            <ReturnType>DataValueFactory</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatementCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CacheManager</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newParser</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Parser</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cc</ParamName>
                    <ParamType>CompilerContext</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>