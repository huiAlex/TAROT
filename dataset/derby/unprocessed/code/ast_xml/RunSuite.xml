<Class>
    <Id>1170</Id>
    <Package>org.apache.derbyTesting.functionTests.harness</Package>
    <ClassName>RunSuite</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>verbose</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>suites</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>suitesToRun</FieldName>
            <FieldType>Vector</FieldType>
        </Field>
        <Field>
            <FieldName>suitesToRun</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jvmName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>javaCmd</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jvmflags</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>javaVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classpath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classpathServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testJavaFlags</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testSpecialProps</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>userdir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>framework</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>runwithibmjvm</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>excludeJCC</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>useprocess</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipsed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>systemdiff</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>topSuiteName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outputdir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outcopy</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>canondir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>bootcp</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serverJvm</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>hostName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testEncoding</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ijdefaultResourcePackage</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>debug</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>timeout</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>shutdownurl</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>reportstderr</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>suiteProperties</FieldName>
            <FieldType>Properties</FieldType>
        </Field>
        <Field>
            <FieldName>specialProperties</FieldName>
            <FieldType>Properties</FieldType>
        </Field>
        <Field>
            <FieldName>pwOut</FieldName>
            <FieldType>PrintWriter</FieldType>
        </Field>
        <Field>
            <FieldName>outDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>runDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>outFile</FieldName>
            <FieldType>File</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [j9config=System.getProperty("com.ibm.oti.configuration")]</InnerVar>
                <InnerVar>String [suiteName=args[0]]</InnerVar>
                <InnerVar>String [startTime=CurrentTime.getTime()]</InnerVar>
                <InnerVar>String [endTime=CurrentTime.getTime()]</InnerVar>
                <InnerVar>String [genrep=System.getProperty("genrep")]</InnerVar>
                <InnerVar>boolean [isGenrep=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["Top suite: " + suiteName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;getSystemProperties;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setOutput;[suiteName]</InnerMethodInvoke>
                <InnerMethodInvoke>pwOut;println;["******* Start Suite: " + suiteName + " "+ startTime+ " *******"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;getSuitesList;[suiteName, true]</InnerMethodInvoke>
                <InnerMethodInvoke>pwOut;println;["******* End Suite: " + suiteName + " "+ endTime+ " *******"]</InnerMethodInvoke>
                <InnerMethodInvoke>pwOut;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSuitesList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>topparent</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isTop</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [p]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BuildSuitesVector</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subsuites</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [p]</InnerVar>
                <InnerVar>StringTokenizer [st=new StringTokenizer(subsuites)]</InnerVar>
                <InnerVar>String [child=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSuiteProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suiteName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isTop</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [suiteProps="suites" + '/' + suiteName+ ".properties"]</InnerVar>
                <InnerVar>InputStream [is=RunTest.loadTestResource(suiteProps)]</InnerVar>
                <InnerVar>Properties [p=new Properties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>p;load;[is]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSystemProperties</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Properties [sp=System.getProperties()]</InnerVar>
                <InnerVar>String [searchCP=sp.getProperty("ij.searchClassPath")]</InnerVar>
                <InnerVar>String [frm=sp.getProperty("framework")]</InnerVar>
                <InnerVar>String [j=sp.getProperty("jvm")]</InnerVar>
                <InnerVar>String [jcmd=sp.getProperty("javaCmd")]</InnerVar>
                <InnerVar>String [jflags=sp.getProperty("jvmflags")]</InnerVar>
                <InnerVar>String [testflags=sp.getProperty("testJavaFlags")]</InnerVar>
                <InnerVar>String [testprops=sp.getProperty("testSpecialProps")]</InnerVar>
                <InnerVar>String [clpth=sp.getProperty("classpath")]</InnerVar>
                <InnerVar>String [clsrv=sp.getProperty("classpathServer")]</InnerVar>
                <InnerVar>String [usesys=sp.getProperty("usesystem")]</InnerVar>
                <InnerVar>String [jarf=sp.getProperty("jarfile")]</InnerVar>
                <InnerVar>String [upgtest=sp.getProperty("upgradetest")]</InnerVar>
                <InnerVar>String [rep=sp.getProperty("replication")]</InnerVar>
                <InnerVar>String [encrypt=sp.getProperty("encryption")]</InnerVar>
                <InnerVar>String [encryptAlgorithm=sp.getProperty("testEncryptionAlgorithm")]</InnerVar>
                <InnerVar>String [jdk12test=sp.getProperty("jdk12test")]</InnerVar>
                <InnerVar>String [jdk12ex=sp.getProperty("jdk12exttest")]</InnerVar>
                <InnerVar>String [runwithibmjvm=sp.getProperty("runwithibmjvm")]</InnerVar>
                <InnerVar>String [excludeJCC=sp.getProperty("excludeJCC")]</InnerVar>
                <InnerVar>String [keep=sp.getProperty("keepfiles")]</InnerVar>
                <InnerVar>String [outd=sp.getProperty("outputdir")]</InnerVar>
                <InnerVar>String [canond=sp.getProperty("canondir")]</InnerVar>
                <InnerVar>String [j9bootcp=sp.getProperty("bootcp")]</InnerVar>
                <InnerVar>String [hostname=sp.getProperty("hostName")]</InnerVar>
                <InnerVar>String [serverJvm=sp.getProperty("serverJvm")]</InnerVar>
                <InnerVar>String [cmlTestEncoding=sp.getProperty("derbyTesting.encoding")]</InnerVar>
                <InnerVar>String [upgradejarpath=sp.getProperty("derbyTesting.jar.path")]</InnerVar>
                <InnerVar>String [testout=sp.getProperty("testoutname")]</InnerVar>
                <InnerVar>String [mtdir=sp.getProperty("mtestdir")]</InnerVar>
                <InnerVar>String [usepr=sp.getProperty("useprocess")]</InnerVar>
                <InnerVar>String [nosed=sp.getProperty("skipsed")]</InnerVar>
                <InnerVar>String [sysdiff=sp.getProperty("systemdiff")]</InnerVar>
                <InnerVar>String [defrespckg=sp.getProperty("ij.defaultResourcePackage")]</InnerVar>
                <InnerVar>String [outcpy=sp.getProperty("outcopy")]</InnerVar>
                <InnerVar>String [topsuite=sp.getProperty("suitename")]</InnerVar>
                <InnerVar>String [dbug=sp.getProperty("verbose")]</InnerVar>
                <InnerVar>String [reporterr=sp.getProperty("reportstderr")]</InnerVar>
                <InnerVar>String [tout=sp.getProperty("timeout")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setOutput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>suiteName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [status=false]</InnerVar>
                <InnerVar>File [tmpoutDir]</InnerVar>
                <InnerVar>File [passFile=new File(outDir,suiteName + ".pass")]</InnerVar>
                <InnerVar>File [failFile=new File(outDir,suiteName + ".fail")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>outDir;mkdir;[]</InnerMethodInvoke>
                <InnerMethodInvoke>suiteProperties;put;["outputdir", outDir.getCanonicalPath()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>FileNotFoundException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>