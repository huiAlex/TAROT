<Class>
    <Id>916</Id>
    <Package>org.apache.derby.tools</Package>
    <ClassName>PlanExporter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PlanExporter  /** 
 * This class is the main entry point to the tool Graphical Query Explainer.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>dbURL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>xslStyleSheetName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>XML</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>HTML</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>XSL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LOC_RES</FieldName>
            <FieldType>LocalizedResource</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment>/** 
 * @param args 1) database URL eg: jdbc:derby:myDB --------- 2) database schema ----------------------------- 3) statement ID (36 characters) ---------------- and user specified arguments.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>selectArg</MethodName>
            <MethodComment>/** 
 * Reading the user's option
 * @param arg user's option
 * @return the argument type
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateXML</MethodName>
            <MethodComment>/** 
 * @param access instance of AccessDatabase class
 * @param arg path of XML
 * @param stmt statement executed
 * @param time time which the statement was executed
 * @param xsl name of the style sheet
 * @throws IOException if an error occurs when writing the XML file
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>access</ParamName>
                    <ParamType>AccessDatabase</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stmt</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>time</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>xsl</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CreateXMLFile [xmlFile=new CreateXMLFile(access)]</InnerVar>
                <InnerVar>String [fileName=arg.toUpperCase().endsWith(".XML") ? arg : (arg + ".xml")]</InnerVar>
                <InnerVar>Writer [out]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Writer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateHTML</MethodName>
            <MethodComment>/** 
 * @param arg path to xml
 * @param path path of HTML
 * @param style path to xsl
 * @param def whether the default xsl or not
 * @throws Exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>arg</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>style</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>def</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>CreateHTMLFile [htmlFile=new CreateHTMLFile()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printHelp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;[LOC_RES.getTextMessage("PE_HelpText")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deleteFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>AccessController;doPrivileged;[new java.security.PrivilegedAction&lt;Object&gt;(){
  public Object run(){
    File delFile=new File(fileName);
    if (!delFile.exists())     return null;
    delFile.delete();
    return null;
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>File [delFile=new File(fileName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>delFile;delete;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>