<Class>
    <Id>1230</Id>
    <Package>org.apache.derbyTesting.functionTests.suites</Package>
    <ClassName>AllPackages</ClassName>
    <SuperClass>BaseTestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AllPackages  /** 
 * All package suites for the function tests. Suites added: &lt;UL&gt; &lt;LI&gt; tests.lang &lt;LI&gt; tests.jdbcapi &lt;LI&gt; tests.tools &lt;LI&gt; tests.jdbc4 (Java SE 6  only) &lt;/UL&gt;
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>AllPackages</MethodName>
            <MethodComment>/** 
 * Use suite method instead.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suite</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>BaseTestSuite [suite=new BaseTestSuite("AllPackages")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTestClasses</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get a list of test classes to add. The classes that have been compiled with target level equal to the lowest supported level are included as {@code java.lang.Class} objects. Classes compiled with higher targetlevels are included as  {@code java.lang.String}s with the class names so that this method does not fail with class not found errors on some platforms. &lt;/p&gt; &lt;p&gt; To construct a test suite from these classes, the classes' static {@code suite()} methods have to be called.&lt;/p&gt;
 * @return list of test classes
 */
</MethodComment>
            <ReturnType>List</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ArrayList&lt;Object&gt; [classes=new ArrayList&lt;Object&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.derbynet._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.lang._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.largedata.LobLimitsLiteTest.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.jdbcapi._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.store._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.storetests._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.tools._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.engine._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.demo._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.memory._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.memorydb._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.i18n._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.multi.StressMultiTest.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;["org.apache.derbyTesting.functionTests.tests.jdbc4._Suite"]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;["org.apache.derbyTesting.functionTests.tests.management._Suite"]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.unitTests.junit._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[org.apache.derbyTesting.functionTests.tests.upgradeTests._Suite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[EncryptionSuite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;[ReplicationSuite.class]</InnerMethodInvoke>
                <InnerMethodInvoke>classes;add;["org.apache.derbyTesting.functionTests.tests.compatibility._Suite"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addSuiteByReflection</MethodName>
            <MethodComment>/** 
 * Get a class's set of tests from its suite method through reflection. Ignore errors caused by the class version of the test class being higher than what's supported on this platform.
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>invokeSuite</MethodName>
            <MethodComment>/** 
 * Invoke the static  {@code suite()} method on a test class.
 * @param klass the test class
 * @return the test suite returned by {@code suite()}
 * @throws Exception if the suite() method cannot be called or fails
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>klass</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTopLevelSuiteNames</MethodName>
            <MethodComment>/** 
 * Get the class names of all the top-level JUnit test suites that are included in  {@code suites.All}.
 * @return an array containing the class names of all the top-leveltest suites
 */
</MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List [testClasses=getTestClasses()]</InnerVar>
                <InnerVar>String[] [names=new String[testClasses.size()]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment>/** 
 * Print the class names of all the test suites included in {@code suites.All}.
 * @param args command line arguments (ignored)
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [names=getTopLevelSuiteNames()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>