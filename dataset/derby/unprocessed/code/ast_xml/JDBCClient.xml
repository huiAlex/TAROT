<Class>
    <Id>2017</Id>
    <Package>org.apache.derbyTesting.junit</Package>
    <ClassName>JDBCClient</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JDBCClient  /** 
 * Type-safe enumerator of valid JDBC clients. Each JDBC client definition consists of the client name, the name of the JDBC driver class, the name of a DataSource class and the base JDBC url.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>EMBEDDED_30</FieldName>
            <FieldType>JDBCClient</FieldType>
        </Field>
        <Field>
            <FieldName>EMBEDDED_40</FieldName>
            <FieldType>JDBCClient</FieldType>
        </Field>
        <Field>
            <FieldName>DERBYNETCLIENT</FieldName>
            <FieldType>JDBCClient</FieldType>
        </Field>
        <Field>
            <FieldName>DERBYNETCLIENT_30</FieldName>
            <FieldType>JDBCClient</FieldType>
        </Field>
        <Field>
            <FieldName>DB2CLIENT</FieldName>
            <FieldType>JDBCClient</FieldType>
        </Field>
        <Field>
            <FieldName>frameWork</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>driverClassName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dsClassName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>poolDsClassName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>xaDsClassName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>urlBase</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDefaultEmbedded</MethodName>
            <MethodComment>/** 
 * Return the default embedded client for this JVM.
 */
</MethodComment>
            <ReturnType>JDBCClient</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Assert;fail;["Unknown JVM environment"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isEmbedded</MethodName>
            <MethodComment>/** 
 * Is this the embdded client.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDerbyNetClient</MethodName>
            <MethodComment>/** 
 * Is this Derby's network client.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDB2Client</MethodName>
            <MethodComment>/** 
 * Is this DB2's Universal JDBC 
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment>/** 
 * Get the name of the client
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJDBCDriverName</MethodName>
            <MethodComment>/** 
 * Get JDBC driver class name.
 * @return class name for JDBC driver.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDataSourceClassName</MethodName>
            <MethodComment>/** 
 * Get DataSource class name.
 * @return class name for DataSource implementation.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConnectionPoolDataSourceClassName</MethodName>
            <MethodComment>/** 
 * Get ConnectionPoolDataSource class name.
 * @return class name for ConnectionPoolDataSource implementation.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getXADataSourceClassName</MethodName>
            <MethodComment>/** 
 * Get XADataSource class name.
 * @return class name for XADataSource implementation.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUrlBase</MethodName>
            <MethodComment>/** 
 * Return the base JDBC url. The JDBC base url specifies the protocol and possibly the subprotcol in the JDBC connection string.
 * @return JDBC base url.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment>/** 
 * Return string representation of this object.
 * @return string representation of this object.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>JDBCClient</MethodName>
            <MethodComment>/** 
 * Create a JDBC client definition.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>frameWork</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>driverClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataSourceClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connectionPoolDataSourceClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>xaDataSourceClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>urlBase</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>