<Class>
    <Id>761</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.jdbcapi</Package>
    <ClassName>maxfieldsize</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>maxfieldsize  /** 
 * This Program Test SetMaxFieldsize()/getMaxFieldsize(). and the getXXX calls that are affected.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>START_SECOND_HALF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_EXECUTIONS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>c1_value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>c2_value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>c3_value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>c4_value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>c5_value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>c6_value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>isDerbyNet</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn]</InnerVar>
                <InnerVar>Statement [stmt]</InnerVar>
                <InnerVar>String[] [testObjects={"table tab1","table tab2"}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["Test MaxFieldSize  starting"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Test maxfieldsize  finished"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>load_data</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [pstmt=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stmt</ParamName>
                    <ParamType>Statement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [insertPStmt]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>stmt;execute;["create table tab2(" + "c0 int, " + "c1 char(100) for bit data,"+ "c2 varchar(100) for bit data,"+ "c3 long varchar for bit data,"+ "c4 char(100),"+ "c5 varchar(100),"+ "c6 long varchar)"]</InnerMethodInvoke>
                <InnerMethodInvoke>insertPStmt;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doSort;[stmt]</InnerMethodInvoke>
                <InnerMethodInvoke>stmt;setMaxFieldSize;[24]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doSort;[stmt]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
                <ExceptionType>java.io.UnsupportedEncodingException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doSort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stmt</ParamName>
                    <ParamType>Statement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["Max Field Size = " + stmt.getMaxFieldSize()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpSQLExceptions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>se</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["FAIL -- unexpected exception"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpExpectedSQLExceptions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>se</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["PASS -- expected exception"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>