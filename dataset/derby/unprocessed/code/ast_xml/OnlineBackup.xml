<Class>
    <Id>901</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.store</Package>
    <ClassName>OnlineBackup</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Runnable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OnlineBackup  /** 
 * This class provides  functionalty for tests to perform  online backup  in a separate thread. And functions to  create/restore/rollforard recovery from the backup. 
 * @version 1.0
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>dbName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>beginBackup</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>endBackup</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>backupFailed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>backupError</FieldName>
            <FieldType>Throwable</FieldType>
        </Field>
        <Field>
            <FieldName>backupPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>OnlineBackup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>backupPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment>/** 
 * implementation of run() method in the Runnable interface, which is invoked when a thread is started using this class object.  Performs online backup. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>performBackup</MethodName>
            <MethodComment>/** 
 * Backup the database
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Connection [conn=TestUtil.getConnection(dbName,"")]</InnerVar>
                <InnerVar>CallableStatement [backupStmt=conn.prepareCall("CALL SYSCS_UTIL.SYSCS_BACKUP_DATABASE(?)")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>backupStmt;setString;[1, backupPath]</InnerMethodInvoke>
                <InnerMethodInvoke>backupStmt;execute;[]</InnerMethodInvoke>
                <InnerMethodInvoke>backupStmt;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>waitForBackupToBegin</MethodName>
            <MethodComment>/** 
 * Wait for the backup to start.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>waitForBackupToEnd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isRunning</MethodName>
            <MethodComment>/** 
 * Check if backup is running ?
 * @return     &lt;tt&gt;true&lt;/tt&gt; if backup is running.&lt;tt&gt;false&lt;/tt&gt; otherwise.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createFromBackup</MethodName>
            <MethodComment>/** 
 * Create a new database from the backup copy taken earlier.
 * @param newDbName   name of the database to be created.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newDbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Connection [conn=TestUtil.getConnection(newDbName,"createFrom=" + backupPath + "/"+ dbName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>restoreFromBackup</MethodName>
            <MethodComment>/** 
 * Restore the  database from the backup copy taken earlier.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Connection [conn=TestUtil.getConnection(dbName,"restoreFrom=" + backupPath + "/"+ dbName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>