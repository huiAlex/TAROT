<Class>
    <Id>1844</Id>
    <Package>org.apache.derby.iapi.store.access</Package>
    <ClassName>ConglomPropertyQueryable</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConglomPropertyQueryable  /** 
 * ConglomPropertyable provides the interfaces to read properties from a  conglomerate. &lt;p&gt; RESOLVE - If language ever wants these interfaces on a ScanController it  should not be too difficult to add them.
 * @see ConglomerateController
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getTableProperties</MethodName>
            <MethodComment>/** 
 * Request the system properties associated with a table.  &lt;p&gt; Request the value of properties that are associated with a table.  The following properties can be requested: derby.storage.pageSize  derby.storage.pageReservedSpace derby.storage.minimumRecordSize derby.storage.initialPages &lt;p&gt; To get the value of a particular property add it to the property list, and on return the value of the property will be set to it's current  value.  For example: get_prop(ConglomerateController cc) { Properties prop = new Properties(); prop.put("derby.storage.pageSize", ""); cc.getTableProperties(prop); System.out.println( "table's page size = " +  prop.getProperty("derby.storage.pageSize"); }
 * @param prop   Property list to fill in.
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInternalTablePropertySet</MethodName>
            <MethodComment>/** 
 * Request set of properties associated with a table.  &lt;p&gt; Returns a property object containing all properties that the store knows about, which are stored persistently by the store.  This set of properties may vary from implementation to implementation of the store. &lt;p&gt; This call is meant to be used only for internal query of the properties by jbms, for instance by language during bulk insert so that it can create a new conglomerate which exactly matches the properties that the original container was created with.  This call should not be used by the user interface to present properties to users as it may contain properties that are meant to be internal to jbms.  Some properties are  meant only to be specified by jbms code and not by users on the command line. &lt;p&gt; Note that not all properties passed into createConglomerate() are stored persistently, and that set may vary by store implementation.
 * @param prop   Property list to add properties to.  If null, routine willcreate a new Properties object, fill it in and return it.
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>