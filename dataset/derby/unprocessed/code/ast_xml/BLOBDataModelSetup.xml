<Class>
    <Id>516</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.jdbcapi</Package>
    <ClassName>BLOBDataModelSetup</ClassName>
    <SuperClass>BaseJDBCTestSetup</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BLOBDataModelSetup  /** 
 * Sets up a data model with very large BLOBs. The table created will have three fields:  1. a value field (val), which is the value for every byte in the BLOB. 2. a length (length) field which is the actual size of the BLOB 3. the data field (data), which is the actual BLOB data.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>size</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>regularBlobs</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>bigSize</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>bigVal</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>tableName</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BLOBDataModelSetup</MethodName>
            <MethodComment>/** 
 * Constructor
 * @param test test object being decorated by this TestSetup
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>test</ParamName>
                    <ParamType>Test</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment>/** 
 * The setup creates a Connection to the database, and creates a table with blob columns.
 * @exception Exception any exception will cause test to fail with error.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Connection [con=getConnection()]</InnerVar>
                <InnerVar>Statement [statement=con.createStatement()]</InnerVar>
                <InnerVar>PreparedStatement [preparedStatement=con.prepareStatement("INSERT INTO " + tableName + "(val, length, data) VALUES (?,?, ?)")]</InnerVar>
                <InnerVar>InputStream [stream=new TestInputStream(bigSize,bigVal)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>con;setAutoCommit;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>statement;executeUpdate;["CREATE TABLE " + tableName + " ("+ " val INTEGER,"+ " length INTEGER, "+ " data BLOB(2G) NOT NULL)"]</InnerMethodInvoke>
                <InnerMethodInvoke>statement;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>BaseJDBCTestCase;println;["Insert BLOB with size = " + bigSize]</InnerMethodInvoke>
                <InnerMethodInvoke>preparedStatement;setInt;[1, bigVal]</InnerMethodInvoke>
                <InnerMethodInvoke>preparedStatement;setInt;[2, bigSize]</InnerMethodInvoke>
                <InnerMethodInvoke>preparedStatement;setBinaryStream;[3, stream, bigSize]</InnerMethodInvoke>
                <InnerMethodInvoke>BaseJDBCTestCase;println;["Execute update"]</InnerMethodInvoke>
                <InnerMethodInvoke>preparedStatement;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>preparedStatement;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>BaseJDBCTestCase;println;["Commit"]</InnerMethodInvoke>
                <InnerMethodInvoke>con;commit;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment>/** 
 * Teardown test. Rollback connection and close it.
 * @exception Exceptions causes the test to fail with error
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBlobTableName</MethodName>
            <MethodComment>/** 
 * Return table name 
 * @return table name
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>