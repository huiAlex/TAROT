<Class>
    <Id>1123</Id>
    <Package>org.apache.derby.impl.sql.execute.rts</Package>
    <ClassName>RunTimeStatisticsImpl</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RunTimeStatistics</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RunTimeStatisticsImpl  /** 
 * RunTimeStatistics implemenation.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>statementText</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>statementName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>spsName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>parseTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>bindTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>optimizeTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>generateTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>compileTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>executeTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>beginCompilationTimestamp</FieldName>
            <FieldType>Timestamp</FieldType>
        </Field>
        <Field>
            <FieldName>endCompilationTimestamp</FieldName>
            <FieldType>Timestamp</FieldType>
        </Field>
        <Field>
            <FieldName>beginExecutionTimestamp</FieldName>
            <FieldType>Timestamp</FieldType>
        </Field>
        <Field>
            <FieldName>endExecutionTimestamp</FieldName>
            <FieldType>Timestamp</FieldType>
        </Field>
        <Field>
            <FieldName>topResultSetStatistics</FieldName>
            <FieldType>ResultSetStatistics</FieldType>
        </Field>
        <Field>
            <FieldName>subqueryTrackingArray</FieldName>
            <FieldType>ResultSetStatistics[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RunTimeStatisticsImpl</MethodName>
            <MethodComment>/** 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>spsName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>statementName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>statementText</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>compileTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parseTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bindTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>optimizeTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>generateTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>executeTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>beginCompilationTimestamp</ParamName>
                    <ParamType>Timestamp</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>endCompilationTimestamp</ParamName>
                    <ParamType>Timestamp</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>beginExecutionTimestamp</ParamName>
                    <ParamType>Timestamp</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>endExecutionTimestamp</ParamName>
                    <ParamType>Timestamp</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subqueryTrackingArray</ParamName>
                    <ParamType>ResultSetStatistics[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>topResultSetStatistics</ParamName>
                    <ParamType>ResultSetStatistics</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCompileTimeInMillis</MethodName>
            <MethodComment>/** 
 * Get the total compile time for the associated query in milliseconds. Compile time can be divided into parse, bind, optimize and generate times.
 * @return long		The total compile time for the associated query in milliseconds.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getParseTimeInMillis</MethodName>
            <MethodComment>/** 
 * Get the parse time for the associated query in milliseconds.
 * @return long		The parse time for the associated query in milliseconds.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBindTimeInMillis</MethodName>
            <MethodComment>/** 
 * Get the bind time for the associated query in milliseconds.
 * @return long		The bind time for the associated query in milliseconds.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOptimizeTimeInMillis</MethodName>
            <MethodComment>/** 
 * Get the optimize time for the associated query in milliseconds.
 * @return long		The optimize time for the associated query in milliseconds.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGenerateTimeInMillis</MethodName>
            <MethodComment>/** 
 * Get the generate time for the associated query in milliseconds.
 * @return long		The generate time for the associated query in milliseconds.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExecuteTimeInMillis</MethodName>
            <MethodComment>/** 
 * Get the execute time for the associated query in milliseconds.
 * @return long		The execute time for the associated query in milliseconds.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBeginCompilationTimestamp</MethodName>
            <MethodComment>/** 
 * Get the timestamp for the beginning of query compilation. 
 * @return java.sql.Timestamp	The timestamp for the beginning of query compilation.
 */
</MethodComment>
            <ReturnType>Timestamp</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEndCompilationTimestamp</MethodName>
            <MethodComment>/** 
 * Get the timestamp for the end of query compilation. 
 * @return java.sql.Timestamp	The timestamp for the end of query compilation.
 */
</MethodComment>
            <ReturnType>Timestamp</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBeginExecutionTimestamp</MethodName>
            <MethodComment>/** 
 * Get the timestamp for the beginning of query execution. 
 * @return java.sql.Timestamp	The timestamp for the beginning of query execution.
 */
</MethodComment>
            <ReturnType>Timestamp</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEndExecutionTimestamp</MethodName>
            <MethodComment>/** 
 * Get the timestamp for the end of query execution. 
 * @return java.sql.Timestamp	The timestamp for the end of query execution.
 */
</MethodComment>
            <ReturnType>Timestamp</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatementName</MethodName>
            <MethodComment>/** 
 * Get the name of the associated query or statement. (This will be an internally generated name if the user did not assign a name.)
 * @return java.lang.String	The name of the associated query or statement.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSPSName</MethodName>
            <MethodComment>/** 
 * Get the name of the Stored Prepared Statement  for the statement.
 * @return java.lang.String	The SPS name of the associated query or statement.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatementText</MethodName>
            <MethodComment>/** 
 * Get the text for the associated query or statement.
 * @return java.lang.String	The text for the associated query or statement.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEstimatedRowCount</MethodName>
            <MethodComment>/** 
 * Get the estimated row count for the number of rows returned by the associated query or statement.
 * @return	The estimated number of rows returned by the associatedquery or statement.
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatementExecutionPlanText</MethodName>
            <MethodComment>/** 
 * Get the execution plan for the associated query or statement as a String.
 * @return java.lang.String	The execution plan for the associated query or statement.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [subqueryInfo=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScanStatisticsText</MethodName>
            <MethodComment>/** 
 * Get the information on the nodes relating to table and index scans from the execution plan for the associated query or statement as a String.
 * @return java.lang.String	The nodes relating to table and index scansfrom the execution plan for the associated query or statement.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getScanStatisticsText</MethodName>
            <MethodComment>/** 
 * Get the information on the nodes relating to table and index scans for table tableName from the execution plan for the associated query  or statement as a String.
 * @param tableName table for which user seeks statistics.
 * @return java.lang.String	The nodes relating to table and index scansfrom the execution plan for the associated query or statement for  tableName.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tableName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [s=topResultSetStatistics.getScanStatisticsText(tableName,0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [spstext=(spsName != null) ? ("Stored Prepared Statement Name: \n\t" + spsName + "\n") : ""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getChildren</MethodName>
            <MethodComment>/** 
 * Get the objects to be displayed when this tree object is expanded. &lt;P&gt; The objects returned can be of any type, including addtional Inspectables.
 * @return java.util.Vector	A vector of objects.
 */
</MethodComment>
            <ReturnType>ResultSetStatistics</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Vector&lt;ResultSetStatistics&gt; [children=new Vector&lt;ResultSetStatistics&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>children;addElement;[topResultSetStatistics]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>acceptFromTopResultSet</MethodName>
            <MethodComment>/** 
 * initiate a visit of an XPLAINVisitor from the top of the RS tree
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>XPLAINVisitor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>