<Class>
    <Id>1198</Id>
    <Package>org.apache.derby.vti</Package>
    <ClassName>VTIContext</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>VTIContext  /** 
 * &lt;p&gt; Context parameter which is passed to an AwareVTI. &lt;/p&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>_vtiSchema</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_vtiTable</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_statementText</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>VTIContext</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Construct from pieces. &lt;/p&gt;
 * @param vtiSchema   Name of the schema holding the table function.
 * @param vtiTable      Name of the table function.
 * @param statementText   Text of the statement which is invoking the table function.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>vtiSchema</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>vtiTable</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>statementText</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>vtiSchema</MethodName>
            <MethodComment>/** 
 * Return the name of the schema holding the table function 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>vtiTable</MethodName>
            <MethodComment>/** 
 * Return the unqualified table function name 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>statementText</MethodName>
            <MethodComment>/** 
 * Return the text of the statement which invoked the table function 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>