<Class>
    <Id>724</Id>
    <Package>org.apache.derbyTesting.unitTests.services</Package>
    <ClassName>T_CacheService</ClassName>
    <SuperClass>T_Generic</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>CacheableFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>cf</FieldName>
            <FieldType>CacheFactory</FieldType>
        </Field>
        <Field>
            <FieldName>threadFail</FieldName>
            <FieldType>T_Fail</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>newCacheable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Cacheable</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTests</MethodName>
            <MethodComment>/** 
 * @exception T_Fail - the test has failed.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DaemonFactory [df]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModuleToTestProtocolName</MethodName>
            <MethodComment>/** 
 * Get the name of the protocol for the module to test. This is the 'factory.MODULE' variable. 'moduleName' to the name of the module to test. 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T001</MethodName>
            <MethodComment>/** 
 * Test the find and findCached calls.
 * @exception StandardException  Standard Derby Error policy
 * @exception T_Fail  Some error
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>T_Key [tkey1=T_Key.simpleInt(1)]</InnerVar>
                <InnerVar>T_Key [tkey2=T_Key.dontFindInt(2)]</InnerVar>
                <InnerVar>T_Key [tkey3=T_Key.exceptionInt(3)]</InnerVar>
                <InnerVar>Cacheable [e1=t_findSucceed(cm,tkey1)]</InnerVar>
                <InnerVar>Cacheable [e2=t_findSucceed(cm,tkey2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;t_findCachedFail;[cm, tkey1]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey1)]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findCachedSucceed(cm,tkey1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;t_findCachedFail;[cm, tkey2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;t_findFail;[cm, tkey2]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey1)]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey2)]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;t_findCachedFail;[cm, tkey3]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey3)]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey2)]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[t_findSucceed(cm,tkey1)]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;cleanAll;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;ageOut;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;t_findCachedFail;[cm, tkey1]</InnerMethodInvoke>
                <InnerMethodInvoke>null;t_findCachedFail;[cm, tkey2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;t_findCachedFail;[cm, tkey3]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;cleanAll;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;ageOut;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[e1]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[e1]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[e2]</InnerMethodInvoke>
                <InnerMethodInvoke>cm;release;[e2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;PASS;["T001"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>thrashCache</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threads</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iterations</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Thread[] [children=new Thread[threads]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;PASS;["thrashCache"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setChildException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tf</ParamName>
                    <ParamType>T_Fail</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>t_findCachedFail</MethodName>
            <MethodComment>/** 
 * A call to findCached() that is expected to return nothing.
 * @exception StandardException  Standard Derby Error policy
 * @exception T_Fail Something was found.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cacheable [entry=cm.findCached(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>t_findCachedSucceed</MethodName>
            <MethodComment>/** 
 * A call to findCached() that is expected to find something.
 * @exception StandardException  Standard Derby Error policy
 * @exception T_Fail Nothing was found.
 */
</MethodComment>
            <ReturnType>Cacheable</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cacheable [entry=cm.findCached(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>t_findFail</MethodName>
            <MethodComment>/** 
 * A call to find() that is expected to return nothing.
 * @exception T_Fail Something was found.
 * @exception StandardException  Standard Derby Error policy
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cacheable [entry=cm.find(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>t_findSucceed</MethodName>
            <MethodComment>/** 
 * A call to findCached() that is expected to find something.
 * @exception T_Fail Nothing was found.
 * @exception StandardException  Standard Derby Error policy
 */
</MethodComment>
            <ReturnType>Cacheable</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>CacheManager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Cacheable [entry=cm.find(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startSystemModule</MethodName>
            <MethodComment>/** 
 * Privileged startup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factoryInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>