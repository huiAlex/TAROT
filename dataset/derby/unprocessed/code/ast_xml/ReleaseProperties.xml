<Class>
    <Id>1926</Id>
    <Package>org.apache.derbyPreBuild</Package>
    <ClassName>ReleaseProperties</ClassName>
    <SuperClass>Task</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReleaseProperties  /** 
 * &lt;p&gt; This ant task creates the release properties needed to define the release id when building the Derby distributions. For a description of the Derby release id, see http://db.apache.org/derby/papers/versionupgrade.html &lt;/p&gt; &lt;p&gt; This task also sets a property for use by downstream targets during the release-build: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;derby.release.id.new&lt;/b&gt; - The new id for the branch, in case we were asked to bump the release id.&lt;/li&gt; &lt;/ul&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LS</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>APACHE_LICENSE_HEADER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MAINT_ENCODING</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAINT_LENGTH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DRDA_MAINT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DRDA_MAINT_ID_DEFAULT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NEW_RELEASE_ID</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_releaseID</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_releasePropertiesFileName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_bump</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>_major</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>_minor</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>_fixpack</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>_point</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>_isBeta</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ReleaseProperties</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Let Ant conjure us out of thin air. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setReleaseID</MethodName>
            <MethodComment>/** 
 * &lt;p&gt;Let Ant set the Derby release id, a string of the form N.N.N.N.&lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>releaseID</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setReleasePropertiesFileName</MethodName>
            <MethodComment>/** 
 * &lt;p&gt;Let Ant set the output file name.&lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setBump</MethodName>
            <MethodComment>/** 
 * &lt;p&gt;Let Ant set our bumping behavior to true or false.&lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bumpFlag</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Create the release properties file from the release id. Sets the property derby.release.id.new equal to the resulting release id. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>File [target=new File(_releasePropertiesFileName)]</InnerVar>
                <InnerVar>FileWriter [propertiesFW=null]</InnerVar>
                <InnerVar>PrintWriter [propertiesPW=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>BuildException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>encodeFixpackAndPoint</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Stuff the third and fourth numbers of a Derby release id into the encoded format expected by the Derby release machinery. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>versionID</ParamName>
                    <ParamType>VersionID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [result=(versionID.getFixpack() * MAINT_ENCODING) + versionID.getPoint()]</InnerVar>
                <InnerVar>String [retval=Integer.toString(result)]</InnerVar>
                <InnerVar>int [length=retval.length()]</InnerVar>
                <InnerVar>int [count=MAINT_LENGTH - length]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentYear</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get the current year as an int. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finishWriting</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Flush and close file writers. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fw</ParamName>
                    <ParamType>FileWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pw</ParamName>
                    <ParamType>PrintWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pw;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>fw;flush;[]</InnerMethodInvoke>
                <InnerMethodInvoke>pw;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>fw;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readDRDAMaintID</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Read the DRDA maintenance id from the existing release properties. Returns 0 if the release properties file doesn't exist. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inputFile</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [releaseProperties=new Properties()]</InnerVar>
                <InnerVar>String [stringValue=releaseProperties.getProperty(DRDA_MAINT)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>releaseProperties;load;[new FileInputStream(inputFile)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>VersionID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringTokenizer [tokenizer=new StringTokenizer(text,". ")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>BuildException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bump</MethodName>
            <MethodComment>/** 
 * Bump the last digit of the release id 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMajor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMinor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFixpack</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBeta</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBranchName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuffer [buffer=new StringBuffer()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>buffer;append;[_major]</InnerMethodInvoke>
                <InnerMethodInvoke>buffer;append;['.']</InnerMethodInvoke>
                <InnerMethodInvoke>buffer;append;[_minor]</InnerMethodInvoke>
                <InnerMethodInvoke>buffer;append;['.']</InnerMethodInvoke>
                <InnerMethodInvoke>buffer;append;[_fixpack]</InnerMethodInvoke>
                <InnerMethodInvoke>buffer;append;['.']</InnerMethodInvoke>
                <InnerMethodInvoke>buffer;append;[_point]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>badID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BuildException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setProperty</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Set an ant property. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Property [property=new Property()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>property;setName;[name]</InnerMethodInvoke>
                <InnerMethodInvoke>property;setValue;[value]</InnerMethodInvoke>
                <InnerMethodInvoke>property;setProject;[getProject()]</InnerMethodInvoke>
                <InnerMethodInvoke>property;execute;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>BuildException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>