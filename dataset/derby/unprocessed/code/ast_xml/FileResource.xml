<Class>
    <Id>237</Id>
    <Package>org.apache.derby.iapi.store.access</Package>
    <ClassName>FileResource</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FileResource  /** 
 * Management of file resources within	a database. Suitable for jar files, images etc. &lt;P&gt;A file resource is identified by the pair (name,generationId). Name is an arbitrary String supplied by the caller. GenerationId is a non-repeating sequence number constructed by the database. Within a database a	(name,generationId) pair uniquely identifies a version of a file resource for all time. Newer generation numbers reflect newer versions of the file. &lt;P&gt;A database supports the concept of a designated current version of a fileResource. The management of the current version is transactional. The following rules apply &lt;OL&gt; &lt;LI&gt;Adding a FileResource makes the added version the current version &lt;LI&gt;Removing a FileResource removes the current version of the resource. After this operation the database holds no current version of the FileResoure. &lt;LI&gt;Replacing a FileResource removes the current version of the resource. &lt;/OL&gt; &lt;P&gt;For the benefit of replication, a database optionally retains  historic versions of stored files. These old versions are useful when processing old transactions in the stage. 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>JAR_DIRECTORY_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>add</MethodName>
            <MethodComment>/** 
 * Add a file resource, copying from the input stream. The InputStream will be closed by this method.
 * @param name the name of the file resource.
 * @param source an input stream for reading the content ofthe file resource.
 * @return the generationId for the file resource. Thisquantity increases when you replace the file resource.
 * @exception StandardException some error occured.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment>/** 
 * Remove the current generation of a file resource from the database.
 * @param name the name of the fileResource to remove.
 * @exception StandardException some error occured.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>currentGenerationId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeJarDir</MethodName>
            <MethodComment>/** 
 * During hard upgrade to &amp;lt;= 10.9, remove a jar directory (at post-commit  time) from the database.
 * @param f
 * @exception StandardException if an error occurs
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replace</MethodName>
            <MethodComment>/** 
 * Replace a file resource with a new version. &lt;P&gt;The InputStream will be closed by this method.
 * @param name the name of the file resource.
 * @param source an input stream for reading the content ofthe file resource.
 * @return the generationId for the new 'current' version of thefile resource. 
 * @exception StandardException some error occured.
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>currentGenerationId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAsFile</MethodName>
            <MethodComment>/** 
 * Get the StorageFile for a file resource.
 * @param name The name of the fileResource
 * @param generationId the generationId of the fileResource
 * @return A StorageFile object representing the file.
 */
</MethodComment>
            <ReturnType>StorageFile</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>generationId</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSeparatorChar</MethodName>
            <MethodComment>/** 
 * @return the separator character to be used in file names.
 */
</MethodComment>
            <ReturnType>char</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>