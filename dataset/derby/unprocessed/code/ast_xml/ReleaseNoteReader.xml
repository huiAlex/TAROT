<Class>
    <Id>859</Id>
    <Package>org.apache.derbyBuild</Package>
    <ClassName>ReleaseNoteReader</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReleaseNoteReader  /** 
 * &lt;p&gt; This tool reads a release note from a stream. When run standalone, this is a file stream. When run from the ReleaseNoteGenerator, the stream is opened on the URL of a release note stored in JIRA. The purpose of this class it to help people verify that their release notes can be digested by the ReleaseNoteGenerator. &lt;/p&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>USAGE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_documentBuilder</FieldName>
            <FieldType>DocumentBuilder</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ReleaseNoteReader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>documentBuilder</ParamName>
                    <ParamType>DocumentBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment>/** 
 * The program entry point exercises all of the checks which would be performed by the ReleaseNoteGenerator on this particular release note. Takes one argument, the name of the file which holds the release note.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [fileName=args[0]]</InnerVar>
                <InnerVar>FileInputStream [fis=new FileInputStream(fileName)]</InnerVar>
                <InnerVar>DocumentBuilderFactory [factory=DocumentBuilderFactory.newInstance()]</InnerVar>
                <InnerVar>DocumentBuilder [builder=factory.newDocumentBuilder()]</InnerVar>
                <InnerVar>ReleaseNoteReader [me=new ReleaseNoteReader(builder)]</InnerVar>
                <InnerVar>Document [doc=me.getReleaseNote(fis)]</InnerVar>
                <InnerVar>Element [summary=me.getReleaseNoteSummary(doc)]</InnerVar>
                <InnerVar>Element [details=me.getReleaseNoteDetails(doc)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>me;forbidBlockQuotes;[doc]</InnerMethodInvoke>
                <InnerMethodInvoke>null;println;["\n" + fileName + " passes the currently known checks performed by the release note generator.\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReleaseNote</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get the release note for an issue. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>Document</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Document [doc=_documentBuilder.parse(is)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>is;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReleaseNoteSummary</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get the summary paragraph for a release note &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>Element</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>releaseNote</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Element [root=releaseNote.getDocumentElement()]</InnerVar>
                <InnerVar>Element [summaryParagraph=GeneratorBase.getFirstChild(root,GeneratorBase.PARAGRAPH)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReleaseNoteDetails</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Get the detail section for a release note &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>Element</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>releaseNote</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Element [root=releaseNote.getDocumentElement()]</InnerVar>
                <InnerVar>Element [details=GeneratorBase.getFirstChild(root,GeneratorBase.BODY)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>forbidBlockQuotes</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Forbid BLOCKQUOTEs for accessibility reasons. See http://www.w3.org/TR/WCAG10/#gl-structure-presentation &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>releaseNote</ParamName>
                    <ParamType>Document</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Element [root=releaseNote.getDocumentElement()]</InnerVar>
                <InnerVar>String [errorMessage="For accessibility reasons, blockquotes are not allowed. Please remove the blockquote tags."]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;forbid;[root, "BLOCKQUOTE", errorMessage]</InnerMethodInvoke>
                <InnerMethodInvoke>null;forbid;[root, "blockquote", errorMessage]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>forbid</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>root</ParamName>
                    <ParamType>Element</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tag</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorMessage</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>NodeList [tags=root.getElementsByTagName(tag)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>println</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;[text]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>