<Class>
    <Id>571</Id>
    <Package>org.apache.derby.iapi.sql.dictionary</Package>
    <ClassName>DependencyDescriptor</ClassName>
    <SuperClass>UniqueTupleDescriptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DependencyDescriptor  /** 
 * DependencyDescriptor represents a persistent dependency between SQL objects, such as a TRIGGER being dependent on a TABLE. A DependencyDescriptor is stored in SYSDEPENDS as four separate columms corresponding to the getters of this class. 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>dependentID</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>dependentBloodhound</FieldName>
            <FieldType>DependableFinder</FieldType>
        </Field>
        <Field>
            <FieldName>providerID</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>providerBloodhound</FieldName>
            <FieldType>DependableFinder</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DependencyDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a DependencyDescriptor
 * @param dependent			The Dependent
 * @param provider			The Provider
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dependent</ParamName>
                    <ParamType>Dependent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>provider</ParamName>
                    <ParamType>Provider</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DependencyDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a DependencyDescriptor
 * @param dependentID			The Dependent ID
 * @param dependentBloodhound	The bloodhound for finding the Dependent
 * @param providerID			The Provider ID
 * @param providerBloodhound	The bloodhound for finding the Provider
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dependentID</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dependentBloodhound</ParamName>
                    <ParamType>DependableFinder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providerID</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>providerBloodhound</ParamName>
                    <ParamType>DependableFinder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUUID</MethodName>
            <MethodComment>/** 
 * Get the dependent's ID for the dependency.
 * @return 	The dependent's ID.
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDependentFinder</MethodName>
            <MethodComment>/** 
 * Get the dependent's type for the dependency.
 * @return The dependent's type.
 */
</MethodComment>
            <ReturnType>DependableFinder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProviderID</MethodName>
            <MethodComment>/** 
 * Get the provider's ID for the dependency.
 * @return 	The provider's ID.
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProviderFinder</MethodName>
            <MethodComment>/** 
 * Get the provider's type for the dependency.
 * @return The provider's type.
 */
</MethodComment>
            <ReturnType>DependableFinder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>