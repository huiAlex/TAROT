<Class>
    <Id>715</Id>
    <Package>org.apache.derby.iapi.sql.dictionary</Package>
    <ClassName>SubKeyConstraintDescriptor</ClassName>
    <SuperClass>SubConstraintDescriptor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SubKeyConstraintDescriptor  /** 
 * This interface is used to get information from a SubKeyConstraintDescriptor. A SubKeyConstraintDescriptor is used within the DataDictionary to  get auxiliary constraint information from the system table that is auxiliary to sysconstraints.
 * @version 0.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>indexId</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>keyConstraintId</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>raDeleteRule</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>raUpdateRule</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SubKeyConstraintDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a SubConstraintDescriptorImpl
 * @param constraintId		The UUID of the constraint.
 * @param indexId			The UUID of the backing index.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>constraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SubKeyConstraintDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a SubConstraintDescriptor
 * @param constraintId		The UUID of the constraint.
 * @param indexId			The UUID of the backing index.
 * @param keyConstraintId	The UUID of the referenced constraint (fks)
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>constraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyConstraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SubKeyConstraintDescriptor</MethodName>
            <MethodComment>/** 
 * Constructor for a SubConstraintDescriptor
 * @param constraintId		The UUID of the constraint.
 * @param indexId			The UUID of the backing index.
 * @param keyConstraintId	The UUID of the referenced constraint (fks)
 * @param raDeleteRule      The referential action for delete
 * @param raUpdateRule      The referential action for update
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>constraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indexId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyConstraintId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raDeleteRule</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raUpdateRule</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIndexId</MethodName>
            <MethodComment>/** 
 * Gets the UUID of the backing index.
 * @return	The UUID of the backing index.
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKeyConstraintId</MethodName>
            <MethodComment>/** 
 * Gets the UUID of the referenced key constraint
 * @return	The UUID of the referenced key constraint
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasBackingIndex</MethodName>
            <MethodComment>/** 
 * Does this constraint have a backing index?
 * @return boolean	Whether or not there is a backing index for this constraint.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRaDeleteRule</MethodName>
            <MethodComment>/** 
 * Gets a referential action rule on a  DELETE
 * @return referential rule defined by the user during foreign key creattionfor a delete (like CASCDE , RESTRICT ..etc)
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRaUpdateRule</MethodName>
            <MethodComment>/** 
 * Gets a referential action rule on a UPDATE
 * @return referential rule defined by the user during foreign key creattionfor an UPDATE (like CASCDE , RESTRICT ..etc)
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment>/** 
 * Convert the SubKeyConstraintDescriptor to a String.
 * @return	A String representation of this SubConstraintDescriptor
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>