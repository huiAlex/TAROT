<Class>
    <Id>837</Id>
    <Package>org.apache.derby.iapi.sql.execute</Package>
    <ClassName>ExecutionStmtValidator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExecutionStmtValidator  /** 
 * An ExecutionStatementValidator is an object that is handed a ConstantAction and asked whether it is ok for this result set to execute.  When something like a trigger is executing, one of these gets pushed. Before execution, each validator that has been pushed is invoked on the result set that we are about to execution.  It is up to the validator to look at the result set and either complain (throw an exception) or let it through.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>validateStatement</MethodName>
            <MethodComment>/** 
 * Validate the statement.
 * @param constantAction The constant action that we are about to execute.  
 * @exception StandardException on error
 * @see ConstantAction
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>constantAction</ParamName>
                    <ParamType>ConstantAction</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>