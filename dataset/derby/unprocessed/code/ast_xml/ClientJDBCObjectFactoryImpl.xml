<Class>
    <Id>1278</Id>
    <Package>org.apache.derby.client.net</Package>
    <ClassName>ClientJDBCObjectFactoryImpl</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ClientJDBCObjectFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ClientJDBCObjectFactoryImpl  /** 
 * Implements the the ClientJDBCObjectFactory interface and returns the classes that implement the JDBC3.0/2.0 interfaces For example, newCallableStatement would return ClientCallableStatement
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>msgutil_</FieldName>
            <FieldType>MessageUtil</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>newClientPooledConnection</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link org.apache.derby.client.ClientPooledConnection}
 */
</MethodComment>
            <ReturnType>ClientPooledConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ds</ParamName>
                    <ParamType>BasicClientDataSource40</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newClientXAConnection</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link org.apache.derby.client.ClientXAConnection}
 */
</MethodComment>
            <ReturnType>ClientXAConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ds</ParamName>
                    <ParamType>BasicClientDataSource40</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newCallableStatement</MethodName>
            <MethodComment>/** 
 * Returns an instance of ClientCallableStatement.
 * @param agent       The instance of NetAgent associated with this{@link org.apache.derby.client.am.ClientCallableStatement}object.
 * @param connection  The connection object associated with thisPreparedStatement Object.
 * @param sql         A String object that is the SQL statement to be sent to the database.
 * @param type        One of the ResultSet type constants
 * @param concurrency One of the ResultSet concurrency constants
 * @param holdability One of the ResultSet holdability constants
 * @param cpc         The PooledConnection object that will be used to notify the PooledConnection reference of the Error  Occurred and the Close events.
 * @return a {@link org.apache.derby.client.am.ClientCallableStatement}object
 * @throws SqlException
 */
</MethodComment>
            <ReturnType>ClientCallableStatement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>agent</ParamName>
                    <ParamType>Agent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sql</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>concurrency</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>holdability</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cpc</ParamName>
                    <ParamType>ClientPooledConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newLogicalConnection</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link org.apache.derby.client.am.LogicalConnection}
 */
</MethodComment>
            <ReturnType>LogicalConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>physicalConnection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pooledConnection</ParamName>
                    <ParamType>ClientPooledConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newCachingLogicalConnection</MethodName>
            <MethodComment>/** 
 * Returns an instance of a  {@link org.apache.derby.client.am.CachingLogicalConnection}, which provides caching of prepared statements.
 * @param physicalConnection the underlying physical connection
 * @param pooledConnection the pooled connection
 * @param stmtCache statement cache
 * @return A logical connection with statement caching capabilities.
 * @throws SqlException if creation of the logical connection fails
 */
</MethodComment>
            <ReturnType>LogicalConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>physicalConnection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pooledConnection</ParamName>
                    <ParamType>ClientPooledConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stmtCache</ParamName>
                    <ParamType>JDBCStatementCache</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newPreparedStatement</MethodName>
            <MethodComment>/** 
 * This method returns an instance of ClientPreparedStatement which implements java.sql.PreparedStatement. It has the ClientPooledConnection as one of its parameters this is used to raise the Statement Events when the prepared statement is closed.
 * @param agent The instance of NetAgent associated with this{@link org.apache.derby.client.am.ClientCallableStatement}object.
 * @param connection The connection object associated with thisPreparedStatement Object.
 * @param sql        A String object that is the SQL statement to be sentto the database.
 * @param section    Section
 * @param cpc The ClientPooledConnection wraps the underlying physicalconnection associated with this prepared statement. It is used to pass the Statement closed and the Statement error occurred events that occur back to the ClientPooledConnection.
 * @return a PreparedStatement object
 * @throws SqlException
 */
</MethodComment>
            <ReturnType>ClientPreparedStatement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>agent</ParamName>
                    <ParamType>Agent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sql</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>section</ParamName>
                    <ParamType>Section</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cpc</ParamName>
                    <ParamType>ClientPooledConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newPreparedStatement</MethodName>
            <MethodComment>/** 
 * This method returns an instance of ClientPreparedStatement which implements  {@code java.sql.PreparedStatement}. It has the  {@link org.apache.derby.client.ClientPooledConnection} as oneof its parameters this is used to raise the Statement Events when the prepared statement is closed.
 * @param agent The instance of NetAgent associated with this{@link org.apache.derby.client.am.ClientCallableStatement}object.
 * @param connection  The connection object associated with thisPreparedStatement Object.
 * @param sql         A String object that is the SQL statementto be sent to the database.
 * @param type        One of the ResultSet type constants.
 * @param concurrency One of the ResultSet concurrency constants.
 * @param holdability One of the ResultSet holdability constants.
 * @param autoGeneratedKeys a flag indicating whether auto-generatedkeys should be returned.
 * @param columnNames an array of column names indicating the columns thatshould be returned from the inserted row or rows.
 * @param cpc The ClientPooledConnection wraps the underlying physicalconnection associated with this prepared statement it is used to pass the Statement closed and the Statement error occurred events that occur back to the ClientPooledConnection.
 * @return a PreparedStatement object
 * @throws SqlException
 */
</MethodComment>
            <ReturnType>ClientPreparedStatement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>agent</ParamName>
                    <ParamType>Agent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sql</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>concurrency</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>holdability</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>autoGeneratedKeys</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnNames</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnIndexes</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cpc</ParamName>
                    <ParamType>ClientPooledConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newLogicalPreparedStatement</MethodName>
            <MethodComment>/** 
 * Returns a new logical prepared statement object.
 * @param ps underlying physical prepared statement
 * @param stmtKey key for the underlying physical prepared statement
 * @param cacheInteractor the statement cache interactor
 * @return A logical prepared statement.
 */
</MethodComment>
            <ReturnType>LogicalPreparedStatement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ps</ParamName>
                    <ParamType>PreparedStatement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stmtKey</ParamName>
                    <ParamType>StatementKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheInteractor</ParamName>
                    <ParamType>StatementCacheInteractor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newLogicalCallableStatement</MethodName>
            <MethodComment>/** 
 * Returns a new logical callable statement object.
 * @param cs underlying physical callable statement
 * @param stmtKey key for the underlying physical callable statement
 * @param cacheInteractor the statement cache interactor
 * @return A logical callable statement.
 */
</MethodComment>
            <ReturnType>LogicalCallableStatement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cs</ParamName>
                    <ParamType>CallableStatement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>stmtKey</ParamName>
                    <ParamType>StatementKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cacheInteractor</ParamName>
                    <ParamType>StatementCacheInteractor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newNetConnection</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link org.apache.derby.client.net.NetConnection}
 */
</MethodComment>
            <ReturnType>ClientConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>driverManagerLoginTimeout</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>portNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>databaseName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newNetConnection</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link org.apache.derby.client.net.NetConnection}
 */
</MethodComment>
            <ReturnType>ClientConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataSource</ParamName>
                    <ParamType>BasicClientDataSource40</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rmId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isXAConn</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newNetConnection</MethodName>
            <MethodComment>/** 
 * Returns an instance of NetConnection.
 * @param logWriter    LogWriter object associated with this connection.
 * @param user         user id for this connection.
 * @param password     password for this connection.
 * @param dataSource   The DataSource object passed from the PooledConnectionobject from which this constructor was called.
 * @param rmId         The Resource Manager ID for XA Connections
 * @param isXAConn     true if this is a XA connection
 * @param cpc          The ClientPooledConnection object from which thisNetConnection constructor was called. This is used to pass StatementEvents back to the pooledConnection object.
 * @return a {@link ClientConnection} object
 * @throws SqlException
 */
</MethodComment>
            <ReturnType>ClientConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataSource</ParamName>
                    <ParamType>BasicClientDataSource40</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rmId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isXAConn</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cpc</ParamName>
                    <ParamType>ClientPooledConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newNetResultSet</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link NetResultSet}
 */
</MethodComment>
            <ReturnType>ClientResultSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netAgent</ParamName>
                    <ParamType>Agent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>netStatement</ParamName>
                    <ParamType>MaterialStatement</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cursor</ParamName>
                    <ParamType>Cursor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>qryprctyp</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlcsrhld</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>qryattscr</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>qryattsns</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>qryattset</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>qryinsid</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actualResultSetType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actualResultSetConcurrency</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actualResultSetHoldability</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newNetDatabaseMetaData</MethodName>
            <MethodComment>/** 
 * @return an instance of {@link NetDatabaseMetaData}
 */
</MethodComment>
            <ReturnType>ClientDatabaseMetaData</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netAgent</ParamName>
                    <ParamType>Agent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newStatement</MethodName>
            <MethodComment>/** 
 * This method provides an instance of Statement 
 * @param agent            Agent
 * @param connection       Connection
 * @param type             int
 * @param concurrency      int
 * @param holdability      int
 * @param autoGeneratedKeys int
 * @param columnNames       String[]
 * @param columnIndexes     int[]
 * @return a ClientStatement implementation
 * @throws SqlException
 */
</MethodComment>
            <ReturnType>ClientStatement</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>agent</ParamName>
                    <ParamType>Agent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>concurrency</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>holdability</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>autoGeneratedKeys</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnNames</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnIndexes</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newColumnMetaData</MethodName>
            <MethodComment>/** 
 * Returns an instance of ColumnMetaData
 * @param logWriter LogWriter
 * @return a ColumnMetaData implementation
 */
</MethodComment>
            <ReturnType>ColumnMetaData</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newColumnMetaData</MethodName>
            <MethodComment>/** 
 * Returns an instance of ColumnMetaData or ColumnMetaData40 depending on the JDK version under use
 * @param logWriter  LogWriter
 * @param upperBound int
 * @return a ColumnMetaData implementation
 */
</MethodComment>
            <ReturnType>ColumnMetaData</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>upperBound</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newParameterMetaData</MethodName>
            <MethodComment>/** 
 * returns an instance of ParameterMetaData 
 * @param columnMetaData ColumnMetaData
 * @return a ParameterMetaData implementation
 */
</MethodComment>
            <ReturnType>ClientParameterMetaData</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>columnMetaData</ParamName>
                    <ParamType>ColumnMetaData</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newBatchUpdateException</MethodName>
            <MethodComment>/** 
 * Creates a BatchUpdateException depending on the JVM level.
 */
</MethodComment>
            <ReturnType>BatchUpdateException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgid</ParamName>
                    <ParamType>ClientMessageId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>updateCounts</ParamName>
                    <ParamType>long[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>SqlException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BatchUpdateException [bue=newBatchUpdateException(msgutil_.getCompleteMessage(msgid.msgid,args),ExceptionUtil.getSQLStateFromIdentifier(msgid.msgid),ExceptionUtil.getSeverityFromIdentifier(msgid.msgid),updateCounts,cause)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newBatchUpdateException</MethodName>
            <MethodComment>/** 
 * This method is overridden on JVM 8 
 */
</MethodComment>
            <ReturnType>BatchUpdateException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>message</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlState</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorCode</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>updateCounts</ParamName>
                    <ParamType>long[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>SqlException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BatchUpdateException [bue=new BatchUpdateException(message,sqlState,errorCode,Utils.squashLongs(updateCounts))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>