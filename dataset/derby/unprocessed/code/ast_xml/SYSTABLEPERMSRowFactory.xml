<Class>
    <Id>640</Id>
    <Package>org.apache.derby.impl.sql.catalog</Package>
    <ClassName>SYSTABLEPERMSRowFactory</ClassName>
    <SuperClass>PermissionsCatalogRowFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SYSTABLEPERMSRowFactory  /** 
 * Factory for creating a SYSTABLEPERMS row.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TABLENAME_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TABLEPERMSID_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GRANTEE_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GRANTOR_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TABLEID_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SELECTPRIV_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DELETEPRIV_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INSERTPRIV_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UPDATEPRIV_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>REFERENCESPRIV_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TRIGGERPRIV_COL_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COLUMN_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GRANTEE_TABLE_GRANTOR_INDEX_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TABLEPERMSID_INDEX_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TABLEID_INDEX_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>indexColumnPositions</FieldName>
            <FieldType>int[][]</FieldType>
        </Field>
        <Field>
            <FieldName>GRANTEE_COL_NUM_IN_GRANTEE_TABLE_GRANTOR_INDEX</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>indexUniqueness</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>uuids</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SYSTABLEPERMSRowFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuidf</ParamName>
                    <ParamType>UUIDFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ef</ParamName>
                    <ParamType>ExecutionFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dvf</ParamName>
                    <ParamType>DataValueFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initInfo;[COLUMN_COUNT, TABLENAME_STRING, indexColumnPositions, indexUniqueness, uuids]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UUID [oid]</InnerVar>
                <InnerVar>DataValueDescriptor [grantee=null]</InnerVar>
                <InnerVar>DataValueDescriptor [grantor=null]</InnerVar>
                <InnerVar>String [tablePermID=null]</InnerVar>
                <InnerVar>String [tableID=null]</InnerVar>
                <InnerVar>String [selectPriv=null]</InnerVar>
                <InnerVar>String [deletePriv=null]</InnerVar>
                <InnerVar>String [insertPriv=null]</InnerVar>
                <InnerVar>String [updatePriv=null]</InnerVar>
                <InnerVar>String [referencesPriv=null]</InnerVar>
                <InnerVar>String [triggerPriv=null]</InnerVar>
                <InnerVar>ExecRow [row=getExecutionFactory().getValueRow(COLUMN_COUNT)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>row;setColumn;[TABLEPERMSID_COL_NUM, new SQLChar(tablePermID)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[GRANTEE_COL_NUM, grantee]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[GRANTOR_COL_NUM, grantor]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[TABLEID_COL_NUM, new SQLChar(tableID)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SELECTPRIV_COL_NUM, new SQLChar(selectPriv)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[DELETEPRIV_COL_NUM, new SQLChar(deletePriv)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[INSERTPRIV_COL_NUM, new SQLChar(insertPriv)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[UPDATEPRIV_COL_NUM, new SQLChar(updatePriv)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[REFERENCESPRIV_COL_NUM, new SQLChar(referencesPriv)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[TRIGGERPRIV_COL_NUM, new SQLChar(triggerPriv)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildDescriptor</MethodName>
            <MethodComment>/** 
 * builds a tuple descriptor from a row 
 */
</MethodComment>
            <ReturnType>TupleDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentTuple</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataDictionary</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [tablePermsUUIDString=row.getColumn(TABLEPERMSID_COL_NUM).getString()]</InnerVar>
                <InnerVar>UUID [tablePermsUUID=getUUIDFactory().recreateUUID(tablePermsUUIDString)]</InnerVar>
                <InnerVar>String [tableUUIDString=row.getColumn(TABLEID_COL_NUM).getString()]</InnerVar>
                <InnerVar>UUID [tableUUID=getUUIDFactory().recreateUUID(tableUUIDString)]</InnerVar>
                <InnerVar>String [selectPriv=row.getColumn(SELECTPRIV_COL_NUM).getString()]</InnerVar>
                <InnerVar>String [deletePriv=row.getColumn(DELETEPRIV_COL_NUM).getString()]</InnerVar>
                <InnerVar>String [insertPriv=row.getColumn(INSERTPRIV_COL_NUM).getString()]</InnerVar>
                <InnerVar>String [updatePriv=row.getColumn(UPDATEPRIV_COL_NUM).getString()]</InnerVar>
                <InnerVar>String [referencesPriv=row.getColumn(REFERENCESPRIV_COL_NUM).getString()]</InnerVar>
                <InnerVar>String [triggerPriv=row.getColumn(TRIGGERPRIV_COL_NUM).getString()]</InnerVar>
                <InnerVar>TablePermsDescriptor [tabPermsDesc=new TablePermsDescriptor(dataDictionary,getAuthorizationID(row,GRANTEE_COL_NUM),getAuthorizationID(row,GRANTOR_COL_NUM),tableUUID,selectPriv,deletePriv,insertPriv,updatePriv,referencesPriv,triggerPriv)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tabPermsDesc;setUUID;[tablePermsUUID]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildColumnList</MethodName>
            <MethodComment>/** 
 * builds a column list for the catalog 
 */
</MethodComment>
            <ReturnType>SystemColumn[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildIndexKeyRow</MethodName>
            <MethodComment>/** 
 * builds a key row given for a given index number.
 */
</MethodComment>
            <ReturnType>ExecIndexRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExecIndexRow [row=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrimaryKeyIndexNumber</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orPermissions</MethodName>
            <MethodComment>/** 
 * Or a set of permissions in with a row from this catalog table
 * @param row an existing row
 * @param perm a permission descriptor of the appropriate class for this PermissionsCatalogRowFactory class.
 * @param colsChanged An array with one element for each column in row. It is updated toindicate which columns in row were changed
 * @return The number of columns that were changed.
 * @exception StandardException standard error policy
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsChanged</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TablePermsDescriptor [tablePerms=(TablePermsDescriptor)perm]</InnerVar>
                <InnerVar>int [changeCount=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orOnePermission</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsChanged</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>permission</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [existingPermDVD=row.getColumn(column)]</InnerVar>
                <InnerVar>char [existingPerm=existingPermDVD.getString().charAt(0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>existingPermDVD;setValue;[permission]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removePermissions</MethodName>
            <MethodComment>/** 
 * Remove a set of permissions from a row from this catalog table
 * @param row an existing row
 * @param perm a permission descriptor of the appropriate class for this PermissionsCatalogRowFactory class.
 * @param colsChanged An array with one element for each column in row. It is updated toindicate which columns in row were changed
 * @return -1 if there are no permissions left in the row, otherwise the number of columns that were changed.
 * @exception StandardException standard error policy
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsChanged</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TablePermsDescriptor [tablePerms=(TablePermsDescriptor)perm]</InnerVar>
                <InnerVar>int [changeCount=0]</InnerVar>
                <InnerVar>boolean [permissionsLeft=(removeOnePermission(row,colsChanged,SELECTPRIV_COL_NUM,tablePerms.getSelectPriv()) | removeOnePermission(row,colsChanged,DELETEPRIV_COL_NUM,tablePerms.getDeletePriv()) | removeOnePermission(row,colsChanged,INSERTPRIV_COL_NUM,tablePerms.getInsertPriv())| removeOnePermission(row,colsChanged,UPDATEPRIV_COL_NUM,tablePerms.getUpdatePriv())| removeOnePermission(row,colsChanged,REFERENCESPRIV_COL_NUM,tablePerms.getReferencesPriv())| removeOnePermission(row,colsChanged,TRIGGERPRIV_COL_NUM,tablePerms.getTriggerPriv()))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeOnePermission</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsChanged</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>column</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>permission</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [existingPermDVD=row.getColumn(column)]</InnerVar>
                <InnerVar>char [existingPerm=existingPermDVD.getString().charAt(0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUUIDOfThePassedDescriptor</MethodName>
            <MethodComment>/** 
 * @see PermissionsCatalogRowFactory#setUUIDOfThePassedDescriptor
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [existingPermDVD=row.getColumn(TABLEPERMSID_COL_NUM)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>perm;setUUID;[getUUIDFactory().recreateUUID(existingPermDVD.getString())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>