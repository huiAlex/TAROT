<Class>
    <Id>1138</Id>
    <Package>org.apache.derby.client.net</Package>
    <ClassName>NetAgent</ClassName>
    <SuperClass>Agent</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>connectionRequest_</FieldName>
            <FieldType>ConnectionRequestInterface</FieldType>
        </Field>
        <Field>
            <FieldName>statementRequest_</FieldName>
            <FieldType>StatementRequestInterface</FieldType>
        </Field>
        <Field>
            <FieldName>resultSetRequest_</FieldName>
            <FieldType>ResultSetRequestInterface</FieldType>
        </Field>
        <Field>
            <FieldName>connectionReply_</FieldName>
            <FieldType>ConnectionReply</FieldType>
        </Field>
        <Field>
            <FieldName>packageReply_</FieldName>
            <FieldType>ConnectionReply</FieldType>
        </Field>
        <Field>
            <FieldName>statementReply_</FieldName>
            <FieldType>StatementReply</FieldType>
        </Field>
        <Field>
            <FieldName>resultSetReply_</FieldName>
            <FieldType>ResultSetReply</FieldType>
        </Field>
        <Field>
            <FieldName>netConnection_</FieldName>
            <FieldType>NetConnection</FieldType>
        </Field>
        <Field>
            <FieldName>request_</FieldName>
            <FieldType>Request</FieldType>
        </Field>
        <Field>
            <FieldName>netConnectionRequest_</FieldName>
            <FieldType>NetConnectionRequest</FieldType>
        </Field>
        <Field>
            <FieldName>netPackageRequest_</FieldName>
            <FieldType>NetPackageRequest</FieldType>
        </Field>
        <Field>
            <FieldName>netStatementRequest_</FieldName>
            <FieldType>NetStatementRequest</FieldType>
        </Field>
        <Field>
            <FieldName>netResultSetRequest_</FieldName>
            <FieldType>NetResultSetRequest</FieldType>
        </Field>
        <Field>
            <FieldName>reply_</FieldName>
            <FieldType>Reply</FieldType>
        </Field>
        <Field>
            <FieldName>netConnectionReply_</FieldName>
            <FieldType>NetConnectionReply</FieldType>
        </Field>
        <Field>
            <FieldName>netPackageReply_</FieldName>
            <FieldType>NetPackageReply</FieldType>
        </Field>
        <Field>
            <FieldName>netStatementReply_</FieldName>
            <FieldType>NetStatementReply</FieldType>
        </Field>
        <Field>
            <FieldName>netResultSetReply_</FieldName>
            <FieldType>NetResultSetReply</FieldType>
        </Field>
        <Field>
            <FieldName>socket_</FieldName>
            <FieldType>Socket</FieldType>
        </Field>
        <Field>
            <FieldName>rawSocketInputStream_</FieldName>
            <FieldType>InputStream</FieldType>
        </Field>
        <Field>
            <FieldName>rawSocketOutputStream_</FieldName>
            <FieldType>OutputStream</FieldType>
        </Field>
        <Field>
            <FieldName>server_</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>port_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>clientSSLMode_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ebcdicCcsidManager_</FieldName>
            <FieldType>EbcdicCcsidManager</FieldType>
        </Field>
        <Field>
            <FieldName>utf8CcsidManager_</FieldName>
            <FieldType>Utf8CcsidManager</FieldType>
        </Field>
        <Field>
            <FieldName>currentCcsidManager_</FieldName>
            <FieldType>CcsidManager</FieldType>
        </Field>
        <Field>
            <FieldName>typdef_</FieldName>
            <FieldType>Typdef</FieldType>
        </Field>
        <Field>
            <FieldName>targetTypdef_</FieldName>
            <FieldType>Typdef</FieldType>
        </Field>
        <Field>
            <FieldName>originalTargetTypdef_</FieldName>
            <FieldType>Typdef</FieldType>
        </Field>
        <Field>
            <FieldName>svrcod_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>orignalTargetSqlam_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>targetSqlam_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>exceptionOpeningSocket_</FieldName>
            <FieldType>SqlException</FieldType>
        </Field>
        <Field>
            <FieldName>exceptionConvertingRdbnam</FieldName>
            <FieldType>SqlException</FieldType>
        </Field>
        <Field>
            <FieldName>writeChainIsDirty_</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>NetAgent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NetAgent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>netLogWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loginTimeout</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>server</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>port</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientSSLMode</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetAgent_</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netLogWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loginTimeout</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>server</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>port</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSvrcod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>svrcod</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearSvrcod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSvrcod</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flush_</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;sendRequest;[]</InnerMethodInvoke>
                <InnerMethodInvoke>reply_;initialize;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close_</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SqlException [accumulatedExceptions=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTimeout</MethodName>
            <MethodComment>/** 
 * Specifies the maximum blocking time that should be used when sending and receiving messages. The timeout is implemented by using the the  underlying socket implementation's timeout support.  Note that the support for timeout on sockets is dependent on the OS  implementation. For the same reason we ignore any exceptions thrown by the call to the socket layer.
 * @param timeout The timeout value in seconds. A value of 0 corresponds to infinite timeout.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>timeout</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTimeout</MethodName>
            <MethodComment>/** 
 * Returns the current timeout value that is set on the socket. Note that the support for timeout on sockets is dependent on the OS  implementation. For the same reason we ignore any exceptions thrown by the call to the socket layer.
 * @return The timeout value in seconds. A value of 0 corresponds tothat no timeout is specified on the socket.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [timeout=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInputStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentCcsidManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>CcsidManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOutputStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OutputStream</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setInputStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inputStream</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setOutputStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outputStream</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>throwCommunicationsFailure</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(this,new ClientMessageId(SQLState.COMMUNICATION_ERROR),cause,cause.getMessage())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>markChainBreakingException_</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setSvrcod;[CodePoint.SVRCOD_ERROR]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkForChainBreakingException_</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [svrcod=getSvrcod()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;clearSvrcod;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDeferredResetConnection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>markWriteChainAsDirty</MethodName>
            <MethodComment>/** 
 * Marks the agent's write chain as dirty. A write chain is dirty when data from it has been sent to the server. A dirty write chain cannot be reset  and reused for another request until the remaining data has been sent to the server and the write chain properly ended.  Resetting a dirty chain will cause the new request to be appended to the  unfinished request already at the server, which will likely lead to  cryptic syntax errors.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>verifyWriteChainIsClean</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginWriteChainOutsideUOW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;verifyWriteChainIsClean;[]</InnerMethodInvoke>
                <InnerMethodInvoke>request_;initialize;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeDeferredResetConnection;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginWriteChain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>statement</ParamName>
                    <ParamType>ClientStatement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;verifyWriteChainIsClean;[]</InnerMethodInvoke>
                <InnerMethodInvoke>request_;initialize;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;writeDeferredResetConnection;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endWriteChain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readDeferredResetConnection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginReadChain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>statement</ParamName>
                    <ParamType>ClientStatement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readDeferredResetConnection;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>beginReadChainOutsideUOW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readDeferredResetConnection;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>switchToUtf8CcsidMgr</MethodName>
            <MethodComment>/** 
 * Switches the current CCSID manager to UTF-8
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>switchToEbcdicMgr</MethodName>
            <MethodComment>/** 
 * Switches the current CCSID manager to EBCDIC
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>