<Class>
    <Id>716</Id>
    <Package>org.apache.derby.impl.store.access.btree.index</Package>
    <ClassName>B2IRowLocking2</ClassName>
    <SuperClass>B2IRowLockingRR</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BTreeLockingPolicy</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>B2IRowLocking2  /** 
 * The btree locking policy which implements read committed isolation level. It inherits all functionality from B2IRowLockingRR (repeatable read) except  that it releases read locks after obtaining them.  It provides a single implementation of unlockScanRecordAfterRead() which releases a read lock after it has been locked and processed.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>B2IRowLocking2</MethodName>
            <MethodComment>/** 
 * Constructors for This class:
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rawtran</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lock_level</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>locking_policy</ParamName>
                    <ParamType>LockingPolicy</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>base_cc</ParamName>
                    <ParamType>ConglomerateController</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>open_btree</ParamName>
                    <ParamType>OpenBTree</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unlockScanRecordAfterRead</MethodName>
            <MethodComment>/** 
 * Release read lock on a row.
 * @param forUpdate         Is the scan for update or for read only.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>BTreeRowPosition</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forUpdate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>base_cc;unlockRowAfterRead;[pos.current_lock_row_loc, forUpdate, false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>