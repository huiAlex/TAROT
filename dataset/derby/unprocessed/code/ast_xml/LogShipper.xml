<Class>
    <Id>1935</Id>
    <Package>org.apache.derby.impl.store.replication.master</Package>
    <ClassName>LogShipper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LogShipper  /** 
 * This is the interface for the replication log shipper. The log shipper is started by the master controller service. The log shipper is responsible for shipping of the log chunks from the log buffer (on the master) to the slave. The log shipper handles both periodic shipping of log records as well as request based shipping. The request based shipping would be useful when the log buffer becomes full and needs to be freed before it can store subsequent log chunks.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>flushedInstance</MethodName>
            <MethodComment>/** 
 * updates the information about the latest instance of the log record that has been flushed to the disk.
 * @param latestInstanceFlushedToDisk a long that contains the latestinstance of the log record that has been flushed to the disk.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>latestInstanceFlushedToDisk</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>forceFlush</MethodName>
            <MethodComment>/** 
 * Ships the next log record chunk, if available, from the log buffer to the slave.
 * @throws IOException If an exception occurs while trying to ship thereplication message (containing the log records) across the network.
 * @throws StandardException If an exception occurs while trying to readlog records from the log buffer.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flushBuffer</MethodName>
            <MethodComment>/** 
 * Transmits all the log records in the log buffer to the slave.
 * @throws IOException If an exception occurs while trying to ship thereplication message (containing the log records) across the network.
 * @throws StandardException If an exception occurs while trying to readlog records from the log buffer.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>workToDo</MethodName>
            <MethodComment>/** 
 * Used to notify the log shipper that a log buffer element is full.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>