<Class>
    <Id>1070</Id>
    <Package>org.apache.derby.iapi.db</Package>
    <ClassName>ConsistencyChecker</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConsistencyChecker  /** 
 * The ConsistencyChecker class provides static methods for verifying the consistency of the data stored within a database. &lt;p&gt;This class can only be used within an SQL-J statement, a Java procedure or a server side Java method. &lt;p&gt;This class can be accessed using the class alias &lt;code&gt; CONSISTENCYCHECKER &lt;/code&gt; in SQL-J statements.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>ConsistencyChecker</MethodName>
            <MethodComment>/** 
 * no requirement for a constructor 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkTable</MethodName>
            <MethodComment>/** 
 * Check the named table, ensuring that all of its indexes are consistent with the base table. Use this method only within an SQL-J statement; do not call it directly. &lt;P&gt;When tables are consistent, the method returns true. Otherwise, the method throws an exception. &lt;p&gt;To check the consistency of a single table: &lt;p&gt;&lt;code&gt; VALUES ConsistencyChecker::checkTable(&lt;i&gt;SchemaName&lt;/i&gt;, &lt;i&gt;TableName&lt;/i&gt;)&lt;/code&gt;&lt;/p&gt; &lt;P&gt;For example, to check the consistency of the table &lt;i&gt;APP.Flights&lt;/i&gt;: &lt;p&gt;&lt;code&gt; VALUES ConsistencyChecker::checkTable('APP', 'FLIGHTS')&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To check the consistency of all of the tables in the 'APP' schema, stopping at the first failure:  &lt;P&gt;&lt;code&gt;SELECT tablename, ConsistencyChecker::checkTable(&lt;br&gt; 'APP', tablename)&lt;br&gt; FROM sys.sysschemas s, sys.systables t WHERE s.schemaname = 'APP' AND s.schemaid = t.schemaid&lt;/code&gt; &lt;p&gt; To check the consistency of an entire database, stopping at the first failure: &lt;p&gt;&lt;code&gt;SELECT schemaname, tablename,&lt;br&gt; ConsistencyChecker::checkTable(schemaname, tablename)&lt;br&gt; FROM sys.sysschemas s, sys.systables t&lt;br&gt; WHERE s.schemaid = t.schemaid&lt;/code&gt;
 * @param schemaName	The schema name of the table.
 * @param tableName		The name of the table
 * @return	true, if the table is consistent, exception thrown if inconsistent
 * @exception SQLException	Thrown if some inconsistencyis found, or if some unexpected exception is thrown..
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>schemaName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tableName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataDictionary [dd]</InnerVar>
                <InnerVar>TableDescriptor [td]</InnerVar>
                <InnerVar>long [baseRowCount=-1]</InnerVar>
                <InnerVar>TransactionController [tc]</InnerVar>
                <InnerVar>ConglomerateDescriptor [heapCD]</InnerVar>
                <InnerVar>ConglomerateDescriptor [indexCD]</InnerVar>
                <InnerVar>ExecRow [baseRow]</InnerVar>
                <InnerVar>ExecRow [indexRow]</InnerVar>
                <InnerVar>RowLocation [rl=null]</InnerVar>
                <InnerVar>RowLocation [scanRL=null]</InnerVar>
                <InnerVar>ScanController [scan=null]</InnerVar>
                <InnerVar>int[] [baseColumnPositions]</InnerVar>
                <InnerVar>int [baseColumns=0]</InnerVar>
                <InnerVar>DataValueFactory [dvf]</InnerVar>
                <InnerVar>long [indexRows]</InnerVar>
                <InnerVar>ConglomerateController [baseCC=null]</InnerVar>
                <InnerVar>ConglomerateController [indexCC=null]</InnerVar>
                <InnerVar>SchemaDescriptor [sd]</InnerVar>
                <InnerVar>ConstraintDescriptor [constraintDesc]</InnerVar>
                <InnerVar>LanguageConnectionContext [lcc=ConnectionUtil.getCurrentLCC()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>