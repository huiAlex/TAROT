<Class>
    <Id>1051</Id>
    <Package>org.apache.derby.iapi.types</Package>
    <ClassName>StreamHeaderGenerator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StreamHeaderGenerator  /** 
 * Generates stream headers encoding the length of the stream.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>expectsCharCount</MethodName>
            <MethodComment>/** 
 * Tells if the header encodes a character or byte count.
 * @return {@code true} if the character count is encoded into the header,{@code false} if the byte count is encoded into the header.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateInto</MethodName>
            <MethodComment>/** 
 * Generates the header for the specified length and writes it into the provided buffer, starting at the specified offset.
 * @param buf the buffer to write into
 * @param offset starting offset in the buffer
 * @param valueLength the length of the stream, can be in either bytes orcharacters depending on the header format
 * @return The number of bytes written into the buffer.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buf</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>offset</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueLength</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateInto</MethodName>
            <MethodComment>/** 
 * Generates the header for the specified length and writes it into the destination stream.
 * @param out the destination stream
 * @param valueLength the length of the stream, can be in either bytes orcharacters depending on the header format
 * @return The number of bytes written to the destination stream.
 * @throws IOException if writing to the destination stream fails
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueLength</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeEOF</MethodName>
            <MethodComment>/** 
 * Writes a Derby-specific end-of-stream marker to the buffer for a stream of the specified length, if required.
 * @param buffer the buffer to write into
 * @param offset starting offset in the buffer
 * @param valueLength the length of the stream, can be in either bytes orcharacters depending on the header format
 * @return Number of bytes written (zero or more).
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buffer</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>offset</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueLength</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeEOF</MethodName>
            <MethodComment>/** 
 * Writes a Derby-specific end-of-stream marker to the destination stream for the specified length, if required.
 * @param out the destination stream
 * @param valueLength the length of the stream, can be in either bytes orcharacters depending on the header format
 * @return Number of bytes written (zero or more).
 * @throws IOException if writing to the destination stream fails
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>ObjectOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>valueLength</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMaxHeaderLength</MethodName>
            <MethodComment>/** 
 * Returns the maximum length of the header.
 * @return Max header length in bytes.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>