<Class>
    <Id>426</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>ConstantActionActivation</ClassName>
    <SuperClass>BaseActivation</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConstantActionActivation  /** 
 * A pre-compiled activation that supports a single ResultSet with a single constant action. All the execution logic is contained in the constant action. &lt;P&gt; At compile time for DDL statements this class will be picked as the implementation of Activation. The language PreparedStatement will contain the ConstantAction created at compiled time. At execute time this class then fetches a language ResultSet using ResultSetFactory.getDDLResultSet and executing the ResultSet will invoke the execute on the ConstantAction.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>shouldWeCheckRowCounts</MethodName>
            <MethodComment>/** 
 * Always return false since constant actions don't need recompilation when the row counts change.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createResultSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ResultSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>postConstructor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>