<Class>
    <Id>1876</Id>
    <Package>org.apache.derby.iapi.services.daemon</Package>
    <ClassName>IndexStatisticsDaemon</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IndexStatisticsDaemon  /** 
 * Daemon acting as a coordinator for creating and updating index statistics. &lt;p&gt; There are two modes of operation: &lt;ul&gt; &lt;li&gt;explicit - generates index statistics due to an explict request from the user. The entrypoint is &lt;tt&gt;runExplicitly&lt;/tt&gt;.&lt;/li&gt; &lt;li&gt;background - generates index statistics as a background task due to an event that has triggered a statistics update. The entrypoint is &lt;tt&gt;schedule&lt;/tt&gt;.&lt;/li&gt; &lt;ul&gt; &lt;p&gt; The modes differ in how the operation affects other operations in the running system, and also how errors are dealt with. The background mode will try to affect other operations as little as possible, and errors won't be reported unless they are severe. The explicit mode will do more to make sure the operation succeeds (for instance by using locks), and will report all errors.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>runExplicitly</MethodName>
            <MethodComment>/** 
 * Creates/updates index statistics for the specified conglomerates/indexes.
 * @param lcc connection used to carry out the work
 * @param td base table
 * @param cds index conglomerates (non-index conglomerates are ignored)
 * @param runContext descriptive text for the context in which the work isbeing run (i.e. ALTER TABLE)
 * @throws StandardException if something goes wrong
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lcc</ParamName>
                    <ParamType>LanguageConnectionContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cds</ParamName>
                    <ParamType>ConglomerateDescriptor[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>runContext</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>schedule</MethodName>
            <MethodComment>/** 
 * Schedules creation/update of the index statistics associated with the specified table. &lt;p&gt; Note that the scheduling request may be denied. Typical situations where that will happen is if the work queue is full, or if work has already been scheduled for the specified table.
 * @param td base table
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Stops the background daemon. &lt;p&gt; Any ongoing tasks will be aborted as soon as possible, and it will not be possible to schedule new tasks. Note that &lt;tt&gt;runExplicitly&lt;/tt&gt; can still be used.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>