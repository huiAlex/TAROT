<Class>
    <Id>348</Id>
    <Package>org.apache.derbyTesting.system.oe.client</Package>
    <ClassName>Load</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Load  /** 
 * Interface for a client to populate the database. Various implementations can be provided, e.g. via SQL, via VTI, via import etc An implementation for Load must be able to do the following &lt;OL&gt; &lt;LI&gt; Use the setupLoad to perform any necessary initialization for the load phase &lt;LI&gt; Load data into all the tables  &lt;/OL&gt; &lt;P&gt; DECIMAL values are represented as String objects to allow Order Entry to be run on J2ME/CDC/Foundation which does not support BigDecimal.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DISTRICT_COUNT_W</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>CUSTOMER_COUNT_W</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ITEM_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NEWORDERS_COUNT_W</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>HISTORY_COUNT_W</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STOCK_COUNT_W</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDERS_COUNT_W</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDERLINE_COUNT_WV</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NEWORDERS_BREAKPOINT</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setSeed</MethodName>
            <MethodComment>/** 
 * Set the seed for the random number generator used to populate the data. Useful for testing to ensure consistent repeatable runs. If not set, defaults a value based upon current time. Must be called before setupLoad to have an effect.
 * @param seed
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>seed</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setupLoad</MethodName>
            <MethodComment>/** 
 * Perform the necessary setup before database population.
 * @param conn - database connection 
 * @param scale - scale of the database.  The WAREHOUSE table is used as the base unit of scaling. 
 * @throws Exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scale</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setThreadCount</MethodName>
            <MethodComment>/** 
 * Set the number of total threads the loader is allowed to use to load data. If an implementation does not support multiple threads then the passed in value will be ignored.
 * @param threadCount Number of threads to use if loading supportsmultiple threading.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>threadCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>populateAllTables</MethodName>
            <MethodComment>/** 
 * Follow the initial database population requirements in Section 4.3.3  and populate all the required tables. BE CAREFUL to use the correct starting identifiers for the data in the tables. In the specification, identifiers start at 1 (one),  e.g. 1-10 for a district and is not zero based.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>