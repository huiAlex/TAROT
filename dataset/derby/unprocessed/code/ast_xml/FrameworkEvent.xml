<Class>
    <Id>342</Id>
    <Package>org.osgi.framework</Package>
    <ClassName>FrameworkEvent</ClassName>
    <SuperClass>EventObject</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FrameworkEvent  /** 
 * A general event from the Framework. &lt;p&gt; &lt;code&gt;FrameworkEvent&lt;/code&gt; objects are delivered to &lt;code&gt;FrameworkListener&lt;/code&gt;s when a general event occurs within the OSGi environment. A type code is used to identify the event type for future extendability. &lt;p&gt; OSGi Alliance reserves the right to extend the set of event types.
 * @Immutable
 * @see FrameworkListener
 * @version $Revision: 1.15 $
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>bundle</FieldName>
            <FieldType>Bundle</FieldType>
        </Field>
        <Field>
            <FieldName>throwable</FieldName>
            <FieldType>Throwable</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STARTED</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PACKAGES_REFRESHED</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STARTLEVEL_CHANGED</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>WARNING</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INFO</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FrameworkEvent</MethodName>
            <MethodComment>/** 
 * Creates a Framework event.
 * @param type The event type.
 * @param source The event source object. This may not be &lt;code&gt;null&lt;/code&gt;.
 * @deprecated As of 1.2. This constructor is deprecated in favor of usingthe other constructor with the System Bundle as the event source.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>source</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FrameworkEvent</MethodName>
            <MethodComment>/** 
 * Creates a Framework event regarding the specified bundle.
 * @param type The event type.
 * @param bundle The event source.
 * @param throwable The related exception. This argument may be&lt;code&gt;null&lt;/code&gt; if there is no related exception.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bundle</ParamName>
                    <ParamType>Bundle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>throwable</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getThrowable</MethodName>
            <MethodComment>/** 
 * Returns the exception related to this event.
 * @return The related exception or &lt;code&gt;null&lt;/code&gt; if none.
 */
</MethodComment>
            <ReturnType>Throwable</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBundle</MethodName>
            <MethodComment>/** 
 * Returns the bundle associated with the event. This bundle is also the source of the event.
 * @return The bundle associated with the event.
 */
</MethodComment>
            <ReturnType>Bundle</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getType</MethodName>
            <MethodComment>/** 
 * Returns the type of framework event. &lt;p&gt; The type values are: &lt;ul&gt; &lt;li&gt; {@link #STARTED}&lt;li&gt; {@link #ERROR}&lt;li&gt; {@link #WARNING}&lt;li&gt; {@link #INFO}&lt;li&gt; {@link #PACKAGES_REFRESHED}&lt;li&gt; {@link #STARTLEVEL_CHANGED}&lt;/ul&gt;
 * @return The type of state change.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>