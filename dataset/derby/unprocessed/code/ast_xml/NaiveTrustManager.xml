<Class>
    <Id>2037</Id>
    <Package>org.apache.derby.impl.drda</Package>
    <ClassName>NaiveTrustManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>X509TrustManager</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>NaiveTrustManager  /** 
 * This is a naive trust manager we use when we don't want server authentication. Any certificate will be accepted. 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>thisManager</FieldName>
            <FieldType>TrustManager[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>NaiveTrustManager</MethodName>
            <MethodComment>/** 
 * We don't want more than one instence of this TrustManager
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSocketFactory</MethodName>
            <MethodComment>/** 
 * Generate a socket factory with this trust manager. Derby Utility routine which is not part of the X509TrustManager interface.
 */
</MethodComment>
            <ReturnType>SocketFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SSLContext [ctx=SSLContext.getInstance("TLS")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>java.security.NoSuchAlgorithmException</ExceptionType>
                <ExceptionType>java.security.KeyManagementException</ExceptionType>
                <ExceptionType>java.security.NoSuchProviderException</ExceptionType>
                <ExceptionType>java.security.KeyStoreException</ExceptionType>
                <ExceptionType>java.security.UnrecoverableKeyException</ExceptionType>
                <ExceptionType>java.security.cert.CertificateException</ExceptionType>
                <ExceptionType>java.io.IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkClientTrusted</MethodName>
            <MethodComment>/** 
 * Checks wether the we trust the client. Since this trust manager is just for the Derby clients, this routine is actually never called, but need to be here when we implement X509TrustManager.
 * @param chain The client's certificate chain
 * @param authType authorization type (e.g. "RSA" or "DHE_DSS")
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chain</ParamName>
                    <ParamType>X509Certificate[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>authType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CertificateException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkServerTrusted</MethodName>
            <MethodComment>/** 
 * Checks wether the we trust the server, which we allways will.
 * @param chain The server's certificate chain
 * @param authType authorization type (e.g. "RSA" or "DHE_DSS")
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chain</ParamName>
                    <ParamType>X509Certificate[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>authType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CertificateException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAcceptedIssuers</MethodName>
            <MethodComment>/** 
 * Return an array of certificate authority certificates which are trusted for authenticating peers. Not relevant for this trust manager.
 */
</MethodComment>
            <ReturnType>X509Certificate[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>