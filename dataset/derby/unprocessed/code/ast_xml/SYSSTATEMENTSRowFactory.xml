<Class>
    <Id>600</Id>
    <Package>org.apache.derby.impl.sql.catalog</Package>
    <ClassName>SYSSTATEMENTSRowFactory</ClassName>
    <SuperClass>CatalogRowFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SYSSTATEMENTSRowFactory  /** 
 * Factory for creating a SYSSTATEMENTS row.
 * @version 0.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TABLENAME_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_STMTID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_STMTNAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_SCHEMAID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_TYPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_VALID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_TEXT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_LASTCOMPILED</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_COMPILATION_SCHEMAID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_USINGTEXT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_CONSTANTSTATE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_INITIALLY_COMPILABLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_COLUMN_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_HIDDEN_COLUMN_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_INDEX1_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSTATEMENTS_INDEX2_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>indexColumnPositions</FieldName>
            <FieldType>int[][]</FieldType>
        </Field>
        <Field>
            <FieldName>uniqueness</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>uuids</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SYSSTATEMENTSRowFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuidf</ParamName>
                    <ParamType>UUIDFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ef</ParamName>
                    <ParamType>ExecutionFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dvf</ParamName>
                    <ParamType>DataValueFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initInfo;[SYSSTATEMENTS_COLUMN_COUNT, TABLENAME_STRING, indexColumnPositions, uniqueness, uuids]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeSYSSTATEMENTSrow</MethodName>
            <MethodComment>/** 
 * Make a SYSSTATEMENTS row.  &lt;p&gt; &lt;B&gt;WARNING&lt;/B&gt;: When empty row is true, this method takes a snapshot of the SPSD and creates a row.  It is imperative that that row remain consistent with the descriptor (the valid and StorablePreparedStatement fields must be in sync). If this row is to be written out and valid is true, then this call and the insert should be synchronized on the SPSD. This method has &lt;B&gt;NO&lt;/B&gt; synchronization.
 * @param compileMe			passed into SPSDescriptorImpl.getPreparedStatement().if true, we (re)compile the stmt
 * @param spsDescriptor		In-memory tuple to be converted to a disk row.
 * @return	Row suitable for inserting into SYSSTATEMENTS.
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>compileMe</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>spsDescriptor</ParamName>
                    <ParamType>SPSDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataTypeDescriptor [dtd]</InnerVar>
                <InnerVar>ExecRow [row]</InnerVar>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>String [name=null]</InnerVar>
                <InnerVar>UUID [uuid=null]</InnerVar>
                <InnerVar>String [uuidStr=null]</InnerVar>
                <InnerVar>String [suuidStr=null]</InnerVar>
                <InnerVar>String [compUuidStr=null]</InnerVar>
                <InnerVar>String [text=null]</InnerVar>
                <InnerVar>String [usingText=null]</InnerVar>
                <InnerVar>ExecPreparedStatement [preparedStatement=null]</InnerVar>
                <InnerVar>String [typeStr=null]</InnerVar>
                <InnerVar>boolean [valid=true]</InnerVar>
                <InnerVar>Timestamp [time=null]</InnerVar>
                <InnerVar>boolean [initiallyCompilable=true]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>row;setColumn;[1, new SQLChar(uuidStr)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[2, new SQLVarchar(name)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[3, new SQLChar(suuidStr)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[4, new SQLChar(typeStr)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[5, new SQLBoolean(valid)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[6, dvf.getLongvarcharDataValue(text)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[7, new SQLTimestamp(time)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[8, new SQLChar(compUuidStr)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[9, dvf.getLongvarcharDataValue(usingText)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[10, new UserType(preparedStatement)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[11, new SQLBoolean(initiallyCompilable)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildDescriptor</MethodName>
            <MethodComment>/** 
 * Make an  Tuple Descriptor out of a SYSSTATEMENTS row
 * @param row 					a SYSSTATEMENTS row
 * @param parentTupleDescriptor	unused
 * @param dd 					dataDictionary
 * @return	a  descriptor equivalent to a SYSSTATEMENTS row
 * @exception StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>TupleDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentTupleDescriptor</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dd</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>SPSDescriptor [descriptor]</InnerVar>
                <InnerVar>String [name]</InnerVar>
                <InnerVar>String [text]</InnerVar>
                <InnerVar>String [usingText]</InnerVar>
                <InnerVar>UUID [uuid]</InnerVar>
                <InnerVar>UUID [compUuid=null]</InnerVar>
                <InnerVar>String [uuidStr]</InnerVar>
                <InnerVar>UUID [suuid]</InnerVar>
                <InnerVar>String [suuidStr]</InnerVar>
                <InnerVar>String [typeStr]</InnerVar>
                <InnerVar>char [type]</InnerVar>
                <InnerVar>boolean [valid]</InnerVar>
                <InnerVar>Timestamp [time=null]</InnerVar>
                <InnerVar>ExecPreparedStatement [preparedStatement=null]</InnerVar>
                <InnerVar>boolean [initiallyCompilable]</InnerVar>
                <InnerVar>DataDescriptorGenerator [ddg=dd.getDataDescriptorGenerator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeEmptyRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildColumnList</MethodName>
            <MethodComment>/** 
 * Builds a list of columns suitable for creating this Catalog. The last column, the serialized statement, is not added to the column list.  This is done deliberately to make it a 'hidden' column -- one that is not visible to customers, but is visible to the system.
 * @return array of SystemColumn suitable for making this catalog.
 */
</MethodComment>
            <ReturnType>SystemColumn[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCreateHeapProperties</MethodName>
            <MethodComment>/** 
 * Get the Properties associated with creating the heap.
 * @return The Properties associated with creating the heap.
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Properties [properties=new Properties()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>properties;put;[Property.PAGE_SIZE_PARAMETER, "2048"]</InnerMethodInvoke>
                <InnerMethodInvoke>properties;put;[RawStoreFactory.PAGE_RESERVED_SPACE_PARAMETER, "0"]</InnerMethodInvoke>
                <InnerMethodInvoke>properties;put;[RawStoreFactory.MINIMUM_RECORD_SIZE_PARAMETER, "1"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>