<Class>
    <Id>473</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>TablePrivilegeInfo</ClassName>
    <SuperClass>PrivilegeInfo</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>SELECT_ACTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DELETE_ACTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INSERT_ACTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UPDATE_ACTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>REFERENCES_ACTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TRIGGER_ACTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ACTION_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>YES_WITH_GRANT_OPTION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>YES_WITHOUT_GRANT_OPTION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>NO</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>actionString</FieldName>
            <FieldType>String[][]</FieldType>
        </Field>
        <Field>
            <FieldName>td</FieldName>
            <FieldType>TableDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>actionAllowed</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>columnBitSets</FieldName>
            <FieldType>FormatableBitSet[]</FieldType>
        </Field>
        <Field>
            <FieldName>descriptorList</FieldName>
            <FieldType>List</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TablePrivilegeInfo</MethodName>
            <MethodComment>/** 
 * @param actionAllowed actionAllowed[action] is true if action is in the privilege set.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>actionAllowed</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnBitSets</ParamName>
                    <ParamType>FormatableBitSet[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>descriptorList</ParamName>
                    <ParamType>List</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkOwnership</MethodName>
            <MethodComment>/** 
 * Determines whether a user is the owner of an object (table, function, or procedure). Note that the database  creator can access database objects without needing to be  their owner.
 * @param user					authorizationId of current user
 * @param td       		        table descriptor being checked against
 * @param sd					SchemaDescriptor
 * @param dd					DataDictionary
 * @param lcc                   LanguageConnectionContext
 * @param grant                 grant if true; revoke if false
 * @exception StandardException if user does not own the object
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sd</ParamName>
                    <ParamType>SchemaDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dd</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lcc</ParamName>
                    <ParamType>LanguageConnectionContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>grant</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkPrivileges</MethodName>
            <MethodComment>/** 
 * Determines if the privilege is grantable by this grantor for the given view. Note that the database owner can access database objects  without needing to be their owner.  This method should only  be called if it is a GRANT.
 * @param user					authorizationId of current user
 * @param td		            TableDescriptor to be checked against
 * @param sd					SchemaDescriptor
 * @param dd					DataDictionary
 * @param lcc                   LanguageConnectionContext
 * @exception StandardException if user does not have permission to grant
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sd</ParamName>
                    <ParamType>SchemaDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dd</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lcc</ParamName>
                    <ParamType>LanguageConnectionContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeGrantRevoke</MethodName>
            <MethodComment>/** 
 * This is the guts of the Execution-time logic for GRANT/REVOKE of a table privilege
 * @param activation
 * @param grant true if grant, false if revoke
 * @param grantees a list of authorization ids (strings)
 * @exception StandardException		Thrown on failure
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>grant</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>grantees</ParamName>
                    <ParamType>List</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>String [currentUser=lcc.getCurrentUserId(activation)]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
                <InnerVar>SchemaDescriptor [sd=td.getSchemaDescriptor()]</InnerVar>
                <InnerVar>DataDescriptorGenerator [ddg=dd.getDataDescriptorGenerator()]</InnerVar>
                <InnerVar>TablePermsDescriptor [tablePermsDesc=ddg.newTablePermsDescriptor(td,getPermString(SELECT_ACTION,false),getPermString(DELETE_ACTION,false),getPermString(INSERT_ACTION,false),getPermString(UPDATE_ACTION,false),getPermString(REFERENCES_ACTION,false),getPermString(TRIGGER_ACTION,false),currentUser)]</InnerVar>
                <InnerVar>ColPermsDescriptor[] [colPermsDescs=new ColPermsDescriptor[columnBitSets.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;checkOwnership;[currentUser, td, sd, dd, lcc, grant]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;startWriting;[lcc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPermString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forGrantOption</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getActionString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forGrantOption</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasColumnPermissions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>