<Class>
    <Id>1948</Id>
    <Package>org.apache.derby.impl.drda</Package>
    <ClassName>Pkgnamcsn</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Pkgnamcsn  /** 
 * Class representing a PKGNAMCSN object (RDB Package Name, Consistency Token, and Section Number).
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>rdbnam</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>rdbcolid</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>pkgid</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>pkgsn</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>pkgcnstkn</FieldName>
            <FieldType>ConsistencyToken</FieldType>
        </Field>
        <Field>
            <FieldName>statementKey</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>hash</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Pkgnamcsn</MethodName>
            <MethodComment>/** 
 * Create a new &lt;code&gt;Pkgnamcsn&lt;/code&gt; instance.
 * @param rdbnam database name
 * @param rdbcolid RDB Package Collection Identifier
 * @param pkgid RDB Package Identifier
 * @param pkgsn RDB Package Section Number
 * @param pkgcnstkn RDB Package Consistency Token
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rdbnam</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rdbcolid</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgid</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgsn</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgcnstkn</ParamName>
                    <ParamType>ConsistencyToken</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRdbnam</MethodName>
            <MethodComment>/** 
 * Get RDBNAM.
 * @return database name
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRdbcolid</MethodName>
            <MethodComment>/** 
 * Get RDBCOLID.
 * @return RDB Package Collection Identifier
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPkgid</MethodName>
            <MethodComment>/** 
 * Get PKGID.
 * @return RDB Package Identifier
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPkgsn</MethodName>
            <MethodComment>/** 
 * Get PKGSN.
 * @return RDB Package Section Number
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPkgcnstkn</MethodName>
            <MethodComment>/** 
 * Get PKGCNSTKN.
 * @return RDB Package Consistency Token
 */
</MethodComment>
            <ReturnType>ConsistencyToken</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment>/** 
 * Return string representation.
 * @return a &lt;code&gt;String&lt;/code&gt; value
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStatementKey</MethodName>
            <MethodComment>/** 
 * Return an object which can be used as a key in a hash table when the value of the consistency token can be ignored. The object has &lt;code&gt;equals()&lt;/code&gt; and &lt;code&gt;hashCode()&lt;/code&gt; methods which consider other objects returned from &lt;code&gt;getStatementKey()&lt;/code&gt; equal if RDBNAM, RDBCOLID, PKGID and PKGSN are equal.
 * @return an &lt;code&gt;Object&lt;/code&gt; value
 * @see Database#getDRDAStatement(Pkgnamcsn)
 * @see Database#storeStatement(DRDAStatement)
 * @see Database#removeStatement(DRDAStatement)
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>equals</MethodName>
            <MethodComment>/** 
 * Check whether RDBNAM, RDBCOLID, PKGID and PKGSN of another &lt;code&gt;StatementKey&lt;/code&gt; object matches this object.
 * @param obj another object
 * @return true if the objects are equal
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hashCode</MethodName>
            <MethodComment>/** 
 * Calculate hash code.
 * @return hash code
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isKeyFor</MethodName>
            <MethodComment>/** 
 * Check whether this object can be used as a key for a &lt;code&gt;Pkgnamcsn&lt;/code&gt; object.
 * @param p a &lt;code&gt;Pkgnamcsn&lt;/code&gt; value
 * @return true if this object can be key for the&lt;code&gt;Pkgnamcsn&lt;/code&gt; object
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Pkgnamcsn</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>