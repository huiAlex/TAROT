<Class>
    <Id>717</Id>
    <Package>org.apache.derby.impl.store.raw.data</Package>
    <ClassName>D_StoredPage</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Diagnosticable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>D_StoredPage  /** 
 * The D_StoredPage class provides diagnostic information about the StoredPage class.  Currently this info includes: o a dump of the page. o page size of the page. o bytes free on the page. o bytes reserved on the page.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>page</FieldName>
            <FieldType>StoredPage</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>D_StoredPage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diag</MethodName>
            <MethodComment>/** 
 * Provide a string dump of the StoredPage. &lt;p&gt; RESOLVE - once the "Diagnostic" interface is accepted move the string dumping code into this routine from it's current place in the StoredPage code. &lt;p&gt;
 * @return string dump of the StoredPage
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diag_detail</MethodName>
            <MethodComment>/** 
 * Provide detailed diagnostic information about a StoredPage. &lt;p&gt; Currently supports 3 types of information: Page.DIAG_PAGE_SIZE      - page size. Page.DIAG_BTYES_FREE     - # of free bytes on the page. Page.DIAG_BYTES_RESERVED - # of reserved bytes on the page. &lt;p&gt;
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [prop_value=null]</InnerVar>
                <InnerVar>int [overflow_count=0]</InnerVar>
                <InnerVar>int [row_size=0]</InnerVar>
                <InnerVar>long [min_rowsize=0]</InnerVar>
                <InnerVar>long [max_rowsize=0]</InnerVar>
                <InnerVar>long [record_size=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkSlotTable</MethodName>
            <MethodComment>/** 
 * Checks the slot table. &lt;p&gt; 1) checks the number of slot entries matches the record count 2) checks the slot table lengths match the field lengths
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [ok=true]</InnerVar>
                <InnerVar>int [slotCount=page.getSlotsInUse()]</InnerVar>
                <InnerVar>int [recordCount=page.recordCount()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pageHeaderToString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>