<Class>
    <Id>1348</Id>
    <Package>org.apache.derbyTesting.unitTests.store</Package>
    <ClassName>T_RecoverFullLog</ClassName>
    <SuperClass>T_Generic</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>T_RecoverFullLog  /** 
 * A implementation unit test for log full condition To run, create a derby.properties file in a new directory with the contents derby.module.test.recoverFullLog=org.apache.derbyTesting.unitTests.store.T_RecoverFullLog Execute in order java -DTestFillLog=true org.apache.derbyTesting.unitTests.harness.UnitTestMain java -DTestLogSwitchFail=true org.apache.derbyTesting.unitTests.harness.UnitTestMain java -DTestFullRecoveryFail=true org.apache.derbyTesting.unitTests.harness.UnitTestMain  (run this serveral times, this simulate recovery running out of log) java -DTestFullRecover=true org.apache.derbyTesting.unitTests.harness.UnitTestMain 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>testService</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_001</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_002</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_003</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_004</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_005</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_006</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REC_UNDO</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SP1</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SP2</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>infofile</FieldName>
            <FieldType>RandomAccessFile</FieldType>
        </Field>
        <Field>
            <FieldName>infoPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>fillLog</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>recoveryFail</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>logSwitchFail</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>recover</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_FILL_LOG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_FULL_RECOVER_FAIL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_LOG_SWITCH_FAIL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_FULL_RECOVER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TEST_FULL_LOG_INFO</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>factory</FieldName>
            <FieldType>RawStoreFactory</FieldType>
        </Field>
        <Field>
            <FieldName>lf</FieldName>
            <FieldType>LockFactory</FieldType>
        </Field>
        <Field>
            <FieldName>contextService</FieldName>
            <FieldType>ContextService</FieldType>
        </Field>
        <Field>
            <FieldName>t_util</FieldName>
            <FieldType>T_Util</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>T_RecoverFullLog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModuleToTestProtocolName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConfig</MethodName>
            <MethodComment>/** 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [param]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTests</MethodName>
            <MethodComment>/** 
 * See T_Recovery for the general testing frame work
 * @exception T_Fail Unexpected behaviour from the API
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [tests=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;getConfig;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>find</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inkey</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>test</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>param</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [i=test]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>register</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testBasic</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [numtrans=7]</InnerVar>
                <InnerVar>int [numpages=7]</InnerVar>
                <InnerVar>int [i, j]</InnerVar>
                <InnerVar>T_TWC[] [t=new T_TWC[numtrans]]</InnerVar>
                <InnerVar>long[] [cid=new long[numtrans]]</InnerVar>
                <InnerVar>ContainerHandle[] [c=new ContainerHandle[numtrans]]</InnerVar>
                <InnerVar>Page [page[][]=new Page[numtrans][numpages]]</InnerVar>
                <InnerVar>long [pagenum[][]=new long[numtrans][numpages]]</InnerVar>
                <InnerVar>RecordHandle[][] [rh=new RecordHandle[numtrans][numpages]]</InnerVar>
                <InnerVar>T_RawStoreRow [row1=new T_RawStoreRow(REC_001)]</InnerVar>
                <InnerVar>T_RawStoreRow [row2=new T_RawStoreRow(REC_002)]</InnerVar>
                <InnerVar>T_RawStoreRow [row3=new T_RawStoreRow(REC_003)]</InnerVar>
                <InnerVar>T_RawStoreRow [row4=new T_RawStoreRow(REC_004)]</InnerVar>
                <InnerVar>T_RawStoreRow [row5=new T_RawStoreRow(REC_005)]</InnerVar>
                <InnerVar>T_RawStoreRow [row6=new T_RawStoreRow(REC_006)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>t[0];setSavePoint;[SP1, null]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];switchTransactionContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];rollbackToSavePoint;[SP1, null]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];resetContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];switchTransactionContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];resetContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];switchTransactionContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];resetContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];switchTransactionContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];rollbackToSavePoint;[SP1, null]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];resetContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];switchTransactionContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t[0];resetContext;[]</InnerMethodInvoke>
                <InnerMethodInvoke>t_util;t_abort;[t[1]]</InnerMethodInvoke>
                <InnerMethodInvoke>t_util;t_commit;[t[2]]</InnerMethodInvoke>
                <InnerMethodInvoke>t_util;t_commit;[t[4]]</InnerMethodInvoke>
                <InnerMethodInvoke>null;register;[key(testNumber,1), numtrans]</InnerMethodInvoke>
                <InnerMethodInvoke>null;register;[key(testNumber,2), numpages]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fillUpLog</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Transaction [t=t_util.t_startTransaction()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>SanityManager;DEBUG_SET;[LogToFile.TEST_LOG_FULL]</InnerMethodInvoke>
                <InnerMethodInvoke>System;setProperty;[LogToFile.TEST_RECORD_TO_FILL_LOG, "1"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>logSwitchFail1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>SanityManager;DEBUG_SET;[LogToFile.TEST_SWITCH_LOG_FAIL1]</InnerMethodInvoke>
                <InnerMethodInvoke>factory;checkpoint;[]</InnerMethodInvoke>
                <InnerMethodInvoke>SanityManager;DEBUG_CLEAR;[LogToFile.TEST_SWITCH_LOG_FAIL1]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>logSwitchFail2</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [tries=10]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>SanityManager;DEBUG_SET;[LogToFile.TEST_SWITCH_LOG_FAIL2]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRecovery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getContextService</MethodName>
            <MethodComment>/** 
 * Privileged lookup of the ContextService. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>ContextService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ContextService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findService</MethodName>
            <MethodComment>/** 
 * Privileged service lookup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factoryInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serviceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startPersistentService</MethodName>
            <MethodComment>/** 
 * Privileged startup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serviceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createPersistentService</MethodName>
            <MethodComment>/** 
 * Privileged startup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factoryInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serviceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>