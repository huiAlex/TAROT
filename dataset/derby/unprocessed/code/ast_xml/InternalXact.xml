<Class>
    <Id>1815</Id>
    <Package>org.apache.derby.impl.store.raw.xact</Package>
    <ClassName>InternalXact</ClassName>
    <SuperClass>Xact</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>InternalXact  /** 
 * @see Xact
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>InternalXact</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>xactFactory</ParamName>
                    <ParamType>XactFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>logFactory</ParamName>
                    <ParamType>LogFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataFactory</ParamName>
                    <ParamType>DataFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataValueFactory</ParamName>
                    <ParamType>DataValueFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setPostComplete;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSavePoint</MethodName>
            <MethodComment>/** 
 * Savepoints are not supported in internal transactions.
 * @exception StandardException  A transaction exception is thrown to disallow savepoints.
 * @see Transaction#setSavePoint
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>kindOfSavepoint</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkLogicalOperationOk</MethodName>
            <MethodComment>/** 
 * Internal transactions don't allow logical operations.
 * @exception StandardException A transaction exception is thrown to disallow logical operations.
 * @see org.apache.derby.iapi.store.raw.xact.RawTransaction#recoveryRollbackFirst
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>recoveryRollbackFirst</MethodName>
            <MethodComment>/** 
 * Yes, we do want to be rolled back first in recovery.
 * @see org.apache.derby.iapi.store.raw.xact.RawTransaction#recoveryRollbackFirst
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doComplete</MethodName>
            <MethodComment>/** 
 * @param commitOrAbort to commit or abort
 * @exception StandardException on error
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>commitOrAbort</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setIdleState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>