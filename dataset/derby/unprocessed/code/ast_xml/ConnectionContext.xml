<Class>
    <Id>1988</Id>
    <Package>org.apache.derby.iapi.jdbc</Package>
    <ClassName>ConnectionContext</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ConnectionContext  /** 
 * Interface-ized from EmbedConnectionContext.  Some basic connection attributes that can be obtained from jdbc.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>CONTEXT_ID</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getNestedConnection</MethodName>
            <MethodComment>/** 
 * Get a new connection object equivalent to the call &lt;PRE&gt; DriverManager.getConnection("jdbc:default:connection"); &lt;/PRE&gt;
 * @exception SQLException Parent connection has been closed.
 */
</MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>internal</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getResultSet</MethodName>
            <MethodComment>/** 
 * Get a jdbc ResultSet based on the execution ResultSet.
 * @param executionResultSet	a result set as gotten from execution
 * @exception java.sql.SQLException	on error
 */
</MethodComment>
            <ReturnType>java.sql.ResultSet</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>executionResultSet</ParamName>
                    <ParamType>ResultSet</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>java.sql.SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processInaccessibleDynamicResult</MethodName>
            <MethodComment>/** 
 * Process the resultSet as a dynamic result for closure. The result set will have been created in a Java procedure. If the ResultSet is a valid dynamic ResultSet for this connection, then it is set up as a dynamic result which includes: &lt;UL&gt; &lt;LI&gt; breaking its link with the JDBC connection that created it, since there is a good chance that connection was closed explicitly by the Java procedure. &lt;LI&gt; marking its activation as single use to ensure the close of the ResultSet will close the activation. &lt;/UL&gt; &lt;P&gt; If the result set a valid dynamic result then false will be returned and no action made against it.
 * @param resultSet ResultSet to process.
 * @return True if this ResultSet was created by this connectionand the result set is open. False otherwise.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>resultSet</ParamName>
                    <ParamType>java.sql.ResultSet</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>