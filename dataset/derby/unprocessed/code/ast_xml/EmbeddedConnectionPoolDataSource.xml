<Class>
    <Id>1985</Id>
    <Package>org.apache.derby.jdbc</Package>
    <ClassName>EmbeddedConnectionPoolDataSource</ClassName>
    <SuperClass>EmbeddedDataSource</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>EmbeddedConnectionPoolDataSourceInterface</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>EmbeddedConnectionPoolDataSource  /** 
 * &lt;P&gt; This datasource is suitable for an application using embedded Derby, running on full Java SE 6 and higher, corresponding to 4.0 and higher. EmbeddedConnectionPoolDataSource is a ConnectionPoolDataSource implementation. &lt;/P&gt; &lt;P&gt;A ConnectionPoolDataSource is a factory for PooledConnection objects. An object that implements this interface will typically be registered with a JNDI service.&lt;/P&gt; &lt;P&gt; EmbeddedConnectionPoolDataSource automatically supports the correct JDBC specification version for the Java Virtual Machine's environment.&lt;/P&gt; &lt;UL&gt; &lt;LI&gt;JDBC 4.0 - Java SE 6&lt;/LI&gt; &lt;LI&gt;JDBC 4.1 - Java SE 7&lt;/LI&gt; &lt;LI&gt;JDBC 4.2 - full Java SE 8&lt;/LI&gt; &lt;/UL&gt; &lt;P&gt; Use BasicEmbeddedConnectionPoolDataSource40 if your application runs on Java 8 Compact Profile 2. &lt;/P&gt; &lt;P&gt;EmbeddedConnectionPoolDataSource is serializable and referenceable.&lt;/P&gt; &lt;P&gt;See EmbeddedDataSource for DataSource properties.&lt;/P&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>EmbeddedConnectionPoolDataSource</MethodName>
            <MethodComment>/** 
 * No-arg constructor.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPooledConnection</MethodName>
            <MethodComment>/** 
 * Attempt to establish a database connection.
 * @return a Connection to the database
 * @exception SQLException if a database-access error occurs.
 */
</MethodComment>
            <ReturnType>PooledConnection</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPooledConnection</MethodName>
            <MethodComment>/** 
 * Attempt to establish a database connection.
 * @param username the database user on whose behalf the Connection is being made
 * @param password the user's password
 * @return a Connection to the database
 * @exception SQLException if a database-access error occurs.
 */
</MethodComment>
            <ReturnType>PooledConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>username</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createPooledConnection</MethodName>
            <MethodComment>/** 
 * Create and return an EmbedPooledConnection from this instance of EmbeddedConnectionPoolDataSource.
 * @param user The user name
 * @param password The password
 * @param requestPassword @{@code false} if original call is from ano-argument constructor, otherwise  {@code true}
 * @return A pooled connection
 * @throws SQLException An error occurred
 */
</MethodComment>
            <ReturnType>PooledConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>requestPassword</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>