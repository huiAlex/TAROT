<Class>
    <Id>1816</Id>
    <Package>org.apache.derbyTesting.system.oe.util</Package>
    <ClassName>OERandom</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OERandom  /** 
 * Methods to implement the random database population types for the Order Entry Benchmark. The rules for generating  the random data is per the TPC-C specification.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>rand</FieldName>
            <FieldType>Random</FieldType>
        </Field>
        <Field>
            <FieldName>Clast</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>Cid</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>Citem</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RESCALE</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>decimalString</FieldName>
            <FieldType>StringBuffer</FieldType>
        </Field>
        <Field>
            <FieldName>SYLLABLES</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>left24</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>left300</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>right200</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>left10</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>right10</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>left14</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>left26</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>right24</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>left8</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>right8</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>doneInit</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>OERandom</MethodName>
            <MethodComment>/** 
 * Create a matching OERandom, for use in multi-threaded runs where all the submitters need to share the same Clast, Cid and Citem values.
 * @param oer
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oer</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>OERandom</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>last</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>seed</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initAStrings;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>OERandom</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>last</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomDecimalString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>end</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scale</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [val=randomInt(start,end)]</InnerVar>
                <InnerVar>int [whole=val / RESCALE[scale]]</InnerVar>
                <InnerVar>int [part=val % RESCALE[scale]]</InnerVar>
                <InnerVar>int [pos=decimalString.length()]</InnerVar>
                <InnerVar>int [tempScale=decimalString.length() - pos]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>decimalString;setLength;[0]</InnerMethodInvoke>
                <InnerMethodInvoke>decimalString;append;[whole]</InnerMethodInvoke>
                <InnerMethodInvoke>decimalString;append;['.']</InnerMethodInvoke>
                <InnerMethodInvoke>decimalString;append;[part]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>payment</MethodName>
            <MethodComment>/** 
 * Payment amount between 1.00 and 5,000.00
 * @return Payment amount between 1.00 and 5,000.00
 */
</MethodComment>
            <ReturnType>BigDecimal</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomDecimal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>BigDecimal</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>end</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scale</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BigInteger [bi=BigInteger.valueOf(randomInt(start,end))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomInt</MethodName>
            <MethodComment>/** 
 * tpcc 4.3.2.5 Implements random within [x .. y ] for int
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>start</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>end</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>double [drand=rand.nextDouble()]</InnerVar>
                <InnerVar>double [rrand=(drand * (end - start)) + 0.5]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>district</MethodName>
            <MethodComment>/** 
 * Return a random district [1..10]
 */
</MethodComment>
            <ReturnType>short</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>carrier</MethodName>
            <MethodComment>/** 
 * Return a random carrier [1..10]
 */
</MethodComment>
            <ReturnType>short</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>threshold</MethodName>
            <MethodComment>/** 
 * Return a random threshold for the stock level [10..20]
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString</MethodName>
            <MethodComment>/** 
 * tpcc 4.3.2.2 (random a string)
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>min</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>max</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [len=randomInt(min,max)]</InnerVar>
                <InnerVar>char[] [c=new char[len]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomNString</MethodName>
            <MethodComment>/** 
 * tpcc 4.3.2.2 (random n string)
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>min</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>max</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [len=randomInt(min,max)]</InnerVar>
                <InnerVar>char[] [c=new char[len]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomCLast</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>n</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomZIP</MethodName>
            <MethodComment>/** 
 * Generate the zipcode value return zipcode value according to the requirements specified in  Clause 4.3.2.7 of TPC-C spec
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NURand8191</MethodName>
            <MethodComment>/** 
 * Section 2.1.6 of TPC-C specification, for OL_I_ID NURand(A, x, y) = (((random(0, A) | random(x, y)) + C) % (y - x + 1)) + x C is a run-time constant randomly chosen within [0 .. A] NURand(8191, 1,100000)
 * @return nonuniform random number
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [l=randomInt(0,8191)]</InnerVar>
                <InnerVar>int [r=randomInt(1,Load.ITEM_COUNT)]</InnerVar>
                <InnerVar>int [C=randomInt(0,8191)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NURand1023</MethodName>
            <MethodComment>/** 
 * Section 2.1.6 of TPC-C specification for CID NURand(A, x, y) = (((random(0, A) | random(x, y)) + C) % (y - x + 1)) + x NURand(1023, 1,3000)
 * @return nonuniform random number
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [l=randomInt(0,1023)]</InnerVar>
                <InnerVar>int [r=randomInt(1,(Load.CUSTOMER_COUNT_W / Load.DISTRICT_COUNT_W))]</InnerVar>
                <InnerVar>int [C=randomInt(0,1023)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NURand255</MethodName>
            <MethodComment>/** 
 * Section 2.1.6 of TPC-C specification, for C_LAST NURand(A, x, y) = (((random(0, A) | random(x, y)) + C) % (y - x + 1)) + x NURand(255,0,999)
 * @return nonuniform random number
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [l=randomInt(0,255)]</InnerVar>
                <InnerVar>int [r=randomInt(0,999)]</InnerVar>
                <InnerVar>int [C=randomInt(0,255)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuffer [s=new StringBuffer(2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomCLastPopulate</MethodName>
            <MethodComment>/** 
 * Clause 4.3.2.3 of the TPC-C specification
 * @param cid - customer id.
 * @return the generated Customer's last name per the requirementsin the TPC-C spec. 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cid</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomCLast</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomData</MethodName>
            <MethodComment>/** 
 * Clause 4.3.3.1 of TPC-C spec. random a-string [26 .. 50]. For 10% of the rows, selected at random, the string "ORIGINAL" must be held by 8 consecutive characters starting at a random position within the string
 * @return string data per the TPC-C requirements
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [s=randomAString26_50()]</InnerVar>
                <InnerVar>int [pos=randomInt(0,s.length() - 9)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomIntPerm</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int[] [data=new int[count]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initAStrings</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString24</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString300_500</MethodName>
            <MethodComment>/** 
 * Section 4.3.2.2(and comments 1 and 2). The notation random a-string [x .. y] (respectively, n-string [x ..y]) represents a string of random alphanumeric (respectively,  numeric)characters of a random length of minimum x, maximum y, and mean (y+x)/2.
 * @return string value.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [l=left300[randomInt(0,9)]]</InnerVar>
                <InnerVar>String [r=right200[randomInt(0,9)]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString10_20</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [l=left10[randomInt(0,9)]]</InnerVar>
                <InnerVar>String [r=right10[randomInt(0,9)]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString14_24</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [l=left14[randomInt(0,9)]]</InnerVar>
                <InnerVar>String [r=right10[randomInt(0,9)]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString26_50</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [l=left26[randomInt(0,9)]]</InnerVar>
                <InnerVar>String [r=right24[randomInt(0,9)]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomAString8_16</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [l=left8[randomInt(0,9)]]</InnerVar>
                <InnerVar>String [r=right8[randomInt(0,9)]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>