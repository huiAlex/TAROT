<Class>
    <Id>1853</Id>
    <Package>org.apache.derbyDemo.scores.app</Package>
    <ClassName>Scores</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Scores  /** 
 * &lt;p&gt; Application for showcasing Derby features using an educational testing schema. &lt;/p&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>_logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>_serverJar</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>_mathJar</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Scores</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Construct out of thin air. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Run the Scores application, showcasing Derby features. &lt;/p&gt; &lt;ul&gt; &lt;li&gt;args[ 0 ] = name of server jar&lt;/li&gt; &lt;li&gt;args[ 1 ] = name of math library&lt;/li&gt; &lt;/ul&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Scores [application=new Scores()]</InnerVar>
                <InnerVar>int [argIdx=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execute</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Run the Scores application, showcasing Derby features. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Logger [log=Logger.getLogger()]</InnerVar>
                <InnerVar>Database [db=Database.getDatabase(_serverJar,_mathJar)]</InnerVar>
                <InnerVar>Connection [conn=db.getConnection()]</InnerVar>
                <InnerVar>Data [data=db.getData()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;logBanner;["Starting Scores Application..."]</InnerMethodInvoke>
                <InnerMethodInvoke>log;logBanner;["Now the students take their tests." + " Watch for the trigger firing..."]</InnerMethodInvoke>
                <InnerMethodInvoke>data;takeTests;[db]</InnerMethodInvoke>
                <InnerMethodInvoke>Utils;commit;[conn]</InnerMethodInvoke>
                <InnerMethodInvoke>log;logBanner;["Show scores for latest takings..."]</InnerMethodInvoke>
                <InnerMethodInvoke>Database;prettyPrint;[db.getConnection(), "select s.lastName, s.firstName, t.testName,\n" + "tk.takingID, formatPercent( tk.score ) score\n" + "from Student s, Test t, TestTaking tk, LastTaking lt\n"+ "where t.testID = tk.testID\n"+ "and s.studentID = tk.studentID\n"+ "and tk.takingID = lt.takingID\n"+ "order by s.lastName, s.firstName, t.testName, tk.takingID\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>log;logBanner;["Median Score Per Test. Note how we fake " + "a user-defined aggregate..."]</InnerMethodInvoke>
                <InnerMethodInvoke>db;prettyPrint;[conn, "select testName, " + "formatPercent( getMedianTestScore( testID ) ) " + "as \"median score\"\n"+ "from Test\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>log;logBanner;["Who Needs Improvement? Note the filtering done " + "at the end of the WHERE clause..."]</InnerMethodInvoke>
                <InnerMethodInvoke>data;reportWhoNeedsImprovement;[db, Data.LincolnGrammar, "GSM_2_0"]</InnerMethodInvoke>
                <InnerMethodInvoke>log;logBanner;["Hoopla! Everything works!"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>