<Class>
    <Id>289</Id>
    <Package>org.apache.derby.catalog</Package>
    <ClassName>Dependable</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Dependable  /** 
 * A Dependable is an in-memory representation of an object managed by the Dependency System. There are two kinds of Dependables: Providers and Dependents. Dependents depend on Providers and are responsible for executing compensating logic when their Providers change. &lt;P&gt; The fields represent the known Dependables. &lt;P&gt; Persistent dependencies (those between database objects) are stored in SYS.SYSDEPENDS.
 * @see org.apache.derby.catalog.DependableFinder
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ALIAS</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CONGLOMERATE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CONSTRAINT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HEAP</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>INDEX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PREPARED_STATEMENT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ACTIVATION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FILE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>STORED_PREPARED_STATEMENT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TABLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COLUMNS_IN_TABLE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TRIGGER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>VIEW</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SCHEMA</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TABLE_PERMISSION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>COLUMNS_PERMISSION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ROUTINE_PERMISSION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ROLE_GRANT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SEQUENCE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PERM</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDependableFinder</MethodName>
            <MethodComment>/** 
 * Get an object which can be written to disk and which, when read from disk, will find or reconstruct this in-memory Dependable.
 * @return		A Finder object that can be written to disk if this is aPersistent Dependable. Null if this is not a persistent dependable.
 */
</MethodComment>
            <ReturnType>DependableFinder</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectName</MethodName>
            <MethodComment>/** 
 * Get the name of this Dependable OBJECT. This is useful for diagnostic messages.
 * @return	Name of Dependable OBJECT.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getObjectID</MethodName>
            <MethodComment>/** 
 * Get the UUID of this Dependable OBJECT.
 * @return	UUID of this OBJECT.
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPersistent</MethodName>
            <MethodComment>/** 
 * Return whether or not this Dependable is persistent. Persistent dependencies are stored in SYS.SYSDEPENDS.
 * @return	true if this Dependable is persistent.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClassType</MethodName>
            <MethodComment>/** 
 * Get the unique class id for the Dependable. Every Dependable belongs to a class of Dependables. 
 * @return	type of this Dependable.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>