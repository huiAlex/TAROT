<Class>
    <Id>1342</Id>
    <Package>org.apache.derbyTesting.system.oe.client</Package>
    <ClassName>Submitter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Submitter  /** 
 * Class that submits Order Entry transactions to a database through an instance of an Operations class. This class is responsible for the mix of transactions and the generation of the random input values. Sub-classes can override the mix.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>STOCK_LEVEL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER_STATUS_BY_NAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER_STATUS_BY_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PAYMENT_BY_NAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PAYMENT_BY_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DELIVERY_SCHEDULE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NEW_ORDER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NEW_ORDER_ROLLBACK</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>display</FieldName>
            <FieldType>Display</FieldType>
        </Field>
        <Field>
            <FieldName>ops</FieldName>
            <FieldType>Operations</FieldType>
        </Field>
        <Field>
            <FieldName>rand</FieldName>
            <FieldType>OERandom</FieldType>
        </Field>
        <Field>
            <FieldName>maxW</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>transactionCount</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getRuntimeRandom</MethodName>
            <MethodComment>/** 
 * Generate a new random number generator that follows the rules according to 2.1.6.1
 * @param conn
 * @return rand number generator
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>OERandom</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>OERandom [rand=new OERandom(-1)]</InnerVar>
                <InnerVar>ResultSet [rs=conn.createStatement().executeQuery("SELECT CLOAD FROM C")]</InnerVar>
                <InnerVar>int [cload=rs.getInt(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stockLevelOnly</MethodName>
            <MethodComment>/** 
 * Return a Submitter than only executes stock level transactions.
 */
</MethodComment>
            <ReturnType>Submitter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderStatusByIdOnly</MethodName>
            <MethodComment>/** 
 * Return a Submitter than only executes order status by identifier transactions.
 */
</MethodComment>
            <ReturnType>Submitter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderStatusByNameOnly</MethodName>
            <MethodComment>/** 
 * Return a Submitter than only executes order status by name transactions.
 */
</MethodComment>
            <ReturnType>Submitter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>paymentByIdOnly</MethodName>
            <MethodComment>/** 
 * Return a Submitter than only executes payment by identifier transactions.
 */
</MethodComment>
            <ReturnType>Submitter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>paymentByNameOnly</MethodName>
            <MethodComment>/** 
 * Return a Submitter than only executes payment by name transactions.
 */
</MethodComment>
            <ReturnType>Submitter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newOrderOnly</MethodName>
            <MethodComment>/** 
 * Return a Submitter than only executes new order transactions with no rollback
 */
</MethodComment>
            <ReturnType>Submitter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Submitter</MethodName>
            <MethodComment>/** 
 * Create a submitter that has a fixed mix of transactions at input time.
 * @see Submitter#mixType(int)
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ops</ParamName>
                    <ParamType>Operations</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rand</ParamName>
                    <ParamType>OERandom</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxW</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearTransactionCount</MethodName>
            <MethodComment>/** 
 * Reset the transaction counts to zero.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Arrays;fill;[transactionCount, 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTransactions</MethodName>
            <MethodComment>/** 
 * Run a fixed number of transactions returning the time in milli-seconds required to execute all of them.
 * @param displayData Passed onto Display calls
 * @param count Number of transactions to run
 * @return Elapsed time in ms to run count transactions
 * @throws Exception
 */
</MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [startms=System.currentTimeMillis()]</InnerVar>
                <InnerVar>long [endms=System.currentTimeMillis()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTransaction</MethodName>
            <MethodComment>/** 
 * Run an order entry transaction picking the specific transaction at random with a hard-coded mix.
 * @param displayData Passed onto Display calls
 * @throws Exception Error executing the transaction
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [chooseType=rand.randomInt(1,100)]</InnerVar>
                <InnerVar>int [type=mixType(chooseType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mixType</MethodName>
            <MethodComment>/** 
 * Return one of transaction constants to run that transaction. This mix in not correct for TPC-C specification. With the official spec the final mix of transactions must match a certain profile. With this setup the mix is fixed upon input following the TPC-C final ratios. This will give approximately correct results, but the final mix will not be in line with TPC-C rules. This is because different transactions have different execution times.
 * @param chooseType Random number between 1 and 100 inclusive.
 * @return A transaction constant from this class.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chooseType</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runNewOrder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forRollback</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>short [homeWarehouse=warehouse()]</InnerVar>
                <InnerVar>int [orderItemCount=rand.randomInt(5,15)]</InnerVar>
                <InnerVar>int[] [items=new int[orderItemCount]]</InnerVar>
                <InnerVar>short[] [quantities=new short[orderItemCount]]</InnerVar>
                <InnerVar>short[] [supplyW=new short[orderItemCount]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ops;newOrder;[display, displayData, homeWarehouse, rand.district(), rand.NURand1023(), items, quantities, supplyW]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runScheduleDelivery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runPayment</MethodName>
            <MethodComment>/** 
 * Run a payment transaction with random input values.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>byName</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>warehouse</MethodName>
            <MethodComment>/** 
 * Return a random warehouse
 * @return a random warehouse
 */
</MethodComment>
            <ReturnType>short</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runStockLevel</MethodName>
            <MethodComment>/** 
 * Run a stock level transaction with random input values.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ops;stockLevel;[display, displayData, warehouse(), rand.district(), rand.threshold()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runOrderStatus</MethodName>
            <MethodComment>/** 
 * Run an order status transaction with random input values.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>byName</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printReport</MethodName>
            <MethodComment>/** 
 * Print a simple report of the activity.
 * @param out
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [total=0]</InnerVar>
                <InnerVar>int [noTotal=transactionCount[NEW_ORDER] + transactionCount[NEW_ORDER_ROLLBACK]]</InnerVar>
                <InnerVar>int [pyCount=transactionCount[PAYMENT_BY_NAME] + transactionCount[PAYMENT_BY_ID]]</InnerVar>
                <InnerVar>int [osCount=transactionCount[ORDER_STATUS_BY_NAME] + transactionCount[ORDER_STATUS_BY_ID]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;println;["Total Transactions: " + total]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transactionCount</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>total</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>percent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>count</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>total</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BigDecimal [c=BigDecimal.valueOf((long)count * 100L)]</InnerVar>
                <InnerVar>BigDecimal [t=BigDecimal.valueOf((long)total)]</InnerVar>
                <InnerVar>BigDecimal [p=c.divide(t,2,RoundingMode.DOWN)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTransactionCount</MethodName>
            <MethodComment>/** 
 * Get the executed transaction counts.
 * @return transactionCount
 */
</MethodComment>
            <ReturnType>int[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>