<Class>
    <Id>1414</Id>
    <Package>org.apache.derbyTesting.unitTests.services</Package>
    <ClassName>T_MarkedLimitInputStream</ClassName>
    <SuperClass>T_Generic</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>T_MarkedLimitInputStream  /** 
 * A simple unit test for a MarkedLimitInputStream.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TEST_SIZE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BLOCK_SIZE</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MarkedLimitInputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InputStream [inputStream=new ByteArrayInputStream(data)]</InnerVar>
                <InnerVar>ByteArrayOutputStream [baos=new ByteArrayOutputStream(TEST_SIZE + 200)]</InnerVar>
                <InnerVar>DataOutputStream [dos=new DataOutputStream(baos)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;writeDos;[inputStream, dos]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDos</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>x</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [isLastBlock=false]</InnerVar>
                <InnerVar>byte[] [b=new byte[BLOCK_SIZE]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeMLIS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>MarkedLimitInputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>b</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InputStream [inputStream=new ByteArrayInputStream(b)]</InnerVar>
                <InnerVar>DataInputStream [dataInputStream=new DataInputStream(inputStream)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readAndCompare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mlis</ParamName>
                    <ParamType>MarkedLimitInputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>x</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [b]</InnerVar>
                <InnerVar>int [i=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readAndCompareChunks</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mlis</ParamName>
                    <ParamType>MarkedLimitInputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>x</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [chunkSize=10]</InnerVar>
                <InnerVar>byte[] [chunk=new byte[chunkSize]]</InnerVar>
                <InnerVar>int [c=0]</InnerVar>
                <InnerVar>int [base=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>skipAndCompare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mlis</ParamName>
                    <ParamType>MarkedLimitInputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>x</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>skipTo</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [c=mlis.skip(skipTo)]</InnerVar>
                <InnerVar>byte[] [y=new byte[x.length - (int)c]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>T_Fail;T_ASSERT;[c == skipTo]</InnerMethodInvoke>
                <InnerMethodInvoke>System;arraycopy;[x, (int)skipTo, y, 0, x.length - (int)c]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getModuleToTestProtocolName</MethodName>
            <MethodComment>/** 
 * Methods required by T_Generic
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTests</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [success=true]</InnerVar>
                <InnerVar>byte[] [data=new byte[TEST_SIZE]]</InnerVar>
                <InnerVar>MarkedLimitInputStream [mlis=setup(data)]</InnerVar>
                <InnerVar>MarkedLimitInputStream [mlis2=setup(data)]</InnerVar>
                <InnerVar>MarkedLimitInputStream [mlis3=setup(data)]</InnerVar>
                <InnerVar>MarkedLimitInputStream [mlis4=setup(data)]</InnerVar>
                <InnerVar>byte[] [data2=new byte[BLOCK_SIZE]]</InnerVar>
                <InnerVar>MarkedLimitInputStream [mlis5=setup(data2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>