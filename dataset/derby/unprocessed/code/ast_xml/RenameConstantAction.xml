<Class>
    <Id>95</Id>
    <Package>org.apache.derby.impl.sql.execute</Package>
    <ClassName>RenameConstantAction</ClassName>
    <SuperClass>DDLSingleTableConstantAction</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RenameConstantAction  /** 
 * This class  describes actions that are ALWAYS performed for a RENAME TABLE/COLUMN/INDEX Statement at Execution time.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>fullTableName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tableName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>newTableName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>oldObjectName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>newObjectName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>schemaId</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>sd</FieldName>
            <FieldType>SchemaDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>usedAlterTable</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>renamingWhat</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>RenameConstantAction</MethodName>
            <MethodComment>/** 
 * Make the ConstantAction for a RENAME TABLE/COLUMN/INDEX statement.
 * @param fullTableName Fully qualified table name
 * @param tableName Table name.
 * @param oldObjectName This is either the name of column/index in caseof rename column/index. For rename table, this is null.
 * @param newObjectName This is new name for table/column/index
 * @param sd Schema that table lives in.
 * @param tableId UUID for table
 * @param usedAlterTable True-Used Alter Table, False-Used Rename.For rename index, this will always be false because there is no alter table command to rename index
 * @param renamingWhat Rename a 1 - table, 2 - column, 3 - index
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullTableName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tableName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oldObjectName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newObjectName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sd</ParamName>
                    <ParamType>SchemaDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tableId</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>usedAlterTable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>renamingWhat</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [renameString]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeConstantAction</MethodName>
            <MethodComment>/** 
 * The guts of the Execution-time logic for RENAME TABLE/COLUMN/INDEX.
 * @see ConstantAction#executeConstantAction
 * @exception StandardException Thrown on failure
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TableDescriptor [td]</InnerVar>
                <InnerVar>UUID [tableID]</InnerVar>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>DependencyManager [dm=dd.getDependencyManager()]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
                <InnerVar>long [heapId=td.getHeapConglomerateId()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dd;startWriting;[lcc]</InnerMethodInvoke>
                <InnerMethodInvoke>null;lockTableForDDL;[tc, heapId, true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execGutsRenameTable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ConstraintDescriptorList [constraintDescriptorList]</InnerVar>
                <InnerVar>ConstraintDescriptor [constraintDescriptor]</InnerVar>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>DependencyManager [dm=dd.getDependencyManager()]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dm;invalidateFor;[td, DependencyManager.RENAME, lcc]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;dropTableDescriptor;[td, sd, tc]</InnerMethodInvoke>
                <InnerMethodInvoke>td;setTableName;[newTableName]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;addDescriptor;[td, sd, DataDictionary.SYSTABLES_CATALOG_NUM, false, tc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execGutsRenameColumn</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ColumnDescriptor [columnDescriptor=null]</InnerVar>
                <InnerVar>int [columnPosition=0]</InnerVar>
                <InnerVar>ConstraintDescriptorList [constraintDescriptorList]</InnerVar>
                <InnerVar>ConstraintDescriptor [constraintDescriptor]</InnerVar>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>DependencyManager [dm=dd.getDependencyManager()]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
                <InnerVar>FormatableBitSet [toRename=new FormatableBitSet(td.getColumnDescriptorList().size() + 1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>toRename;set;[columnPosition]</InnerMethodInvoke>
                <InnerMethodInvoke>td;setReferencedColumnMap;[toRename]</InnerMethodInvoke>
                <InnerMethodInvoke>dm;invalidateFor;[td, DependencyManager.RENAME, lcc]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;dropColumnDescriptor;[td.getUUID(), oldObjectName, tc]</InnerMethodInvoke>
                <InnerMethodInvoke>columnDescriptor;setColumnName;[newObjectName]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;addDescriptor;[columnDescriptor, td, DataDictionary.SYSCOLUMNS_CATALOG_NUM, false, tc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>execGutsRenameIndex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LanguageConnectionContext [lcc=activation.getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>DependencyManager [dm=dd.getDependencyManager()]</InnerVar>
                <InnerVar>TransactionController [tc=lcc.getTransactionExecute()]</InnerVar>
                <InnerVar>ConglomerateDescriptor [conglomerateDescriptor=dd.getConglomerateDescriptor(oldObjectName,sd,true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dm;invalidateFor;[td, DependencyManager.RENAME_INDEX, lcc]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;dropConglomerateDescriptor;[conglomerateDescriptor, tc]</InnerMethodInvoke>
                <InnerMethodInvoke>conglomerateDescriptor;setConglomerateName;[newObjectName]</InnerMethodInvoke>
                <InnerMethodInvoke>dd;addDescriptor;[conglomerateDescriptor, sd, DataDictionary.SYSCONGLOMERATES_CATALOG_NUM, false, tc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTableName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>