<Class>
    <Id>920</Id>
    <Package>org.apache.derby.impl.sql.execute.xplain</Package>
    <ClassName>XPLAINSystemTableVisitor</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>XPLAINVisitor</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>XPLAINSystemTableVisitor  /** 
 * This is the Visitor, which explains the information and stores the statistics in  the system catalogs. It traverses the result set statistics tree and extracts the information.  
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>no_call_stmts</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>lcc</FieldName>
            <FieldType>LanguageConnectionContext</FieldType>
        </Field>
        <Field>
            <FieldName>dd</FieldName>
            <FieldType>DataDictionary</FieldType>
        </Field>
        <Field>
            <FieldName>activation</FieldName>
            <FieldType>Activation</FieldType>
        </Field>
        <Field>
            <FieldName>considerTimingInformation</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>stmt</FieldName>
            <FieldType>XPLAINStatementDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>stmtTimings</FieldName>
            <FieldType>XPLAINStatementTimingsDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>stmtUUID</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
        <Field>
            <FieldName>rsets</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>rsets</FieldName>
            <FieldType>XPLAINResultSetDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>rsetsTimings</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>rsetsTimings</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>sortrsets</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>sortrsets</FieldName>
            <FieldType>XPLAINSortPropsDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>scanrsets</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>scanrsets</FieldName>
            <FieldType>XPLAINScanPropsDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>noChildren</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UUIDStack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>UUIDStack</FieldName>
            <FieldType>UUID</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>XPLAINSystemTableVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pushUUIDnoChildren</MethodName>
            <MethodComment>/** 
 * helper method, which pushes the UUID, "number of Children" times onto the UUIDStack.
 * @param uuid the UUID to push
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuid</ParamName>
                    <ParamType>UUID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setNumberOfChildren</MethodName>
            <MethodComment>/** 
 * this method only stores the current number of children of the current explained node. The child nodes then can re-use this information.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>noChildren</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment>/** 
 * Visit this node, calling back to it to get details. This method visits the RS Statisitcs node, calling back to the node to get detailed descriptor information about it.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>statistics</ParamName>
                    <ParamType>ResultSetStatistics</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UUID [timingID=null]</InnerVar>
                <InnerVar>UUID [sortID=dd.getUUIDFactory().createUUID()]</InnerVar>
                <InnerVar>XPLAINSortPropsDescriptor [sortRSDescriptor=(XPLAINSortPropsDescriptor)statistics.getSortPropsDescriptor(sortID)]</InnerVar>
                <InnerVar>UUID [scanID=dd.getUUIDFactory().createUUID()]</InnerVar>
                <InnerVar>XPLAINScanPropsDescriptor [scanRSDescriptor=(XPLAINScanPropsDescriptor)statistics.getScanPropsDescriptor(scanID)]</InnerVar>
                <InnerVar>UUID [rsID=dd.getUUIDFactory().createUUID()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rsets;add;[(XPLAINResultSetDescriptor)statistics.getResultSetDescriptor(rsID,UUIDStack.empty() ? (UUID)null : UUIDStack.pop(),scanID,sortID,stmtUUID,timingID)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushUUIDnoChildren;[rsID]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reset</MethodName>
            <MethodComment>/** 
 * This method resets the visitor. Gets called right before explanation to make sure all needed objects exist and are up to date and the lists are cleared
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doXPLAIN</MethodName>
            <MethodComment>/** 
 * the interface method, which gets called by the Top-ResultSet, which starts the tree traversal. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rss</ParamName>
                    <ParamType>RunTimeStatistics</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>activation</ParamName>
                    <ParamType>Activation</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UUID [stmtTimingsUUID=null]</InnerVar>
                <InnerVar>String [type=XPLAINUtil.getStatementType(rss.getStatementText())]</InnerVar>
                <InnerVar>String [xaID=lcc.getTransactionExecute().getTransactionIdString()]</InnerVar>
                <InnerVar>String [sessionID=Integer.toString(lcc.getInstanceNumber())]</InnerVar>
                <InnerVar>String [jvmID=Integer.toString(JVMInfo.JDK_ID)]</InnerVar>
                <InnerVar>String [osID=System.getProperty("os.name")]</InnerVar>
                <InnerVar>long [current=System.currentTimeMillis()]</InnerVar>
                <InnerVar>String [XPLAINtype=lcc.getXplainOnlyMode() ? XPLAINUtil.XPLAIN_ONLY : XPLAINUtil.XPLAIN_FULL]</InnerVar>
                <InnerVar>Timestamp [time=new Timestamp(current)]</InnerVar>
                <InnerVar>String [threadID=Thread.currentThread().toString()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;reset;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;clean;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clean</MethodName>
            <MethodComment>/** 
 * This method cleans up things after explanation. It frees kept  resources and still holded references.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rsets;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>rsetsTimings;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>sortrsets;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>scanrsets;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>UUIDStack;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDefaultConn</MethodName>
            <MethodComment>/** 
 * Open a nested Connection with which to execute INSERT statements.
 */
</MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ConnectionContext [cc=(ConnectionContext)lcc.getContextManager().getContext(ConnectionContext.CONTEXT_ID)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addStmtDescriptorsToSystemCatalog</MethodName>
            <MethodComment>/** 
 * This method writes only the stmt and its timing descriptor to the dataDictionary
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [statsSave=lcc.getRunTimeStatisticsMode()]</InnerVar>
                <InnerVar>Connection [conn=getDefaultConn()]</InnerVar>
                <InnerVar>PreparedStatement [ps=conn.prepareStatement((String)lcc.getXplainStatement("SYSXPLAIN_STATEMENTS"))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lcc;setRunTimeStatisticsMode;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>stmt;setStatementParameters;[ps]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>lcc;setRunTimeStatisticsMode;[statsSave]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addArraysToSystemCatalogs</MethodName>
            <MethodComment>/** 
 * This method writes the created descriptor arrays  to the cooresponding system catalogs.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [statsSave=lcc.getRunTimeStatisticsMode()]</InnerVar>
                <InnerVar>Connection [conn=getDefaultConn()]</InnerVar>
                <InnerVar>PreparedStatement [ps=conn.prepareStatement((String)lcc.getXplainStatement("SYSXPLAIN_RESULTSETS"))]</InnerVar>
                <InnerVar>Iterator&lt;XPLAINResultSetDescriptor&gt; [rsetsiter=rsets.iterator()]</InnerVar>
                <InnerVar>Iterator&lt;XPLAINScanPropsDescriptor&gt; [scaniter=scanrsets.iterator()]</InnerVar>
                <InnerVar>Iterator&lt;XPLAINSortPropsDescriptor&gt; [sortiter=sortrsets.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lcc;setRunTimeStatisticsMode;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>lcc;setRunTimeStatisticsMode;[statsSave]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>