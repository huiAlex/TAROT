<Class>
    <Id>248</Id>
    <Package>org.apache.derby.impl.store.raw.data</Package>
    <ClassName>DirectAllocActions</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>AllocationActions</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>DirectAllocActions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionAllocatePage</MethodName>
            <MethodComment>/** 
 * Set the allocation status of pageNumber to doStatus.  To undo this operation, set the allocation status of pageNumber to undoStatus
 * @param t				The transaction
 * @param allocPage		the allocation page
 * @param pageNumber		the page to allocation or deallocation
 * @param doStatus			set the allocation status of the page this value
 * @param undoStatus		on undo, set the allocation status of the pagethis value 
 * @exception StandardException	Standard Derby error policy
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>allocPage</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pageNumber</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>doStatus</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>undoStatus</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>((AllocPage)allocPage);setPageStatus;[(LogInstant)null, pageNumber, doStatus]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionChainAllocPage</MethodName>
            <MethodComment>/** 
 * Chain one allocation page to the next.
 * @param t				The transaction
 * @param allocPage		the allocation page whose next page chain needsto be changed
 * @param pageNumber		the next allocation page's number 
 * @param pageOffset		the next allocation page's page offset
 * @exception StandardException	Standard Derby error policy
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>allocPage</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pageNumber</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pageOffset</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>((AllocPage)allocPage);chainNextAllocPage;[(LogInstant)null, pageNumber, pageOffset]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>actionCompressSpaceOperation</MethodName>
            <MethodComment>/** 
 * Compress free pages. &lt;p&gt; Compress the free pages at the end of the range maintained by this allocation page.  All pages being compressed should be FREE. Only pages in the last allocation page can be compressed. &lt;p&gt;
 * @param t				        The transaction
 * @param allocPage		        the allocation page to do compress on.
 * @param new_highest_page      The new highest page on this allocation page.  The number is the offset of the page in the array of pages maintained by this  allocation page, for instance a value of 0  indicates all page except the first one are to be truncated.  If all pages are  truncated then the offset is set to -1.
 * @param num_pages_truncated   The number of allocated pages in this allocation page prior to the truncate.   Note that all pages from NewHighestPage+1  through newHighestPage+num_pages_truncated  should be FREE.
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>RawTransaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>allocPage</ParamName>
                    <ParamType>BasePage</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>new_highest_page</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>num_pages_truncated</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>((AllocPage)allocPage);compressSpace;[(LogInstant)null, new_highest_page, num_pages_truncated]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>