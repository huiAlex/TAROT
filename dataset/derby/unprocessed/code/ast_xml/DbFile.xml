<Class>
    <Id>1148</Id>
    <Package>org.apache.derbyTesting.functionTests.util</Package>
    <ClassName>DbFile</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DbFile  /** 
 * Utility class for testing files stored in the database.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>stringFromFile</MethodName>
            <MethodComment>/** 
 * Create a string that contains a representation of the content of a file for testing.
 * @exception Exception Oops.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InputStreamReader [isr=new InputStreamReader(is)]</InnerVar>
                <InnerVar>BufferedReader [br=new BufferedReader(isr)]</InnerVar>
                <InnerVar>StringBuffer [sb=new StringBuffer()]</InnerVar>
                <InnerVar>String [l]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>is;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getResourceURL</MethodName>
            <MethodComment>/** 
 * Get the URL for a resource.
 * @param packageName the name of the resource package
 * @param name the name of the resourse.
 */
</MethodComment>
            <ReturnType>URL</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [resourceName="/" + packageName.replace('.','/') + "/"+ name]</InnerVar>
                <InnerVar>Class [c=resourceName.getClass()]</InnerVar>
                <InnerVar>URL [url=c.getResource(resourceName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getResourceAsStream</MethodName>
            <MethodComment>/** 
 * Get an InputStream for reading a resource.
 * @param packageName the name of the resource package
 * @param name the name of the resourse.
 * @exception Exception Oops.
 */
</MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [resourceName="/" + packageName.replace('.','/') + "/"+ name]</InnerVar>
                <InnerVar>Class [c=resourceName.getClass()]</InnerVar>
                <InnerVar>InputStream [result=c.getResourceAsStream(resourceName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deleteFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outputFileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [f=new File(outputFileName)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mkFileFromResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resourceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mkFileFromResource</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>packageName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>resourceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outputFileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [f=new File(outputFileName)]</InnerVar>
                <InnerVar>InputStream [is=getResourceAsStream(packageName,resourceName)]</InnerVar>
                <InnerVar>BufferedInputStream [bis=new BufferedInputStream(is)]</InnerVar>
                <InnerVar>OutputStream [os=new FileOutputStream(f)]</InnerVar>
                <InnerVar>byte[] [buf=new byte[4096]]</InnerVar>
                <InnerVar>int [readThisTime=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>os;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>