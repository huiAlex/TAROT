<Class>
    <Id>1841</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.store</Package>
    <ClassName>checkPoint</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>checkPoint  /** 
 * Test to make sure checkpoint or occuring as expected. Check is done by looking at the timestamp for "log.ctrl" file, If modified time is more than what it was in the last lookup means , we know that checkpoint occured. Other thing that is counted is in this program is number of log switches.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>derbyHome</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dbDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>logDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>logControlFile</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>lastCheckPointTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["Test checkpoint starting"]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;["Test checkpoint finished"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpSQLExceptions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>se</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System.out;println;["FAIL -- unexpected exception: " + se.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setupAllTestFiles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkpointOccured</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>long [currentModifiedTime=logControlFile.lastModified()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>numberOfLogFiles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>File[] [logFiles=logDir.listFiles()]</InnerVar>
                <InnerVar>int [noFiles=(logFiles == null) ? 0 : logFiles.length]</InnerVar>
                <InnerVar>String [lastLogFile=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>