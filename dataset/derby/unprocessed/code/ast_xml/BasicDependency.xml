<Class>
    <Id>981</Id>
    <Package>org.apache.derby.impl.sql.depend</Package>
    <ClassName>BasicDependency</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Dependency</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BasicDependency  /** 
 * A dependency represents a reliance of the dependent on the provider for some information the dependent contains or uses.  In Language, the usual case is a prepared statement using information about a schema object in its executable form. It needs to be notified if the schema object changes, so that it can recompile against the new information.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>provider</FieldName>
            <FieldType>Provider</FieldType>
        </Field>
        <Field>
            <FieldName>dependent</FieldName>
            <FieldType>Dependent</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getProviderKey</MethodName>
            <MethodComment>/** 
 * return the provider's key for this dependency.
 * @return the provider' key for this dependency
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProvider</MethodName>
            <MethodComment>/** 
 * return the provider for this dependency.
 * @return the provider for this dependency
 */
</MethodComment>
            <ReturnType>Provider</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDependent</MethodName>
            <MethodComment>/** 
 * return the dependent for this dependency.
 * @return the dependent for this dependency
 */
</MethodComment>
            <ReturnType>Dependent</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BasicDependency</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>Dependent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Provider</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>