<Class>
    <Id>314</Id>
    <Package>org.apache.derbyBuild.eclipse</Package>
    <ClassName>DerbyEclipsePlugin</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DerbyEclipsePlugin  /** 
 * This class provides the functionality to create the build related related properties, which are used for creating the Derby plug-in for Eclipse by the ANT script. - The Eclipse plugin will be called 'Apache Derby Core Plug-in for Eclipse' - The plugin can be build from the main build.xml using 'ant' with the 'plugin' argument. - The package name for the Derby plug-in will be: org.apache.derby.core_&lt;major&gt;.&lt;minor&gt;.&lt;interim&gt; (example: org.apache.derby.core_10.1.0). - The plugin.xml in the Derby plug-in will show the actual version of the the Derby build (example: 10.1.0.0 (111545M) ). This can be viewed from Help - About Eclipse Platform - Plug-in Details of Eclipse of the Eclipse IDE - The zip file created for the DerbyEclipse under the jars directory will have the name: derby_core_plugin_&lt;major&gt;.&lt;minor&gt;.&lt;interim&gt;.zip (example:derby_core_plugin_10.1.0.zip) - The current packaging includes derby.jar, derbynet.jar and derbytools.jar. The locale jars for Derby are not included yet.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>PLUGIN_PKG</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PLUGIN_PKG_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PLUGIN_ZIP_FILE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PLUGIN_ZIP_FILE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PLUGIN_VERSION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PLUGIN_VERSION_BUILD_NUMBER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MAINT_DIV</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>part_1</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>part_2</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>part_3</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>version</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tmpPropFile</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tmpFileLocation</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>tmpProp</FieldName>
            <FieldType>Properties</FieldType>
        </Field>
        <Field>
            <FieldName>pluginXMLFile</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProps</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>InputStream [versionStream=getClass().getResourceAsStream(ProductGenusNames.DBMS_INFO)]</InnerVar>
                <InnerVar>Properties [prop=new Properties()]</InnerVar>
                <InnerVar>int [maint=Integer.parseInt(prop.getProperty(PropertyNames.PRODUCT_MAINT_VERSION))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>prop;load;[versionStream]</InnerMethodInvoke>
                <InnerMethodInvoke>tmpProp;put;[PLUGIN_PKG, PLUGIN_PKG_NAME]</InnerMethodInvoke>
                <InnerMethodInvoke>tmpProp;put;[PLUGIN_ZIP_FILE, PLUGIN_ZIP_FILE_NAME]</InnerMethodInvoke>
                <InnerMethodInvoke>tmpProp;put;[PropertyNames.PRODUCT_VENDOR_NAME, prop.getProperty(PropertyNames.PRODUCT_VENDOR_NAME)]</InnerMethodInvoke>
                <InnerMethodInvoke>tmpProp;put;[PLUGIN_VERSION, version]</InnerMethodInvoke>
                <InnerMethodInvoke>tmpProp;put;[PLUGIN_VERSION_BUILD_NUMBER, version + " (" + prop.getProperty(PropertyNames.PRODUCT_BUILD_NUMBER)+ ")"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTmpFiles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>File [file=new File(tmpFileLocation.getAbsolutePath() + File.separator + tmpPropFile)]</InnerVar>
                <InnerVar>FileOutputStream [fo=new FileOutputStream(file)]</InnerVar>
                <InnerVar>FileWriter [fw=new FileWriter(file)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tmpProp;store;[fo, null]</InnerMethodInvoke>
                <InnerMethodInvoke>fo;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>fw;write;[part_1 + part_2 + part_3]</InnerMethodInvoke>
                <InnerMethodInvoke>fw;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>