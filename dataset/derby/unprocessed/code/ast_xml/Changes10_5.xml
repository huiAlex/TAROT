<Class>
    <Id>1591</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.upgradeTests</Package>
    <ClassName>Changes10_5</ClassName>
    <SuperClass>UpgradeChange</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Changes10_5  /** 
 * Upgrade test cases for 10.5. If the old version is 10.5 or later then these tests will not be run. &lt;BR&gt; 10.5 Upgrade issues &lt;UL&gt; &lt;LI&gt; testUpdateStatisticsProcdure - DERBY-269 Make sure that SYSCS_UTIL.SYSCS_UPDATE_STATISTICS can only be run in Derby 10.5 and higher. &lt;/UL&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>BAD_SYNTAX</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Changes10_5</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suite</MethodName>
            <MethodComment>/** 
 * Return the suite of tests to test the changes made in 10.5.
 * @param phase an integer that indicates the current phase inthe upgrade test.
 * @return the test suite created.
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>phase</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BaseTestSuite [suite=new BaseTestSuite("Upgrade test for 10.5")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>suite;addTestSuite;[Changes10_5.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUpdateStatisticsProcdure</MethodName>
            <MethodComment>/** 
 * Make sure that SYSCS_UTIL.SYSCS_UPDATE_STATISTICS can only be run in  Derby 10.5 and higher.  DERBY-269 Test added for 10.5.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Statement [s]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testDeterminismKeyword</MethodName>
            <MethodComment>/** 
 * Test that the DETERMINISTIC keyword is not allowed until you hard-upgrade to 10.5.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [sqlstate=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;possibleError;[sqlstate, "create function f_3570_12()\n" + "returns int\n" + "language java\n"+ "parameter style java\n"+ "deterministic\n"+ "no sql\n"+ "external name 'foo.bar.wibble'\n"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;possibleError;[sqlstate, "create procedure p_3570_13()\n" + "language java\n" + "not deterministic\n"+ "parameter style java\n"+ "modifies sql data\n"+ "external name 'foo.bar.wibble'\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testGenerationClauses</MethodName>
            <MethodComment>/** 
 * Test that generation clauses are not allowed until you hard-upgrade to 10.5.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [sqlstate=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;possibleError;[sqlstate, "create table t_genCol_2( a int, b int generated always as ( -a ), c int )"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>possibleError</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Run a statement. If the sqlstate is not null, then we expect that error. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sqlstate</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>text</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSQLRolesBasic</MethodName>
            <MethodComment>/** 
 * Check that you must be hard-upgraded to 10.5 or later in order to use SQL roles
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Statement [s=createStatement()]</InnerVar>
                <InnerVar>String [createRoleText="create role foo"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>s;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSQLRoles</MethodName>
            <MethodComment>/** 
 * Check that when hard-upgraded to 10.5 or later SQL roles can be declared if DB has sqlAuthorization.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DataSource [ds=JDBCDataSource.getDataSourceLogical("ROLES_10_5")]</InnerVar>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>Statement [s=null]</InnerVar>
                <InnerVar>boolean [supportSqlAuthorization=oldAtLeast(10,2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>JDBCDataSource;setBeanProperty;[ds, "user", "garfield"]</InnerMethodInvoke>
                <InnerMethodInvoke>JDBCDataSource;setBeanProperty;[ds, "password", "theCat"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>