<Class>
    <Id>2043</Id>
    <Package>org.apache.derby.vti</Package>
    <ClassName>Pushable</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Pushable  /** 
 * Support for pushing SQL statement information down into a virtual table. A read-write virtual tables (one that implements java.sql.PreparedStatement) implements this interface to support pushing information into the VTI. &lt;BR&gt; Read-only VTIs (those that implement java.sql.ResultSet) do not support the Pushable interface.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>pushProjection</MethodName>
            <MethodComment>/** 
 * Indicates the columns that must be returned by a read-write VTI's ResultSet. This method is called only during the runtime execution of the VTI, after it has been constructed and before the executeQuery() method is called. At compile time the VTI needs to describe the complete set of columns it can return. &lt;BR&gt; The column identifiers contained in projectedColumns map to the columns described by the VTI's PreparedStatement's ResultSetMetaData. The ResultSet returned by PreparedStatement.executeQuery() must contain these columns in the order given. Column 1 in this ResultSet maps the the column of the VTI identified by projectedColumns[0], column 2 maps to projectedColumns[1] etc. &lt;BR&gt; Any additional columns contained in the ResultSet are ignored by the database engine. The ResultSetMetaData returned by ResultSet.getMetaData() must match the ResultSet. &lt;P&gt; PreparedStatement's ResultSetMetaData column list {"id", "desc", "price", "tax", "brand"} &lt;BR&gt; projectedColumns = { 2, 3, 5} &lt;BR&gt; results in a ResultSet containing at least these 3 columns {"desc", "price", "brand"} The  JDBC column numbering scheme (1 based) ise used for projectedColumns.
 * @exception SQLException Error processing the request.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>vtiEnvironment</ParamName>
                    <ParamType>VTIEnvironment</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>projectedColumns</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>