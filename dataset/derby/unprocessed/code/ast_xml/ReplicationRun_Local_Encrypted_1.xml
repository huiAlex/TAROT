<Class>
    <Id>447</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.replicationTests</Package>
    <ClassName>ReplicationRun_Local_Encrypted_1</ClassName>
    <SuperClass>ReplicationRun</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReplicationRun_Local_Encrypted_1  /** 
 * Testing replication of encrypted databases. Required DERBY-3890.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>ReplicationRun_Local_Encrypted_1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testcaseName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suite</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>BaseTestSuite [suite=new BaseTestSuite("ReplicationRun_Local_Encrypted_1 Suite")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>suite;addTestSuite;[ReplicationRun_Local_Encrypted_1.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReplication_Encrypted_1_stdLoad</MethodName>
            <MethodComment>/** 
 * Do a simple test to verify replication can be performed on an encrypted database.
 * @throws java.lang.Exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;makeReadyForReplication;[]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["replicationTest: " + replicationTest]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["replicationVerify: " + replicationVerify]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runTest;[replicationTest, jvmVersion, testClientHost, masterServerHost, masterServerPort, replicatedDb]</InnerMethodInvoke>
                <InnerMethodInvoke>null;failOver;[jvmVersion, masterDatabasePath, masterDbSubPath, replicatedDb, masterServerHost, masterServerPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;connectPing;[slaveDatabasePath + FS + slaveDbSubPath+ FS+ replicatedDb, slaveServerHost, slaveServerPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;verifySlave;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;verifyMaster;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, slaveServerHost, slaveServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, masterServerHost, masterServerPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testReplication_Encrypted_1_miniLoad_negative</MethodName>
            <MethodComment>/** 
 * Verify connection to the encrypted, replicated database: A) Database has not been shut down: further connects from the same JVM will succeed - connect without specifying encryption, - blank password, - incorrect password. B) After shutdown: Re-connects without correct password will fail - re-connecting as if un-encrypted, - blank password, - incorrect password.
 * @throws java.lang.Exception
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [dbPath=masterDatabasePath + FS + masterDbSubPath+ FS+ replicatedDb]</InnerVar>
                <InnerVar>int [tuplesToInsert=10000]</InnerVar>
                <InnerVar>String [slaveDbPath=slaveDatabasePath + FS + slaveDbSubPath+ FS+ replicatedDb]</InnerVar>
                <InnerVar>String [masterDbPath=masterDatabasePath + FS + masterDbSubPath+ FS+ replicatedDb]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;makeReadyForReplication;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_testInsertUpdateDeleteOnMaster;[masterServerHost, masterServerPort, dbPath, tuplesToInsert]</InnerMethodInvoke>
                <InnerMethodInvoke>null;failOver;[jvmVersion, masterDatabasePath, masterDbSubPath, replicatedDb, masterServerHost, masterServerPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;connectPing;[slaveDatabasePath + FS + slaveDbSubPath+ FS+ replicatedDb, slaveServerHost, slaveServerPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_verifyDatabase;[slaveServerHost, slaveServerPort, slaveDbPath, tuplesToInsert]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_verifyDatabase;[masterServerHost, masterServerPort, masterDbPath, tuplesToInsert]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertException;[_connectToSlave(slaveServerHost,slaveServerPort,slaveDbPath), null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertException;[_connectToSlave(slaveServerHost,slaveServerPort,slaveDbPath), null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertException;[_connectToSlave(slaveServerHost,slaveServerPort,slaveDbPath), null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;shutdownDb;[jvmVersion, slaveServerHost, slaveServerPort, slaveDatabasePath + FS + slaveDbSubPath, replicatedDb, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertException;[_connectToSlave(slaveServerHost,slaveServerPort,slaveDbPath), "XJ040"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertException;[_connectToSlave(slaveServerHost,slaveServerPort,slaveDbPath), "XJ040"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertException;[_connectToSlave(slaveServerHost,slaveServerPort,slaveDbPath), "XJ040"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, slaveServerHost, slaveServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, masterServerHost, masterServerPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>_connectToSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>slaveServerHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds]</InnerVar>
                <InnerVar>Class&lt;?&gt; [clazz]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["_connectToSlave"]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setDatabaseName;[dbPath]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setServerName;[slaveServerHost]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setPortNumber;[slaveServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setConnectionAttributes;[useEncryption(false)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>