<Class>
    <Id>1945</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.memorydb</Package>
    <ClassName>GenMog</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>GenMog  /** 
 * Simple utility to generate a mixture-of-Gaussian configuration.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>rng</FieldName>
            <FieldType>Random</FieldType>
        </Field>
        <Field>
            <FieldName>max_n</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>min_s</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>max_s</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>n</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>weight</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>mean</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>var</FieldName>
            <FieldType>double</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>GenMog</MethodName>
            <MethodComment>/** 
 * default constructor 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>GenMog</MethodName>
            <MethodComment>/** 
 * constructor with specified RNG 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rng</ParamName>
                    <ParamType>Random</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generate</MethodName>
            <MethodComment>/** 
 * Generate a mixture-of-Gaussian configuration. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>double [sum=0.0]</InnerVar>
                <InnerVar>double [oldm=0.0, olds=0.0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>BaseTestCase;println;["GENERATED: n = " + n]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>