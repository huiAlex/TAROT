<Class>
    <Id>171</Id>
    <Package>org.apache.derby.catalog</Package>
    <ClassName>AliasInfo</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>AliasInfo  /** 
 * An interface for describing an alias in Derby systems. In a Derby system, an alias can be one of the following: &lt;ul&gt; &lt;li&gt;method alias &lt;li&gt;UDT alias &lt;li&gt;class alias &lt;li&gt;synonym &lt;li&gt;user-defined aggregate &lt;/ul&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ALIAS_TYPE_UDT_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_AGGREGATE_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_PROCEDURE_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_FUNCTION_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_SYNONYM_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_UDT_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_AGGREGATE_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_PROCEDURE_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_FUNCTION_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_TYPE_SYNONYM_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_UDT_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_AGGREGATE_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_PROCEDURE_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_FUNCTION_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_SYNONYM_AS_CHAR</FieldName>
            <FieldType>char</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_UDT_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_AGGREGATE_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_PROCEDURE_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_FUNCTION_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALIAS_NAME_SPACE_SYNONYM_AS_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getMethodName</MethodName>
            <MethodComment>/** 
 * Get the name of the static method that the alias  represents at the source database.  (Only meaningful for method aliases )
 * @return The name of the static method that the alias represents at the source database.
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isTableFunction</MethodName>
            <MethodComment>/** 
 * Return true if this alias is a Table Function.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>