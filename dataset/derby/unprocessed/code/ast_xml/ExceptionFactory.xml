<Class>
    <Id>1058</Id>
    <Package>org.apache.derby.iapi.jdbc</Package>
    <ClassName>ExceptionFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExceptionFactory  /** 
 * An exception factory is used to create SQLExceptions of the correct type.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>ExceptionFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment>/** 
 * Get the singleton exception factory instance.
 * @return an {@code ExceptionFactory} instance
 */
</MethodComment>
            <ReturnType>ExceptionFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSQLException</MethodName>
            <MethodComment>/** 
 * Construct an SQLException whose message and severity are specified explicitly.
 * @param message the exception message
 * @param messageId the message id
 * @param next the next SQLException
 * @param severity the severity of the exception
 * @param cause the cause of the exception
 * @param args the message arguments
 * @return an SQLException
 */
</MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>message</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>messageId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>next</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>severity</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSQLException</MethodName>
            <MethodComment>/** 
 * Construct an SQLException whose message and severity are derived from the message id.
 * @param messageId the message id
 * @param next the next SQLException
 * @param cause the cause of the exception
 * @param args the message arguments
 * @return an SQLException
 */
</MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>messageId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>next</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>