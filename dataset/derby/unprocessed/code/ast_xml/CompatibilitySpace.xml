<Class>
    <Id>10</Id>
    <Package>org.apache.derby.iapi.services.locks</Package>
    <ClassName>CompatibilitySpace</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CompatibilitySpace  /** 
 * &lt;p&gt; This interface must be implemented by objects returned from &lt;code&gt;LockFactory.createCompatibilitySpace()&lt;/code&gt;. &lt;/p&gt; &lt;p&gt; A &lt;code&gt;CompatibilitySpace&lt;/code&gt; can have an owner (for instance a transaction). Currently, the owner is used by the virtual lock table to find out which transaction a lock belongs to. Some parts of the code also use the owner as a group object which guarantees that the lock is released on a commit or an abort. The owner has no special meaning to the lock manager and can be any object, including &lt;code&gt;null&lt;/code&gt;. &lt;/p&gt;
 * @see LockFactory#createCompatibilitySpace
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getOwner</MethodName>
            <MethodComment>/** 
 * Gets an object representing the owner of the compatibility space.
 * @return object representing the owner of the compatibility space, or&lt;code&gt;null&lt;/code&gt; if no owner has been specified.
 */
</MethodComment>
            <ReturnType>LockOwner</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>