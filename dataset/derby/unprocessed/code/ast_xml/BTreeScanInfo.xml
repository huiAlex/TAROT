<Class>
    <Id>1447</Id>
    <Package>org.apache.derby.impl.store.access.btree</Package>
    <ClassName>BTreeScanInfo</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ScanInfo</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BTreeScanInfo  /** 
 * This object provides performance information related to an open scan. The information is accumulated during operations on a ScanController() and then copied into this object and returned by a call to  ScanController.getStatistic().
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>stat_numpages_visited</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>stat_numrows_visited</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>stat_numrows_qualified</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>stat_numdeleted_rows_visited</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>stat_numColumnsFetched</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>stat_treeHeight</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>stat_validColumns</FieldName>
            <FieldType>FormatableBitSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BTreeScanInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scan</ParamName>
                    <ParamType>BTreeScan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAllScanInfo</MethodName>
            <MethodComment>/** 
 * Return all information gathered about the scan. &lt;p&gt; This routine returns a list of properties which contains all information gathered about the scan.  If a Property is passed in, then that property list is appeneded to, otherwise a new property object is created and returned. &lt;p&gt; Not all scans may support all properties, if the property is not  supported then it will not be returned.  The following is a list of properties that may be returned: numPagesVisited - the number of pages visited during the scan.  For btree scans this number only includes the leaf pages visited.   numRowsVisited - the number of rows visited during the scan.  This number  includes all rows, including: those marked deleted, those that don't meet qualification, ... numRowsQualified - the number of undeleted rows, which met the qualification. treeHeight (btree's only) - for btree's the height of the tree.  A tree with one page has a height of 1.  Total number of pages visited in a btree scan is (treeHeight - 1 + numPagesVisited). numColumnsFetched - the number of columns Fetched - partial scans will result in fetching less columns than the total number in the scan. columnsFetched - The FormatableBitSet.toString() method called on the validColumns arg. to the scan, unless validColumns was set to null, and in that case we will return "all". NOTE - this list will be expanded as more information about the scan is gathered and returned.
 * @param prop   Property list to fill in.
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_SCAN_TYPE), MessageService.getTextMessage(SQLState.STORE_RTS_BTREE)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_NUM_PAGES_VISITED), Integer.toString(stat_numpages_visited)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_NUM_ROWS_VISITED), Integer.toString(stat_numrows_visited)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_NUM_DELETED_ROWS_VISITED), Integer.toString(stat_numdeleted_rows_visited)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_NUM_ROWS_QUALIFIED), Integer.toString(stat_numrows_qualified)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_TREE_HEIGHT), Integer.toString(stat_treeHeight)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_NUM_COLUMNS_FETCHED), Integer.toString(stat_numColumnsFetched)]</InnerMethodInvoke>
                <InnerMethodInvoke>prop;put;[MessageService.getTextMessage(SQLState.STORE_RTS_COLUMNS_FETCHED_BIT_SET), (stat_validColumns == null ? MessageService.getTextMessage(SQLState.STORE_RTS_ALL) : stat_validColumns.toString())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>