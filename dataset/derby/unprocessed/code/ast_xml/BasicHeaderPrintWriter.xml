<Class>
    <Id>1683</Id>
    <Package>org.apache.derby.impl.services.stream</Package>
    <ClassName>BasicHeaderPrintWriter</ClassName>
    <SuperClass>PrintWriter</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>HeaderPrintWriter</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BasicHeaderPrintWriter  /** 
 * Basic class to print lines with headers.  &lt;p&gt; STUB: Should include code to emit a new line before a header which is not the first thing on the line.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>headerGetter</FieldName>
            <FieldType>PrintWriterGetHeader</FieldType>
        </Field>
        <Field>
            <FieldName>canClose</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BasicHeaderPrintWriter</MethodName>
            <MethodComment>/** 
 * the constructor sets up the HeaderPrintWriter.  &lt;p&gt;
 * @param writeTo       Where to write to.
 * @param headerGetter	Object to get headers for output lines.
 * @param canClose      If true, {@link #complete} will also close writeTo
 * @param streamName    Name of writeTo, e.g. a file name
 * @see PrintWriterGetHeader
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writeTo</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>headerGetter</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>canClose</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>streamName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BasicHeaderPrintWriter</MethodName>
            <MethodComment>/** 
 * the constructor sets up the HeaderPrintWriter.  &lt;p&gt;
 * @param writeTo       Where to write to.
 * @param headerGetter	Object to get headers for output lines.
 * @param canClose      If true, {@link #complete} will also close writeTo
 * @param writerName    Name of writeTo, e.g. a file name
 * @see PrintWriterGetHeader
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writeTo</ParamName>
                    <ParamType>Writer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>headerGetter</ParamName>
                    <ParamType>PrintWriterGetHeader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>canClose</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>writerName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>printlnWithHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>message</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;print;[headerGetter.getHeader()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;println;[message]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PrintWriterGetHeader</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrintWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PrintWriter</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>complete</MethodName>
            <MethodComment>/** 
 * Flushes stream, and optionally also closes it if constructed with canClose equal to true.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;flush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>