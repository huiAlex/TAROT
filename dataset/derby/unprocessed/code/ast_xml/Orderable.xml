<Class>
    <Id>247</Id>
    <Package>org.apache.derby.iapi.types</Package>
    <ClassName>Orderable</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Orderable  /** 
 * The Orderable interface represents a value that can be linearly ordered. &lt;P&gt; Currently only supports linear (&amp;lt;, =, &amp;lt;=) operations. Eventually we may want to do other types of orderings, in which case there would probably be a number of interfaces for each "class" of ordering. &lt;P&gt; The implementation must handle the comparison of null values.  This may require some changes to the interface, since (at least in some contexts) comparing a value with null should return unknown instead of true or false.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ORDER_OP_LESSTHAN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER_OP_EQUALS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER_OP_LESSOREQUALS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER_OP_GREATERTHAN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER_OP_GREATEROREQUALS</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList/>
</Class>