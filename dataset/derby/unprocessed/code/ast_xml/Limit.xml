<Class>
    <Id>1012</Id>
    <Package>org.apache.derby.iapi.services.io</Package>
    <ClassName>Limit</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Limit  /** 
 * Methods that allow limits to be placed on an input or output stream to avoid clients reading or writing too much information.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>setLimit</MethodName>
            <MethodComment>/** 
 * Set the limit of the data that can be read or written. After this call up to and including length bytes can be read from or skipped in the stream. &lt;P&gt; On input classes (e.g. InputStreams) any attempt to read or skip beyond the limit will result in an end of file indication (e.g. read() methods returning -1 or throwing EOFException). &lt;P&gt; On output classes (e.g. OutputStream) any attempt to write more beyond the limit will result in an EOFException
 * @exception IOException IOException from some underlying stream
 * @exception java.io.EOFException The set limit would exceedthe available data in the stream.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>length</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clearLimit</MethodName>
            <MethodComment>/** 
 * Clear any limit set by setLimit. After this call no limit checking will be made on any read until a setLimit()) call is made.
 * @return the number of bytes within the limit that have not been read or written.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>