<Class>
    <Id>500</Id>
    <Package>org.apache.derby.impl.sql.catalog</Package>
    <ClassName>SYSPERMSRowFactory</ClassName>
    <SuperClass>PermissionsCatalogRowFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SYSPERMSRowFactory  /** 
 * Factory for creating a SYSPERMS row.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TABLENAME_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_COLUMN_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_PERMISSIONID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_OBJECTTYPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_OBJECTID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_PERMISSION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_GRANTOR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_GRANTEE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSPERMS_IS_GRANTABLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>indexColumnPositions</FieldName>
            <FieldType>int[][]</FieldType>
        </Field>
        <Field>
            <FieldName>PERMS_UUID_IDX_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PERMS_OBJECTID_IDX_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GRANTEE_OBJECTID_GRANTOR_INDEX_NUM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>uniqueness</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>uuids</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SYSPERMSRowFactory</MethodName>
            <MethodComment>/** 
 * Constructor
 * @param uuidf UUIDFactory
 * @param ef    ExecutionFactory
 * @param dvf   DataValueFactory
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuidf</ParamName>
                    <ParamType>UUIDFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ef</ParamName>
                    <ParamType>ExecutionFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dvf</ParamName>
                    <ParamType>DataValueFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initInfo;[SYSPERMS_COLUMN_COUNT, TABLENAME_STRING, indexColumnPositions, uniqueness, uuids]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildIndexKeyRow</MethodName>
            <MethodComment>/** 
 * builds an index key row given for a given index number.
 */
</MethodComment>
            <ReturnType>ExecIndexRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indexNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExecIndexRow [row=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPrimaryKeyIndexNumber</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orPermissions</MethodName>
            <MethodComment>/** 
 * Or a set of permissions in with a row from this catalog table
 * @param row         an existing row
 * @param perm        a permission descriptor of the appropriate class for this PermissionsCatalogRowFactory class.
 * @param colsChanged An array with one element for each column in row. It is updated toindicate which columns in row were changed
 * @return The number of columns that were changed.
 * @throws StandardException standard error policy
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsChanged</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removePermissions</MethodName>
            <MethodComment>/** 
 * Remove a set of permissions from a row from this catalog table
 * @param row         an existing row
 * @param perm        a permission descriptor of the appropriate class for this PermissionsCatalogRowFactory class.
 * @param colsChanged An array with one element for each column in row. It is updated toindicate which columns in row were changed
 * @return -1 if there are no permissions left in the row, otherwise the number of columns that were changed.
 * @throws StandardException standard error policy
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>colsChanged</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUUIDOfThePassedDescriptor</MethodName>
            <MethodComment>/** 
 * @see PermissionsCatalogRowFactory#setUUIDOfThePassedDescriptor
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>perm</ParamName>
                    <ParamType>PermissionsDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [existingPermDVD=row.getColumn(SYSPERMS_PERMISSIONID)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>perm;setUUID;[getUUIDFactory().recreateUUID(existingPermDVD.getString())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeRow</MethodName>
            <MethodComment>/** 
 * Make a SYSPERMS row
 * @param td     a permission descriptor
 * @param parent unused
 * @return Row suitable for inserting into SYSPERMS.
 * @throws org.apache.derby.iapi.error.StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExecRow [row]</InnerVar>
                <InnerVar>String [permIdString=null]</InnerVar>
                <InnerVar>String [objectType="SEQUENCE"]</InnerVar>
                <InnerVar>String [objectIdString=null]</InnerVar>
                <InnerVar>String [permission="USAGE"]</InnerVar>
                <InnerVar>String [grantor=null]</InnerVar>
                <InnerVar>String [grantee=null]</InnerVar>
                <InnerVar>boolean [grantable=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>row;setColumn;[1, new SQLChar(permIdString)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[2, new SQLVarchar(objectType)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[3, new SQLChar(objectIdString)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[4, new SQLChar(permission)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[5, new SQLVarchar(grantor)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[6, new SQLVarchar(grantee)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[7, new SQLChar(grantable ? "Y" : "N")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildDescriptor</MethodName>
            <MethodComment>/** 
 * Make an  Tuple Descriptor out of a SYSPERMS row
 * @param row                   a SYSPERMS row
 * @param parentTupleDescriptor unused
 * @param dd                    dataDictionary
 * @return a  descriptor equivalent to a SYSPERMS row
 * @throws org.apache.derby.iapi.error.StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>TupleDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentTupleDescriptor</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dd</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>PermDescriptor [descriptor]</InnerVar>
                <InnerVar>String [permIdString]</InnerVar>
                <InnerVar>String [objectType]</InnerVar>
                <InnerVar>String [objectIdString]</InnerVar>
                <InnerVar>String [permission]</InnerVar>
                <InnerVar>String [grantor]</InnerVar>
                <InnerVar>String [grantee]</InnerVar>
                <InnerVar>String [isGrantable]</InnerVar>
                <InnerVar>DataDescriptorGenerator [ddg=dd.getDataDescriptorGenerator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildColumnList</MethodName>
            <MethodComment>/** 
 * Builds a list of columns suitable for creating this Catalog.
 * @return array of SystemColumn suitable for making this catalog.
 */
</MethodComment>
            <ReturnType>SystemColumn[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>