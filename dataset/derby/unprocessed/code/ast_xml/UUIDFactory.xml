<Class>
    <Id>1005</Id>
    <Package>org.apache.derby.iapi.services.uuid</Package>
    <ClassName>UUIDFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>UUIDFactory  /** 
 * Generates and recreates unique identifiers. An example of such an identifier is: &lt;blockquote&gt;&lt;pre&gt; E4900B90-DA0E-11d0-BAFE-0060973F0942 &lt;/blockquote&gt;&lt;/pre&gt; These resemble DCE UUIDs, but use a different implementation. &lt;P&gt; The string format is designed to be the same as the string format produced by Microsoft's UUIDGEN program, although at present the bit fields are probably not the same.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>createUUID</MethodName>
            <MethodComment>/** 
 * Create a new UUID.  The resulting object is guaranteed to be unique "across space and time".
 * @return		The UUID.
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>recreateUUID</MethodName>
            <MethodComment>/** 
 * Recreate a UUID from a string produced by UUID.toString.
 * @return		The UUID.
 */
</MethodComment>
            <ReturnType>UUID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuidstring</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>