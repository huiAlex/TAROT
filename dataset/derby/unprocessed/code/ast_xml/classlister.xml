<Class>
    <Id>40</Id>
    <Package>org.apache.derbyBuild</Package>
    <ClassName>classlister</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>classlister  /** 
 * A tool that generates a list of required classes from a set of properties files. The value of any property within a property file that starts with 'derby.module.' is taken as a class name. That class name and all the clases it requires are listed to System.out, to facilitate building a zip file. Classes that start with 'java.' or 'javax.' are not listed and are not checked for dependent classes. &lt;P&gt; If the class name starts with 'com.ibm.db2j.' then a messages.properties file is searched for corresponding to that class, if one exists then is is added to the list of files printed. &lt;P&gt; The search path for the classes is $CLASSPATH &lt;P&gt; If the system property cloudscapeOnly is set to true then only classes and message.properties files are listed that start with com.ibm.db2j. &lt;P&gt; The output for each class or properties file is a relative file name that uses '/' as the file separator. e.g. com/ibm/db2j/core/Setup.class &lt;P&gt; The output order of the classes &amp; files is random. &lt;P&gt; Usage: java [-DignoreWebLogic=true] [-Dverbose=true] [-DcloudscapeOnly=true] [-DruntimeOnly=true]  [-Ddb2jtools=true] [-DportingOnly=true] [-Doutputfile=&lt;filename&gt;] org.apache.derbyBuild.classlister  property_file [ property_file ... ]
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>sets</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>foundClasses</FieldName>
            <FieldType>Hashtable</FieldType>
        </Field>
        <Field>
            <FieldName>foundClasses</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>cloudscapeOnly</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>portingOnly</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>ignoreWebLogic</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>verbose</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipJava</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipJavax</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipOrg</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipInformix</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipDB2</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipDB2e</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>skipSun</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>showAll</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>keepRolling</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>showOne</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>masterClassList</FieldName>
            <FieldType>Hashtable</FieldType>
        </Field>
        <Field>
            <FieldName>masterClassList</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classpath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>outputfile</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classpathHash</FieldName>
            <FieldType>Hashtable</FieldType>
        </Field>
        <Field>
            <FieldName>classpathHash</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>indent</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>errorCount</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>pwOut</FieldName>
            <FieldType>PrintWriter</FieldType>
        </Field>
        <Field>
            <FieldName>psOut</FieldName>
            <FieldType>PrintStream</FieldType>
        </Field>
        <Field>
            <FieldName>db2jtools</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>db2jdrda</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>keepDependencyHistory</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>propFiles</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>classlister [me=new classlister()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>me;run;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>classlister</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;loadClasspath;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pset</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadClasspath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>locateClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>beVerbose</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findDependencies</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isCloudscapeCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>showAllItems</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Enumeration [e=masterClassList.keys()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pwOut;println;["------------Printing all dependents--------------"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>showAllItemsOneLevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Enumeration [e=masterClassList.keys()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>pwOut;println;["Showing all dependencies"]</InnerMethodInvoke>
                <InnerMethodInvoke>pwOut;println;["One level only"]</InnerMethodInvoke>
                <InnerMethodInvoke>pwOut;println;["-----------------------------------"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unrollHashtable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>current</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scoreboard</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>indentLevel</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [indentString="  "]</InnerVar>
                <InnerVar>Enumeration&lt;String&gt; [e=current.keys()]</InnerVar>
                <InnerVar>String [key=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>