<Class>
    <Id>1817</Id>
    <Package>org.apache.derby.iapi.sql.execute</Package>
    <ClassName>ExecRow</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Row</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExecRow  /** 
 * Execution sees this extension of Row that provides connectivity to the Storage row interface and additional methods for manipulating Rows in execution's ResultSets.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getClone</MethodName>
            <MethodComment>/** 
 * Clone the Row and its contents.
 * @return Row	A clone of the Row and its contents.
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClone</MethodName>
            <MethodComment>/** 
 * Clone the Row.  The cloned row will contain clones of the specified columns and the same object as the original row for the other columns.
 * @param clonedCols	1-based FormatableBitSet representing the columns to clone.
 * @return Row	A clone of the Row and its contents.
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clonedCols</ParamName>
                    <ParamType>FormatableBitSet</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewNullRow</MethodName>
            <MethodComment>/** 
 * Get a new row with the same columns type as this one, containing nulls.
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetRowArray</MethodName>
            <MethodComment>/** 
 * Reset all the &lt;code&gt;DataValueDescriptor&lt;/code&gt;s in the row array to (SQL) null values. This method may reuse (and therefore modify) the objects currently contained in the row array.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cloneColumn</MethodName>
            <MethodComment>/** 
 * Get a clone of a DataValueDescriptor from an ExecRow.
 * @param columnPosition (1 based)
 */
</MethodComment>
            <ReturnType>DataValueDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>columnPosition</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRowArrayClone</MethodName>
            <MethodComment>/** 
 * Get a clone of the array form of the row that Access expects.
 * @see ExecRow#getRowArray
 */
</MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRowArray</MethodName>
            <MethodComment>/** 
 * Return the array of objects that the store needs.
 */
</MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setRowArray</MethodName>
            <MethodComment>/** 
 * Set the array of objects
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowArray</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewObjectArray</MethodName>
            <MethodComment>/** 
 * Get a new DataValueDescriptor[]
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>