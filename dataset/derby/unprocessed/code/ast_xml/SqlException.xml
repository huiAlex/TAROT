<Class>
    <Id>2011</Id>
    <Package>org.apache.derby.client.am</Package>
    <ClassName>OutsideRangeForDataTypeException</ClassName>
    <SuperClass>SqlException</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>DEFAULT_ERRCODE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>sqlca_</FieldName>
            <FieldType>Sqlca</FieldType>
        </Field>
        <Field>
            <FieldName>messageNumber_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>message_</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>cachedMessage_</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>batchPositionLabel_</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>sqlstate_</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>errorcode_</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>causeString_</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>nextException_</FieldName>
            <FieldType>SqlException</FieldType>
        </Field>
        <Field>
            <FieldName>CLIENT_MESSAGE_RESOURCE_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>exceptionFactory</FieldName>
            <FieldType>SQLExceptionFactory</FieldType>
        </Field>
        <Field>
            <FieldName>msgutil_</FieldName>
            <FieldType>MessageUtil</FieldType>
        </Field>
        <Field>
            <FieldName>wrappedException_</FieldName>
            <FieldType>SQLException</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getMessageUtil</MethodName>
            <MethodComment>/** 
 * This routine provides singleton access to an instance of MessageUtil that is constructed for client messages.  It is recommended to use this singleton rather than create your own instance. The only time you need this instance is if you need to directly format an internationalized message string.  In most instances this is done for you when you invoke a SqlException constructor
 * @return a singleton instance of MessageUtil configured for clientmessages
 */
</MethodComment>
            <ReturnType>MessageUtil</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment>/** 
 * Create a SqlException.  This constructor is the "base" constructor; all other constructors (which take a ClientMessageId) delegate to this constructor
 * @param logwriter Can be null, but if provided, it is used to log this exception
 * @param msgid The message id for this message.  ClientMessageId is a simple type-safe wrapper for org.apache.derby.shared.common.reference.SQLState message id strings.
 * @param args The set of substitution arguments for the message.  The Java message formatter will substitute these arguments into the internationalized strings using the substitution ({0}, {1}, etc.) markers in the string. Any object can be passed, but if you want it to be readable, make sure toString() for the object returns something useful.
 * @param cause Can be null.  Indicates the cause of this exception.  If this is an instance of SqlException or java.sql.SQLException then the exception is chained into the nextException chain.  Otherwise it is chained using initCause().
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logwriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgid</ParamName>
                    <ParamType>ClientMessageId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgid</ParamName>
                    <ParamType>ClientMessageId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlcode</ParamName>
                    <ParamType>SqlCode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgid</ParamName>
                    <ParamType>ClientMessageId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlcode</ParamName>
                    <ParamType>SqlCode</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgid</ParamName>
                    <ParamType>ClientMessageId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cause</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logwriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>msgid</ParamName>
                    <ParamType>ClientMessageId</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment>/** 
 * Create an exception for an engine generated error.
 * @param logWriter object used for tracing
 * @param sqlca the SQLCA sent from the server
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlca</ParamName>
                    <ParamType>Sqlca</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment>/** 
 * Create one of the exceptions in an exception chain generated by the engine. This constructor calls itself recursively to create the rest of the exception chain if  {@code chain} is{@code true}.
 * @param sqlca the SQLCA sent from the server
 * @param number the message number for this exception (counting from 0)
 * @param chain if {@code true}, generate the rest of the exception chain recursively and link it to this exception
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sqlca</ParamName>
                    <ParamType>Sqlca</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>number</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>chain</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [nextMsg=number + 1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reason</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlState</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorCode</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>throwable</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reason</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sqlState</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>errorCode</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setThrowable;[throwable]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setThrowable</MethodName>
            <MethodComment>/** 
 * Set the cause of this exception based on its type. {@code SQLException}s and {@code SqlException}s are linked with  {@code setNextException()} and{@code initCause()}. All other exception types are linked with  {@code initCause()}.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>throwable</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SqlException</MethodName>
            <MethodComment>/** 
 * Wrap a SQLException in a SqlException.  This is used by internal routines so the don't have to throw SQLException, which, through the chain of  dependencies would force more and more internal routines to throw SQLException
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>wrapme</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSQLException</MethodName>
            <MethodComment>/** 
 * Convert this SqlException into a java.sql.SQLException
 */
</MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SQLException [sqle=exceptionFactory.getSQLException(getMessage(),getSQLState(),getErrorCode(),getArgs())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sqle;initCause;[this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setBatchPositionLabel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSqlca</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Sqlca</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getArgs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMessage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSQLState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getErrorCode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SqlException</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setNextException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nextException</ParamName>
                    <ParamType>SqlException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setNextException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nextException</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>javaException</MethodName>
            <MethodComment>/** 
 * Helper method to construct an exception which basically says that we encountered an underlying Java exception
 */
</MethodComment>
            <ReturnType>SqlException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>copyAsUnchainedSQLException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SqlException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ColumnTypeConversionException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>targetType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sourceType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>OutsideRangeForDataTypeException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>logWriter</ParamName>
                    <ParamType>LogWriter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>