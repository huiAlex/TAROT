<Class>
    <Id>1171</Id>
    <Package>org.osgi.framework</Package>
    <ClassName>FrameworkListener</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>EventListener</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FrameworkListener  /** 
 * A &lt;code&gt;FrameworkEvent&lt;/code&gt; listener. &lt;code&gt;FrameworkListener&lt;/code&gt; is a listener interface that may be implemented by a bundle developer. When a &lt;code&gt;FrameworkEvent&lt;/code&gt; is fired, it is asynchronously delivered to a &lt;code&gt;FrameworkListener&lt;/code&gt;. The Framework delivers &lt;code&gt;FrameworkEvent&lt;/code&gt; objects to a &lt;code&gt;FrameworkListener&lt;/code&gt; in order and must not concurrently call a &lt;code&gt;FrameworkListener&lt;/code&gt;. &lt;p&gt; A &lt;code&gt;FrameworkListener&lt;/code&gt; object is registered with the Framework using the  {@link BundleContext#addFrameworkListener} method.&lt;code&gt;FrameworkListener&lt;/code&gt; objects are called with a &lt;code&gt;FrameworkEvent&lt;/code&gt; objects when the Framework starts and when asynchronous errors occur.
 * @see FrameworkEvent
 * @NotThreadSafe
 * @version $Revision: 1.12 $
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>frameworkEvent</MethodName>
            <MethodComment>/** 
 * Receives notification of a general &lt;code&gt;FrameworkEvent&lt;/code&gt; object.
 * @param event The &lt;code&gt;FrameworkEvent&lt;/code&gt; object.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>event</ParamName>
                    <ParamType>FrameworkEvent</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>