<Class>
    <Id>293</Id>
    <Package>org.apache.derby.impl.sql.catalog</Package>
    <ClassName>SYSSEQUENCESRowFactory</ClassName>
    <SuperClass>CatalogRowFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SYSSEQUENCESRowFactory  /** 
 * Factory for creating a SYSSEQUENCES row. The contract of this table is this: if the CURRENTVALUE column is null, then the sequence is exhausted and no more values can be generated from it.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TABLENAME_STRING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_COLUMN_COUNT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_SEQUENCEID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_SEQUENCENAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_SCHEMAID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_SEQUENCEDATATYPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_CURRENT_VALUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_START_VALUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_MINIMUM_VALUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_MAXIMUM_VALUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_INCREMENT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_CYCLE_OPTION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>indexColumnPositions</FieldName>
            <FieldType>int[][]</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_INDEX1_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SYSSEQUENCES_INDEX2_ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>uniqueness</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>uuids</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SYSSEQUENCESRowFactory</MethodName>
            <MethodComment>/** 
 * Constructor
 * @param uuidf UUIDFactory
 * @param ef    ExecutionFactory
 * @param dvf   DataValueFactory
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>uuidf</ParamName>
                    <ParamType>UUIDFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ef</ParamName>
                    <ParamType>ExecutionFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dvf</ParamName>
                    <ParamType>DataValueFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initInfo;[SYSSEQUENCES_COLUMN_COUNT, TABLENAME_STRING, indexColumnPositions, uniqueness, uuids]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeRow</MethodName>
            <MethodComment>/** 
 * Make a SYSSEQUENCES row
 * @param td     a sequence descriptor
 * @param parent unused
 * @return Row suitable for inserting into SYSSEQUENCES.
 * @throws org.apache.derby.iapi.error.StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>ExecRow</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ExecRow [row]</InnerVar>
                <InnerVar>String [oidString=null]</InnerVar>
                <InnerVar>String [sequenceName=null]</InnerVar>
                <InnerVar>String [schemaIdString=null]</InnerVar>
                <InnerVar>TypeDescriptor [typeDesc=null]</InnerVar>
                <InnerVar>Long [currentValue=null]</InnerVar>
                <InnerVar>long [startValue=0]</InnerVar>
                <InnerVar>long [minimumValue=0]</InnerVar>
                <InnerVar>long [maximumValue=0]</InnerVar>
                <InnerVar>long [increment=0]</InnerVar>
                <InnerVar>boolean [canCycle=false]</InnerVar>
                <InnerVar>SQLLongint [curVal]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_SEQUENCEID, new SQLChar(oidString)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_SEQUENCENAME, new SQLVarchar(sequenceName)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_SCHEMAID, new SQLChar(schemaIdString)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_SEQUENCEDATATYPE, new UserType(typeDesc)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_CURRENT_VALUE, curVal]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_START_VALUE, new SQLLongint(startValue)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_MINIMUM_VALUE, new SQLLongint(minimumValue)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_MAXIMUM_VALUE, new SQLLongint(maximumValue)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_INCREMENT, new SQLLongint(increment)]</InnerMethodInvoke>
                <InnerMethodInvoke>row;setColumn;[SYSSEQUENCES_CYCLE_OPTION, new SQLChar(canCycle ? "Y" : "N")]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildDescriptor</MethodName>
            <MethodComment>/** 
 * Make an  Tuple Descriptor out of a SYSSEQUENCES row
 * @param row                   a SYSSEQUENCES row
 * @param parentTupleDescriptor unused
 * @param dd                    dataDictionary
 * @return a  descriptor equivalent to a SYSSEQUENCES row
 * @throws org.apache.derby.iapi.error.StandardException thrown on failure
 */
</MethodComment>
            <ReturnType>TupleDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>ExecRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>parentTupleDescriptor</ParamName>
                    <ParamType>TupleDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dd</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataValueDescriptor [col]</InnerVar>
                <InnerVar>SequenceDescriptor [descriptor]</InnerVar>
                <InnerVar>UUID [ouuid]</InnerVar>
                <InnerVar>String [sequenceName]</InnerVar>
                <InnerVar>UUID [suuid]</InnerVar>
                <InnerVar>Long [currentValue]</InnerVar>
                <InnerVar>long [startValue]</InnerVar>
                <InnerVar>long [minimumValue]</InnerVar>
                <InnerVar>long [maximumValue]</InnerVar>
                <InnerVar>long [increment]</InnerVar>
                <InnerVar>String [cycleOption]</InnerVar>
                <InnerVar>DataDescriptorGenerator [ddg=dd.getDataDescriptorGenerator()]</InnerVar>
                <InnerVar>String [oidString=col.getString()]</InnerVar>
                <InnerVar>String [schemaIdString=col.getString()]</InnerVar>
                <InnerVar>TypeDescriptor [catalogType=(TypeDescriptor)row.getColumn(SYSSEQUENCES_SEQUENCEDATATYPE).getObject()]</InnerVar>
                <InnerVar>DataTypeDescriptor [dataTypeServices=DataTypeDescriptor.getType(catalogType)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildColumnList</MethodName>
            <MethodComment>/** 
 * Builds a list of columns suitable for creating this Catalog.
 * @return array of SystemColumn suitable for making this catalog.
 */
</MethodComment>
            <ReturnType>SystemColumn[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>