<Class>
    <Id>217</Id>
    <Package>org.apache.derby.optional.lucene</Package>
    <ClassName>LuceneListIndexesVTI</ClassName>
    <SuperClass>StringColumnVTI</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LuceneListIndexesVTI  /** 
 * Provides a table interface to the Lucene indexes in this database. See org.apache.derby.optional.lucene.LuceneSupport.listIndexes.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>connection</FieldName>
            <FieldType>Connection</FieldType>
        </Field>
        <Field>
            <FieldName>indexes</FieldName>
            <FieldType>StorageFile[]</FieldType>
        </Field>
        <Field>
            <FieldName>row</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>schema</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>table</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>column</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>rowProperties</FieldName>
            <FieldType>Properties</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LuceneListIndexesVTI</MethodName>
            <MethodComment>/** 
 * Return a new LuceneListIndexesVTI.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StorageFactory [dir=LuceneSupport.getStorageFactory(connection)]</InnerVar>
                <InnerVar>StorageFile [luceneDir=dir.newStorageFile(Database.LUCENE_DIR)]</InnerVar>
                <InnerVar>ArrayList&lt;StorageFile&gt; [allIndexes=new ArrayList&lt;StorageFile&gt;()]</InnerVar>
                <InnerVar>StorageFile[] [schemas=listDirectories(dir,luceneDir)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>allIndexes;toArray;[indexes]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawColumn</MethodName>
            <MethodComment>/** 
 * columns: 1 == id 2 == schema 3 == table 4 == column name 5 == last modified
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>col</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readSchemaTableColumn;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTimestamp</MethodName>
            <MethodComment>/** 
 * Get the timestamp value of the 1-based column id 
 */
</MethodComment>
            <ReturnType>Timestamp</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>col</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSchemaTableColumn</MethodName>
            <MethodComment>/** 
 * Fill in the schema, table, and column names 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StorageFile [columnDir=indexes[row]]</InnerVar>
                <InnerVar>StorageFile [tableDir=columnDir.getParentDir()]</InnerVar>
                <InnerVar>StorageFile [schemaDir=tableDir.getParentDir()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProperty</MethodName>
            <MethodComment>/** 
 * get the string value of a property from the row properties 
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRowProperties</MethodName>
            <MethodComment>/** 
 * get the properties of the current row 
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>listDirectories</MethodName>
            <MethodComment>/** 
 * List files 
 */
</MethodComment>
            <ReturnType>StorageFile[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>storageFactory</ParamName>
                    <ParamType>StorageFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dir</ParamName>
                    <ParamType>StorageFile</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StorageFile[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ArrayList&lt;StorageFile&gt; [subdirectories=new ArrayList&lt;StorageFile&gt;()]</InnerVar>
                <InnerVar>String[] [fileNames=dir.list()]</InnerVar>
                <InnerVar>StorageFile[] [result=new StorageFile[subdirectories.size()]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>subdirectories;toArray;[result]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readIndexProperties</MethodName>
            <MethodComment>/** 
 * Read the index properties file 
 */
</MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>file</ParamName>
                    <ParamType>StorageFile</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Properties</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>