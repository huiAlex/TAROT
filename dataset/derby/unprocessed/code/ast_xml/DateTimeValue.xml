<Class>
    <Id>388</Id>
    <Package>org.apache.derby.client.am</Package>
    <ClassName>DateTimeValue</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DateTimeValue  /** 
 * This class represents a date or time value as it is represented in the database. In contrast to  {@code java.sql.Date},  {@code java.sql.Time} and{@code java.sql.Timestamp}, which are based on  {@code java.util.Date}, this class does &lt;b&gt;not&lt;/b&gt; represent the time as an offset from midnight, January 1, 1970 GMT. Instead, it holds each component (year, month, day, hour, minute, second, nanosecond) as it would have been represented in a given calendar. Since it does not hold information about the time zone for the time it represents, it does not point to a well-defined point in time without being used together with a  {@code java.util.Calendar} object.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>year</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>month</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>day</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>hours</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>minutes</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>seconds</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>nanos</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Construct a  {@code DateTimeValue} from a {@code java.util.Calendar}.
 * @param cal the calendar from which to get the values of the fields
 * @param nanoFraction the nano second fraction of a second (themilliseconds will be taken from  {@code cal}, so only the six least significant digits of this value are used)
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cal</ParamName>
                    <ParamType>Calendar</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nanoFraction</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [millis=cal.get(Calendar.MILLISECOND)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Create an instance from a  {@code java.sql.Timestamp} using the specified{@code java.util.Calendar}.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>date</ParamName>
                    <ParamType>Date</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cal</ParamName>
                    <ParamType>Calendar</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Create an instance from a  {@code java.sql.Time} using the specified{@code java.util.Calendar}.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>time</ParamName>
                    <ParamType>Time</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cal</ParamName>
                    <ParamType>Calendar</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Create an instance from a  {@code java.sql.Timestamp} using the specified{@code java.util.Calendar}.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ts</ParamName>
                    <ParamType>Timestamp</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cal</ParamName>
                    <ParamType>Calendar</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Create an instance from a  {@code java.sql.Date} using the defaultcalendar.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>date</ParamName>
                    <ParamType>Date</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Create an instance from a  {@code java.sql.Time} using the defaultcalendar.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>time</ParamName>
                    <ParamType>Time</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DateTimeValue</MethodName>
            <MethodComment>/** 
 * Create an instance from a  {@code java.sql.Timestamp} using the defaultcalendar.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ts</ParamName>
                    <ParamType>Timestamp</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initCalendar</MethodName>
            <MethodComment>/** 
 * Set the time of a calendar.
 * @param cal the calendar
 * @param date an object representing the new time of the calendar
 * @return the calendar (same as {@code cal})
 */
</MethodComment>
            <ReturnType>Calendar</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cal</ParamName>
                    <ParamType>Calendar</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>date</ParamName>
                    <ParamType>java.util.Date</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>cal;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>cal;setTime;[date]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getYear</MethodName>
            <MethodComment>/** 
 * Get the year component.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMonth</MethodName>
            <MethodComment>/** 
 * Get the month component. First month is 0 ( {@code Calendar.JANUARY}).
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDayOfMonth</MethodName>
            <MethodComment>/** 
 * Get day of month component. First day of the month is 1.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHours</MethodName>
            <MethodComment>/** 
 * Get hour of day component (24 hour clock).
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMinutes</MethodName>
            <MethodComment>/** 
 * Get minute component.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSeconds</MethodName>
            <MethodComment>/** 
 * Get second component.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNanos</MethodName>
            <MethodComment>/** 
 * Get nanosecond component.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>