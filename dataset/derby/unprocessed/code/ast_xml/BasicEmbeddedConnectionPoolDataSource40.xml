<Class>
    <Id>735</Id>
    <Package>org.apache.derby.jdbc</Package>
    <ClassName>BasicEmbeddedConnectionPoolDataSource40</ClassName>
    <SuperClass>BasicEmbeddedDataSource40</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>javax.sql.ConnectionPoolDataSource</SuperInterface>
        <SuperInterface>EmbeddedConnectionPoolDataSourceInterface</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BasicEmbeddedConnectionPoolDataSource40  /** 
 * This data source is suitable for an application using embedded Derby, running on Java 8 Compact Profile 2 or higher. &lt;p/&gt; BasicEmbeddedConnectionPoolDataSource40 is similar to EmbeddedConnectionPoolDataSource40 except it does not support JNDI naming, i.e. it does not implement  {@code javax.naming.Referenceable}.
 * @see EmbeddedConnectionPoolDataSource40
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BasicEmbeddedConnectionPoolDataSource40</MethodName>
            <MethodComment>/** 
 * No-argument constructor.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPooledConnection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PooledConnection</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPooledConnection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PooledConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>username</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createPooledConnection</MethodName>
            <MethodComment>/** 
 * Minion helper method. Create and return a pooled connection
 * @param user the user name used to authenticate the connection
 * @param password the user's password
 * @param requestPassword {@code false} if original call is from ano-argument constructor, otherwise  {@code true}
 * @return a connection to the database
 * @throws SQLException if a database-access error occurs
 */
</MethodComment>
            <ReturnType>PooledConnection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>requestPassword</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>