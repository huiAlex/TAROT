<Class>
    <Id>414</Id>
    <Package>org.apache.derbyTesting.unitTests.store</Package>
    <ClassName>T_SumForIntCol</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>SortObserver</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>testService</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>verbose</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>template</FieldName>
            <FieldType>T_AccessRow</FieldType>
        </Field>
        <Field>
            <FieldName>vector</FieldName>
            <FieldType>Vector</FieldType>
        </Field>
        <Field>
            <FieldName>vector</FieldName>
            <FieldType>DataValueDescriptor[]</FieldType>
        </Field>
        <Field>
            <FieldName>columnId</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getModuleToTestProtocolName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSortBufferSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buf_length</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>AccessController;doPrivileged;[new PrivilegedAction&lt;Void&gt;(){
  public Void run(){
    System.setProperty("derby.storage.sortBufferMax",buf_length);
    return null;
  }
}
]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>System;setProperty;["derby.storage.sortBufferMax", buf_length]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTests</MethodName>
            <MethodComment>/** 
 * @exception T_Fail test has failed
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [failcount=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>startParams;put;[Property.NO_AUTO_BOOT, Boolean.TRUE.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>startParams;put;[Property.DELETE_ON_CREATE, Boolean.TRUE.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(unitTestMain) succeeded"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runEachTest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>AccessFactory</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tail</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TransactionController [tc=null]</InnerVar>
                <InnerVar>int [failcount=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>tc;commit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>tc;destroy;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>T_Fail</ExceptionType>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortExample</MethodName>
            <MethodComment>/** 
 * This test is more of an example, with lots of comments to explain what's going on.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>T_AccessRow [row[]=new T_AccessRow[4]]</InnerVar>
                <InnerVar>Properties [implParameters=null]</InnerVar>
                <InnerVar>T_AccessRow [template=row[0]]</InnerVar>
                <InnerVar>ColumnOrdering [order[]=new ColumnOrdering[2]]</InnerVar>
                <InnerVar>boolean [alreadyInOrder=false]</InnerVar>
                <InnerVar>long [estimatedRows=10]</InnerVar>
                <InnerVar>int [estimatedRowSize=12]</InnerVar>
                <InnerVar>long [sortid=tc.createSort(implParameters,template.getRowArray(),order,new T_DuplicateEliminator(template),alreadyInOrder,estimatedRows,estimatedRowSize)]</InnerVar>
                <InnerVar>T_AccessRow [expectedRow[]=new T_AccessRow[3]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;REPORT;["(sortExample)"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortBufferCoverage</MethodName>
            <MethodComment>/** 
 * This test covers specific code paths in the external sort's sort buffer.  It really should live closer to the sort buffer since the effectiveness of this test is very very implementation dependent.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>T_AccessRow [row[]=new T_AccessRow[16]]</InnerVar>
                <InnerVar>Properties [implParameters=null]</InnerVar>
                <InnerVar>T_AccessRow [template=row[0]]</InnerVar>
                <InnerVar>ColumnOrdering [order[]=new ColumnOrdering[1]]</InnerVar>
                <InnerVar>boolean [alreadyInOrder=false]</InnerVar>
                <InnerVar>long [estimatedRows=20]</InnerVar>
                <InnerVar>int [estimatedRowSize=12]</InnerVar>
                <InnerVar>long [sortid=tc.createSort(implParameters,template.getRowArray(),order,new T_DummySortObserver(template),alreadyInOrder,estimatedRows,estimatedRowSize)]</InnerVar>
                <InnerVar>T_AccessRow [expectedRow[]=new T_AccessRow[16]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;REPORT;["(sortBufferCoverage)"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortBoundaries</MethodName>
            <MethodComment>/** 
 * Test a sorts with one or zero rows.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [failcount=0]</InnerVar>
                <InnerVar>long [sortid]</InnerVar>
                <InnerVar>Properties [implParameters]</InnerVar>
                <InnerVar>T_AccessRow [template]</InnerVar>
                <InnerVar>ColumnOrdering [order[]]</InnerVar>
                <InnerVar>boolean [alreadyInOrder]</InnerVar>
                <InnerVar>long [estimatedRows]</InnerVar>
                <InnerVar>int [estimatedRowSize]</InnerVar>
                <InnerVar>T_AccessRow [input[]]</InnerVar>
                <InnerVar>T_AccessRow [expected[]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;REPORT;["(sortBoundaries) Sorting no rows"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortBoundaries) Sorting no rows - \"already in order\""]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortBoundaries) Sorting a single row"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortBoundaries) Sorting a single row - \"already in order\""]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortBoundaries) Sorting a single row - \"eliminate duplicates\""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortAllDuplicates</MethodName>
            <MethodComment>/** 
 * Test a sort where all the rows are duplicates
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [failcount=0]</InnerVar>
                <InnerVar>long [sortid]</InnerVar>
                <InnerVar>Properties [implParameters]</InnerVar>
                <InnerVar>T_AccessRow [template]</InnerVar>
                <InnerVar>ColumnOrdering [order[]]</InnerVar>
                <InnerVar>boolean [alreadyInOrder]</InnerVar>
                <InnerVar>long [estimatedRows]</InnerVar>
                <InnerVar>int [estimatedRowSize]</InnerVar>
                <InnerVar>T_AccessRow [input[]]</InnerVar>
                <InnerVar>T_AccessRow [expected[]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;REPORT;["(sortAllDuplicates) no aggregation"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortAllDuplicates) eliminate duplicates"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortAllDuplicates) sum aggregate"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortDescending</MethodName>
            <MethodComment>/** 
 * Test a sort where we have some ascending and descending keys.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [failcount=0]</InnerVar>
                <InnerVar>long [sortid]</InnerVar>
                <InnerVar>Properties [implParameters]</InnerVar>
                <InnerVar>T_AccessRow [template]</InnerVar>
                <InnerVar>ColumnOrdering [order[]]</InnerVar>
                <InnerVar>boolean [alreadyInOrder]</InnerVar>
                <InnerVar>long [estimatedRows]</InnerVar>
                <InnerVar>int [estimatedRowSize]</InnerVar>
                <InnerVar>T_AccessRow [expected[]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;REPORT;["(sortDescending) no aggregation"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortDescending) eliminate duplicates"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;REPORT;["(sortDescending) descending/ascending - eliminate duplicates"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSortDescendingInput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T_AccessRow[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>T_AccessRow[] [input]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSort</MethodName>
            <MethodComment>/** 
 * Insert the given rows into the given sort, and check that the rows retrieved from the sort match the output rows.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tc</ParamName>
                    <ParamType>TransactionController</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>T_AccessRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outrow</ParamName>
                    <ParamType>T_AccessRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortid</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SortController [sort=tc.openSort(sortid)]</InnerVar>
                <InnerVar>SortInfo [sort_info=sort.getSortInfo()]</InnerVar>
                <InnerVar>Properties [sortprop=sort_info.getAllSortInfo(null)]</InnerVar>
                <InnerVar>String [sortType=sortprop.getProperty(MessageService.getTextMessage(SQLState.STORE_RTS_SORT_TYPE))]</InnerVar>
                <InnerVar>int [numRowsInput=Integer.parseInt(sortprop.getProperty(MessageService.getTextMessage(SQLState.STORE_RTS_NUM_ROWS_INPUT)))]</InnerVar>
                <InnerVar>int [numRowsOutput=Integer.parseInt(sortprop.getProperty(MessageService.getTextMessage(SQLState.STORE_RTS_NUM_ROWS_OUTPUT)))]</InnerVar>
                <InnerVar>String [external=MessageService.getTextMessage(SQLState.STORE_RTS_EXTERNAL)]</InnerVar>
                <InnerVar>String [internal=MessageService.getTextMessage(SQLState.STORE_RTS_INTERNAL)]</InnerVar>
                <InnerVar>ScanController [scan=tc.openSortScan(sortid,false)]</InnerVar>
                <InnerVar>boolean [mismatch=false]</InnerVar>
                <InnerVar>boolean [toofew=false]</InnerVar>
                <InnerVar>boolean [toomany=false]</InnerVar>
                <InnerVar>T_AccessRow [result=new T_AccessRow(3)]</InnerVar>
                <InnerVar>ScanInfo [scan_info=scan.getScanInfo()]</InnerVar>
                <InnerVar>Properties [prop=scan_info.getAllScanInfo(null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sort;completedInserts;[]</InnerMethodInvoke>
                <InnerMethodInvoke>scan;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>tc;dropSort;[sortid]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getContextService</MethodName>
            <MethodComment>/** 
 * Privileged lookup of the ContextService. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>ContextService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ContextService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createPersistentService</MethodName>
            <MethodComment>/** 
 * Privileged startup. Must be private so that user code can't call this entry point.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>factoryInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serviceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T_DummySortObserver</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>T_AccessRow</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>insertNonDuplicateKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>insertRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>insertDuplicateKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>insertRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>existingRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addToFreeList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectArray</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxFreeListSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getArrayClone</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [lastElement=vector.size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deferred</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deferrable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rememberDuplicate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T_DuplicateEliminator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>template</ParamName>
                    <ParamType>T_AccessRow</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>insertNonDuplicateKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>insertRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>insertDuplicateKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>insertRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>existingRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>T_SumForIntCol</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>columnId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>insertNonDuplicateKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>insertRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>insertDuplicateKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>insertRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>existingRow</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SQLInteger [increment=(SQLInteger)insertRow[columnId]]</InnerVar>
                <InnerVar>SQLInteger [sum=(SQLInteger)existingRow[columnId]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sum;plus;[sum, increment, sum]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addToFreeList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>objectArray</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxFreeListSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getArrayClone</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deferred</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>deferrable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rememberDuplicate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>DataValueDescriptor[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>