<Class>
    <Id>696</Id>
    <Package>org.apache.derbyTesting.functionTests.util</Package>
    <ClassName>Formatters</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>hexDigits</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>format</MethodName>
            <MethodComment>/** 
 * This method converts the non-ASCII characters in the input parameter to unicode escape sequences.
 * @param in    String to format
 * @return String containing unicode escape sequences for non-ASCII chars
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuffer [out=new StringBuffer(in.length())]</InnerVar>
                <InnerVar>char [hexValue[]=new char[4]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>repeatChar</MethodName>
            <MethodComment>/** 
 * repeatChar is used to create strings of varying lengths. called from various tests to test edge cases and such.
 * @param c             character to repeat
 * @param repeatCount   Number of times to repeat character
 * @return              String of repeatCount characters c
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>repeatCount</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>char [ch=c.charAt(0)]</InnerVar>
                <InnerVar>char[] [chArray=new char[repeatCount]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>padString</MethodName>
            <MethodComment>/** 
 * Pads out a string to the specified size
 * @param oldValue value to be padded
 * @param size     size of resulting string
 * @return oldValue padded with spaces to the specified size
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oldValue</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>size</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [newValue=oldValue]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>