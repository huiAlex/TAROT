<Class>
    <Id>718</Id>
    <Package>org.apache.derby.iapi.sql</Package>
    <ClassName>StatementUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StatementUtil  /** 
 * Utilities for dealing with statements.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TypeNames</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StatementUtil</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>typeName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeNumber</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [retval]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSchemaDescriptor</MethodName>
            <MethodComment>/** 
 * Get the descriptor for the named schema. If the schemaName parameter is NULL, it gets the descriptor for the current compilation schema.
 * @param schemaName The name of the schema we're interested in.If the name is NULL, get the descriptor for the current compilation schema.
 * @param raiseError True to raise an error if the schema does not exist,false to return null if the schema does not exist.
 * @return Valid SchemaDescriptor or null if raiseError is false and theschema does not exist. 
 * @throws StandardException Schema does not exist and raiseError is true.
 */
</MethodComment>
            <ReturnType>SchemaDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>schemaName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>raiseError</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dataDictionary</ParamName>
                    <ParamType>DataDictionary</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lcc</ParamName>
                    <ParamType>LanguageConnectionContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cc</ParamName>
                    <ParamType>CompilerContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SchemaDescriptor [sd=null]</InnerVar>
                <InnerVar>boolean [isCurrent=false]</InnerVar>
                <InnerVar>boolean [isCompilation=false]</InnerVar>
                <InnerVar>SchemaDescriptor [sdCatalog=dataDictionary.getSchemaDescriptor(schemaName,lcc.getTransactionCompile(),raiseError)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>