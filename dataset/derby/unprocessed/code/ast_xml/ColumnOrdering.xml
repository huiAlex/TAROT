<Class>
    <Id>743</Id>
    <Package>org.apache.derby.iapi.store.access</Package>
    <ClassName>ColumnOrdering</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ColumnOrdering  /** 
 * The column ordering interface defines a column that is to be ordered in a sort or index, and how it is to be ordered.  Column instances are compared by calling the compare(Orderable) method of Orderable.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getColumnId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIsAscending</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getIsNullsOrderedLow</MethodName>
            <MethodComment>/** 
 * Indicate whether NULL values should be ordered below non-NULL. This function returns TRUE if the user has specified, via the &lt;null ordering&gt; clause in the ORDER BY clause, that NULL values of this column should sort lower than non-NULL values.
 * @return whether nulls should sort low
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>