<Class>
    <Id>1002</Id>
    <Package>org.osgi.framework</Package>
    <ClassName>SynchronousBundleListener</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BundleListener</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SynchronousBundleListener  /** 
 * A synchronous &lt;code&gt;BundleEvent&lt;/code&gt; listener. &lt;code&gt;SynchronousBundleListener&lt;/code&gt; is a listener interface that may be implemented by a bundle developer. When a &lt;code&gt;BundleEvent&lt;/code&gt; is fired, it is synchronously delivered to a &lt;code&gt;SynchronousBundleListener&lt;/code&gt;. The Framework may deliver &lt;code&gt;BundleEvent&lt;/code&gt; objects to a &lt;code&gt;SynchronousBundleListener&lt;/code&gt; out of order and may concurrently call and/or reenter a &lt;code&gt;SynchronousBundleListener&lt;/code&gt;. &lt;p&gt; A &lt;code&gt;SynchronousBundleListener&lt;/code&gt; object is registered with the Framework using the  {@link BundleContext#addBundleListener} method.&lt;code&gt;SynchronousBundleListener&lt;/code&gt; objects are called with a &lt;code&gt;BundleEvent&lt;/code&gt; object when a bundle has been installed, resolved, starting, started, stopping, stopped, updated, unresolved, or uninstalled. &lt;p&gt; Unlike normal &lt;code&gt;BundleListener&lt;/code&gt; objects, &lt;code&gt;SynchronousBundleListener&lt;/code&gt;s are synchronously called during bundle lifecycle processing. The bundle lifecycle processing will not proceed until all &lt;code&gt;SynchronousBundleListener&lt;/code&gt;s have completed. &lt;code&gt;SynchronousBundleListener&lt;/code&gt; objects will be called prior to &lt;code&gt;BundleListener&lt;/code&gt; objects. &lt;p&gt; &lt;code&gt;AdminPermission[bundle,LISTENER]&lt;/code&gt; is required to add or remove a &lt;code&gt;SynchronousBundleListener&lt;/code&gt; object.
 * @since 1.1
 * @see BundleEvent
 * @ThreadSafe
 * @version $Revision: 1.15 $
 */
</ClassComment>
    <FieldList/>
    <MethodList/>
</Class>