<Class>
    <Id>331</Id>
    <Package>org.apache.derby.impl.store.raw.xact</Package>
    <ClassName>RowLocking2nohold</ClassName>
    <SuperClass>RowLocking2</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>RowLocking2nohold  /** 
 * A locking policy that implements row level locking with isolation degree 2, never holding read locks after they are granted. Exactly the same as RowLocking2, except that read locks are acquired using zeroDuration locks, which are immediately released by the lock manager after they are granted.
 * @see org.apache.derby.iapi.store.raw.LockingPolicy
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>RowLocking2nohold</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lf</ParamName>
                    <ParamType>LockFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>lockRecordForRead</MethodName>
            <MethodComment>/** 
 * Obtain lock on record being read. &lt;p&gt; Assumes that a table level IS has been acquired.  Will acquire a Shared or Update lock on the row, depending on the "forUpdate" parameter. &lt;p&gt; Read lock will be acquired using zeroDuration lock.
 * @param t             The transaction to associate the lock with.
 * @param record        The record to be locked.
 * @param waitForLock   Should lock request wait until granted?
 * @param forUpdate     Whether to open for read or write access.
 * @return true if the lock was granted, false if waitForLock was false and the lock could not be granted.
 * @exception StandardException  Standard exception policy.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>container_handle</ParamName>
                    <ParamType>ContainerHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>record</ParamName>
                    <ParamType>RecordHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>waitForLock</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forUpdate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unlockRecordAfterRead</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Transaction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>container_handle</ParamName>
                    <ParamType>ContainerHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>record</ParamName>
                    <ParamType>RecordHandle</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forUpdate</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row_qualified</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>