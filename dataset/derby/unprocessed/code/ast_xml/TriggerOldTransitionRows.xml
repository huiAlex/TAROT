<Class>
    <Id>295</Id>
    <Package>org.apache.derby.catalog</Package>
    <ClassName>TriggerOldTransitionRows</ClassName>
    <SuperClass>org.apache.derby.vti.UpdatableVTITemplate</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TriggerOldTransitionRows  /** 
 * Provides information about a set of rows before a trigger action changed them. &lt;p&gt; This class implements only JDBC 1.2, not JDBC 2.0.  You cannot compile this class with JDK1.2, since it implements only the JDBC 1.2 ResultSet interface and not the JDBC 2.0 ResultSet interface.  You can only use this class in a JDK 1.2 runtime  environment if no JDBC 2.0 calls are made against it.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>resultSet</FieldName>
            <FieldType>ResultSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TriggerOldTransitionRows</MethodName>
            <MethodComment>/** 
 * Construct a VTI on the trigger's old row set. The old row set is the before image of the rows that are changed by the trigger.  For a trigger on a delete, this is all the rows that are deleted.	 For a trigger on an update, this is the rows before they are updated.  For an insert, this throws an  exception.
 * @exception SQLException thrown if no trigger active
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initializeResultSet;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initializeResultSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ResultSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>TriggerExecutionContext [tec=Factory.getTriggerExecutionContext()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeQuery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ResultSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getResultSetConcurrency</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>resultSet;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>