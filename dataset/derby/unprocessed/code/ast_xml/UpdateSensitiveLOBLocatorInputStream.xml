<Class>
    <Id>379</Id>
    <Package>org.apache.derby.client.am</Package>
    <ClassName>UpdateSensitiveLOBLocatorInputStream</ClassName>
    <SuperClass>InputStream</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>UpdateSensitiveLOBLocatorInputStream  /** 
 * Super-class of the Update sensitive locator streams. Before a read operation if performed on the stream this stream verifies that the underlying LOB has not changed and if it has it recreates the specific streams. Since Locator streams are specific to Blob and Clob the sub-classes would take care of creating the appropriate streams.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>is</FieldName>
            <FieldType>BufferedInputStream</FieldType>
        </Field>
        <Field>
            <FieldName>con</FieldName>
            <FieldType>ClientConnection</FieldType>
        </Field>
        <Field>
            <FieldName>lob</FieldName>
            <FieldType>Lob</FieldType>
        </Field>
        <Field>
            <FieldName>updateCount</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>currentPos</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>length</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>UpdateSensitiveLOBLocatorInputStream</MethodName>
            <MethodComment>/** 
 * Initializes the InputStream, updateCount, currentPos and the connection to the appropriate values.
 * @param con connection to be used to read the{@code Lob} value from the server
 * @param lob {@code Lob} object which could be a{@code Blob} or a {@code Clob}.
 * @param is an {@code InputStream} that contains theappropriate locator stream instance.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>con</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lob</ParamName>
                    <ParamType>Lob</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lob;checkForLocatorValidity;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>UpdateSensitiveLOBLocatorInputStream</MethodName>
            <MethodComment>/** 
 * Initializes the InputStream, updateCount, currentPos, length and the connection to the appropriate values.
 * @param con connection to be used to read the{@code Lob} value from the server
 * @param lob {@code Lob} object which could be a{@code Blob} or a {@code Clob}.
 * @param is an {@code InputStream} that contains theappropriate locator stream instance.
 * @param pos the position from which the first read begins.
 * @param len the length in bytes of the partial value to beretrieved.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>con</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lob</ParamName>
                    <ParamType>Lob</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>InputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>len</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment>/** 
 * @see java.io.InputStream#read()
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [ret=is.read()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;identifyAndReplaceObseleteStream;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>read</MethodName>
            <MethodComment>/** 
 * @see java.io.InputStream#read(byte[],int,int)
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>b</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>off</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>len</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [ret=is.read(b,off,len)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;identifyAndReplaceObseleteStream;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>identifyAndReplaceObseleteStream</MethodName>
            <MethodComment>/** 
 * Verifies whether the current updateCount matches the updateCount of the LOB object and if it does not it recreates the stream.
 * @throws IOException If any exception occurs uponLocator stream creation.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>long [newUpdateCount]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reCreateStream</MethodName>
            <MethodComment>/** 
 * Abstract method that will be implemented by the underlying streams specific to Clob and Blob.
 */
</MethodComment>
            <ReturnType>InputStream</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>