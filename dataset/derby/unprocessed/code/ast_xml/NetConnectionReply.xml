<Class>
    <Id>2148</Id>
    <Package>org.apache.derby.client.net</Package>
    <ClassName>NetConnectionReply</ClassName>
    <SuperClass>Reply</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>ConnectionReplyInterface</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>msgutil_</FieldName>
            <FieldType>MessageUtil</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>NetConnectionReply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netAgent</ParamName>
                    <ParamType>NetAgent</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bufferSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readExchangeServerAttributes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseEXCSATreply;[(NetConnection)connection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;checkForChainBreakingException_;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readAccessSecurity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>securityMechanism</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseACCSECreply;[(NetConnection)connection, securityMechanism]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;checkForChainBreakingException_;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSecurityCheck</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseSECCHKreply;[(NetConnection)connection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;checkForChainBreakingException_;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readAccessDatabase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseACCRDBreply;[(NetConnection)connection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;checkForChainBreakingException_;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SqlException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readCommitSubstitute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseDummyEXCSATreply;[(NetConnection)connection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readLocalCommit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseRDBCMMreply;[connection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readLocalRollback</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startSameIdChainParse;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseRDBRLLBCKreply;[connection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;endOfSameIdChainData;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readLocalXAStart</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readLocalXACommit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readLocalXARollback</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaStartUnitOfWork</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaEndUnitOfWork</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaPrepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaCommit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaRollback</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaRecover</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readXaForget</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBCMMreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=parseTypdefsOrMgrlvlovrs()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseTypdefsOrMgrlvlovrs;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseENDUOWRM;[connection]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBRLLBCKreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=parseTypdefsOrMgrlvlovrs()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseTypdefsOrMgrlvlovrs;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseENDUOWRM;[connection]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseEXCSATreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseEXCSATRD;[netConnection]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseDummyEXCSATreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseDummyEXCSATRD;[netConnection]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseACCSECreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>securityMechanism</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseACCSECRD;[netConnection, securityMechanism]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSECCHKreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseSECCHKRM;[netConnection]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseACCRDBreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
                <InnerVar>NetSqlca [netSqlca=parseSQLCARD(null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseACCRDBRM;[netConnection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseInitialPBSD;[netConnection]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseTypdefsOrMgrlvlovrs;[]</InnerMethodInvoke>
                <InnerMethodInvoke>netConnection;completeSqlca;[netSqlca]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTypdefsOrMgrlvlovrs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [targetTypedefCloned=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCommitError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRollbackError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseExchangeServerAttributesError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseAccessSecurityError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSecurityCheckError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseAccessRdbError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCommonError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>peekCP</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseAbnormalEndUow</MethodName>
            <MethodComment>/** 
 * Perform necessary actions for parsing of a ABNUOWRM message.
 * @param connection an implementation of the ConnectionCallbackInterface
 * @return an NetSqlca object obtained from parsing the ABNUOWRM
 * @throws DisconnectException
 */
</MethodComment>
            <ReturnType>NetSqlca</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>uwl</ParamName>
                    <ParamType>UnitOfWorkListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>NetSqlca [netSqlca=parseSQLCARD(null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseABNUOWRM;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseAbnormalEndUow</MethodName>
            <MethodComment>/** 
 * Perform necessary actions for parsing of a ABNUOWRM message.
 * @param s an implementation of the StatementCallbackInterface
 * @return an NetSqlca object obtained from parsing the ABNUOWRM
 * @throws DisconnectException
 */
</MethodComment>
            <ReturnType>NetSqlca</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>StatementCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseAbnormalEndUow</MethodName>
            <MethodComment>/** 
 * Perform necessary actions for parsing of a ABNUOWRM message.
 * @param r an implementation of the ResultsetCallbackInterface
 * @return an NetSqlca object obtained from parsing the ABNUOWRM
 * @throws DisconnectException
 */
</MethodComment>
            <ReturnType>NetSqlca</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>r</ParamName>
                    <ParamType>ResultSetCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRdbAccessFailed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>NetSqlca [netSqlca=parseSQLCARD(null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseRDBAFLRM;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSECCHKRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [secchkcdReceived=false]</InnerVar>
                <InnerVar>int [secchkcd=CodePoint.SECCHKCD_00]</InnerVar>
                <InnerVar>boolean [sectknReceived=false]</InnerVar>
                <InnerVar>byte[] [sectkn=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SECCHKRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, secchkcdReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netConnection;securityCheckComplete;[svrcod, secchkcd]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseACCRDBRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [prdidReceived=false]</InnerVar>
                <InnerVar>String [prdid=null]</InnerVar>
                <InnerVar>boolean [typdefnamReceived=false]</InnerVar>
                <InnerVar>boolean [typdefovrReceived=false]</InnerVar>
                <InnerVar>boolean [rdbinttknReceived=false]</InnerVar>
                <InnerVar>boolean [crrtknReceived=false]</InnerVar>
                <InnerVar>byte[] [crrtkn=null]</InnerVar>
                <InnerVar>boolean [usridReceived=false]</InnerVar>
                <InnerVar>String [usrid=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.ACCRDBRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, prdidReceived, typdefnamReceived, typdefovrReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netConnection;rdbAccessed;[svrcod, prdid, crrtknReceived, crrtkn]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseENDUOWRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [uowdspReceived=false]</InnerVar>
                <InnerVar>int [uowdsp=0]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.ENDUOWRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, uowdspReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCMDCHKRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
                <InnerVar>NetSqlca [netSqlca=parseSQLCARD(null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CMDCHKRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_.netConnection_;completeSqlca;[netSqlca]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),new SqlException(agent_.logWriter_,netSqlca),msgutil_.getTextMessage(MessageId.CONN_DRDA_CMDCHKRM))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBNACRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.RDBNACRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, rdbnamReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),msgutil_.getTextMessage(MessageId.CONN_DRDA_RDBNACRM))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBNFNRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.RDBNFNRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, rdbnamReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.NET_DATABASE_NOT_FOUND),netConnection.databaseName_)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBATHRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.RDBATHRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, rdbnamReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;accumulateReadException;[new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.NET_CONNECT_AUTH_FAILED),msgutil_.getTextMessage(MessageId.CONN_USER_NOT_AUTHORIZED_TO_DB))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSYNTAXRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [synerrcdReceived=false]</InnerVar>
                <InnerVar>int [synerrcd=0]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>boolean [codpntReceived=false]</InnerVar>
                <InnerVar>int [codpnt=0]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SYNTAXRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, synerrcdReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doSyntaxrmSemantics;[codpnt]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBACCRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.RDBACCRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, rdbnamReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),msgutil_.getTextMessage(MessageId.CONN_DRDA_RDBACCRM))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBAFLRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.RDBAFLRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, rdbnamReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseVALNSPRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>boolean [codpntReceived=false]</InnerVar>
                <InnerVar>int [codpnt=0]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.VALNSPRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, codpntReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doValnsprmSemantics;[codpnt, "\"\""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePRCCNVRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>boolean [prccnvcdReceived=false]</InnerVar>
                <InnerVar>int [prccnvcd=0]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.PRCCNVRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, prccnvcdReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doPrccnvrmSemantics;[CodePoint.PRCCNVRM]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseOBJNSPRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>boolean [codpntReceived=false]</InnerVar>
                <InnerVar>int [codpnt=0]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.OBJNSPRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, codpntReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doObjnsprmSemantics;[codpnt]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMGRLVLRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [mgrlvllsReceived=false]</InnerVar>
                <InnerVar>int[] [managerCodePoint=null]</InnerVar>
                <InnerVar>int[] [managerLevel=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.MGRLVLRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, mgrlvllsReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>null;doMgrlvlrmSemantics;[managerCodePoint, managerLevel]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCMDNSPRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>String [rdbnam=null]</InnerVar>
                <InnerVar>boolean [codpntReceived=false]</InnerVar>
                <InnerVar>int [codpnt=0]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CMDNSPRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, codpntReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_DDM_COMMAND_NOT_SUPPORTED),Integer.toHexString(codpnt))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseABNUOWRM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [svrcodReceived=false]</InnerVar>
                <InnerVar>int [svrcod=CodePoint.SVRCOD_INFO]</InnerVar>
                <InnerVar>boolean [rdbnamReceived=false]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.ABNUOWRM]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[svrcodReceived, rdbnamReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_;setSvrcod;[svrcod]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseEXCSATRD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [extnamReceived=false]</InnerVar>
                <InnerVar>boolean [mgrlvllsReceived=false]</InnerVar>
                <InnerVar>boolean [srvclsnmReceived=false]</InnerVar>
                <InnerVar>String [srvclsnm=null]</InnerVar>
                <InnerVar>boolean [srvnamReceived=false]</InnerVar>
                <InnerVar>boolean [srvrlslvReceived=false]</InnerVar>
                <InnerVar>String [srvrlslv=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.EXCSATRD]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>netConnection;setServerAttributeData;[srvclsnm, srvrlslv]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseDummyEXCSATRD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [extnamReceived=false]</InnerVar>
                <InnerVar>boolean [mgrlvllsReceived=false]</InnerVar>
                <InnerVar>boolean [srvclsnmReceived=false]</InnerVar>
                <InnerVar>String [srvclsnm=null]</InnerVar>
                <InnerVar>boolean [srvnamReceived=false]</InnerVar>
                <InnerVar>String [srvnam=null]</InnerVar>
                <InnerVar>boolean [srvrlslvReceived=false]</InnerVar>
                <InnerVar>String [srvrlslv=null]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.EXCSATRD]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseACCSECRD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>securityMechanism</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [secmecReceived=false]</InnerVar>
                <InnerVar>int[] [secmecList=null]</InnerVar>
                <InnerVar>boolean [sectknReceived=false]</InnerVar>
                <InnerVar>byte[] [sectkn=null]</InnerVar>
                <InnerVar>boolean [secchkcdReceived=false]</InnerVar>
                <InnerVar>int [secchkcd=0]</InnerVar>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.ACCSECRD]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkRequiredObjects;[secmecReceived]</InnerMethodInvoke>
                <InnerMethodInvoke>netConnection;setAccessSecurityData;[secchkcd, securityMechanism, secmecList, sectknReceived, sectkn]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTYPDEFNAM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.TYPDEFNAM]</InnerMethodInvoke>
                <InnerMethodInvoke>netAgent_.targetTypdef_;setTypdefnam;[readString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseTYPDEFOVR</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.TYPDEFOVR]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pushLengthOnCollectionStack;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;popCollectionStack;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSYNCCRD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseXARETVAL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSYNCTYPE</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSYNCCTLreply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ConnectionCallbackInterface</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSYNCCTLError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>peekCP</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMGRLVLLS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netConnection</ParamName>
                    <ParamType>NetConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [managerListLength=getDdmLength()]</InnerVar>
                <InnerVar>int [managerCount=managerListLength / 4]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.MGRLVLLS]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseEXTNAM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.EXTNAM]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSRVCLSNM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SRVCLSNM]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSRVNAM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SRVNAM]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSRVRLSLV</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SRVRLSLV]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseMGRLVLN</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSECMEC</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SECMEC]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSECTKN</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>skip</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SECTKN]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSECCHKCD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [secchkcd=readUnsignedByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SECCHKCD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePRDID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>skip</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.PRDID]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseUSRID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>skip</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.USRID]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCODPNTDR</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCRRTKN</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>skip</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CRRTKN]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseUOWDSP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [uowdsp=readUnsignedByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.UOWDSP]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseRDBNAM</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>skip</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.RDBNAM]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseXIDCNT</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.XIDCNT]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseXID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Xid</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseIndoubtList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Xid</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSYNERRCD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [synerrcd=readUnsignedByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SYNERRCD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCODPNT</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CODPNT]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePRCCNVCD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [prccnvcd=readUnsignedByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.PRCCNVCD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCCSIDSBC</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CCSIDSBC]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCCSIDMBC</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CCSIDMBC]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseCCSIDDBC</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.CCSIDDBC]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSVRCOD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>minSvrcod</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxSvrcod</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [svrcod=readUnsignedShort()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SVRCOD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseFastSVRCOD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>minSvrcod</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxSvrcod</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [svrcod=readFastUnsignedShort()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;matchCodePoint;[CodePoint.SVRCOD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLCARD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NetSqlca</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [ddmLength=getDdmLength()]</InnerVar>
                <InnerVar>NetSqlca [netSqlca=parseSQLCARDrow(rowsetSqlca)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.SQLCARD]</InnerMethodInvoke>
                <InnerMethodInvoke>null;ensureBLayerDataInBuffer;[ddmLength]</InnerMethodInvoke>
                <InnerMethodInvoke>null;adjustLengths;[getDdmLength()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLCARDrow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NetSqlca</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLNUMROW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseFastSQLNUMROW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLNUMGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseFastSQLNUMGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLCAGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NetSqlca</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [sqlcode=readFastInt()]</InnerVar>
                <InnerVar>byte[] [sqlstate=readFastBytes(5)]</InnerVar>
                <InnerVar>byte[] [sqlerrproc=readFastBytes(8)]</InnerVar>
                <InnerVar>NetSqlca [netSqlca=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLCAXGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>netSqlca</ParamName>
                    <ParamType>NetSqlca</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int[] [sqlerrd=new int[NetSqlca.SQL_ERR_LENGTH]]</InnerVar>
                <InnerVar>byte[] [sqlwarn=readFastBytes(11)]</InnerVar>
                <InnerVar>int [sqlerrmcCcsid]</InnerVar>
                <InnerVar>byte[] [sqlerrmc=readFastLDBytes()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;readFastIntArray;[sqlerrd]</InnerMethodInvoke>
                <InnerMethodInvoke>netSqlca;setSqlerrd;[sqlerrd]</InnerMethodInvoke>
                <InnerMethodInvoke>netSqlca;setSqlwarnBytes;[sqlwarn]</InnerMethodInvoke>
                <InnerMethodInvoke>netSqlca;setSqlerrmcBytes;[sqlerrmc]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDIAGGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [row_count=parseSQLDIAGSTT(rowsetSqlca)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseSQLDIAGCI;[rowsetSqlca]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseSQLDIAGCN;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseFastVCS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkAndGetReceivedFlag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receivedFlag</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRequiredObjects</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receivedFlag</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRequiredObjects</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receivedFlag</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receivedFlag2</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRequiredObjects</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receivedFlag</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receivedFlag2</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receivedFlag3</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkRequiredObjects</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>receivedFlag</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receivedFlag2</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receivedFlag3</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>receivedFlag4</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doObjnsprmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codePoint</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_DDM_OBJECT_NOT_SUPPORTED),Integer.toHexString(codePoint))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doPrmnsprmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codePoint</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_DDM_PARAM_NOT_SUPPORTED),Integer.toHexString(codePoint))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doValnsprmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codePoint</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doValnsprmSemantics;[codePoint, Integer.toString(value)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doValnsprmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codePoint</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_DDM_PARAMVAL_NOT_SUPPORTED),Integer.toHexString(codePoint))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doDtamchrmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),msgutil_.getTextMessage(MessageId.CONN_DRDA_DTARMCHRM))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doMgrlvlrmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>manager</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_MGRLVLRM),manager,level)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doMgrlvlrmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>manager</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doMgrlvlrmSemantics;["0x" + Integer.toHexString(manager), "0x" + Integer.toHexString(level)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doMgrlvlrmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nameList</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>levelList</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [managerNames=new StringBuilder(100)]</InnerVar>
                <InnerVar>StringBuilder [managerLevels=new StringBuilder(100)]</InnerVar>
                <InnerVar>int [count=nameList.length]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doMgrlvlrmSemantics;[managerNames.toString(), managerLevels.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doPrccnvrmSemantics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conversationProtocolErrorCode</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>agent_;accumulateChainBreakingReadExceptionAndThrow;[new DisconnectException(agent_,new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),msgutil_.getTextMessage(MessageId.CONN_DRDA_PRCCNVRM,Integer.toHexString(conversationProtocolErrorCode)))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDCTOKS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [num=parseFastSQLNUMROW()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDIAGCI</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [num=parseFastSQLNUMROW()]</InnerVar>
                <InnerVar>int [lastRow=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;resetRowsetSqlca;[rowsetSqlca, lastRow + 1]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDIAGCN</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [num=parseFastSQLNUMROW()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLCNROW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseSQLCNGRP;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDCROW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lastRow</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLTOKROW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseSQLTOKGRP;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLTOKGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDIAGSTT</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [sqldsFcod=readFastInt()]</InnerVar>
                <InnerVar>int [sqldsCost=readFastInt()]</InnerVar>
                <InnerVar>int [sqldsLrow=readFastInt()]</InnerVar>
                <InnerVar>long [sqldsRowc=readFastLong()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;skipFastBytes;[16]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastBytes;[24]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLCNGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [sqlcnRDB=parseFastVCS()]</InnerVar>
                <InnerVar>String [sqlcnClass=parseFastVCS()]</InnerVar>
                <InnerVar>String [sqlcnAuthid=parseFastVCS()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;skipBytes;[18]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDCGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lastRow</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [sqldcCode=readFastInt()]</InnerVar>
                <InnerVar>String [sqldcState=readFastString(5,Typdef.UTF8ENCODING)]</InnerVar>
                <InnerVar>int [sqldcReason=readFastInt()]</InnerVar>
                <InnerVar>int [sqldcLinen=readFastInt()]</InnerVar>
                <InnerVar>int [sqldcRown=(int)readFastLong()]</InnerVar>
                <InnerVar>String [sqldcRdb=parseFastVCS()]</InnerVar>
                <InnerVar>String [sqldcMsg=parseFastNVCMorNVCS()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;skipFastBytes;[47]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseSQLDCTOKS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseSQLDCXGRP;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseSQLDCXGRP</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [sqldcxCrdb=parseFastVCS()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseFastVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;parseFastVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;skipFastNVCMorNVCS;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseFastNVCMorNVCS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [stringToBeSet=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>skipFastNVCMorNVCS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetRowsetSqlca</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rowsetSqlca</ParamName>
                    <ParamType>Sqlca[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>row</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [count=((rowsetSqlca == null) ? 0 : rowsetSqlca.length)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parseInitialPBSD</MethodName>
            <MethodComment>/** 
 * Parse the initial PBSD - PiggyBackedSessionData code point. &lt;p&gt; If sent by the server, it contains a PBSD_ISO code point followed by a byte representing the JDBC isolation level, and a PBSD_SCHEMA code point followed by the name of the current schema as an UTF-8 String.
 * @throws org.apache.derby.client.am.DisconnectException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>connection</ParamName>
                    <ParamType>ClientConnection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.PBSD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parsePBSD</MethodName>
            <MethodComment>/** 
 * Parse a PBSD - PiggyBackedSessionData code point. Can contain one or both of, a PBSD_ISO code point followed by a byte representing the jdbc isolation level, and a PBSD_SCHEMA code point followed by the name of the current schema as an UTF-8 String.
 * @throws org.apache.derby.client.am.DisconnectException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [peekCP=peekCodePoint()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;parseLengthAndMatchCodePoint;[CodePoint.PBSD]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DisconnectException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>