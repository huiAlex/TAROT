<Class>
    <Id>1466</Id>
    <Package>org.apache.derby.catalog</Package>
    <ClassName>SequencePreallocator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SequencePreallocator  /** 
 * &lt;p&gt; Logic to determine how many values to pre-allocate for a sequence. By default, Derby boosts concurrency by pre-allocating ranges of numbers for sequences. During orderly database shutdown, the unused numbers are reclaimed so that shutdown will not create holes in the sequences.  However, holes may appear if the application fails to shut down its databases before the JVM exits. &lt;/p&gt; &lt;p&gt; Logic in this class is called every time Derby needs to pre-allocate a new range of sequence values. Users can override Derby's default behavior by writing their own implementation of this interface and then setting the following Derby property: &lt;/p&gt; &lt;pre&gt; -Dderby.language.sequence.preallocator=com.acme.MySequencePreallocator &lt;/pre&gt; &lt;p&gt; Classes which implement this interface must also provide a public 0-arg constructor so that Derby can instantiate them. Derby will instantiate a SequencePreallocator for every sequence. &lt;/p&gt;
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>nextRangeSize</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; This method returns the size of the next pre-allocated range for the specified sequence. Names are case-sensitive, as specified in CREATE SEQUENCE and CREATE TABLE statements. &lt;/p&gt;
 * @param schemaName Name of schema holding the sequence.
 * @param sequenceName Specific name of the sequence.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>schemaName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sequenceName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>