<Class>
    <Id>904</Id>
    <Package>org.apache.derby.impl.store.access.btree</Package>
    <ClassName>D_BTreeController</ClassName>
    <SuperClass>DiagnosticableGeneric</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>num_pages</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>num_overflow_pgs</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>num_entries</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>num_deleted</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>max_pageno</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>num_free_bytes</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>num_res_bytes</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>num_overflow_rows</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>num_rowsize_bytes</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>num_slottab_bytes</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>min_rowsize_bytes</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>max_rowsize_bytes</FieldName>
            <FieldType>long</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>diag_page</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>open_btree</ParamName>
                    <ParamType>OpenBTree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>control_row</ParamName>
                    <ParamType>ControlRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level_info</ParamName>
                    <ParamType>LevelInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LevelInfo [li=level_info[control_row.getLevel()]]</InnerVar>
                <InnerVar>Page [page=control_row.page]</InnerVar>
                <InnerVar>int [free_bytes=Integer.parseInt(prop.getProperty(Page.DIAG_BYTES_FREE))]</InnerVar>
                <InnerVar>int [res_bytes=Integer.parseInt(prop.getProperty(Page.DIAG_BYTES_RESERVED))]</InnerVar>
                <InnerVar>int [overflow=Integer.parseInt(prop.getProperty(Page.DIAG_NUMOVERFLOWED))]</InnerVar>
                <InnerVar>int [rowsize=Integer.parseInt(prop.getProperty(Page.DIAG_ROWSIZE))]</InnerVar>
                <InnerVar>int [slottable_size=Integer.parseInt(prop.getProperty(Page.DIAG_SLOTTABLE_SIZE))]</InnerVar>
                <InnerVar>int [min_rowsize=Integer.parseInt(prop.getProperty(Page.DIAG_MINROWSIZE))]</InnerVar>
                <InnerVar>int [max_rowsize=Integer.parseInt(prop.getProperty(Page.DIAG_MAXROWSIZE))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>DiagnosticUtil.findDiagnostic(page);diag_detail;[prop]</InnerMethodInvoke>
                <InnerMethodInvoke>DiagnosticUtil.findDiagnostic(page);diag_detail;[prop]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diag_level</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>open_btree</ParamName>
                    <ParamType>OpenBTree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>control_row</ParamName>
                    <ParamType>ControlRow</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level_info</ParamName>
                    <ParamType>LevelInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ControlRow [child=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;diag_page;[open_btree, control_row, prop, level_info]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>out_summary</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hdr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ratio</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ratio_desc</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [double_str="" + ratio]</InnerVar>
                <InnerVar>String [short_str=double_str.substring(0,Math.min(double_str.lastIndexOf(".") + 3,double_str.length()))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diag_onelevel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>li</ParamName>
                    <ParamType>LevelInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [ret_string=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diag_tabulate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level_info</ParamName>
                    <ParamType>LevelInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [ret_string=""]</InnerVar>
                <InnerVar>LevelInfo [total=new LevelInfo()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>olddiag_tabulate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>level_info</ParamName>
                    <ParamType>LevelInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [ret_string=""]</InnerVar>
                <InnerVar>long [total_pages=0]</InnerVar>
                <InnerVar>long [total_res=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>obj</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diag</MethodName>
            <MethodComment>/** 
 * Default implementation of diagnostic on the object. &lt;p&gt; This routine returns a string with whatever diagnostic information you would like to provide about this object. &lt;p&gt; This routine returns a summary table of information about pages in each level of the btree.  It tells the height of the tree, the  average free and reserved bytes per level, and the page size. &lt;p&gt;
 * @return A string with diagnostic information about the object.
 * @exception StandardException  Standard Derby exception policy
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>OpenBTree [open_btree=(OpenBTree)this.diag_object]</InnerVar>
                <InnerVar>ControlRow [root=null]</InnerVar>
                <InnerVar>int [tree_height]</InnerVar>
                <InnerVar>LevelInfo [level_info[]=null]</InnerVar>
                <InnerVar>String [diag_info=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>