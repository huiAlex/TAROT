<Class>
    <Id>508</Id>
    <Package>org.apache.derby.impl.services.monitor</Package>
    <ClassName>TopService</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TopService  /** 
 * A description of an instance of a module.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>key</FieldName>
            <FieldType>ProtocolKey</FieldType>
        </Field>
        <Field>
            <FieldName>topModule</FieldName>
            <FieldType>ModuleInstance</FieldType>
        </Field>
        <Field>
            <FieldName>protocolTable</FieldName>
            <FieldType>Hashtable</FieldType>
        </Field>
        <Field>
            <FieldName>protocolTable</FieldName>
            <FieldType>ProtocolKey</FieldType>
        </Field>
        <Field>
            <FieldName>moduleInstances</FieldName>
            <FieldType>Vector</FieldType>
        </Field>
        <Field>
            <FieldName>moduleInstances</FieldName>
            <FieldType>ModuleInstance</FieldType>
        </Field>
        <Field>
            <FieldName>monitor</FieldName>
            <FieldType>BaseMonitor</FieldType>
        </Field>
        <Field>
            <FieldName>inShutdown</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>serviceType</FieldName>
            <FieldType>PersistentService</FieldType>
        </Field>
        <Field>
            <FieldName>serviceLocale</FieldName>
            <FieldType>Locale</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TopService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>monitor</ParamName>
                    <ParamType>BaseMonitor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TopService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>monitor</ParamName>
                    <ParamType>BaseMonitor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>ProtocolKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serviceType</ParamName>
                    <ParamType>PersistentService</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serviceLocale</ParamName>
                    <ParamType>Locale</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTopModule</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPotentialService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>otherKey</ParamName>
                    <ParamType>ProtocolKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [otherCanonicalName]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isActiveService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isActiveService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>otherKey</ParamName>
                    <ParamType>ProtocolKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findModule</MethodName>
            <MethodComment>/** 
 * Find an module in the protocol table that supports the required protocol name combination and can handle the properties. Returns the instance of the module or null if one does not exist in the protocol table.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>ProtocolKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>findOnly</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ModuleInstance [module=protocolTable.get(key)]</InnerVar>
                <InnerVar>Object [instance=module.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>findModuleInstance</MethodName>
            <MethodComment>/** 
 * Find a  {@code ModuleInstance} object whose {@code getInstance()} methodreturns the object specified by the  {@code instance} parameter.
 * @param instance the instance to look for
 * @return a {@code ModuleInstance} object, or {@code null} if no matchwas found
 */
</MethodComment>
            <ReturnType>ModuleInstance</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootModule</MethodName>
            <MethodComment>/** 
 * Boot a module, performs three steps. &lt;OL&gt; &lt;LI&gt; Look for an existing module in the protocol table &lt;LI&gt; Look for a module in the implementation table that handles this protocol &lt;LI&gt; Create an instance that handles this protocol. &lt;/OL&gt;
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>create</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>service</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>ProtocolKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>properties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [instance=findModule(key,false,properties)]</InnerVar>
                <InnerVar>ModuleInstance [module=new ModuleInstance(instance,key.getIdentifier(),service,topModule == null ? (Object)null : topModule.getInstance())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>moduleInstances;add;[module]</InnerMethodInvoke>
                <InnerMethodInvoke>module;setBooted;[]</InnerMethodInvoke>
                <InnerMethodInvoke>TopService;stop;[instance]</InnerMethodInvoke>
                <InnerMethodInvoke>moduleInstances;remove;[module]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shutdown</MethodName>
            <MethodComment>/** 
 * If the service is already beign shutdown we return false.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addToProtocol</MethodName>
            <MethodComment>/** 
 * Add a running module into the protocol hash table. Return true if the module was added successfully, false if it couldn't be added. In the latter case the module should be shutdown if its reference count is 0.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>ProtocolKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>module</ParamName>
                    <ParamType>ModuleInstance</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [identifier=module.getIdentifier()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inService</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ProtocolKey</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServiceType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PersistentService</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>instance</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>