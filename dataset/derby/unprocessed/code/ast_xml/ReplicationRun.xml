<Class>
    <Id>242</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.replicationTests</Package>
    <ClassName>ReplicationRun</ClassName>
    <SuperClass>BaseTestCase</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ReplicationRun  /** 
 * Framework to run replication tests. Subclass to create specific tests as  in ReplicationRun_Local and ReplicationRun_Distributed.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>REPLICATIONTEST_PROPFILE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REPLICATION_MASTER_TIMED_OUT</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REPLICATION_SLAVE_STARTED_OK</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REPLICATION_DB_NOT_BOOTED</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>SLAVE_OPERATION_DENIED_WHILE_CONNECTED</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>REPLICATION_SLAVE_SHUTDOWN_OK</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testUser</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>userDir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>userHome</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>dataEncryption</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>masterServerHost</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>masterServerPort</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>slaveServerHost</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>slaveServerPort</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>testClientHost</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>slaveReplPort</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>masterDatabasePath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>slaveDatabasePath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>replicatedDb</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>bootLoad</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>freezeDB</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>unFreezeDB</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>junitTest</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>runUnReplicated</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>simpleLoad</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>simpleLoadTuples</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>tuplesToInsertPerf</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>commitFreq</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>masterDbSubPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>slaveDbSubPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>replicationTest</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>replicationVerify</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>THREADS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MINUTES</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>sqlLoadInit</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>networkServerControl</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>specialTestingJar</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>jvmVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>masterJvmVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>slaveJvmVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>derbyVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>derbyMasterVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>derbySlaveVersion</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>junit_jar</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>test_jars</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>FS</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PS</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>showSysinfo</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>sleepTime</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>DRIVER_CLASS_NAME</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DB_PROTOCOL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ALL_INTERFACES</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LF</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>remoteShell</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>util</FieldName>
            <FieldType>Utils</FieldType>
        </Field>
        <Field>
            <FieldName>state</FieldName>
            <FieldType>State</FieldType>
        </Field>
        <Field>
            <FieldName>localEnv</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>derbyProperties</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>classPath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>masterConn</FieldName>
            <FieldType>Connection</FieldType>
        </Field>
        <Field>
            <FieldName>slaveConn</FieldName>
            <FieldType>Connection</FieldType>
        </Field>
        <Field>
            <FieldName>startSlaveException</FieldName>
            <FieldType>Exception</FieldType>
        </Field>
        <Field>
            <FieldName>helperThreads</FieldName>
            <FieldType>ArrayList</FieldType>
        </Field>
        <Field>
            <FieldName>helperThreads</FieldName>
            <FieldType>Thread</FieldType>
        </Field>
        <Field>
            <FieldName>db_uid</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>db_passwd</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedMasterServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedMasterServerReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedSlaveServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedSlaveServerReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedMaster</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedMasterReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreInitSlave</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreInitSlaveReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedSlave</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStartedSlaveReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPostStartedMasterAndSlave</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPostStartedMasterAndSlaveReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedMaster</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedMasterReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedMasterServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedMasterServerReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedSlave</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedSlaveReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedSlaveServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPreStoppedSlaveServerReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPostStoppedSlave</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPostStoppedSlaveReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>testPostStoppedSlaveServer</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>testPostStoppedSlaveServerReturn</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>load</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>database</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>existingDB</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>clientHost</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>masterPreRepl</FieldName>
            <FieldType>Load</FieldType>
        </Field>
        <Field>
            <FieldName>masterPostRepl</FieldName>
            <FieldType>Load</FieldType>
        </Field>
        <Field>
            <FieldName>slavePreSlave</FieldName>
            <FieldType>Load</FieldType>
        </Field>
        <Field>
            <FieldName>masterPostSlave</FieldName>
            <FieldType>Load</FieldType>
        </Field>
        <Field>
            <FieldName>slavePostSlave</FieldName>
            <FieldType>Load</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ReplicationRun</MethodName>
            <MethodComment>/** 
 * Creates a new instance of ReplicationRun
 * @param testcaseName Identifying the test.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testcaseName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReplicationRun</MethodName>
            <MethodComment>/** 
 * Creates a new instance of ReplicationRun running with authentication.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>testcaseName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>user</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>password</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUp</MethodName>
            <MethodComment>/** 
 * Parent super()
 * @throws java.lang.Exception .
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tearDown</MethodName>
            <MethodComment>/** 
 * Parent super()
 * @throws java.lang.Exception .
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, slaveServerHost, slaveServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, masterServerHost, masterServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;close;[masterConn]</InnerMethodInvoke>
                <InnerMethodInvoke>null;close;[slaveConn]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment>/** 
 * Close a connection. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runBare</MethodName>
            <MethodComment>/** 
 * Run the test. Extra logic in addition to BaseTestCase's similar logic, to save derby.log and database files for replication directories if a failure happens.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>useEncryption</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>create</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [encryptionString=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>connectPing</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullDbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [dbURL=serverURL(fullDbPath,serverHost,serverPort)]</InnerVar>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>String [lastmsg=null]</InnerVar>
                <InnerVar>long [sleeptime=200L]</InnerVar>
                <InnerVar>boolean [done=false]</InnerVar>
                <InnerVar>int [count=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>showCurrentState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ID</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>waitTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fullDbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [errCode=0]</InnerVar>
                <InnerVar>String [sState="CONNECTED"]</InnerVar>
                <InnerVar>String [msg=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Thread;sleep;[waitTime]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + ": [" + serverHost+ ":"+ serverPort+ "/"+ fullDbPath+ "] "+ errCode+ " "+ sState+ " "+ msg]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>waitForConnect</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sleepTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tries</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fullDbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [count=0]</InnerVar>
                <InnerVar>String [msg=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>waitForSQLState</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expectedState</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sleepTime</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tries</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fullDbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [count=0]</InnerVar>
                <InnerVar>String [msg=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shutdownDb</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jvmVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replicatedDb</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [dbURL=serverURL(dbPath + FS + replicatedDb,serverHost,serverPort)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["**** DriverManager.getConnection(\"" + dbURL + ";shutdown=true\");"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startServerMonitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>slaveHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["startServerMonitor(" + slaveHost + ") NOT YET IMPLEMENTED."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>replicationTest</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(dbName)]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbyTesting.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [testingClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbynet.jar"+ PS+ test_jars]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getClientJavaExecutableName()]</InnerVar>
                <InnerVar>boolean [isRemote=!testClientHost.equals("localhost")]</InnerVar>
                <InnerVar>boolean [isIjTest=(replicationTest.indexOf(".sql") &gt;= 0)]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [cmd=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [command=util.toStringArray(cmd)]</InnerVar>
                <InnerVar>long [startTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>String [results=null]</InnerVar>
                <InnerVar>String [workingDir=userHome]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["runTest(" + replicationTest + ", "+ clientVM+ ", "+ testClientHost+ ", "+ serverHost+ ", "+ serverPort+ ", "+ dbName+ ") "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["replicationTest: " + replicationTest]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["Time: " + (System.currentTimeMillis() - startTime) / 1000.0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runTestOnSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>replicationTest</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=slaveURL(dbName)]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbyTesting.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [testingClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbynet.jar"+ PS+ test_jars]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getSlaveJavaExecutableName()]</InnerVar>
                <InnerVar>boolean [isRemote=!serverHost.equals("localhost")]</InnerVar>
                <InnerVar>boolean [isIjTest=(replicationTest.indexOf(".sql") &gt;= 0)]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [cmd=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [command=util.toStringArray(cmd)]</InnerVar>
                <InnerVar>long [startTime=System.currentTimeMillis()]</InnerVar>
                <InnerVar>String [results=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["runTestOnSlave(" + replicationTest + ", "+ clientVM+ ", "+ testClientHost+ ", "+ serverHost+ ", "+ serverPort+ ", "+ dbName+ ") "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["replicationTest: " + replicationTest]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["Time: " + (System.currentTimeMillis() - startTime) / 1000.0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runLoad</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>load</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterLoadURL(dbSubPath)]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbyTesting.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [testingClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbynet.jar"+ PS+ test_jars]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getClientJavaExecutableName()]</InnerVar>
                <InnerVar>boolean [isRemote=!masterHost.equals("localhost")]</InnerVar>
                <InnerVar>boolean [isIjTest=(load.indexOf(".sql") &gt;= 0)]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [cmd=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [command=util.toStringArray(cmd)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["runLoad(" + load + ", "+ clientVM+ ", "+ testClientHost+ ", "+ masterHost+ ", "+ masterPort+ ", "+ dbSubPath+ ") "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["load: " + load]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runStateTest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stateTest</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterLoadURL(dbSubPath)]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbyTesting.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [testingClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbynet.jar"+ PS+ test_jars]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getClientJavaExecutableName()]</InnerVar>
                <InnerVar>String [command=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["runStateTest(" + stateTest + ", "+ clientVM+ ", "+ testClientHost+ ", "+ masterHost+ ", "+ masterPort+ ", "+ dbSubPath+ ") "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["stateTest: " + stateTest]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runUserCommandRemotely;[command, testClientHost, testUser, "runStateTest "]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bootMasterDatabase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>load</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(dbName) + ";create=true" + useEncryption(true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["************************** DERBY-???? Preliminary needs to freeze db before copying to slave and setting replication mode."]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["bootMasterDatabase done."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startMaster</MethodName>
            <MethodComment>/** 
 * Set master db in replication master mode.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveClientInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startMaster_ij</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(dbName) + ";startMaster=true;slaveHost=" + slaveReplInterface+ ";slavePort="+ slaveReplPort]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getMasterJavaExecutableName()]</InnerVar>
                <InnerVar>String [command=clientJvm + " -Dij.driver=" + DRIVER_CLASS_NAME+ " -Dij.connection.startMaster=\""+ URL+ "\""+ " -classpath "+ ijClassPath+ " org.apache.derby.tools.ij"+ " "+ userHome+ FS+ "ij_dummy_script.sql"]</InnerVar>
                <InnerVar>String [results=runUserCommandRemotely(command,masterHost,testUser,"startMaster_ij ")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[results]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startMaster_direct</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(dbName) + ";startMaster=true;slaveHost=" + slaveReplInterface+ ";slavePort="+ slaveReplPort]</InnerVar>
                <InnerVar>Connection [conn=null]</InnerVar>
                <InnerVar>boolean [done=false]</InnerVar>
                <InnerVar>int [count=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["startMaster_direct getConnection(" + URL + ")"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["startMaster_direct exit."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMasterConnection</MethodName>
            <MethodComment>/** 
 * Get a connection to the master database.
 * @return A connection to the master database
 */
</MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSlaveConnection</MethodName>
            <MethodComment>/** 
 * Get a connection to the slave database.
 * @return A connection to the slave database
 */
</MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeOnMaster</MethodName>
            <MethodComment>/** 
 * Execute SQL on the master database through a Statement
 * @param sql The sql that should be executed on the master database
 * @throws java.sql.SQLException thrown if an error occured whileexecuting the sql
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sql</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Statement [s=getMasterConnection().createStatement()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>s;execute;[sql]</InnerMethodInvoke>
                <InnerMethodInvoke>s;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>executeOnSlave</MethodName>
            <MethodComment>/** 
 * Execute SQL on the slave database through a Statement
 * @param sql The sql that should be executed on the slave database
 * @throws java.sql.SQLException thrown if an error occured whileexecuting the sql
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sql</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Statement [s=getSlaveConnection().createStatement()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>s;execute;[sql]</InnerMethodInvoke>
                <InnerMethodInvoke>s;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startSlave</MethodName>
            <MethodComment>/** 
 * Set slave db in replication slave mode
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveClientInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startSlave_ij</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=slaveURL(dbName) + ";startSlave=true;slaveHost=" + slaveReplInterface+ ";slavePort="+ slaveReplPort]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getSlaveJavaExecutableName()]</InnerVar>
                <InnerVar>String [command=clientJvm + " -Dij.driver=" + DRIVER_CLASS_NAME+ " -Dij.connection.startSlave=\""+ URL+ "\""+ " -classpath "+ ijClassPath+ " org.apache.derby.tools.ij"+ " "+ userHome+ FS+ "ij_dummy_script.sql"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;runUserCommandInThreadRemotely;[command, slaveHost, testUser, "startSlave_ij "]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startSlave_direct</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplInterface</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveReplPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=slaveURL(dbName) + ";startSlave=true;slaveHost=" + slaveReplInterface+ ";slavePort="+ slaveReplPort]</InnerVar>
                <InnerVar>String [fDbPath=slaveDbPath(dbName)]</InnerVar>
                <InnerVar>String [fSlaveHost=slaveHost]</InnerVar>
                <InnerVar>int [fSlaveServerPort=slaveServerPort]</InnerVar>
                <InnerVar>String [fConnAttrs="startSlave=true" + ";slaveHost=" + slaveReplInterface + ";slavePort="+ slaveReplPort+ useEncryption(false)]</InnerVar>
                <InnerVar>Thread [connThread=new Thread(new Runnable(){
  public void run(){
    startSlaveException=null;
    Connection conn=null;
    try {
      ClientDataSourceInterface ds=configureDataSource(fDbPath,fSlaveHost,fSlaveServerPort,fConnAttrs);
      conn=ds.getConnection();
      conn.close();
    }
 catch (    SQLException se) {
      startSlaveException=se;
    }
catch (    Exception ex) {
      startSlaveException=ex;
    }
  }
}
)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["startSlave_direct getConnection(" + URL + ")"]</InnerMethodInvoke>
                <InnerMethodInvoke>connThread;start;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;registerThread;[connThread]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["startSlave_direct exit."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Connection [conn=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>failOver</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jvmVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>failOver_ij</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(dbName) + ";failover=true"]</InnerVar>
                <InnerVar>String [ijClassPath=derbyVersion + FS + "derbyclient.jar"+ PS+ derbyVersion+ FS+ "derbytools.jar"]</InnerVar>
                <InnerVar>String [clientJvm=ReplicationRun.getClientJavaExecutableName()]</InnerVar>
                <InnerVar>String [command=clientJvm + " -Dij.driver=" + DRIVER_CLASS_NAME+ " -Dij.connection.failover=\""+ URL+ "\""+ " -classpath "+ ijClassPath+ " org.apache.derby.tools.ij"+ " "+ userHome+ FS+ "ij_dummy_script.sql"]</InnerVar>
                <InnerVar>String [results=runUserCommandRemotely(command,testClientHost,testUser,"failOver_ij ")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[results]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>failOver_direct</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [URL=masterURL(dbName) + ";failover=true"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["failOver_direct getConnection(" + URL + ")"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>xFindServerPID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [pid=-1]</InnerVar>
                <InnerVar>String [p1="ps auxwww"]</InnerVar>
                <InnerVar>String [p2=" | grep " + serverPort]</InnerVar>
                <InnerVar>String [p3=" | grep '.NetworkServerControl start -h '"]</InnerVar>
                <InnerVar>String [p4=""]</InnerVar>
                <InnerVar>String [p5=" | grep -v grep"]</InnerVar>
                <InnerVar>String [p6=" | grep -v ssh"]</InnerVar>
                <InnerVar>String [p7=" | grep -v bash"]</InnerVar>
                <InnerVar>String [p8=" | gawk '{ print $2 }'"]</InnerVar>
                <InnerVar>String [p9=" | head -1"]</InnerVar>
                <InnerVar>String [command=p1 + p2 + p3+ p4+ p5+ p6+ p7+ ";"]</InnerVar>
                <InnerVar>String [result=runUserCommandRemotely(command,serverHost,testUser,"ps")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["xFindServerPID: '" + result + "'"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["xFindServerPID: '" + result + "'"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["xFindServerPID: " + pid]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>xStopServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPID</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [command="kill " + serverPID]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;runUserCommandRemotely;[command, serverHost, testUser, "xStopServer"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>verifySlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds=configureDataSource(slaveDbPath(replicatedDb),slaveServerHost,slaveServerPort,useEncryption(false))]</InnerVar>
                <InnerVar>Connection [conn=ds.getConnection()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["BEGIN verifySlave " + slaveServerHost + ":"+ slaveServerPort+ "/"+ slaveDbPath(replicatedDb)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;simpleVerify;[conn]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["END   verifySlave"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>verifyMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds=configureDataSource(masterDbPath(replicatedDb),masterServerHost,masterServerPort,useEncryption(false))]</InnerVar>
                <InnerVar>Connection [conn=ds.getConnection()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["BEGIN verifyMaster " + masterServerHost + ":"+ masterServerPort+ "/"+ masterDbPath(replicatedDb)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;simpleVerify;[conn]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["END   verifyMaster"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>simpleVerify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Statement [s=conn.createStatement()]</InnerVar>
                <InnerVar>ResultSet [rs=s.executeQuery("select SCHEMAID, TABLENAME from sys.systables")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runSlaveVerificationCLient</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jvmVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["runSlaveVerificationCLient"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runMasterVerificationCLient</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jvmVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testClientHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["runMasterVerificationCLient"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runUserCommandLocally</MethodName>
            <MethodComment>/** 
 * Run a Java command locally on the test host. The spawned process inherits the class path from the main test process.
 * @param command the arguments to pass to the Java executable
 * @param ID an identifier used to prefix debug output
 * @param workingDir the directory in which the sub-process should run, or{@code null} to run in the same directory as the parent process
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ID</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>workingDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [debugId="runUserCommandLocally " + ID + " "]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[debugId + command]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[debugId + "--- runUserCommandLocally "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runUserCommandRemotely</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testUser</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [ID="runUserCommandRemotely " + id + " "]</InnerVar>
                <InnerVar>String [localCommand=remoteShell + " " + "-l "+ testUser+ " "+ host+ " "+ command]</InnerVar>
                <InnerVar>String [output=""]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[ID + "Execute '" + command+ "' on '"+ host+ "'"+ " as "+ testUser]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runUserCommandInThreadLocally</MethodName>
            <MethodComment>/** 
 * Run a Java command locally on the test host in a separate thread. The spawned process inherits the class path from the main test process.
 * @param command the arguments to pass to the Java executable
 * @param dbDir the name of the sub-directory in which the sub-processshould run, or  {@code null} to run in the same directory as theparent process
 * @param id an identifier used to prefix debug output
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbDir</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [ID="runUserCommandInThread " + id + " "]</InnerVar>
                <InnerVar>String [workingDirName=System.getProperty("user.dir")]</InnerVar>
                <InnerVar>File [workingDir=dbDir == null ? null : new File(workingDirName,dbDir)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "Execute '" + command+ "'"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["+++ " + ID]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["runUserCommand: " + command]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["user.dir: " + workingDirName]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "workingDir: " + workingDir]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "--- "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[ID + "************** In run()."]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runUserCommandLocally;[command, ID, workingDir]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "************** Done run()."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runUserCommandInThreadRemotely</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testUser</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [ID=id + " runUserCommandInThreadRemotely "]</InnerVar>
                <InnerVar>String[] [envElements={"CLASS_PATH=" + "","PATH=" + FS + "home"+ FS+ testUser+ FS+ "bin:$PATH"}]</InnerVar>
                <InnerVar>String [workingDirName=System.getProperty("user.home")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "+++ "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "Execute '" + command+ "' on '"+ host+ "'"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + command + " @ "+ host+ " as "+ testUser]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "user.home: " + workingDirName]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "envElements: " + util.splice(envElements,' ')]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "workingDir: " + workingDirName]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "--- "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[ID + "************** In run()."]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runUserCommandRemotely;[shellCmd, host, testUser, ID]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[ID + "************** Done exec()."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initEnvironment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [derbyTestingJar=derbyVersion + FS + "derbyTesting.jar"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["printDebug: " + util.printDebug]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["*** ReplicationRun.initEnvironment -----------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["*** Properties -----------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["user.dir:          " + userDir]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["derby.system.home: " + System.getProperty("derby.system.home")]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["showSysinfo: " + showSysinfo]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testUser: " + testUser]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["masterServerHost: " + masterServerHost]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["masterServerPort: " + masterServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["slaveServerHost: " + slaveServerHost]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["slaveServerPort: " + slaveServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["slaveReplPort: " + slaveReplPort]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testClientHost: " + testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["masterDatabasePath: " + masterDatabasePath]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["slaveDatabasePath: " + slaveDatabasePath]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["replicatedDb: " + replicatedDb]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["bootLoad: " + bootLoad]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["freezeDB: " + freezeDB]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["unFreezeDB: " + unFreezeDB]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["simpleLoad: " + simpleLoad]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["sqlLoadInit: " + sqlLoadInit]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["specialTestingJar: " + specialTestingJar]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["jvmVersion: " + jvmVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["masterJvmVersion: " + masterJvmVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["slaveJvmVersion: " + slaveJvmVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["classPath: " + classPath]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["derbyVersion: " + derbyVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["derbyMasterVersion: " + derbyMasterVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["derbySlaveVersion: " + derbySlaveVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["derbyTestingJar: " + derbyTestingJar]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["junit_jar: " + junit_jar]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["test_jars: " + test_jars]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["sleepTime: " + sleepTime]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["runUnReplicated: " + runUnReplicated]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["localEnv: " + localEnv]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["--------------------------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["--------------------------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["--------------------------------------------------------"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["--------------------------------------------------------"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [masterHome=new File(masterDatabasePath,masterDbSubPath)]</InnerVar>
                <InnerVar>File [slaveHome=new File(slaveDatabasePath,slaveDbSubPath)]</InnerVar>
                <InnerVar>String [results=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["initMaster"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[results]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>removeSlaveDBfiles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [command="cd " + slaveDatabasePath + FS+ slaveDbSubPath+ ";"+ " rm -f "+ dbName+ FS+ "seg0"+ FS+ "* ;"+ " ls -al test test/seg0"]</InnerVar>
                <InnerVar>String [results=runUserCommandRemotely(command,host,testUser,"removeSlaveDBfiles ")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[results]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>host</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>clientVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [slaveHome=new File(slaveDatabasePath,slaveDbSubPath)]</InnerVar>
                <InnerVar>File [masterHome=new File(masterDatabasePath,masterDbSubPath)]</InnerVar>
                <InnerVar>File [masterDb=new File(masterHome,dbName)]</InnerVar>
                <InnerVar>String [results=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["initSlave"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[results]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>restartServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>interfacesToListenOn</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubDirPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;stopServer;[serverVM, serverVersion, serverHost, serverPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServer;[serverVM, serverVersion, serverHost, interfacesToListenOn, serverPort, dbSubDirPath]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>interfacesToListenOn</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubDirPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [debugId="startServer@" + serverHost + ":"+ serverPort+ " "]</InnerVar>
                <InnerVar>String [serverClassPath=serverVersion + FS + "derby.jar"+ PS+ serverVersion+ FS+ "derbynet.jar"+ PS+ test_jars]</InnerVar>
                <InnerVar>boolean [isRemote=!serverHost.equals("localhost")]</InnerVar>
                <InnerVar>String [workingDirName=masterDatabasePath + FS + dbSubDirPath]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [ceArray=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [commandElements=util.toStringArray(ceArray)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[debugId + "+++ StartServer " + serverVM+ " / "+ serverVersion]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-Dderby.system.home=" + workingDirName]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-Dderby.infolog.append=true"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;[networkServerControl]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["start"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-h"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;[interfacesToListenOn]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-p"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;[String.valueOf(serverPort)]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-noSecurityManager"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;pingServer;[serverHost, serverPort]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[debugId + "--- StartServer "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>killMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>masterServerHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["killMaster: " + masterServerHost + ":"+ masterServerPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>killSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>slaveServerHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["killSlave: " + slaveServerHost + ":"+ slaveServerPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>destroySlaveDB</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>slaveServerHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;removeSlaveDBfiles;[slaveServerHost, replicatedDb]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stopServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverVersion</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [debugId="stopServer@" + serverHost + ":"+ serverPort+ " "]</InnerVar>
                <InnerVar>String [serverJvm=ReplicationRun.getServerJavaExecutableName(serverHost,serverVM)]</InnerVar>
                <InnerVar>String [serverClassPath=serverVersion + FS + "derby.jar"+ PS+ serverVersion+ FS+ "derbynet.jar"]</InnerVar>
                <InnerVar>boolean [isRemote=!serverHost.equals("localhost")]</InnerVar>
                <InnerVar>ArrayList&lt;String&gt; [ceArray=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [commandElements=util.toStringArray(ceArray)]</InnerVar>
                <InnerVar>String [fullCmd=util.splice(commandElements,' ')]</InnerVar>
                <InnerVar>boolean [serverOnLocalhost=serverHost.equalsIgnoreCase("localhost")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["+++ stopServer " + serverVM + " / "+ serverVersion+ " "+ debugId]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-Dderby.infolog.append=true"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;[networkServerControl]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["shutdown"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-h"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;[serverHost]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;["-p"]</InnerMethodInvoke>
                <InnerMethodInvoke>ceArray;add;[String.valueOf(serverPort)]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[debugId + "commandElements: " + fullCmd]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[debugId + "--- stopServer "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[""]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processOutput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>proc</ParamName>
                    <ParamType>Process</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InputStream [serveInputStream=proc.getInputStream()]</InnerVar>
                <InnerVar>InputStream [serveErrorStream=proc.getErrorStream()]</InnerVar>
                <InnerVar>InputStreamReader [isr=new InputStreamReader(serveInputStream)]</InnerVar>
                <InnerVar>InputStreamReader [esr=new InputStreamReader(serveErrorStream)]</InnerVar>
                <InnerVar>BufferedReader [bir=new BufferedReader(isr)]</InnerVar>
                <InnerVar>BufferedReader [ber=new BufferedReader(esr)]</InnerVar>
                <InnerVar>String [line=null]</InnerVar>
                <InnerVar>String [result=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[id + "---- out:"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[id + "---- err:"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[id + "----     "]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processDEBUGOutput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>proc</ParamName>
                    <ParamType>Process</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>InputStream [serveInputStream=proc.getInputStream()]</InnerVar>
                <InnerVar>InputStream [serveErrorStream=proc.getErrorStream()]</InnerVar>
                <InnerVar>InputStreamReader [isr=new InputStreamReader(serveInputStream)]</InnerVar>
                <InnerVar>InputStreamReader [esr=new InputStreamReader(serveErrorStream)]</InnerVar>
                <InnerVar>BufferedReader [bir=new BufferedReader(isr)]</InnerVar>
                <InnerVar>BufferedReader [ber=new BufferedReader(esr)]</InnerVar>
                <InnerVar>String [line=null]</InnerVar>
                <InnerVar>int [exitCode=proc.waitFor()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[id + "---- out:"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[id + "---- err:"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[id + "----     "]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;[id + "process exit status: " + exitCode]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerThread</MethodName>
            <MethodComment>/** 
 * Register that a thread has been started so that we can wait for it to complete in  {@link #tearDown()}.
 * @param thread a thread that has been started
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>thread</ParamName>
                    <ParamType>Thread</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>helperThreads;add;[thread]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pingServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>hostName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>port</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>NetworkServerControl [controller=new NetworkServerControl(InetAddress.getByName(hostName),port)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["+++ pingServer: " + hostName + ":"+ port]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertTrue;["Server did not start in time", NetworkServerTestSetup.pingForServerStart(controller)]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["--- pingServer: " + hostName + ":"+ port]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startOptionalLoad</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>load</ParamName>
                    <ParamType>Load</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [loadString=load.load]</InnerVar>
                <InnerVar>String [database=load.database]</InnerVar>
                <InnerVar>boolean [existingDB=load.existingDB]</InnerVar>
                <InnerVar>String [testClientHost=load.clientHost]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["run load " + loadString + " on client "+ testClientHost+ " against server "+ serverHost+ ":"+ serverPort+ " using DB  "+ database+ "["+ existingDB+ "]"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;runLoad;[loadString, jvmVersion, testClientHost, serverHost, serverPort, dbSubPath + FS + database]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeReadyForReplication</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;cleanAllTestHosts;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initEnvironment;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initMaster;[masterServerHost, replicatedDb]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServer;[masterJvmVersion, derbyMasterVersion, masterServerHost, ALL_INTERFACES, masterServerPort, masterDbSubPath]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServer;[slaveJvmVersion, derbySlaveVersion, slaveServerHost, ALL_INTERFACES, slaveServerPort, slaveDbSubPath]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startServerMonitor;[slaveServerHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bootMasterDatabase;[jvmVersion, masterDatabasePath + FS + masterDbSubPath, replicatedDb, masterServerHost, masterServerPort, null]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initSlave;[slaveServerHost, jvmVersion, replicatedDb]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startSlave;[jvmVersion, replicatedDb, slaveServerHost, slaveServerPort, slaveServerHost, slaveReplPort, testClientHost]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startMaster;[jvmVersion, replicatedDb, masterServerHost, masterServerPort, masterServerHost, slaveServerPort, slaveServerHost, slaveReplPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanAllTestHosts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["************************** cleanAllTestHosts() Not yet implemented"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initEnvironment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cp</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["testPreStartedMasterServer:" + testPreStartedMasterServer + FS+ testPreStartedMasterServerReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreStartedSlaveServer:" + testPreStartedSlaveServer + FS+ testPreStartedSlaveServerReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreInitSlave:" + testPreInitSlave + FS+ testPreInitSlaveReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreStartedMaster:" + testPreStartedMaster + FS+ testPreStartedMasterReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreStartedSlave:" + testPreStartedSlave + FS+ testPreStartedSlaveReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPostStartedMasterAndSlave:" + testPostStartedMasterAndSlave + FS+ testPostStartedMasterAndSlaveReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreStoppedMaster:" + testPreStoppedMaster + FS+ testPreStoppedMasterReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreStoppedMasterServer:" + testPreStoppedMasterServer + FS+ testPreStoppedMasterServerReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPreStoppedSlave:" + testPreStoppedSlave + FS+ testPreStoppedSlaveReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPostStoppedSlave:" + testPostStoppedSlave + FS+ testPostStoppedSlaveReturn]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["testPostStoppedSlaveServer:" + testPostStoppedSlaveServer + FS+ testPostStoppedSlaveServerReturn]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStartedMasterServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStartedMasterServer"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStartedMasterServer"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStartedSlaveServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStartedSlaveServer"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStartedSlaveServer"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStartedMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStartedMaster"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStartedMaster"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreInitSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreInitSlave"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreInitSlave"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStartedSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStartedSlave"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStartedSlave"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPostStartedMasterAndSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPostStartedMasterAndSlave"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPostStartedMasterAndSlave"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStoppedMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStoppedMaster"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStoppedMaster"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStoppedMasterServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStoppedMasterServer"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStoppedMasterServer"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStoppedSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStoppedSlave"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStoppedSlave"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPreStoppedSlaveServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPreStoppedSlaveServer"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPreStoppedSlaveServer"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testPostStoppedSlaveServer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["****** BEGIN testPostStoppedSlaveServer"]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["****** END   testPostStoppedSlaveServer"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanupAndShutdown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, masterServerHost, masterServerPort]</InnerMethodInvoke>
                <InnerMethodInvoke>null;stopServer;[jvmVersion, derbyVersion, slaveServerHost, slaveServerPort]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Load</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>testRunProperties</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [pid="test." + id]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["Load(): " + id]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertSqlStateSlaveConn</MethodName>
            <MethodComment>/** 
 * Assert that the latest startSlave connection attempt got the expected SQLState. The method will wait for upto 5 seconds for the startSlave connection attemt to complete. If the connection attempt has not completed after 5 seconds it is assumed to have failed.
 * @param expected the expected SQLState
 * @throws java.lang.Exception the Exception to check the SQLState of
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expected</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [verified=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assertException</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>se</ParamName>
                    <ParamType>SQLException</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>expectedSqlState</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [ec=se.getErrorCode()]</InnerVar>
                <InnerVar>String [ss=se.getSQLState()]</InnerVar>
                <InnerVar>String [msg="Got " + ec + " "+ ss+ " "+ se.getMessage()+ ". Expected "+ expectedSqlState]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[msg]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>_testInsertUpdateDeleteOnMaster</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_noTuplesToInsert</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds=configureDataSource(dbPath,serverHost,serverPort,useEncryption(false))]</InnerVar>
                <InnerVar>Connection [conn=ds.getConnection()]</InnerVar>
                <InnerVar>PreparedStatement [ps=conn.prepareStatement("create table t(i integer primary key, s varchar(64))")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["_testInsertUpdateDeleteOnMaster: " + serverHost + ":"+ serverPort+ "/"+ dbPath+ " "+ _noTuplesToInsert]</InnerMethodInvoke>
                <InnerMethodInvoke>ps;execute;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_verify;[conn, _noTuplesToInsert]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>InstantiationException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>InvocationTargetException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>_verifyDatabase</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_noTuplesInserted</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds=configureDataSource(dbPath,serverHost,serverPort,useEncryption(false))]</InnerVar>
                <InnerVar>Connection [conn=ds.getConnection()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["_verifyDatabase: " + serverHost + ":"+ serverPort+ "/"+ dbPath]</InnerMethodInvoke>
                <InnerMethodInvoke>null;_verify;[conn, _noTuplesInserted]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>InstantiationException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>InvocationTargetException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>_verify</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>_noTuplesInserted</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Statement [s=conn.createStatement()]</InnerVar>
                <InnerVar>ResultSet [rs=s.executeQuery("select count(*) from t")]</InnerVar>
                <InnerVar>int [count=rs.getInt(1)]</InnerVar>
                <InnerVar>int [max=rs.getInt(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>util;DEBUG;["_verify: " + count + "/"+ _noTuplesInserted+ " "+ max+ "/"+ (_noTuplesInserted - 1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Expected " + _noTuplesInserted + " tuples, got "+ count+ ".", _noTuplesInserted, count]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;["Expected " + (_noTuplesInserted - 1) + " max, got "+ max+ ".", _noTuplesInserted - 1, max]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConnection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Connection</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>databasePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replicatedDb</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [db=databasePath + FS + dbSubPath+ FS+ replicatedDb]</InnerVar>
                <InnerVar>String [connectionURL=serverURL(db,serverHost,serverPort)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;[connectionURL]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>masterDbPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>slaveDbPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>masterURL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>masterLoadURL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbSubPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>slaveURL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>serverURL</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fullDbPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>credentials</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stopSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>slaveServerHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveDatabasePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replicatedDb</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterServerAlive</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stopSlave</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SQLException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>slaveServerHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveServerPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>slaveDatabasePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replicatedDb</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>masterServerAlive</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [dbPath=slaveDatabasePath + FS + subPath+ FS+ replicatedDb]</InnerVar>
                <InnerVar>String [connectionURL=serverURL(dbPath,slaveServerHost,slaveServerPort) + ";stopSlave=true"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>util;DEBUG;["stopSlave"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMasterJavaExecutableName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSlaveJavaExecutableName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getClientJavaExecutableName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getServerJavaExecutableName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverVM</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configureDataSource</MethodName>
            <MethodComment>/** 
 * &lt;p&gt; Set up a data source. &lt;/p&gt;
 */
</MethodComment>
            <ReturnType>ClientDataSourceInterface</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dbName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverHost</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>serverPort</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>connectionAttributes</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ClientDataSourceInterface [ds]</InnerVar>
                <InnerVar>Class&lt;?&gt; [clazz]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ds;setDatabaseName;[dbName]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setServerName;[serverHost]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setPortNumber;[serverPort]</InnerMethodInvoke>
                <InnerMethodInvoke>ds;setConnectionAttributes;[connectionAttributes]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>InstantiationException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>InvocationTargetException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>