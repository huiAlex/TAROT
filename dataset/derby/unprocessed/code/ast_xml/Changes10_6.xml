<Class>
    <Id>631</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.upgradeTests</Package>
    <ClassName>Changes10_6</ClassName>
    <SuperClass>UpgradeChange</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Changes10_6  /** 
 * Upgrade test cases for 10.6. If the old version is 10.6 or later then these tests will not be run. &lt;BR&gt; 10.6 Upgrade issues &lt;UL&gt; &lt;LI&gt; testSetXplainSchemaProcedure - DERBY-2487 Make sure that SYSCS_UTIL.SYSCS_SET_XPLAIN_SCHEMA can only be run in Derby 10.5 and higher. &lt;/UL&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>BAD_SYNTAX</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>TABLE_DOES_NOT_EXIST</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>UPGRADE_REQUIRED</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>QUERY_4215</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>CREATE_TYPE_DDL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DROP_TYPE_DDL</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HASH_ALGORITHM_PROPERTY</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Changes10_6</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suite</MethodName>
            <MethodComment>/** 
 * Return the suite of tests to test the changes made in 10.6.
 * @param phase an integer that indicates the current phase inthe upgrade test.
 * @return the test suite created.
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>phase</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BaseTestSuite [suite=new BaseTestSuite("Upgrade test for 10.6")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>suite;addTestSuite;[Changes10_6.class]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSetXplainStyleProcedure</MethodName>
            <MethodComment>/** 
 * Make sure that SYSCS_UTIL.SYSCS_SET_XPLAIN_STYLE can only be run in  Derby 10.5 and higher.  DERBY-2487 Test added for 10.5.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String[] [xplainProcedures={"call SYSCS_UTIL.SYSCS_SET_XPLAIN_SCHEMA('XPLAIN')","call SYSCS_UTIL.SYSCS_SET_XPLAIN_SCHEMA('')","call SYSCS_UTIL.SYSCS_SET_XPLAIN_MODE(1)","call SYSCS_UTIL.SYSCS_SET_XPLAIN_MODE(0)","values SYSCS_UTIL.SYSCS_GET_XPLAIN_SCHEMA()","values SYSCS_UTIL.SYSCS_GET_XPLAIN_MODE()"}]</InnerVar>
                <InnerVar>Statement [s]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testCLOBGETSUBSTRING</MethodName>
            <MethodComment>/** 
 * Make sure that SYSIBM.CLOBGETSUBSTRING has the correct return value. See https://issues.apache.org/jira/browse/DERBY-4214
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Version [initialVersion=new Version(getOldMajor(),getOldMinor(),0,0)]</InnerVar>
                <InnerVar>Version [firstVersionHavingThisFunction=new Version(10,3,0,0)]</InnerVar>
                <InnerVar>Version [firstVersionHavingCorrectReturnType=new Version(10,5,0,0)]</InnerVar>
                <InnerVar>int [wrongLength=32672]</InnerVar>
                <InnerVar>int [correctLength=10890]</InnerVar>
                <InnerVar>int [actualJdbcType]</InnerVar>
                <InnerVar>int [actualLength]</InnerVar>
                <InnerVar>Object [returnType]</InnerVar>
                <InnerVar>boolean [hasFunction=initialVersion.compareTo(firstVersionHavingThisFunction) &gt;= 0]</InnerVar>
                <InnerVar>boolean [hasCorrectReturnType=initialVersion.compareTo(firstVersionHavingCorrectReturnType) &gt;= 0]</InnerVar>
                <InnerVar>Statement [s=createStatement()]</InnerVar>
                <InnerVar>ResultSet [rs=s.executeQuery("select a.aliasinfo\n" + "from sys.sysschemas s, sys.sysaliases a\n" + "where s.schemaid = a.schemaid\n"+ "and s.schemaname = 'SYSIBM'\n"+ "and alias = 'CLOBGETSUBSTRING'\n")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>s;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testSYSCS_INPLACE_COMPRESS_TABLE</MethodName>
            <MethodComment>/** 
 * Make sure that SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE  has the correct permissons granted to it. See https://issues.apache.org/jira/browse/DERBY-4215
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Version [initialVersion=new Version(getOldMajor(),getOldMinor(),0,0)]</InnerVar>
                <InnerVar>Version [firstVersionHavingPermissions=new Version(10,2,0,0)]</InnerVar>
                <InnerVar>boolean [beforePermissionsWereAdded=(initialVersion.compareTo(firstVersionHavingPermissions) &lt; 0)]</InnerVar>
                <InnerVar>Statement [s=createStatement()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>s;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>vetDERBY_4215</MethodName>
            <MethodComment>/** 
 * Vet the permissions on SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE. There should be only one permissions tuple for this system procedure and the grantor should be APP.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>Statement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [expectedGrantor="APP"]</InnerVar>
                <InnerVar>ResultSet [rs=s.executeQuery(QUERY_4215)]</InnerVar>
                <InnerVar>String [actualGrantor=rs.getString(1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertTrue;[rs.next()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertEquals;[expectedGrantor, actualGrantor]</InnerMethodInvoke>
                <InnerMethodInvoke>null;assertFalse;[rs.next()]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testUDTs</MethodName>
            <MethodComment>/** 
 * Make sure that you can only create UDTs in a hard-upgraded database. See https://issues.apache.org/jira/browse/DERBY-651
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Statement [s=createStatement()]</InnerVar>
                <InnerVar>int [phase=getPhase()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>s;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTypeDescriptor</MethodName>
            <MethodComment>/** 
 * We would like to just cast the alias descriptor to RoutineAliasDescriptor. However, this doesn't work if we are running on an old version because the descriptor comes from a different class loader. We use reflection to get the information we need.
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>routineAliasDescriptor</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Method [meth=routineAliasDescriptor.getClass().getMethod("getReturnType",null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJDBCTypeId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescriptor</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Method [meth=typeDescriptor.getClass().getMethod("getJDBCTypeId",null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMaximumWidth</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>typeDescriptor</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Method [meth=typeDescriptor.getClass().getMethod("getMaximumWidth",null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testBuiltinAuthenticationHashNotChangedOnUpgrade</MethodName>
            <MethodComment>/** 
 * Verify that we don't enable the configurable hash authentication scheme when we upgrade a database. See DERBY-4483.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;assertNull;[getDatabaseProperty(HASH_ALGORITHM_PROPERTY)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>