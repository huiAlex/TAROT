<Class>
    <Id>58</Id>
    <Package>org.apache.derby.io</Package>
    <ClassName>WritableStorageFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>StorageFactory</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>WritableStorageFactory  /** 
 * This interface extends StorageFactory to provide read/write access to storage. &lt;p&gt; The database engine will call this interface's methods from its own privilege blocks. &lt;p&gt; Each WritableStorageFactory instance may be concurrently used by multiple threads.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>sync</MethodName>
            <MethodComment>/** 
 * Force the data of an output stream out to the underlying storage. That is, ensure that it has been made persistent. If the database is to be transient, that is, if the database does not survive a restart, then the sync method implementation need not do anything.
 * @param stream The stream to be synchronized.
 * @param metaData If true then this method must force both changes to the file'scontents and metadata to be written to storage; if false, it need only force file content changes to be written. The implementation is allowed to ignore this parameter and always force out metadata changes.
 * @exception IOException if an I/O error occurs.
 * @exception SyncFailedException Thrown when the buffers cannot be flushed,or because the system cannot guarantee that all the buffers have been synchronized with physical media.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>metaData</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>SyncFailedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>supportsWriteSync</MethodName>
            <MethodComment>/** 
 * This method tests whether the StorageRandomAccessFile "rws" and "rwd" modes are implemented. If the "rws" and "rwd" modes are supported then the database engine will conclude that the write methods of "rws"/"rwd" mode StorageRandomAccessFiles are slow but the sync method is fast and optimize accordingly.
 * @return &lt;b&gt;true&lt;/b&gt; if an StIRandomAccess file opened with "rws" or "rwd" modes immediately writes data to theunderlying storage, &lt;b&gt;false&lt;/b&gt; if not.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>