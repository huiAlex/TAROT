<Class>
    <Id>461</Id>
    <Package>org.apache.derby.impl.store.access.btree</Package>
    <ClassName>BTreeRowPosition</ClassName>
    <SuperClass>RowPosition</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BTreeRowPosition  /** 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>current_positionKey</FieldName>
            <FieldType>DataValueDescriptor[]</FieldType>
        </Field>
        <Field>
            <FieldName>current_leaf</FieldName>
            <FieldType>LeafControlRow</FieldType>
        </Field>
        <Field>
            <FieldName>next_leaf</FieldName>
            <FieldType>LeafControlRow</FieldType>
        </Field>
        <Field>
            <FieldName>current_lock_template</FieldName>
            <FieldType>DataValueDescriptor[]</FieldType>
        </Field>
        <Field>
            <FieldName>current_lock_row_loc</FieldName>
            <FieldType>RowLocation</FieldType>
        </Field>
        <Field>
            <FieldName>parent</FieldName>
            <FieldType>BTreeScan</FieldType>
        </Field>
        <Field>
            <FieldName>versionWhenSaved</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>positionKey_template</FieldName>
            <FieldType>DataValueDescriptor[]</FieldType>
        </Field>
        <Field>
            <FieldName>savedFetchDescriptor</FieldName>
            <FieldType>FetchDescriptor</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BTreeRowPosition</MethodName>
            <MethodComment>/** 
 * Constructors for This class:
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parent</ParamName>
                    <ParamType>BTreeScan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment>/** 
 * Public Methods of This class:
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>unlatch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>saveMeAndReleasePage</MethodName>
            <MethodComment>/** 
 * Save this position by key and release the latch on the current leaf.
 * @throws StandardException if an error occurs while saving the position
 * @see BTreeScan#savePositionAndReleasePage()
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>parent;savePositionAndReleasePage;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getKeyTemplate</MethodName>
            <MethodComment>/** 
 * Get a template into which the position key can be copied. The value is cached, so two calls to this method on the same object will return the same object.
 * @return an array into which the position key can be copied
 * @throws StandardException if an error occurs while allocating thetemplate array
 */
</MethodComment>
            <ReturnType>DataValueDescriptor[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFetchDescriptorForSaveKey</MethodName>
            <MethodComment>/** 
 * Get a fetch descriptor that can be used to fetch the missing columns in a partial key. The fetch descriptor is only created on the first call to this method. The returned descriptor will be cached, so subsequent calls will return the same descriptor and the arguments to this method should be the same between invokations.
 * @param vcols an array which tells which columns the partial key contains(valid columns have non-zero values in the array)
 * @param fullLength the length of the full key to create a fetchdescriptor for (may be greater than  {@code vcols.length})
 * @return a fetch descriptor
 */
</MethodComment>
            <ReturnType>FetchDescriptor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>vcols</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fullLength</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [ret_string=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>