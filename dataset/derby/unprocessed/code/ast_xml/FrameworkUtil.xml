<Class>
    <Id>299</Id>
    <Package>org.osgi.framework</Package>
    <ClassName>FrameworkUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FrameworkUtil  /** 
 * Framework Utility class. &lt;p&gt; This class contains utility methods which access Framework functions that may be useful to bundles.
 * @since 1.3
 * @ThreadSafe
 * @version $Revision: 1.10 $
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>packageProperty</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>createFilter</FieldName>
            <FieldType>Method</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ImplHolder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Method</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [packageName=System.getProperty(packageProperty)]</InnerVar>
                <InnerVar>Class&lt;?&gt; [delegateClass]</InnerVar>
                <InnerVar>Method [result]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FrameworkUtil</MethodName>
            <MethodComment>/** 
 * FrameworkUtil objects may not be constructed. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createFilter</MethodName>
            <MethodComment>/** 
 * Creates a &lt;code&gt;Filter&lt;/code&gt; object. This &lt;code&gt;Filter&lt;/code&gt; object may be used to match a &lt;code&gt;ServiceReference&lt;/code&gt; object or a &lt;code&gt;Dictionary&lt;/code&gt; object. &lt;p&gt; If the filter cannot be parsed, an  {@link InvalidSyntaxException} will bethrown with a human readable message where the filter became unparsable.
 * @param filter The filter string.
 * @return A &lt;code&gt;Filter&lt;/code&gt; object encapsulating the filter string.
 * @throws InvalidSyntaxException If &lt;code&gt;filter&lt;/code&gt; contains aninvalid filter string that cannot be parsed.
 * @throws NullPointerException If &lt;code&gt;filter&lt;/code&gt; is null.
 * @see Filter
 */
</MethodComment>
            <ReturnType>Filter</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>InvalidSyntaxException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>