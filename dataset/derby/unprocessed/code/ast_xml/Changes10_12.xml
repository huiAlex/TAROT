<Class>
    <Id>2036</Id>
    <Package>org.apache.derbyTesting.functionTests.tests.upgradeTests</Package>
    <ClassName>Changes10_12</ClassName>
    <SuperClass>UpgradeChange</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Changes10_12  /** 
 * Upgrade test cases for 10.12.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LANG_AI_CANNOT_MODIFY_AI</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>LANG_NULL_INTO_NON_NULL</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Changes10_12</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>suite</MethodName>
            <MethodComment>/** 
 * Return the suite of tests to test the changes made in 10.12.
 * @param phase an integer that indicates the current phase inthe upgrade test.
 * @return the test suite created.
 */
</MethodComment>
            <ReturnType>Test</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>phase</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testDerby6414UpdateIdentityColumn</MethodName>
            <MethodComment>/** 
 * DERBY-6414(Incorrect handling when using an UPDATE to SET an  identity column to DEFAULT) Starting Derby 10.12, we support updating an identity column using the keyword DEFAULT on 10.11 and higher dbs. A 10.11 database in  soft upgrade mode can use this feature to update identity columns.  Database versions earlier than that will not be able to use this  feature. The reason for restricting the functionality to 10.11 and  higher dbs is that starting 10.11, we started using sequence generator  to create unique values for identity columns. Prior to that, we had  really old code to generate unique values. In order to keep the code  clean in 10.12, DERBY-6414 is fixed only for identity columns using  sequence generator to create the new ids.
 * @throws SQLException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Statement [s=createStatement()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>testAlterTableAddIdentity</MethodName>
            <MethodComment>/** 
 * Test the addition of support for adding identity columns with an ALTER TABLE statement. DERBY-3888.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Statement [s=createStatement()]</InnerVar>
                <InnerVar>String [addIdToT1="alter table derby_3888_t1 add column " + "id int generated always as identity"]</InnerVar>
                <InnerVar>String [addIdToT2="alter table derby_3888_t2 add column " + "id int generated by default as identity"]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>