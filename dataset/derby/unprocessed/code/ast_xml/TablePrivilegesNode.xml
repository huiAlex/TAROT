<Class>
    <Id>105</Id>
    <Package>org.apache.derby.impl.sql.compile</Package>
    <ClassName>TablePrivilegesNode</ClassName>
    <SuperClass>QueryTreeNode</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TablePrivilegesNode  /** 
 * This class represents a set of privileges on one table.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>actionAllowed</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>columnLists</FieldName>
            <FieldType>ResultColumnList[]</FieldType>
        </Field>
        <Field>
            <FieldName>columnBitSets</FieldName>
            <FieldType>FormatableBitSet[]</FieldType>
        </Field>
        <Field>
            <FieldName>td</FieldName>
            <FieldType>TableDescriptor</FieldType>
        </Field>
        <Field>
            <FieldName>descriptorList</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>descriptorList</FieldName>
            <FieldType>Provider</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TablePrivilegesNode</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cm</ParamName>
                    <ParamType>ContextManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addAll</MethodName>
            <MethodComment>/** 
 * Add all actions
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addAction</MethodName>
            <MethodComment>/** 
 * Add one action to the privileges for this table
 * @param action The action type
 * @param privilegeColumnList The set of privilege columns. Null for all columns
 * @exception StandardException standard error policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>action</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>privilegeColumnList</ParamName>
                    <ParamType>ResultColumnList</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bind</MethodName>
            <MethodComment>/** 
 * Bind.
 * @param td The table descriptor
 * @param isGrant grant if true; revoke if false
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isGrant</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makePrivilegeInfo</MethodName>
            <MethodComment>/** 
 * @return PrivilegeInfo for this node
 */
</MethodComment>
            <ReturnType>PrivilegeInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bindPrivilegesForView</MethodName>
            <MethodComment>/** 
 * Retrieve all the underlying stored dependencies such as table(s),  view(s) and routine(s) descriptors which the view depends on. This information is then passed to the runtime to determine if the privilege is grantable to the grantees by this grantor at execution time. Go through the providers regardless who the grantor is since  the statement cache may be in effect.
 * @param td the TableDescriptor to check
 * @exception StandardException standard error policy.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>td</ParamName>
                    <ParamType>TableDescriptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LanguageConnectionContext [lcc=getLanguageConnectionContext()]</InnerVar>
                <InnerVar>DataDictionary [dd=lcc.getDataDictionary()]</InnerVar>
                <InnerVar>ViewDescriptor [vd=dd.getViewDescriptor(td)]</InnerVar>
                <InnerVar>DependencyManager [dm=dd.getDependencyManager()]</InnerVar>
                <InnerVar>ProviderInfo[] [pis=dm.getPersistentProviderInfos(vd)]</InnerVar>
                <InnerVar>int [siz=pis.length]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StandardException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>