<Class>
    <Id>464</Id>
    <Package>org.apache.derbyTesting.system.oe.direct</Package>
    <ClassName>OrderItem4Sort</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>Comparable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>customer</FieldName>
            <FieldType>Customer</FieldType>
        </Field>
        <Field>
            <FieldName>warehouse</FieldName>
            <FieldType>Warehouse</FieldType>
        </Field>
        <Field>
            <FieldName>district</FieldName>
            <FieldType>District</FieldType>
        </Field>
        <Field>
            <FieldName>order</FieldName>
            <FieldType>Order</FieldType>
        </Field>
        <Field>
            <FieldName>nameList</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>nameList</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>STOCK_INFO</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>i</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>q</FieldName>
            <FieldType>short</FieldType>
        </Field>
        <Field>
            <FieldName>w</FieldName>
            <FieldType>short</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>Standard</MethodName>
            <MethodComment>/** 
 * Create an instance of this implementation. Connection will be set to non auto commit mode and SERIZIALZABLE isolation.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>noReset</MethodName>
            <MethodComment>/** 
 * Return an Operations implementation based upon Standard with a single difference. In this implementation the reset() executed after each PreparedStatement execute does nothing. Sees if there is any performance impact of explicitly closing each ResultSet and clearing the parameters. &lt;P&gt; Each ResultSet will be closed implicitly either at commit time or at the next execution of the same PreparedStatement object.
 */
</MethodComment>
            <ReturnType>Operations</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conn</ParamName>
                    <ParamType>Connection</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>SQLException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reset</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ps</ParamName>
                    <ParamType>PreparedStatement</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stockLevel</MethodName>
            <MethodComment>/** 
 * Stock Level transaction. Described in section 2.8.2. SQL based upon sample prgram in appendix A.5.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>threshold</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [isolation=conn.getTransactionIsolation()]</InnerVar>
                <InnerVar>int [lowStock]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderStatus</MethodName>
            <MethodComment>/** 
 * Order status by customer last name. Based up the example SQL queries in appendix A.3
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>customerLast</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [osCustomerByName=prepareStatement("SELECT C_ID, C_BALANCE, C_FIRST, C_MIDDLE " + "FROM CUSTOMER WHERE C_W_ID = ? AND C_D_ID = ? AND C_LAST = ? " + "ORDER BY C_FIRST")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>orderStatus</MethodName>
            <MethodComment>/** 
 * Order status by customer identifier. Based up the example SQL queries in appendix A.3
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [osCustomerById=prepareStatement("SELECT C_BALANCE, C_FIRST, C_MIDDLE, C_LAST " + "FROM CUSTOMER WHERE C_W_ID = ? AND C_D_ID = ? AND C_ID = ?")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>customer;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setWarehouse;[w]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setDistrict;[d]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setId;[c]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOrderStatusForCustomer</MethodName>
            <MethodComment>/** 
 * Fetch the order details having obtained the customer information and display it.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>byName</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>customer</ParamName>
                    <ParamType>Customer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [osLastOrderNumber=prepareStatement("SELECT MAX(O_ID) AS LAST_ORDER FROM ORDERS " + "WHERE O_W_ID = ? AND O_D_ID = ? AND O_C_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [osOrderDetails=prepareStatement("SELECT O_ENTRY_D, O_CARRIER_ID, O_OL_CNT " + "FROM ORDERS WHERE O_W_ID = ? AND O_D_ID = ? AND O_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [osOrderLineItems=prepareStatement("SELECT OL_I_ID, OL_SUPPLY_W_ID, OL_QUANTITY, OL_AMOUNT, " + "OL_DELIVERY_D FROM ORDERLINE " + "WHERE OL_W_ID = ? AND OL_D_ID = ? AND OL_O_ID = ?")]</InnerVar>
                <InnerVar>ResultSet [rs=osLastOrderNumber.executeQuery()]</InnerVar>
                <InnerVar>OrderLine[] [lineItems=new OrderLine[order.getOl_cnt()]]</InnerVar>
                <InnerVar>int [oli=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>order;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>order;setWarehouse;[customer.getWarehouse()]</InnerMethodInvoke>
                <InnerMethodInvoke>order;setDistrict;[customer.getDistrict()]</InnerMethodInvoke>
                <InnerMethodInvoke>osLastOrderNumber;setShort;[1, customer.getWarehouse()]</InnerMethodInvoke>
                <InnerMethodInvoke>osLastOrderNumber;setShort;[2, customer.getDistrict()]</InnerMethodInvoke>
                <InnerMethodInvoke>osLastOrderNumber;setInt;[3, customer.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>order;setId;[rs.getInt("LAST_ORDER")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[osLastOrderNumber]</InnerMethodInvoke>
                <InnerMethodInvoke>osOrderDetails;setShort;[1, customer.getWarehouse()]</InnerMethodInvoke>
                <InnerMethodInvoke>osOrderDetails;setShort;[2, customer.getDistrict()]</InnerMethodInvoke>
                <InnerMethodInvoke>osOrderDetails;setInt;[3, order.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>order;setEntry_d;[rs.getTimestamp("O_ENTRY_D")]</InnerMethodInvoke>
                <InnerMethodInvoke>order;setCarrier_id;[(Integer)rs.getObject("O_CARRIER_ID")]</InnerMethodInvoke>
                <InnerMethodInvoke>order;setOl_cnt;[rs.getInt("O_OL_CNT")]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>osOrderLineItems;setShort;[1, order.getWarehouse()]</InnerMethodInvoke>
                <InnerMethodInvoke>osOrderLineItems;setShort;[2, order.getDistrict()]</InnerMethodInvoke>
                <InnerMethodInvoke>osOrderLineItems;setInt;[3, order.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;close;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;commit;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>payment</MethodName>
            <MethodComment>/** 
 * Payment by customer last name. Section 2.5.2 The CUSTOMER row will be fetched and then updated. This is due to the need to select the specific customer first based upon last name (which will actually fetch and hence lock a number of customers).
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cw</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cd</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>customerLast</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>amount</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [pyCustomerByName=prepareStatement("SELECT C_ID " + "FROM CUSTOMER WHERE C_W_ID = ? AND C_D_ID = ? AND C_LAST = ? " + "ORDER BY C_FIRST")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>payment</MethodName>
            <MethodComment>/** 
 * Payment by customer identifier. Section 2.5.2. The CUSTOMER row is update and then fetched.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cw</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cd</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>amount</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>paymentById</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cw</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>cd</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>amount</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [pyCustomerPayment=prepareStatement("UPDATE CUSTOMER SET C_BALANCE = C_BALANCE - ?, " + "C_YTD_PAYMENT = C_YTD_PAYMENT + ?, " + "C_PAYMENT_CNT = C_PAYMENT_CNT + 1 "+ "WHERE C_W_ID = ? AND C_D_ID = ? AND C_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyCustomerInfoId=prepareStatement("SELECT C_FIRST, C_MIDDLE, C_LAST, C_BALANCE, " + "C_STREET_1, C_STREET_2, C_CITY, C_STATE, C_ZIP, " + "C_PHONE, C_SINCE, C_CREDIT, C_CREDIT_LIM, C_DISCOUNT "+ "FROM CUSTOMER WHERE C_W_ID = ? AND C_D_ID = ? AND C_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyCustomerUpdateBadCredit=prepareStatement("UPDATE CUSTOMER SET C_DATA = " + " BAD_CREDIT_DATA(C_DATA, ?, ?, C_W_ID, C_W_ID, C_ID, ?) " + "WHERE C_W_ID = ? AND C_D_ID = ? AND C_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyCustomerGetData=prepareStatement("SELECT SUBSTR(C_DATA, 1, 200) AS C_DATA_200 " + "FROM CUSTOMER WHERE C_W_ID = ? AND C_D_ID = ? AND C_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyDistrictUpdate=prepareStatement("UPDATE DISTRICT SET D_YTD = D_YTD + ? WHERE D_W_ID = ? AND D_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyDistrictInfo=prepareStatement("SELECT D_NAME, D_STREET_1, D_STREET_2, D_CITY, D_STATE, D_ZIP FROM DISTRICT WHERE D_W_ID = ? AND D_ID = ? ")]</InnerVar>
                <InnerVar>PreparedStatement [pyWarehouseUpdate=prepareStatement("UPDATE WAREHOUSE SET W_YTD = W_YTD + ? WHERE W_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyWarehouseInfo=prepareStatement("SELECT W_NAME, W_STREET_1, W_STREET_2, W_CITY, W_STATE, W_ZIP " + "FROM WAREHOUSE WHERE W_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [pyHistory=prepareStatement("INSERT INTO HISTORY(H_C_ID, H_C_D_ID, H_C_W_ID, H_D_ID, H_W_ID, " + "H_DATE, H_AMOUNT, H_DATA) " + "VALUES (?, ?, ?, ?, ?, CURRENT TIMESTAMP, ?, ?)")]</InnerVar>
                <InnerVar>Customer [customer=new Customer()]</InnerVar>
                <InnerVar>ResultSet [rs=pyCustomerInfoId.executeQuery()]</InnerVar>
                <InnerVar>StringBuffer [hData=new StringBuffer(24)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>customer;setWarehouse;[cw]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setDistrict;[cd]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setId;[c]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerPayment;setString;[1, amount]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerPayment;setString;[2, amount]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerPayment;setShort;[3, cw]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerPayment;setShort;[4, cd]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerPayment;setInt;[5, c]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerPayment;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerInfoId;setShort;[1, cw]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerInfoId;setShort;[2, cd]</InnerMethodInvoke>
                <InnerMethodInvoke>pyCustomerInfoId;setInt;[3, c]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setFirst;[rs.getString("C_FIRST")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setMiddle;[rs.getString("C_MIDDLE")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setLast;[rs.getString("C_LAST")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setBalance;[rs.getString("C_BALANCE")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setAddress;[getAddress(rs,"C_STREET_1")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setPhone;[rs.getString("C_PHONE")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setSince;[rs.getTimestamp("C_SINCE")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setCredit;[rs.getString("C_CREDIT")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setCredit_lim;[rs.getString("C_CREDIT_LIM")]</InnerMethodInvoke>
                <InnerMethodInvoke>customer;setDiscount;[rs.getString("C_DISCOUNT")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[pyCustomerInfoId]</InnerMethodInvoke>
                <InnerMethodInvoke>district;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>district;setWarehouse;[w]</InnerMethodInvoke>
                <InnerMethodInvoke>district;setId;[d]</InnerMethodInvoke>
                <InnerMethodInvoke>pyDistrictUpdate;setString;[1, amount]</InnerMethodInvoke>
                <InnerMethodInvoke>pyDistrictUpdate;setShort;[2, w]</InnerMethodInvoke>
                <InnerMethodInvoke>pyDistrictUpdate;setShort;[3, d]</InnerMethodInvoke>
                <InnerMethodInvoke>pyDistrictUpdate;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[pyDistrictUpdate]</InnerMethodInvoke>
                <InnerMethodInvoke>pyDistrictInfo;setShort;[1, w]</InnerMethodInvoke>
                <InnerMethodInvoke>pyDistrictInfo;setShort;[2, d]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>district;setName;[rs.getString("D_NAME")]</InnerMethodInvoke>
                <InnerMethodInvoke>district;setAddress;[getAddress(rs,"D_STREET_1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[pyDistrictInfo]</InnerMethodInvoke>
                <InnerMethodInvoke>warehouse;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>warehouse;setId;[w]</InnerMethodInvoke>
                <InnerMethodInvoke>pyWarehouseUpdate;setString;[1, amount]</InnerMethodInvoke>
                <InnerMethodInvoke>pyWarehouseUpdate;setShort;[2, w]</InnerMethodInvoke>
                <InnerMethodInvoke>pyWarehouseUpdate;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[pyWarehouseUpdate]</InnerMethodInvoke>
                <InnerMethodInvoke>pyWarehouseInfo;setShort;[1, w]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>warehouse;setName;[rs.getString("W_NAME")]</InnerMethodInvoke>
                <InnerMethodInvoke>warehouse;setAddress;[getAddress(rs,"W_STREET_1")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[pyWarehouseInfo]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setInt;[1, c]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setShort;[2, cd]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setShort;[3, cw]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setShort;[4, d]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setShort;[5, w]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setString;[6, amount]</InnerMethodInvoke>
                <InnerMethodInvoke>hData;append;[warehouse.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>hData;append;["    "]</InnerMethodInvoke>
                <InnerMethodInvoke>hData;append;[district.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;setString;[7, hData.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>pyHistory;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[pyHistory]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;commit;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newOrder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>items</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>quantities</ParamName>
                    <ParamType>short[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>supplyW</ParamName>
                    <ParamType>short[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;sortOrderItems;[items, quantities, supplyW]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scheduleDelivery</MethodName>
            <MethodComment>/** 
 * Schedule a delivery using the database as the queuing mechanism and the results file. See delivery.sql.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>display</ParamName>
                    <ParamType>Display</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>displayData</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>carrier</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PreparedStatement [sdSchedule=prepareStatement("INSERT INTO DELIVERY_REQUEST(DR_W_ID, DR_CARRIER_ID, DR_STATE) " + "VALUES(?, ?, 'Q')")]</InnerVar>
                <InnerVar>int [isolation=conn.getTransactionIsolation()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>delivery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>PreparedStatement [dlFindOldestRequest=prepareStatement("SELECT DR_ID, DR_W_ID, DR_CARRIER_ID FROM DELIVERY_REQUEST " + "WHERE DR_STATE = 'Q' ORDER BY DR_QUEUED")]</InnerVar>
                <InnerVar>PreparedStatement [dlSetRequestState=prepareStatement("UPDATE DELIVERY_REQUEST SET DR_STATE = ? " + "WHERE DR_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [dlCompleteDelivery=prepareStatement("UPDATE DELIVERY_REQUEST SET DR_STATE = 'C', DR_COMPLETED = CURRENT TIMESTAMP " + "WHERE DR_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [dlFindOrderToDeliver=prepareStatement("SELECT MIN(NO_O_ID) AS ORDER_TO_DELIVER FROM NEWORDERS " + "WHERE NO_W_ID = ? AND NO_D_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [dlDeleteNewOrder=prepareStatement("DELETE FROM NEWORDERS WHERE NO_W_ID = ? AND NO_D_ID = ? AND NO_O_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [dlSetOrderCarrier=prepareStatement("UPDATE ORDERS SET O_CARRIER_ID = ? " + "WHERE O_W_ID = ? AND O_D_ID = ? AND O_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [dlSetOrderlineDate=prepareStatement("UPDATE ORDERLINE SET OL_DELIVERY_D = CURRENT TIMESTAMP " + "WHERE OL_W_ID = ? AND OL_D_ID = ? AND OL_O_ID = ?")]</InnerVar>
                <InnerVar>PreparedStatement [dlUpdateCustomer=prepareStatement("UPDATE CUSTOMER SET " + "C_BALANCE = (SELECT SUM(OL_AMOUNT) FROM ORDERLINE " + "WHERE OL_W_ID = ? AND OL_D_ID = ? AND OL_O_ID = ?), "+ "C_DELIVERY_CNT = C_DELIVERY_CNT + 1 "+ "WHERE C_W_ID = ? AND C_D_ID = ? AND "+ "C_ID = (SELECT O_C_ID FROM ORDERS "+ "WHERE O_W_ID = ? AND O_D_ID = ? AND O_ID = ?)")]</InnerVar>
                <InnerVar>PreparedStatement [dlRecordDelivery=prepareStatement("INSERT INTO DELIVERY_ORDERS(DO_DR_ID, DO_D_ID, DO_O_ID) " + "VALUES (?, ?, ?)")]</InnerVar>
                <InnerVar>ResultSet [rs=dlFindOldestRequest.executeQuery()]</InnerVar>
                <InnerVar>int [request=rs.getInt("DR_ID")]</InnerVar>
                <InnerVar>short [w=rs.getShort("DR_W_ID")]</InnerVar>
                <InnerVar>short [carrier=rs.getShort("DR_CARRIER_ID")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>dlFindOldestRequest;setMaxRows;[1]</InnerMethodInvoke>
                <InnerMethodInvoke>rs;next;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[dlFindOldestRequest]</InnerMethodInvoke>
                <InnerMethodInvoke>dlSetRequestState;setString;[1, "I"]</InnerMethodInvoke>
                <InnerMethodInvoke>dlSetRequestState;setInt;[2, request]</InnerMethodInvoke>
                <InnerMethodInvoke>dlSetRequestState;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[dlSetRequestState]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;commit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>dlRecordDelivery;setInt;[1, request]</InnerMethodInvoke>
                <InnerMethodInvoke>dlRecordDelivery;executeBatch;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[dlRecordDelivery]</InnerMethodInvoke>
                <InnerMethodInvoke>dlCompleteDelivery;setInt;[1, request]</InnerMethodInvoke>
                <InnerMethodInvoke>dlCompleteDelivery;executeUpdate;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;reset;[dlCompleteDelivery]</InnerMethodInvoke>
                <InnerMethodInvoke>conn;commit;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sortOrderItems</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>items</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>quantities</ParamName>
                    <ParamType>short[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>supplyW</ParamName>
                    <ParamType>short[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>OrderItem4Sort[] [list=new OrderItem4Sort[items.length]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>java.util.Arrays;sort;[list]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>OrderItem4Sort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>i</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>q</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>w</ParamName>
                    <ParamType>short</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareTo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>OrderItem4Sort [oo=(OrderItem4Sort)o]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>