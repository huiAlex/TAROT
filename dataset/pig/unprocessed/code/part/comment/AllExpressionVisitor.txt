/**
 * A visitor that walks a logical plan and then applies a given
 * LogicalExpressionVisitor to all expressions it encounters.
 *
 */

/**
     * @param plan LogicalPlan to visit
     * @param walker Walker to use to visit the plan.
     */

/**
     * Get a new instance of the expression visitor to apply to 
     * a given expression.
     * @param expr LogicalExpressionPlan that will be visited
     * @return a new LogicalExpressionVisitor for that expression
     */

