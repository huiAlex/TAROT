/**
 * {@link ExecutableManager} manages an external executable which processes data
 * in a Pig query.
 *
 * The ExecutableManager is responsible for startup/teardown of
 * the external process and also for managing it. It feeds input records to the
 * executable via it's stdin, collects the output records from
 * the stdout and also diagnostic information from the
 * stdout.
 */

/**
     * Create a new {@link ExecutableManager}.
     */

/**
     * Configure and initialize the {@link ExecutableManager}.
     *
     * @param stream POStream operator
     *      *      */

/**
     * Close and cleanup the {@link ExecutableManager}.
     *      */

/**
     *  Helper function to close input and output streams
     *  to the process and kill it
     * @param process the process to be killed
     *      */

/**
     * Start execution of the external process.
     *
     * This takes care of setting up the environment of the process and also
     * starts ProcessErrorThread to process the stderr of
     * the managed process.
     *
     *      */

/**
     * Start execution of the {@link ExecutableManager}.
     *
     *      */

/**
     * The thread which consumes input from POStream's binaryInput queue
     * and feeds it to the the Process
     */

/**
     * The thread which gets output from the streaming binary and puts it onto
     * the binary output Queue of POStream
     */

/**
     * Workhorse to process the stderr stream of the managed process.
     *
     * By default ExecuatbleManager just sends out the received
     * error message to the stderr of itself.
     *
     * @param error
     *            error message from the managed process.
     */

