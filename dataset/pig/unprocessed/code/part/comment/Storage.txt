/**
   * @param objects
   * @return a tuple containing the provided objects
   */

/**
   * @param tuples
   * @return a bag containing the provided objects
   */

/**
   * @param input These params are alternating "key", "value". So the number of params MUST be even !!
   * Implementation is very similar to the TOMAP UDF.
   * So map("A", B, "C", D) generates a map "A"->B, "C"->D
   * @return a map containing the provided objects
   */

/**
   * @param schema
   * @return the schema represented by the string
   *    */

/**
   * reset the store and get the Data object to access it
   * @param pigServer
   * @return Data
   */

/**
   * reset the store and get the Data object to access it
   * @param context
   * @return data as Data
   */

/**
   * An isolated data store to avoid side effects
   *
   */

/**
     * to set the data in a location with a known schema
     *
     * @param location "where" to store the tuples
     * @param schema the schema of the data
     * @param data the tuples to store
     *      */

/**
     * to set the data in a location with a known schema
     *
     * @param location "where" to store the tuples
     * @param schema
     * @param data the tuples to store
     *      */

/**
     * to set the data in a location with a known schema
     *
     * @param location "where" to store the tuples
     * @param schema
     * @param data the tuples to store
     */

/**
     * to set the data in a location with a known schema
     *
     * @param location "where" to store the tuples
     * @param schema
     * @param data the tuples to store
     */

/**
     * to set the data in a location
     *
     * @param location "where" to store the tuples
     * @param data the tuples to store
     */

/**
     * to set the data in a location
     *
     * @param location "where" to store the tuples
     * @param data the tuples to store
     */

/**
     * to set the data in a location
     *
     * @param location "where" to store the tuples
     * @param data the tuples to store
     */

/**
     *
     * @param location
     * @return the data in this location
     */

/**
     *
     * @param location
     * @return the schema stored in this location
     */

/**
	 * to set the schema for a given location
	 * @param location
	 * @param schema
	 */

