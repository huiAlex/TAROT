/**
     * @return a Thread Local {@link UDFContext}
     */

/**
     * Get the System Properties (Read only) as on the client machine from where Pig
     * was launched. This will include command line properties passed at launch
     * time
     * @return client side System Properties including command line properties
     */

/**
     * Adds the JobConf to this singleton.  Will be
     * called on the backend by the Map and Reduce
     * functions so that UDFs can obtain the JobConf
     * on the backend.
     */

/**
     * Get the JobConf.  This should only be called on
     * the backend.  It will return null on the frontend.
     * @return JobConf for this job.  This is a copy of the
     * JobConf.  Nothing written here will be kept by the system.
     * getUDFConf should be used for recording UDF specific
     * information.
     */

/**
     * Serialize the UDF specific information into an instance
     * of JobConf.  This function is intended to be called on
     * the front end in preparation for sending the data to the
     * backend.
     * @param conf JobConf to serialize into
     *      */

/**
     * Populate the udfConfs field.  This function is intended to
     * be called by Map.configure or Reduce.configure on the backend.
     * It assumes that addJobConf has already been called.
     *      */

/**
     * Convenience method for UDF code to check where it runs (see PIG-2576)
     * @return boolean type value
     */

/**
     * Make a shallow copy of the context.
     */

/**
     * Class that acts as key for hashmap in UDFContext,
     *  it holds the class and args of the udf, and
     *  implements equals() and hashCode()
     */

