/**
     * Process expression plans of LOGenerate and set inputs relation
     * for the ProjectExpression
     * @param foreach
     * @param lp Logical plan in which the LOGenerate is in
     * @param plan One of the output expression of the LOGenerate
     * @param inputs  inputs of the LOGenerate
     *      */

/**
     * Parse the long given as a string such as "34L".
     */

/**
     * Parse big integer formatted string (e.g. "1234567890123BI") into BigInteger object
     */

/**
     * Parse big decimal formatted string (e.g. "123456.7890123BD") into BigDecimal object
     */

/**
     *  Build a project expression in foreach inner plan.
     *  The only difference here is that the projection can be for an expression alias, for which
     *  we will return whatever the expression alias represents.
     *      */

/**
     * Build a project expression for a projection present in global plan (not in nested foreach plan).
     *      */

/**
     * Build a project expression that projects a range of columns
     * @param loc
     * @param plan
     * @param relOp
     * @param input
     * @param startExpr the first expression to be projected, null
     *        if everything from first is to be projected
     * @param endExpr the last expression to be projected, null
     *        if everything to the end is to be projected
     * @return project expression
     *      */

/**
     * For any UNKNOWN type in the schema fields, set the type to BYTEARRAY
     * @param sch
     */

