/**
 * EvalFunc that wraps an implementation of the Function interface, which is passed as a String
 * in the constructor. When resolving the Function class, the Pig UDF package import list is used.
 * 
 * The Function must have a default no-arg constructor, which will be used. For Functions that
 * take args in the constructor, initialize the function in a subclass of this one and call
 * super(function).
 * 
 * Example: DEFINE myUdf FunctionWrapperEvalFunc('MyFunction')
 *
 */

/**
     * Takes the class name of a Function, initializes it using the default constructor and passes
     * it to FunctionWrapperEvalFunc(ExceptionalFunction function). Functions must implement either
     * com.google.common.base.Function or ExceptionalFunction.
     * @param functionClassName function class to initialize
     */

/**
     * Determines the input and output types of the Function and initializes the superclass.
     * Subclass and call this constructor if a Function with a non-default constructor is required.
     * @param function Function to be used by the UDF.
     */

/**
     * Determines the input and output types of the Function and initializes the superclass.
     * Subclass and call this constructor if a Function with a non-default constructor is required.
     * @param function Function to be used by the UDF.
     */

/**
     * For a given class that implements the parameterized interface ExceptionalFunction,
     * return the type class at the index position. If the Function class, is
     * GoogleFunctionBridge, return the type class for the wrapped function.
     */

/**
     * Used so we can handle both Google's Function as well as an Pig's ExceptionalFunction.
     */

