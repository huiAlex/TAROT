<Class>
    <Id>1290</Id>
    <Package>org.apache.pig.newplan.logical.rules</Package>
    <ClassName>SplitFilter</ClassName>
    <SuperClass>Rule</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>subPlan</FieldName>
            <FieldType>OperatorSubPlan</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SplitFilter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>n</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewTransformer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transformer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>check</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matched</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LOFilter [filter=(LOFilter)matched.getSources().get(0)]</InnerVar>
                <InnerVar>LogicalExpressionPlan [cond=filter.getFilterPlan()]</InnerVar>
                <InnerVar>LogicalExpression [root=(LogicalExpression)cond.getSources().get(0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matched</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LOFilter [filter=(LOFilter)matched.getSources().get(0)]</InnerVar>
                <InnerVar>LogicalExpressionPlan [cond=filter.getFilterPlan()]</InnerVar>
                <InnerVar>LogicalExpression [root=(LogicalExpression)cond.getSources().get(0)]</InnerVar>
                <InnerVar>LogicalExpressionPlan [op1=new LogicalExpressionPlan()]</InnerVar>
                <InnerVar>LogicalExpressionPlan [op2=new LogicalExpressionPlan()]</InnerVar>
                <InnerVar>LOFilter [filter2=new LOFilter((LogicalPlan)currentPlan,op2)]</InnerVar>
                <InnerVar>Operator [succed=null]</InnerVar>
                <InnerVar>List&lt;Operator&gt; [succeds=currentPlan.getSuccessors(filter)]</InnerVar>
                <InnerVar>Iterator&lt;Operator&gt; [iter=filter2.getFilterPlan().getOperators()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>op1;add;[(LogicalExpression)cond.getSuccessors(root).get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;fillSubPlan;[cond, op1, (LogicalExpression)cond.getSuccessors(root).get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>op2;add;[(LogicalExpression)cond.getSuccessors(root).get(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>null;fillSubPlan;[cond, op2, (LogicalExpression)cond.getSuccessors(root).get(1)]</InnerMethodInvoke>
                <InnerMethodInvoke>filter;setFilterPlan;[op1]</InnerMethodInvoke>
                <InnerMethodInvoke>currentPlan;add;[filter2]</InnerMethodInvoke>
                <InnerMethodInvoke>subPlan;add;[filter]</InnerMethodInvoke>
                <InnerMethodInvoke>subPlan;add;[filter2]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reportChanges</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorPlan</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fillSubPlan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>origPlan</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>subPlan</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>startOp</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Operator&gt; [l=origPlan.getSuccessors(startOp)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildPattern</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorPlan</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlan [plan=new LogicalPlan()]</InnerVar>
                <InnerVar>LogicalRelationalOperator [op2=new LOFilter(plan)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>plan;add;[op2]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>