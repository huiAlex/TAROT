<Class>
    <Id>1203</Id>
    <Package>org.apache.pig.piggybank.storage</Package>
    <ClassName>CSVExcelStorage</ClassName>
    <SuperClass>PigStorage</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>StoreFuncInterface</SuperInterface>
        <SuperInterface>LoadPushDown</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CSVExcelStorage  /** 
 * CSV loading and storing with support for multi-line fields,  and escaping of delimiters and double quotes within fields;  uses CSV conventions of Excel 2007. Arguments allow for control over: Which field delimiter to use (default = ',') Whether line breaks are allowed inside of fields (YES_MULTILINE = yes, NO_MULTILINE = no, default = no) How line breaks are to be written when storing (UNIX = LF, WINDOWS = CRLF, NOCHANGE = system default, default = system default) What to do with header rows (first line of each file): On load: READ_INPUT_HEADER = read header rows, SKIP_INPUT_HEADER = do not read header rows, default = read header rows On store: WRITE_OUTPUT_HEADER = write a header row, SKIP_OUTPUT_HEADER = do not write a header row, default = do not write a header row Usage: STORE x INTO '&lt;destFileName&gt;' USING org.apache.pig.piggybank.storage.CSVExcelStorage( [DELIMITER[,  {YES_MULTILINE | NO_MULTILINE}[,  {UNIX | WINDOWS | NOCHANGE}[,  {READ_INPUT_HEADER, SKIP_INPUT_HEADER, WRITE_OUTPUT_HEADER, SKIP_OUTPUT_HEADER}]]]] ); Linebreak settings are only used during store; during load, no conversion is performed. WARNING: A danger with enabling multiline fields during load is that unbalanced double quotes will cause slurping up of input until a balancing double quote is found, or until something breaks. If you are not expecting newlines within fields it is therefore more robust to use NO_MULTILINE, which is the default for that reason. This is Adreas Paepcke's &lt;paepcke@cs.stanford.edu&gt; CSVExcelStorage with a few modifications.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LINEFEED</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>CARRIAGE_RETURN</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>DOUBLE_QUOTE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>RECORD_DEL</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_DELIMITER_DEFAULT_STR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>MULTILINE_DEFAULT_STR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>EOL_DEFAULT_STR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>HEADER_DEFAULT_STR</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>end</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>fieldDelimiter</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>multilineTreatment</FieldName>
            <FieldType>Multiline</FieldType>
        </Field>
        <Field>
            <FieldName>eolTreatment</FieldName>
            <FieldType>Linebreaks</FieldType>
        </Field>
        <Field>
            <FieldName>headerTreatment</FieldName>
            <FieldType>Headers</FieldType>
        </Field>
        <Field>
            <FieldName>mProtoTuple</FieldName>
            <FieldType>ArrayList</FieldType>
        </Field>
        <Field>
            <FieldName>mProtoTuple</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>mTupleFactory</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>udfContextSignature</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>loadLocation</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mRequiredColumns</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>mRequiredColumnsInitialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>logger</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>in</FieldName>
            <FieldType>RecordReader</FieldType>
        </Field>
        <Field>
            <FieldName>loneLFDetectorPattern</FieldName>
            <FieldType>Pattern</FieldType>
        </Field>
        <Field>
            <FieldName>loneLFDetector</FieldName>
            <FieldType>Matcher</FieldType>
        </Field>
        <Field>
            <FieldName>CRLFDetectorPattern</FieldName>
            <FieldType>Pattern</FieldType>
        </Field>
        <Field>
            <FieldName>CRLFDetector</FieldName>
            <FieldType>Matcher</FieldType>
        </Field>
        <Field>
            <FieldName>tupleMaker</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>getNextInQuotedField</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>getNextFieldID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>nextTupleSkipChar</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>loadingFirstRecord</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>storingFirstRecord</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>header</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>splitIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SCHEMA_SIGNATURE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>schema</FieldName>
            <FieldType>ResourceSchema</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>CSVExcelStorage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initializeInstance;[FIELD_DELIMITER_DEFAULT_STR, MULTILINE_DEFAULT_STR, EOL_DEFAULT_STR, HEADER_DEFAULT_STR]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CSVExcelStorage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>delimiter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initializeInstance;[delimiter, MULTILINE_DEFAULT_STR, EOL_DEFAULT_STR, HEADER_DEFAULT_STR]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CSVExcelStorage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>delimiter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>multilineTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initializeInstance;[delimiter, multilineTreatmentStr, EOL_DEFAULT_STR, HEADER_DEFAULT_STR]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CSVExcelStorage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>delimiter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>multilineTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eolTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initializeInstance;[delimiter, multilineTreatmentStr, eolTreatmentStr, HEADER_DEFAULT_STR]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CSVExcelStorage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>delimiter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>multilineTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eolTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>headerTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initializeInstance;[delimiter, multilineTreatmentStr, eolTreatmentStr, headerTreatmentStr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initializeInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>delimiter</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>multilineTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eolTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>headerTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>canonicalizeMultilineTreatmentRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Multiline</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>multilineTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>canonicalizeEOLTreatmentRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Linebreaks</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>eolTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>canonicalizeHeaderTreatmentRequest</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Headers</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>headerTreatmentStr</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>ResourceSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UDFContext [udfc=UDFContext.getUDFContext()]</InnerVar>
                <InnerVar>Properties [p=udfc.getUDFProperties(this.getClass(),new String[]{udfContextSignature})]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>p;setProperty;[SCHEMA_SIGNATURE, s.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepareToWrite</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>writer</ParamName>
                    <ParamType>RecordWriter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>UDFContext [udfc=UDFContext.getUDFContext()]</InnerVar>
                <InnerVar>Properties [p=udfc.getUDFProperties(this.getClass(),new String[]{udfContextSignature})]</InnerVar>
                <InnerVar>String [strSchema=p.getProperty(SCHEMA_SIGNATURE)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>putNext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tupleToWrite</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArrayList&lt;Object&gt; [mProtoTuple=new ArrayList&lt;Object&gt;()]</InnerVar>
                <InnerVar>int [embeddedNewlineIndex=-1]</InnerVar>
                <InnerVar>int [embeddedCarriageReturn=-1]</InnerVar>
                <InnerVar>String [fieldStr=null]</InnerVar>
                <InnerVar>int [fieldCounter=-1]</InnerVar>
                <InnerVar>Tuple [resTuple=tupleMaker.newTuple(mProtoTuple)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [evenQuotesSeen=true]</InnerVar>
                <InnerVar>boolean [sawEmbeddedRecordDelimiter=false]</InnerVar>
                <InnerVar>byte[] [buf=null]</InnerVar>
                <InnerVar>Tuple [t=mTupleFactory.newTupleNoCopy(mProtoTuple)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processOneInRecord</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>evenQuotesSeen</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>buf</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>recordLen</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldBuffer</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readField</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>buf</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fieldID</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>buf;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setLocation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>location</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>Job</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>FileInputFormat;setInputPaths;[job, location]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInputFormat</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InputFormat</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepareToRead</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>RecordReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>split</ParamName>
                    <ParamType>PigSplit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pushProjection</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RequiredFieldResponse</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>requiredFieldList</ParamName>
                    <ParamType>RequiredFieldList</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUDFContextSignature</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>signature</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStoreFuncUDFContextSignature</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>signature</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFeatures</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorSet</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>