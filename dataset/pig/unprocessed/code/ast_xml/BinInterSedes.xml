<Class>
    <Id>398</Id>
    <Package>org.apache.pig.data</Package>
    <ClassName>BinInterSedes</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>InterSedes</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BinInterSedes  /** 
 * A class to handle reading and writing of intermediate results of data types. The serialization format used by this class more efficient than what was used in DataReaderWriter . The format used by the functions in this class is subject to change, so it should be used ONLY to store intermediate results within a pig query.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>ONE_MINUTE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BOOLEAN_TRUE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>BOOLEAN_FALSE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>BYTE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>INTEGER</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>INTEGER_0</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>INTEGER_1</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>INTEGER_INSHORT</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>INTEGER_INBYTE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>LONG</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>FLOAT</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>DOUBLE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>BYTEARRAY</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SMALLBYTEARRAY</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TINYBYTEARRAY</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>CHARARRAY</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SMALLCHARARRAY</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>MAP</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SMALLMAP</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TINYMAP</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SMALLTUPLE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TINYTUPLE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>BAG</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SMALLBAG</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TINYBAG</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>GENERIC_WRITABLECOMPARABLE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>INTERNALMAP</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>NULL</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SCHEMA_TUPLE_BYTE_INDEX</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SCHEMA_TUPLE_SHORT_INDEX</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>SCHEMA_TUPLE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>LONG_INBYTE</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>LONG_INSHORT</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>LONG_ININT</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>LONG_0</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>LONG_1</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_0</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_1</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_2</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_3</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_4</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_5</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_6</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_7</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_8</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_9</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>BIGINTEGER</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>BIGDECIMAL</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>DATETIME</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>mTupleFactory</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>mBagFactory</FieldName>
            <FieldType>BagFactory</FieldType>
        </Field>
        <Field>
            <FieldName>UNSIGNED_SHORT_MAX</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UNSIGNED_BYTE_MAX</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UTF8</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mLog</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>mAsc</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>mSecondaryAsc</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTY_ASC</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>mWholeTuple</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>mIsSecondarySort</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>mHasNullField</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>mFact</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>mSedes</FieldName>
            <FieldType>InterSedes</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>readTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSchemaTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [id]</InnerVar>
                <InnerVar>Tuple [st=SchemaTupleFactory.getInstance(id).newTuple()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>st;readFields;[in]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTupleSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [sz]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readBag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataBag [bag=mBagFactory.newDefaultBag()]</InnerVar>
                <InnerVar>long [size]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [size]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [m=new HashMap&lt;String,Object&gt;(size)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readInternalMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InternalMap</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [size=in.readInt()]</InnerVar>
                <InnerVar>InternalMap [m=new InternalMap(size)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readWritable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>WritableComparable</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [className=(String)readDatum(in)]</InnerVar>
                <InnerVar>Class&lt;?&gt; [objClass=null]</InnerVar>
                <InnerVar>WritableComparable [writable=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>writable;readFields;[in]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readDatum</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>byte [b=in.readByte()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readBytes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>size</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>byte[] [ba=new byte[size]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>in;readFully;[ba]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readDatum</MethodName>
            <MethodComment>/** 
 * Expects binInterSedes data types (NOT DataType types!) &lt;p&gt;
 * @see org.apache.pig.data.InterSedes#readDatum(java.io.DataInput,byte)
 */
</MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readBigDecimal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readBigInteger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeBigInteger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bi</ParamName>
                    <ParamType>BigInteger</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;writeDatum;[out, bi.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeBigDecimal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bd</ParamName>
                    <ParamType>BigDecimal</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;writeDatum;[out, bd.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDatum</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>byte [type=DataType.findType(val)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;writeDatum;[out, val, type]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDatum</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>m</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [sz=m.size()]</InnerVar>
                <InnerVar>Iterator&lt;Map.Entry&lt;String,Object&gt;&gt; [i=m.entrySet().iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeBag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bag</ParamName>
                    <ParamType>DataBag</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [sz=bag.size()]</InnerVar>
                <InnerVar>Iterator&lt;Tuple&gt; [it=bag.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>DataOutput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addColsToTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>byte [type=in.readByte()]</InnerVar>
                <InnerVar>int [sz=getTupleSize(in,type)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BinInterSedesTupleRawComparator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getConf</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Configuration</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setConf</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasComparedTupleNull</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment>/** 
 * Compare two BinSedesTuples as raw bytes. We assume the Tuples are NOT PigNullableWritable, so client classes need to deal with Null and Index.
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>b1</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>l1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>b2</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>s2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>l2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [rc=0]</InnerVar>
                <InnerVar>ByteBuffer [bb1=ByteBuffer.wrap(b1,s1,l1)]</InnerVar>
                <InnerVar>ByteBuffer [bb2=ByteBuffer.wrap(b2,s2,l2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareBinSedesTuple</MethodName>
            <MethodComment>/** 
 * Compare two BinSedesTuples as raw bytes. We deal with sort ordering in this method.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb1</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bb2</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [s1=bb1.position()]</InnerVar>
                <InnerVar>int [s2=bb2.position()]</InnerVar>
                <InnerVar>int [result=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareBinInterSedesDatum</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb1</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bb2</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>asc</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [rc=0]</InnerVar>
                <InnerVar>byte [type1, type2]</InnerVar>
                <InnerVar>byte [dt1=bb1.get()]</InnerVar>
                <InnerVar>byte [dt2=bb2.get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>WritableComparable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>WritableComparable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Tuple [t1=(Tuple)o1]</InnerVar>
                <InnerVar>Tuple [t2=(Tuple)o2]</InnerVar>
                <InnerVar>int [result=0]</InnerVar>
                <InnerVar>int [tsz1=t1.size()]</InnerVar>
                <InnerVar>int [tsz2=t2.size()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareDatum</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>asc</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [rc=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareBinInterSedesGenericWritableComparable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb1</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bb2</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataInputBuffer [buffer1=new DataInputBuffer()]</InnerVar>
                <InnerVar>DataInputBuffer [buffer2=new DataInputBuffer()]</InnerVar>
                <InnerVar>Comparable [writable1=(Comparable)mSedes.readDatum(buffer1)]</InnerVar>
                <InnerVar>Comparable [writable2=(Comparable)mSedes.readDatum(buffer2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>buffer1;reset;[bb1.array(), bb1.position(), bb1.remaining()]</InnerMethodInvoke>
                <InnerMethodInvoke>buffer2;reset;[bb2.array(), bb2.position(), bb2.remaining()]</InnerMethodInvoke>
                <InnerMethodInvoke>bb1;position;[buffer1.getPosition()]</InnerMethodInvoke>
                <InnerMethodInvoke>bb2;position;[buffer2.getPosition()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareBinInterSedesBag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb1</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bb2</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dt1</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dt2</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [s1=bb1.position()]</InnerVar>
                <InnerVar>int [s2=bb2.position()]</InnerVar>
                <InnerVar>int [l1=bb1.remaining()]</InnerVar>
                <InnerVar>int [l2=bb2.remaining()]</InnerVar>
                <InnerVar>int [bsz1=readSize(bb1,dt1)]</InnerVar>
                <InnerVar>int [bsz2=readSize(bb2,dt2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compareBinInterSedesMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb1</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bb2</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dt1</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dt2</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [s1=bb1.position()]</InnerVar>
                <InnerVar>int [s2=bb2.position()]</InnerVar>
                <InnerVar>int [l1=bb1.remaining()]</InnerVar>
                <InnerVar>int [l2=bb2.remaining()]</InnerVar>
                <InnerVar>int [bsz1=readSize(bb1,dt1)]</InnerVar>
                <InnerVar>int [bsz2=readSize(bb2,dt2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGeneralizedDataType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readLong</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>long</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [bytesToRead=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readInt</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSize</MethodName>
            <MethodComment>/** 
 * @param bb ByteBuffer having serialized object, including the type information
 * @param type serialized type information
 * @return the size of this type
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readSize</MethodName>
            <MethodComment>/** 
 * @param bb ByteBuffer having serialized object, minus the type information
 * @param type serialized type information
 * @return the size of this type
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnsignedShort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUnsignedByte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bb</ParamName>
                    <ParamType>ByteBuffer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTupleRawComparatorClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends TupleRawComparator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>DataInput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isTupleByte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>b</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>