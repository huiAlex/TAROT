<Class>
    <Id>518</Id>
    <Package>org.apache.pig.piggybank.evaluation.string</Package>
    <ClassName>LookupInFiles</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LookupInFiles  /** 
 * &lt;dl&gt; &lt;dt&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;&lt;code&gt;int lookupInFiles(String expression,... &lt;comma separated filelist&gt;)&lt;/code&gt;.&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Input:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;&lt;code&gt;files are text files on DFS&lt;/code&gt;.&lt;/dd&gt; &lt;dt&gt;&lt;b&gt;Output:&lt;/b&gt;&lt;/dt&gt; &lt;dd&gt;&lt;code&gt;if any file contains expression, return 1, otherwise, 0&lt;/code&gt;.&lt;/dd&gt; &lt;/dl&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>initialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>mFiles</FieldName>
            <FieldType>ArrayList</FieldType>
        </Field>
        <Field>
            <FieldName>mFiles</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mKeys</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>mKeys</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mTables</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>mTables</FieldName>
            <FieldType>ArrayList&lt;String&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>outputSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Schema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>