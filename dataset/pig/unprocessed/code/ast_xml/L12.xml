<Class>
    <Id>200</Id>
    <Package>org.apache.pig.test.pigmix.mapreduce</Package>
    <ClassName>L12</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>map</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>k</ParamName>
                    <ParamType>LongWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oc</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reporter</ParamName>
                    <ParamType>Reporter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Text&gt; [fields=Library.splitLine(val,'')]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reduce</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iter</ParamName>
                    <ParamType>DoubleWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oc</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reporter</ParamName>
                    <ParamType>Reporter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>double [max=Double.NEGATIVE_INFINITY]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>oc;collect;[key, new DoubleWritable(max)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>map</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>k</ParamName>
                    <ParamType>LongWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oc</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reporter</ParamName>
                    <ParamType>Reporter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Text&gt; [fields=Library.splitLine(val,'')]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reduce</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iter</ParamName>
                    <ParamType>LongWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oc</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reporter</ParamName>
                    <ParamType>Reporter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [sum=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>oc;collect;[key, new LongWritable(sum)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>map</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>k</ParamName>
                    <ParamType>LongWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oc</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reporter</ParamName>
                    <ParamType>Reporter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Text&gt; [fields=Library.splitLine(val,'')]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>oc;collect;[fields.get(1), new LongWritable(1)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reduce</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iter</ParamName>
                    <ParamType>LongWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>oc</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>reporter</ParamName>
                    <ParamType>Reporter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>long [cnt=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>oc;collect;[key, new LongWritable(cnt)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>main</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>args</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [inputDir=args[0]]</InnerVar>
                <InnerVar>String [outputDir=args[1]]</InnerVar>
                <InnerVar>String [parallel=args[2]]</InnerVar>
                <InnerVar>String [user=System.getProperty("user.name")]</InnerVar>
                <InnerVar>JobConf [lp=new JobConf(L12.class)]</InnerVar>
                <InnerVar>Properties [props=System.getProperties()]</InnerVar>
                <InnerVar>Job [loadPages=new Job(lp)]</InnerVar>
                <InnerVar>JobConf [lu=new JobConf(L12.class)]</InnerVar>
                <InnerVar>Job [loadUsers=new Job(lu)]</InnerVar>
                <InnerVar>JobConf [join=new JobConf(L12.class)]</InnerVar>
                <InnerVar>Job [joinJob=new Job(join)]</InnerVar>
                <InnerVar>JobControl [jc=new JobControl("L12 join")]</InnerVar>
                <InnerVar>int [i=0]</InnerVar>
                <InnerVar>ArrayList&lt;Job&gt; [failures=jc.getFailedJobs()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>lp;setJobName;["L12 Find Highest Value Page Per User"]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setInputFormat;[TextInputFormat.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setOutputKeyClass;[Text.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setOutputValueClass;[DoubleWritable.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setMapperClass;[HighestValuePagePerUser.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setCombinerClass;[HighestValuePagePerUser.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setReducerClass;[HighestValuePagePerUser.class]</InnerMethodInvoke>
                <InnerMethodInvoke>FileInputFormat;addInputPath;[lp, new Path(inputDir + "/page_views")]</InnerMethodInvoke>
                <InnerMethodInvoke>FileOutputFormat;setOutputPath;[lp, new Path(outputDir + "/highest_value_page_per_user")]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;setNumReduceTasks;[Integer.parseInt(parallel)]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setJobName;["L12 Find Total Timespent per Term"]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setInputFormat;[TextInputFormat.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setOutputKeyClass;[Text.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setOutputValueClass;[LongWritable.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setMapperClass;[TotalTimespentPerTerm.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setCombinerClass;[TotalTimespentPerTerm.class]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setReducerClass;[TotalTimespentPerTerm.class]</InnerMethodInvoke>
                <InnerMethodInvoke>FileInputFormat;addInputPath;[lu, new Path(inputDir + "/page_views")]</InnerMethodInvoke>
                <InnerMethodInvoke>FileOutputFormat;setOutputPath;[lu, new Path(outputDir + "/total_timespent_per_term")]</InnerMethodInvoke>
                <InnerMethodInvoke>lu;setNumReduceTasks;[Integer.parseInt(parallel)]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setJobName;["L12 Find Queries Per Action"]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setInputFormat;[TextInputFormat.class]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setOutputKeyClass;[Text.class]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setOutputValueClass;[LongWritable.class]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setMapperClass;[QueriesPerAction.class]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setCombinerClass;[QueriesPerAction.class]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setReducerClass;[QueriesPerAction.class]</InnerMethodInvoke>
                <InnerMethodInvoke>FileInputFormat;addInputPath;[join, new Path(inputDir + "/page_views")]</InnerMethodInvoke>
                <InnerMethodInvoke>FileOutputFormat;setOutputPath;[join, new Path(outputDir + "/queries_per_action")]</InnerMethodInvoke>
                <InnerMethodInvoke>join;setNumReduceTasks;[Integer.parseInt(parallel)]</InnerMethodInvoke>
                <InnerMethodInvoke>jc;addJob;[loadPages]</InnerMethodInvoke>
                <InnerMethodInvoke>jc;addJob;[loadUsers]</InnerMethodInvoke>
                <InnerMethodInvoke>jc;addJob;[joinJob]</InnerMethodInvoke>
                <InnerMethodInvoke>new Thread(jc);start;[]</InnerMethodInvoke>
                <InnerMethodInvoke>jc;stop;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>