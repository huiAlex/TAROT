<Class>
    <Id>451</Id>
    <Package>org.apache.pig.parser</Package>
    <ClassName>QueryParserUtils</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>removeQuotes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>str</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>attachStorePlan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scope</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lp</ParamName>
                    <ParamType>LogicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>func</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pigContext</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FuncSpec [funcSpec=new FuncSpec(func)]</InnerVar>
                <InnerVar>StoreFuncInterface [stoFunc=(StoreFuncInterface)PigContext.instantiateFuncFromSpec(funcSpec)]</InnerVar>
                <InnerVar>FileSpec [fileSpec=new FileSpec(fileName,funcSpec)]</InnerVar>
                <InnerVar>String [sig=alias + "_" + LogicalPlanBuilder.newOperatorKey(scope)]</InnerVar>
                <InnerVar>boolean [disambiguationEnabled=Boolean.parseBoolean(pigContext.getProperties().getProperty(PigConfiguration.PIG_STORE_SCHEMA_DISAMBIGUATE,PigConfiguration.PIG_STORE_SCHEMA_DISAMBIGUATE_DEFAULT))]</InnerVar>
                <InnerVar>LOStore [store=new LOStore(lp,fileSpec,stoFunc,sig,disambiguationEnabled)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>stoFunc;setStoreFuncUDFContextSignature;[sig]</InnerMethodInvoke>
                <InnerMethodInvoke>store;setAlias;[alias]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;add;[store]</InnerMethodInvoke>
                <InnerMethodInvoke>lp;connect;[input, store]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentDir</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Path</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pigContext</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataStorage [dfs=pigContext.getDfs()]</InnerVar>
                <InnerVar>ContainerDescriptor [desc=dfs.getActiveContainer()]</InnerVar>
                <InnerVar>ElementDescriptor [el=dfs.asElement(desc)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setHdfsServers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>absolutePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pigContext</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [defaultFS=(String)pigContext.getProperties().get("fs.defaultFS")]</InnerVar>
                <InnerVar>URI [defaultFSURI=new URI(defaultFS)]</InnerVar>
                <InnerVar>Configuration [conf=new Configuration(true)]</InnerVar>
                <InnerVar>Set&lt;String&gt; [remoteHosts=getRemoteHosts(absolutePath,defaultFSURI,conf)]</InnerVar>
                <InnerVar>String [hdfsServersString=(String)pigContext.getProperties().get(MRConfiguration.JOB_HDFS_SERVERS)]</InnerVar>
                <InnerVar>String [hdfsServers[]=hdfsServersString.split(",")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ConfigurationUtil;mergeConf;[conf, ConfigurationUtil.toConfiguration(pigContext.getProperties())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>URISyntaxException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRemoteHosts</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>absolutePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultFSURI</ParamName>
                    <ParamType>URI</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [defaultHost=defaultFSURI.getHost() == null ? "" : defaultFSURI.getHost().toLowerCase()]</InnerVar>
                <InnerVar>String [defaultScheme=defaultFSURI.getScheme() == null ? "" : defaultFSURI.getScheme().toLowerCase()]</InnerVar>
                <InnerVar>Set&lt;String&gt; [result=new HashSet&lt;String&gt;()]</InnerVar>
                <InnerVar>String[] [fnames=absolutePath.split(",")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>constructFileNameSignature</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>funcSpec</ParamName>
                    <ParamType>FuncSpec</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateErrorHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ex</ParamName>
                    <ParamType>RecognitionException</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filename</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceNodeWithNodeList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oldNode</ParamName>
                    <ParamType>Tree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newTree</ParamName>
                    <ParamType>CommonTree</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [idx=oldNode.getChildIndex()]</InnerVar>
                <InnerVar>CommonTree [parent=(CommonTree)oldNode.getParent()]</InnerVar>
                <InnerVar>int [count=parent.getChildCount()]</InnerVar>
                <InnerVar>List [childList=new ArrayList(parent.getChildren())]</InnerVar>
                <InnerVar>List [macroList=newTree.getChildren()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFileFromImportSearchPath</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>File</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scriptPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [f=new File(scriptPath)]</InnerVar>
                <InnerVar>ScriptState [state=ScriptState.get()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createParser</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryParser</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tokens</ParamName>
                    <ParamType>CommonTokenStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createParser</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>QueryParser</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tokens</ParamName>
                    <ParamType>CommonTokenStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lineOffset</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>QueryParser [parser=new QueryParser(tokens)]</InnerVar>
                <InnerVar>PigParserNodeAdaptor [adaptor=new PigParserNodeAdaptor(tokens.getSourceName(),lineOffset)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>parser;setTreeAdaptor;[adaptor]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>