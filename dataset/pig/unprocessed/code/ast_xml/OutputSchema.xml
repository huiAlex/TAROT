<Class>
    <Id>962</Id>
    <Package>org.apache.pig.builtin</Package>
    <ClassName>OutputSchema</ClassName>
    <ClassComment>OutputSchema  /** 
 * An EvalFunc can annotated with an &lt;code&gt;OutputSchema&lt;/code&gt; to tell Pig what the expected output is. This can be used in place of  {@link EvalFunc#outputSchema(Schema)}&lt;p&gt; The default implementation of  {@link EvalFunc#outputSchema(Schema)}will look at this annotation and return an interpreted schema, if the annotation is present. &lt;p&gt; Implementing a custom  {@link EvalFunc#outputSchema(Schema)} willoverride the annotation (unless you deal with it explicitly, or by calling &lt;code&gt;super.outputSchema(schema)&lt;/code&gt;). &lt;p&gt; Here's an example of a complex schema declared in an annotation: &lt;code&gt;@OutputSchema("y:bag{t:tuple(len:int,word:chararray)}")&lt;/code&gt;
 */
</ClassComment>
    <FieldList/>
    <MethodList/>
</Class>