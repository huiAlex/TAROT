<Class>
    <Id>822</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.spark.converter</Package>
    <ClassName>SkewedJoinConverter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RDDConverter</SuperInterface>
        <SuperInterface>Tuple</SuperInterface>
        <SuperInterface>Serializable</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>LRs</FieldName>
            <FieldType>POLocalRearrange[]</FieldType>
        </Field>
        <Field>
            <FieldName>poSkewedJoin</FieldName>
            <FieldType>POSkewedJoin</FieldType>
        </Field>
        <Field>
            <FieldName>skewedJoinPartitionFile</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>innerFlags</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>schemaSize</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>keyDist</FieldName>
            <FieldType>Broadcast</FieldType>
        </Field>
        <Field>
            <FieldName>keyDist</FieldName>
            <FieldType>List&lt;Tuple&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>initialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>reducerMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>reducerMap</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>in</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>in</FieldName>
            <FieldType>Tuple2&lt;PartitionIndexedKey,Tuple2&lt;L,R&gt;&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>partitionId</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>poSkewedJoin</FieldName>
            <FieldType>SkewedJoinConverter</FieldType>
        </Field>
        <Field>
            <FieldName>keyDist</FieldName>
            <FieldType>Broadcast</FieldType>
        </Field>
        <Field>
            <FieldName>keyDist</FieldName>
            <FieldType>List&lt;Tuple&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>defaultParallelism</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>initialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>reducerMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>reducerMap</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>parallelism</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>currentIndexMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>currentIndexMap</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>poSkewedJoin</FieldName>
            <FieldType>SkewedJoinConverter</FieldType>
        </Field>
        <Field>
            <FieldName>keyDist</FieldName>
            <FieldType>Broadcast</FieldType>
        </Field>
        <Field>
            <FieldName>keyDist</FieldName>
            <FieldType>List&lt;Tuple&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>defaultParallelism</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>initialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>reducerMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>reducerMap</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>parallelism</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>numPartitions</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setSkewedJoinPartitionFile</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>partitionFile</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convert</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>predecessors</ParamName>
                    <ParamType>RDD&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>poSkewedJoin</ParamName>
                    <ParamType>POSkewedJoin</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RDD&lt;Tuple&gt; [rdd1=predecessors.get(0)]</InnerVar>
                <InnerVar>RDD&lt;Tuple&gt; [rdd2=predecessors.get(1)]</InnerVar>
                <InnerVar>Broadcast&lt;List&lt;Tuple&gt;&gt; [keyDist=SparkPigContext.get().getBroadcastedVars().get(skewedJoinPartitionFile)]</InnerVar>
                <InnerVar>Integer [defaultParallelism=SparkPigContext.get().getParallelism(predecessors,poSkewedJoin)]</InnerVar>
                <InnerVar>SkewPartitionIndexKeyFunction [skewFun=new SkewPartitionIndexKeyFunction(this,keyDist,defaultParallelism)]</InnerVar>
                <InnerVar>RDD&lt;Tuple2&lt;PartitionIndexedKey,Tuple&gt;&gt; [skewIdxKeyRDD=rdd1.map(skewFun,SparkUtil.&lt;PartitionIndexedKey,Tuple&gt;getTuple2Manifest())]</InnerVar>
                <InnerVar>JavaPairRDD&lt;PartitionIndexedKey,Tuple&gt; [skewIndexedJavaPairRDD=new JavaPairRDD&lt;PartitionIndexedKey,Tuple&gt;(skewIdxKeyRDD,SparkUtil.getManifest(PartitionIndexedKey.class),SparkUtil.getManifest(Tuple.class))]</InnerVar>
                <InnerVar>StreamPartitionIndexKeyFunction [streamFun=new StreamPartitionIndexKeyFunction(this,keyDist,defaultParallelism)]</InnerVar>
                <InnerVar>JavaRDD&lt;Tuple2&lt;PartitionIndexedKey,Tuple&gt;&gt; [streamIdxKeyJavaRDD=rdd2.toJavaRDD().flatMap(streamFun)]</InnerVar>
                <InnerVar>JavaPairRDD&lt;PartitionIndexedKey,Tuple&gt; [streamIndexedJavaPairRDD=new JavaPairRDD&lt;PartitionIndexedKey,Tuple&gt;(streamIdxKeyJavaRDD.rdd(),SparkUtil.getManifest(PartitionIndexedKey.class),SparkUtil.getManifest(Tuple.class))]</InnerVar>
                <InnerVar>JavaRDD&lt;Tuple&gt; [result=doJoin(skewIndexedJavaPairRDD,streamIndexedJavaPairRDD,buildPartitioner(keyDist,defaultParallelism),keyDist)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>SparkUtil;assertPredecessorSize;[predecessors, poSkewedJoin, 2]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createJoinPlans;[poSkewedJoin.getJoinPlans()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createJoinPlans</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inpPlans</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [i=-1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PlanException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>genKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorKey</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ToValueFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>innerFlags</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>schemaSize</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDist</ParamName>
                    <ParamType>List&lt;Tuple&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Tuple2TransformIterable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple2&lt;PartitionIndexedKey,Tuple2&lt;L,R&gt;&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>next</ParamName>
                    <ParamType>PartitionIndexedKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple2&lt;PartitionIndexedKey,Tuple2&lt;L,R&gt;&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFirstReduceKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pKey</ParamName>
                    <ParamType>PartitionIndexedKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Pair&lt;Integer,Integer&gt; [indexes=reducerMap.get(pKey.getKey())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>loadKeyDistribution</MethodName>
            <MethodComment>/** 
 * Utility function. 1. Get parallelism 2. build a key distribution map from the broadcasted key distribution file
 * @param keyDist
 * @param totalReducers
 * @return
 */
</MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyDist</ParamName>
                    <ParamType>List&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>totalReducers</ParamName>
                    <ParamType>Integer[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;Tuple,Pair&lt;Integer,Integer&gt;&gt; [reducerMap=new HashMap&lt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PartitionIndexedKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PartitionIndexedKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pid</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPartitionId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setPartitionId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pid</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>toString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SkewPartitionIndexKeyFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>poSkewedJoin</ParamName>
                    <ParamType>SkewedJoinConverter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDist</ParamName>
                    <ParamType>List&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultParallelism</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PartitionIndexedKey</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>poSkewedJoin.LRs[0];attachInput;[tuple]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPartitionId</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Integer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyTuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Pair&lt;Integer,Integer&gt; [indexes]</InnerVar>
                <InnerVar>Integer [curIndex=-1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>currentIndexMap;put;[keyTuple, curIndex]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>StreamPartitionIndexKeyFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>poSkewedJoin</ParamName>
                    <ParamType>SkewedJoinConverter</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDist</ParamName>
                    <ParamType>List&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultParallelism</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple2&lt;PartitionIndexedKey,Tuple&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Result [lrOut=poSkewedJoin.LRs[1].getNextTuple()]</InnerVar>
                <InnerVar>Byte [index=(Byte)((Tuple)lrOut.result).get(0)]</InnerVar>
                <InnerVar>Tuple [key=(Tuple)((Tuple)lrOut.result).get(1)]</InnerVar>
                <InnerVar>ArrayList&lt;Tuple2&lt;PartitionIndexedKey,Tuple&gt;&gt; [l=new ArrayList()]</InnerVar>
                <InnerVar>Pair&lt;Integer,Integer&gt; [indexes=reducerMap.get(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>poSkewedJoin.LRs[1];attachInput;[tuple]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SkewedJoinPartitioner</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>parallelism</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>numPartitions</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getPartition</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>IdxKey</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Tuple [key=(Tuple)((PartitionIndexedKey)IdxKey).getKey()]</InnerVar>
                <InnerVar>int [code=key.hashCode() % numPartitions]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildPartitioner</MethodName>
            <MethodComment>/** 
 * use parallelism from keyDist or the default parallelism to create user defined partitioner
 * @param keyDist
 * @param defaultParallelism
 * @return
 */
</MethodComment>
            <ReturnType>SkewedJoinPartitioner</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyDist</ParamName>
                    <ParamType>List&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultParallelism</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Integer [parallelism=-1]</InnerVar>
                <InnerVar>Integer[] [reducers=new Integer[1]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;loadKeyDistribution;[keyDist, reducers]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doJoin</MethodName>
            <MethodComment>/** 
 * do all kinds of Join (inner, left outer, right outer, full outer)
 * @param skewIndexedJavaPairRDD
 * @param streamIndexedJavaPairRDD
 * @param partitioner
 * @return
 */
</MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>skewIndexedJavaPairRDD</ParamName>
                    <ParamType>PartitionIndexedKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>streamIndexedJavaPairRDD</ParamName>
                    <ParamType>PartitionIndexedKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>partitioner</ParamName>
                    <ParamType>SkewedJoinPartitioner</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyDist</ParamName>
                    <ParamType>List&lt;Tuple&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean[] [innerFlags=poSkewedJoin.getInnerFlags()]</InnerVar>
                <InnerVar>int[] [schemaSize={0,0}]</InnerVar>
                <InnerVar>ToValueFunction [toValueFun=new ToValueFunction(innerFlags,schemaSize,keyDist)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>