<Class>
    <Id>852</Id>
    <Package>org.apache.pig.piggybank.evaluation</Package>
    <ClassName>IsNumeric</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IsNumeric  /** 
 * This UDF is used to check if a String is numeric. Note this UDF is different from IsInt in 2 ways, 1. Does not check for Integer range 2. Runs faster as this UDF uses Regex match and not Integer.parseInt(String) This UDF is expected to perform slightly better than isInt, isLong, isFloat, isDouble. However, primary goal of this UDF is NOT performance but rather to check "numeric"-ness of a String. Use this UDF if you do not care for the type (int, long, float, double) and would just like to check if its numeric in nature. It does NOT check for Range of int, long, double, parse. This function will return true when the String is larger than the range of any numeric data type (int, long, double, float). Use specific functions (IsInt, IsFloat, IsLong, IsDouble) if range is important.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>outputSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Schema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>