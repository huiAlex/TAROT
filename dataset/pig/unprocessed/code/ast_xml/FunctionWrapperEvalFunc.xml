<Class>
    <Id>221</Id>
    <Package>org.apache.pig.builtin</Package>
    <ClassName>FunctionWrapperEvalFunc</ClassName>
    <SuperClass>PrimitiveEvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FunctionWrapperEvalFunc  /** 
 * EvalFunc that wraps an implementation of the Function interface, which is passed as a String in the constructor. When resolving the Function class, the Pig UDF package import list is used. &lt;P&gt; The Function must have a default no-arg constructor, which will be used. For Functions that take args in the constructor, initialize the function in a subclass of this one and call &lt;code&gt;super(function)&lt;/code&gt;. &lt;P&gt; Example: &lt;code&gt;DEFINE myUdf FunctionWrapperEvalFunc('MyFunction')&lt;/code&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>resolvedTypes</FieldName>
            <FieldType>HashMap</FieldType>
        </Field>
        <Field>
            <FieldName>resolvedTypes</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>function</FieldName>
            <FieldType>ExceptionalFunction</FieldType>
        </Field>
        <Field>
            <FieldName>counterGroup</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>function</FieldName>
            <FieldType>com.google.common.base.Function</FieldType>
        </Field>
        <Field>
            <FieldName>function</FieldName>
            <FieldType>S</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FunctionWrapperEvalFunc</MethodName>
            <MethodComment>/** 
 * Takes the class name of a Function, initializes it using the default constructor and passes it to FunctionWrapperEvalFunc(ExceptionalFunction function). Functions must implement either com.google.common.base.Function or ExceptionalFunction.
 * @param functionClassName function class to initialize
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>functionClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>InstantiationException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FunctionWrapperEvalFunc</MethodName>
            <MethodComment>/** 
 * Determines the input and output types of the Function and initializes the superclass. Subclass and call this constructor if a Function with a non-default constructor is required.
 * @param function Function to be used by the UDF.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>com.google.common.base.Function</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FunctionWrapperEvalFunc</MethodName>
            <MethodComment>/** 
 * Determines the input and output types of the Function and initializes the superclass. Subclass and call this constructor if a Function with a non-default constructor is required.
 * @param function Function to be used by the UDF.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>ExceptionalFunction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [functionName=(function instanceof GoogleFunctionBridge) ? ((GoogleFunctionBridge)function).getWrappedFunction().getClass().getSimpleName() : function.getClass().getSimpleName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCounterGroup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFunctionInClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>functionClassName</ParamName>
                    <ParamType>ExceptionalFunction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFunctionOutClass</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>functionClassName</ParamName>
                    <ParamType>ExceptionalFunction</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFunctionTypeClass</MethodName>
            <MethodComment>/** 
 * For a given class that implements the parameterized interface &lt;code&gt;ExceptionalFunction&lt;/code&gt;, return the type class at the &lt;code&gt;index&lt;/code&gt; position. If the Function class, is &lt;code&gt;GoogleFunctionBridge&lt;/code&gt;, return the type class for the wrapped function.
 */
</MethodComment>
            <ReturnType>Class</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>ExceptionalFunction</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Class [clazz]</InnerVar>
                <InnerVar>Class [expectedInterface]</InnerVar>
                <InnerVar>Type[] [interfaceTypes=clazz.getGenericInterfaces()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>NoSuchMethodException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initializeFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ExceptionalFunction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>functionClassName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [functionObject=PigContext.resolveClassName(functionClassName).newInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>IllegalAccessException</ExceptionType>
                <ExceptionType>InstantiationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>GoogleFunctionBridge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>function</ParamName>
                    <ParamType>S</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getWrappedFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>com.google.common.base.Function</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>item</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>