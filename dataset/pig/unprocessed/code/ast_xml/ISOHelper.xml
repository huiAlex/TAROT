<Class>
    <Id>109</Id>
    <Package>org.apache.pig.piggybank.evaluation.datetime.truncate</Package>
    <ClassName>ISOHelper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ISOHelper  /** 
 * ISOHelper provides helper methods for the other classes in this package. &lt;ul&gt; &lt;li&gt;Jodatime: http://joda-time.sourceforge.net/&lt;/li&gt; &lt;li&gt;ISO8601 Date Format: http://en.wikipedia.org/wiki/ISO_8601&lt;/li&gt; &lt;/ul&gt; This class is public so that it can be tested in TestTruncateDateTime.  Otherwise, it would have "package" visibility.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>DEFAULT_DATE_TIME_ZONE</FieldName>
            <FieldType>DateTimeZone</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>parseDateTime</MethodName>
            <MethodComment>/** 
 * @param input a non-null, non-empty Tuple,whose first element is a ISO 8601 string representation of a date, time, or dateTime; with optional time zone.
 * @return a DateTime representing the date, with DateTimeZone set to the time zone parsed from the string, or else DateTimeZone.getDefault() if one is set, or else UTC.
 * @throws ExecException if input is a malformed or empty tuple.This method is public so that it can be tested in TestTruncateDateTime.  Otherwise, it would have "package" visibility.
 */
</MethodComment>
            <ReturnType>DateTime</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [isoDateString=input.get(0).toString()]</InnerVar>
                <InnerVar>DateTime [dt=ISODateTimeFormat.dateTimeParser().withOffsetParsed().parseDateTime(isoDateString)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>