<Class>
    <Id>453</Id>
    <Package>org.apache.pig.newplan.logical.optimizer</Package>
    <ClassName>LogicalPlanOptimizer</ClassName>
    <SuperClass>PlanOptimizer</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>mRulesOff</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>mRulesOff</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>allRulesDisabled</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>rulesReport</FieldName>
            <FieldType>SetMultimap</FieldType>
        </Field>
        <Field>
            <FieldName>rulesReport</FieldName>
            <FieldType>RulesReportKey</FieldType>
        </Field>
        <Field>
            <FieldName>pc</FieldName>
            <FieldType>PigContext</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LogicalPlanOptimizer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iterations</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>turnOffRules</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LogicalPlanOptimizer</MethodName>
            <MethodComment>/** 
 * Create a new LogicalPlanOptimizer.
 * @param p               Plan to optimize.
 * @param iterations      Maximum number of optimizer iterations.
 * @param turnOffRules    Optimization rules to disable. "all" disables all non-mandatoryrules. null enables all rules.
 * @param pc              PigContext object
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>iterations</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>turnOffRules</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pc</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>LOG;info;[rulesReport]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addListeners;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildRuleSets</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Set&lt;Rule&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Set&lt;Rule&gt;&gt; [ls=new ArrayList&lt;Set&lt;Rule&gt;&gt;()]</InnerVar>
                <InnerVar>Set&lt;Rule&gt; [s=new HashSet&lt;Rule&gt;()]</InnerVar>
                <InnerVar>Rule [r=new FilterConstantCalculator("ConstantCalculator",pc)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>ls;add;[s]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>ls;add;[s]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
                <InnerMethodInvoke>null;checkAndAddRule;[s, r]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkAndAddRule</MethodName>
            <MethodComment>/** 
 * Add rule to ruleSet if its mandatory, or has not been disabled.
 * @param ruleSet    Set rule will be added to if not disabled.
 * @param rule       Rule to potentially add.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ruleSet</ParamName>
                    <ParamType>Rule</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rule</ParamName>
                    <ParamType>Rule</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Preconditions;checkArgument;[ruleSet != null]</InnerMethodInvoke>
                <InnerMethodInvoke>Preconditions;checkArgument;[rule != null &amp;&amp; rule.getName() != null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addListeners</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addPlanTransformListener;[new SchemaPatcher()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addPlanTransformListener;[new ProjectionPatcher()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>