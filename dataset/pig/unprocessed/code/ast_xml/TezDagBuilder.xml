<Class>
    <Id>949</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.tez</Package>
    <ClassName>TezDagBuilder</ClassName>
    <SuperClass>TezOpPlanVisitor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>TezDagBuilder  /** 
 * A visitor to construct DAG out of Tez plan.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>SHUFFLE_BYTES_PER_REDUCER_GROUPBY_DEFAULT</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>SHUFFLE_BYTES_PER_REDUCER_DEFAULT</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>dag</FieldName>
            <FieldType>DAG</FieldType>
        </Field>
        <Field>
            <FieldName>localResources</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>localResources</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>pc</FieldName>
            <FieldType>PigContext</FieldType>
        </Field>
        <Field>
            <FieldName>globalConf</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>pigContextConf</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>shuffleVertexManagerBaseConf</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>fs</FieldName>
            <FieldType>FileSystem</FieldType>
        </Field>
        <Field>
            <FieldName>intermediateTaskInputSize</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>inputSplitInDiskVertices</FieldName>
            <FieldType>Set</FieldType>
        </Field>
        <Field>
            <FieldName>inputSplitInDiskVertices</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>udfContextSeparator</FieldName>
            <FieldType>TezUDFContextSeparator</FieldType>
        </Field>
        <Field>
            <FieldName>serializedTezPlan</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serializedPigContext</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>serializedUDFImportList</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mapTaskResource</FieldName>
            <FieldType>Resource</FieldType>
        </Field>
        <Field>
            <FieldName>reduceTaskResource</FieldName>
            <FieldType>Resource</FieldType>
        </Field>
        <Field>
            <FieldName>mapTaskEnv</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>mapTaskEnv</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>reduceTaskEnv</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>reduceTaskEnv</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>mapTaskLaunchCmdOpts</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>reduceTaskLaunchCmdOpts</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>disableDAGRecovery</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>TezDagBuilder</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pc</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>TezOperPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dag</ParamName>
                    <ParamType>DAG</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>localResources</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldDisableDAGRecovery</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pc</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Iterator&lt;Entry&lt;String,String&gt;&gt; [iter=pigContextConf.iterator()]</InnerVar>
                <InnerVar>int [mapMemoryMB]</InnerVar>
                <InnerVar>int [reduceMemoryMB]</InnerVar>
                <InnerVar>int [mapVCores]</InnerVar>
                <InnerVar>int [reduceVCores]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>MRToTezHelper;processMRSettings;[pigContextConf, globalConf]</InnerMethodInvoke>
                <InnerMethodInvoke>SecurityHelper;populateTokenCache;[globalConf, dag.getCredentials()]</InnerMethodInvoke>
                <InnerMethodInvoke>ClientDistributedCacheManager;determineTimestampsAndCacheVisibilities;[globalConf]</InnerMethodInvoke>
                <InnerMethodInvoke>ClientDistributedCacheManager;getDelegationTokens;[globalConf, dag.getCredentials()]</InnerMethodInvoke>
                <InnerMethodInvoke>MRApps;setupDistributedCache;[globalConf, this.localResources]</InnerMethodInvoke>
                <InnerMethodInvoke>dag;addTaskLocalFiles;[this.localResources]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSerializedTezPlan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>avoidContainerReuseIfInputSplitInDisk</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitTezOp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TezOperPlan [tezPlan=getPlan()]</InnerVar>
                <InnerVar>List&lt;TezOperator&gt; [predecessors=tezPlan.getPredecessors(tezOp)]</InnerVar>
                <InnerVar>Vertex [to=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>VisitorException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newGroupInputEdge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>GroupInputEdge</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fromOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>toOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>from</ParamName>
                    <ParamType>VertexGroup</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>to</ParamName>
                    <ParamType>Vertex</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>EdgeProperty [edgeProperty=newEdge(fromOp,toOp,true)]</InnerVar>
                <InnerVar>String [groupInputClass=ConcatenatedMergedKeyValueInput.class.getName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newEdge</MethodName>
            <MethodComment>/** 
 * Return EdgeProperty that connects two vertices.
 * @param from
 * @param to
 * @return EdgeProperty
 * @throws IOException
 */
</MethodComment>
            <ReturnType>EdgeProperty</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>from</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>to</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isMergedInput</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TezEdgeDescriptor [edge=to.inEdges.get(from.getOperatorKey())]</InnerVar>
                <InnerVar>PhysicalPlan [combinePlan=edge.combinePlan]</InnerVar>
                <InnerVar>InputDescriptor [in=InputDescriptor.create(edge.inputClassName)]</InnerVar>
                <InnerVar>OutputDescriptor [out=OutputDescriptor.create(edge.outputClassName)]</InnerVar>
                <InnerVar>Configuration [conf=new Configuration(pigContextConf)]</InnerVar>
                <InnerVar>List&lt;POLocalRearrangeTez&gt; [lrs=PlanHelper.getPhysicalOperators(from.plan,POLocalRearrangeTez.class)]</InnerVar>
                <InnerVar>UserPayload [payLoad=TezUtils.createUserPayloadFromConf(conf)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>conf;setIfUnset;[TezRuntimeConfiguration.TEZ_RUNTIME_PARTITIONER_CLASS, MRPartitioner.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;setBoolean;[MRConfiguration.MAPPER_NEW_API, true]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;setBoolean;[MRConfiguration.REDUCER_NEW_API, true]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;setBoolean;[PigImplConstants.PIG_EXECTYPE_MODE_LOCAL, pc.getExecType().isLocal()]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;[PigImplConstants.PIG_LOG4J_PROPERTIES, ObjectSerializer.serialize(pc.getLog4jProperties())]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;["udf.import.list", serializedUDFImportList]</InnerMethodInvoke>
                <InnerMethodInvoke>out;setUserPayload;[payLoad]</InnerMethodInvoke>
                <InnerMethodInvoke>in;setUserPayload;[payLoad]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addCombiner</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>combinePlan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pkgTezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isMergedInput</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>POPackage [combPack=(POPackage)combinePlan.getRoots().get(0)]</InnerVar>
                <InnerVar>POLocalRearrange [combRearrange=(POLocalRearrange)combinePlan.getLeaves().get(0)]</InnerVar>
                <InnerVar>LoRearrangeDiscoverer [lrDiscoverer=new LoRearrangeDiscoverer(combinePlan,null,pkgTezOp,combPack)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setIntermediateOutputKeyValue;[combRearrange.getKeyType(), conf, pkgTezOp, true, isMergedInput]</InnerMethodInvoke>
                <InnerMethodInvoke>lrDiscoverer;visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>combinePlan;remove;[combPack]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;[TezRuntimeConfiguration.TEZ_RUNTIME_COMBINER_CLASS, MRCombiner.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;[MRJobConfig.COMBINE_CLASS_ATTR, PigCombiner.Combine.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;["pig.combinePlan", ObjectSerializer.serialize(combinePlan)]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;["pig.combine.package", ObjectSerializer.serialize(combPack)]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;["pig.map.keytype", ObjectSerializer.serialize(new byte[]{combRearrange.getKeyType()})]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newVertex</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Vertex</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ProcessorDescriptor [procDesc=ProcessorDescriptor.create(tezOp.getProcessorName())]</InnerVar>
                <InnerVar>JobConf [payloadConf=new JobConf(pigContextConf)]</InnerVar>
                <InnerVar>Job [job=new Job(payloadConf)]</InnerVar>
                <InnerVar>LinkedList&lt;POStore&gt; [stores=processStores(tezOp,payloadConf,job)]</InnerVar>
                <InnerVar>Configuration [inputPayLoad=null]</InnerVar>
                <InnerVar>Configuration [outputPayLoad=null]</InnerVar>
                <InnerVar>EndOfAllInputSetter.EndOfAllInputChecker [checker=new EndOfAllInputSetter.EndOfAllInputChecker(tezOp.plan)]</InnerVar>
                <InnerVar>List&lt;PhysicalOperator&gt; [roots=tezOp.plan.getRoots()]</InnerVar>
                <InnerVar>TezScriptState [ss=TezScriptState.get()]</InnerVar>
                <InnerVar>UserPayload [userPayload=TezUtils.createUserPayloadFromConf(payloadConf)]</InnerVar>
                <InnerVar>TezDAGScriptInfo [dagScriptInfo=TezScriptState.get().getDAGScriptInfo(dag.getName())]</InnerVar>
                <InnerVar>String [alias=dagScriptInfo.getAlias(tezOp)]</InnerVar>
                <InnerVar>String [aliasLocation=dagScriptInfo.getAliasLocation(tezOp)]</InnerVar>
                <InnerVar>String [features=dagScriptInfo.getPigFeatures(tezOp)]</InnerVar>
                <InnerVar>String [vertexInfo=aliasLocation + " (" + features+ ")"]</InnerVar>
                <InnerVar>String [vmPluginName=null]</InnerVar>
                <InnerVar>Configuration [vmPluginConf=null]</InnerVar>
                <InnerVar>boolean [containScatterGather=false]</InnerVar>
                <InnerVar>boolean [containCustomPartitioner=false]</InnerVar>
                <InnerVar>int [parallel=tezOp.getVertexParallelism()]</InnerVar>
                <InnerVar>Resource [resource=tezOp.isUseMRMapSettings() ? mapTaskResource : reduceTaskResource]</InnerVar>
                <InnerVar>Vertex [vertex=Vertex.create(tezOp.getOperatorKey().toString(),procDesc,parallel,resource)]</InnerVar>
                <InnerVar>Set&lt;String&gt; [uniqueStoreOutputs=new HashSet&lt;String&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>payloadConf;setCredentials;[dag.getCredentials()]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setBoolean;[MRConfiguration.MAPPER_NEW_API, true]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setBoolean;[MRConfiguration.REDUCER_NEW_API, true]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setClass;[MRConfiguration.INPUTFORMAT_CLASS, PigInputFormatTez.class, InputFormat.class]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setOutputFormat;[job]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;set;["udf.import.list", serializedUDFImportList]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;set;["exectype", "TEZ"]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setBoolean;[PigImplConstants.PIG_EXECTYPE_MODE_LOCAL, pc.getExecType().isLocal()]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;set;[PigImplConstants.PIG_LOG4J_PROPERTIES, ObjectSerializer.serialize(pc.getLog4jProperties())]</InnerMethodInvoke>
                <InnerMethodInvoke>DateTimeWritable;setupAvailableZoneIds;[]</InnerMethodInvoke>
                <InnerMethodInvoke>new PhyPlanSetter(tezOp.plan);visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>checker;visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>new PhyPlanSetter(tezOp.plan);visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;set;[PigProcessor.PLAN, ObjectSerializer.serialize(tezOp.plan)]</InnerMethodInvoke>
                <InnerMethodInvoke>udfContextSeparator;serializeUDFContext;[payloadConf, tezOp]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setInt;[PigImplConstants.REDUCER_DEFAULT_PARALLELISM, pc.defaultParallel]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setInt;[PigImplConstants.REDUCER_REQUESTED_PARALLELISM, tezOp.getRequestedParallelism()]</InnerMethodInvoke>
                <InnerMethodInvoke>payloadConf;setInt;[PigImplConstants.REDUCER_ESTIMATED_PARALLELISM, tezOp.getEstimatedParallelism()]</InnerMethodInvoke>
                <InnerMethodInvoke>ss;addVertexSettingsToConf;[dag.getName(), tezOp, payloadConf]</InnerMethodInvoke>
                <InnerMethodInvoke>procDesc.setUserPayload(userPayload);setHistoryText;[TezUtils.convertToHistoryText(vertexInfo,payloadConf)]</InnerMethodInvoke>
                <InnerMethodInvoke>MRToTezHelper;setVertexConfig;[vertex, tezOp.isUseMRMapSettings(), globalConf]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["For vertex - " + tezOp.getOperatorKey().toString() + ": parallelism="+ tezOp.getVertexParallelism()+ ", memory="+ vertex.getTaskResource().getMemory()+ ", java opts="+ vertex.getTaskLaunchCmdOpts()]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["Processing aliases: " + alias]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["Detailed locations: " + aliasLocation]</InnerMethodInvoke>
                <InnerMethodInvoke>log;info;["Pig features in the vertex: " + features]</InnerMethodInvoke>
                <InnerMethodInvoke>UDFContext.getUDFContext();addJobConf;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processStores</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>POStore</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>payloadConf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>Job</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LinkedList&lt;POStore&gt; [stores=PlanHelper.getPhysicalOperators(tezOp.plan,POStore.class)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>VisitorException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setIntermediateOutputKeyValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyType</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isConnectedToPackage</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isMergedInput</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>conf;set;[TezRuntimeConfiguration.TEZ_RUNTIME_VALUE_CLASS, NullableTuple.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;[TezRuntimeConfiguration.TEZ_RUNTIME_PARTITIONER_CLASS, MRPartitioner.class.getName()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;selectKeyComparator;[keyType, conf, tezOp, isMergedInput]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>JobCreationException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawBytesComparator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends WritableComparator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyType</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>JobCreationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawComparator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends WritableComparator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyType</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>JobCreationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawBytesComparatorForSkewedJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends WritableComparator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyType</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>JobCreationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRawComparatorForSkewedJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>? extends WritableComparator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyType</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>JobCreationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>selectKeyComparator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>keyType</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isMergedInput</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>JobCreationException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasOrderby</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tezOp</ParamName>
                    <ParamType>TezOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>boolean [hasOrderBy=tezOp.isGlobalSort() || tezOp.isLimitAfterSort()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setGroupingComparator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>comparatorClass</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>conf;set;[TezRuntimeConfiguration.TEZ_RUNTIME_GROUP_COMPARATOR_CLASS, comparatorClass]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;[TezRuntimeConfiguration.TEZ_RUNTIME_KEY_SECONDARY_COMPARATOR_CLASS, comparatorClass]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setOutputFormat</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>org.apache.hadoop.mapreduce.Job</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>