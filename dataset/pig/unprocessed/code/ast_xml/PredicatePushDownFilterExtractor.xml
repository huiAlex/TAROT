<Class>
    <Id>88</Id>
    <Package>org.apache.pig.newplan</Package>
    <ClassName>PredicatePushDownFilterExtractor</ClassName>
    <SuperClass>FilterExtractor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PredicatePushDownFilterExtractor  /** 
 * We traverse the expression plan bottom up and separate it into two plans - pushdownExprPlan, plan that can be pushed down to the loader and - filterExprPlan, remaining plan that needs to be evaluated by pig If the predicate is not removable then filterExprPlan will not have the pushdownExprPlan removed.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>predicateCols</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>predicateCols</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>supportedOpTypes</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>supportedOpTypes</FieldName>
            <FieldType>OpType</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>PredicatePushDownFilterExtractor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>predicateCols</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>supportedOpTypes</ParamName>
                    <ParamType>OpType</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkPushDown</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>KeyState</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>project</ParamName>
                    <ParamType>ProjectExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [fieldName=project.getFieldSchema().alias]</InnerVar>
                <InnerVar>KeyState [state=new KeyState()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSupportedOpType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>binOp</ParamName>
                    <ParamType>BinaryExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isSupportedOpType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>unaryOp</ParamName>
                    <ParamType>UnaryExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>