<Class>
    <Id>27</Id>
    <Package>org.apache.pig</Package>
    <ClassName>IteratingAccumulatorEvalFunc</ClassName>
    <SuperClass>AccumulatorEvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>TerminatingAccumulator</SuperInterface>
        <SuperInterface>T</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IteratingAccumulatorEvalFunc  /** 
 * This class provides a much more intuitive way to write Accumulator UDFs.&lt;br&gt; For example, you could express IsEmpty as follows: &lt;pre&gt;&lt;code&gt;public class IsEmpty extends IteratingAccumulatorEvalFunc&lt;Boolean&gt; { public Boolean exec(Iterator&lt;Tuple&gt; iter) throws IOException { return !iter.hashNext(); } }&lt;/code&gt;&lt;/pre&gt; Count could be implemented as follows: &lt;pre&gt;&lt;code&gt;public class Count extends IteratingAccumulatorEvalFunc&lt;Long&gt; { public Long exec(Iterator&lt;Tuple&gt; iter) throws IOException { long ct = 0; for (; iter.hasNext(); iter.next()) { ct++; } return ct; } }&lt;/code&gt;&lt;/pre&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>isInitialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>dqi</FieldName>
            <FieldType>DelayedQueueIterator</FieldType>
        </Field>
        <Field>
            <FieldName>queue</FieldName>
            <FieldType>BlockingQueue</FieldType>
        </Field>
        <Field>
            <FieldName>queue</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>isFinished</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>noMoreValues</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>exceptionThrown</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>returnValue</FieldName>
            <FieldType>T</FieldType>
        </Field>
        <Field>
            <FieldName>executionThread</FieldName>
            <FieldType>Thread</FieldType>
        </Field>
        <Field>
            <FieldName>executionThreadException</FieldName>
            <FieldType>Exception</FieldType>
        </Field>
        <Field>
            <FieldName>mTupleFactory</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>WAIT_TO_OFFER</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>WAIT_TO_POLL</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>WAIT_TO_JOIN</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>next</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>executionThread;start;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFinished</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>accumulate</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>T</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>iter</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasNext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>next</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Tuple [t=next]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>remove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>