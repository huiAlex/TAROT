<Class>
    <Id>670</Id>
    <Package>org.apache.tools.bzip2r</Package>
    <ClassName>CBZip2OutputStream</ClassName>
    <SuperClass>OutputStream</SuperClass>
    <SuperInterfaceList>
        <SuperInterface>BZip2Constants</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>CBZip2OutputStream  /** 
 * An output stream that compresses into the BZip2 format (without the file header chars) into another stream.
 * @author &lt;a href="mailto:keiron@aftexsw.com"&gt;Keiron Liddle&lt;/a&gt;TODO:    Update to BZip2 1.0.1
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>SETMASK</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CLEARMASK</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GREATER_ICOST</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LESSER_ICOST</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SMALL_THRESH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DEPTH_THRESH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>QSORT_STACK_SIZE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>last</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>origPtr</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>blockSize100k</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>blockRandomised</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>bytesOut</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>bsBuff</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>bsLive</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>mCrc</FieldName>
            <FieldType>CRC</FieldType>
        </Field>
        <Field>
            <FieldName>inUse</FieldName>
            <FieldType>boolean[]</FieldType>
        </Field>
        <Field>
            <FieldName>nInUse</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>seqToUnseq</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>unseqToSeq</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>selector</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>selectorMtf</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>block</FieldName>
            <FieldType>char[]</FieldType>
        </Field>
        <Field>
            <FieldName>quadrant</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>zptr</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>szptr</FieldName>
            <FieldType>short[]</FieldType>
        </Field>
        <Field>
            <FieldName>ftab</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>nMTF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>mtfFreq</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>workFactor</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>workDone</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>workLimit</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>firstAttempt</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>nBlocksRandomised</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>currentChar</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>runLength</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>written</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>closed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>emptyFileArray</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>blockCRC</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>combinedCRC</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>allowableBlockSize</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>bsStream</FieldName>
            <FieldType>OutputStream</FieldType>
        </Field>
        <Field>
            <FieldName>ll</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>hh</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>dd</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>incs</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>panic</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;info;["panic"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>makeMaps</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [i]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hbMakeCodeLengths</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>len</ParamName>
                    <ParamType>char[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>freq</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>alphaSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxLen</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [nNodes, nHeap, n1, n2, i, j, k]</InnerVar>
                <InnerVar>boolean [tooLong]</InnerVar>
                <InnerVar>int[] [heap=new int[MAX_ALPHA_SIZE + 2]]</InnerVar>
                <InnerVar>int[] [weight=new int[MAX_ALPHA_SIZE * 2]]</InnerVar>
                <InnerVar>int[] [parent=new int[MAX_ALPHA_SIZE * 2]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CBZip2OutputStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inStream</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CBZip2OutputStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inStream</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inBlockSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>inStream;write;["BZ".getBytes()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsSetStream;[inStream]</InnerMethodInvoke>
                <InnerMethodInvoke>null;allocateCompressStructures;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initialize;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;initBlock;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>write</MethodName>
            <MethodComment>/** 
 * modified by Oliver Merkel, 010128
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bv</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [b=(256 + bv) % 256]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeRun</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>finalize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Throwable</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bsStream;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flush</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bsStream;flush;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsPutUChar;['h']</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;['0' + blockSize100k]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initBlock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>mCrc;initialiseCRC;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endBlock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;doReversibleTransformation;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x31]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x41]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x59]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x26]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x53]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x59]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutint;[blockCRC]</InnerMethodInvoke>
                <InnerMethodInvoke>null;moveToFrontCodeAndSend;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>endCompression</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsPutUChar;[0x17]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x72]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x45]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x38]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x50]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutUChar;[0x90]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsPutint;[combinedCRC]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsFinishedWithStream;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hbAssignCodes</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>code</ParamName>
                    <ParamType>int[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>length</ParamName>
                    <ParamType>char[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>minLen</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>maxLen</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>alphaSize</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [n, vec, i]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bsSetStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>OutputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bsFinishedWithStream</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bsW</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>n</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bsPutUChar</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsW;[8, c]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bsPutint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>u</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsW;[8, (u &gt;&gt; 24) &amp; 0xff]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsW;[8, (u &gt;&gt; 16) &amp; 0xff]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsW;[8, (u &gt;&gt; 8) &amp; 0xff]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsW;[8, u &amp; 0xff]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bsPutIntVS</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>numBits</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsW;[numBits, c]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendMTFValues</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>char [len[][]=new char[N_GROUPS][MAX_ALPHA_SIZE]]</InnerVar>
                <InnerVar>int [v, t, i, j, gs, ge, totc, bt, bc, iter]</InnerVar>
                <InnerVar>int [nSelectors=0, alphaSize, minLen, maxLen, selCtr]</InnerVar>
                <InnerVar>int [nGroups, nBytes]</InnerVar>
                <InnerVar>int[][] [rfreq=new int[N_GROUPS][MAX_ALPHA_SIZE]]</InnerVar>
                <InnerVar>int[] [fave=new int[N_GROUPS]]</InnerVar>
                <InnerVar>short[] [cost=new short[N_GROUPS]]</InnerVar>
                <InnerVar>int[][] [code=new int[N_GROUPS][MAX_ALPHA_SIZE]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsW;[3, nGroups]</InnerMethodInvoke>
                <InnerMethodInvoke>null;bsW;[15, nSelectors]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>moveToFrontCodeAndSend</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;bsPutIntVS;[24, origPtr]</InnerMethodInvoke>
                <InnerMethodInvoke>null;generateMTFValues;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;sendMTFValues;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>simpleSort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lo</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hi</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>d</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [i, j, h, bigN, hp]</InnerVar>
                <InnerVar>int [v]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>vswap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>p2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>n</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [temp=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>med3</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>char</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>a</ParamName>
                    <ParamType>char</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>b</ParamName>
                    <ParamType>char</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>char</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>char [t]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>qSort3</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>loSt</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hiSt</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dSt</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [unLo, unHi, ltLo, gtHi, med, n, m]</InnerVar>
                <InnerVar>int [sp, lo, hi, d]</InnerVar>
                <InnerVar>StackElem[] [stack=new StackElem[QSORT_STACK_SIZE]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mainSort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [i, j, ss, sb]</InnerVar>
                <InnerVar>int[] [runningOrder=new int[256]]</InnerVar>
                <InnerVar>int[] [copy=new int[256]]</InnerVar>
                <InnerVar>boolean[] [bigDone=new boolean[256]]</InnerVar>
                <InnerVar>int [c1, c2]</InnerVar>
                <InnerVar>int [numQSorted]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>randomiseBlock</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [i]</InnerVar>
                <InnerVar>int [rNToGo=0]</InnerVar>
                <InnerVar>int [rTPos=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>doReversibleTransformation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [i]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;mainSort;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>fullGtU</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>i1</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>i2</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [k]</InnerVar>
                <InnerVar>char [c1, c2]</InnerVar>
                <InnerVar>int [s1, s2]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>allocateCompressStructures</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [n=baseBlockSize * blockSize100k]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateMTFValues</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>char[] [yy=new char[256]]</InnerVar>
                <InnerVar>int [i, j]</InnerVar>
                <InnerVar>char [tmp]</InnerVar>
                <InnerVar>char [tmp2]</InnerVar>
                <InnerVar>int [zPend]</InnerVar>
                <InnerVar>int [wr]</InnerVar>
                <InnerVar>int [EOB]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;makeMaps;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>