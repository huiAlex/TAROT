<Class>
    <Id>73</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.shims</Package>
    <ClassName>HadoopShims</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>cloneJobContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JobContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>original</ParamName>
                    <ParamType>JobContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JobContext [newContext=ContextFactory.cloneContext(original,new JobConf(original.getConfiguration()))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTaskAttemptContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TaskAttemptContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>taskId</ParamName>
                    <ParamType>TaskAttemptID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createJobContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JobContext</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jobId</ParamName>
                    <ParamType>JobID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>taskAttemptID</ParamName>
                    <ParamType>TaskAttemptID</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TaskType [type=taskAttemptID.getTaskType()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewTaskAttemptID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TaskAttemptID</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>TaskAttemptID [taskAttemptID=new TaskAttemptID("",1,TaskType.MAP,1,1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createTaskAttemptID</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TaskAttemptID</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jtIdentifier</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>jobId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isMap</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>taskId</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasFileSystemImpl</MethodName>
            <MethodComment>/** 
 * Returns whether the give path has a FileSystem implementation.
 * @param path path
 * @param conf configuration
 * @return true if the give path's scheme has a FileSystem implementation,false otherwise
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>path</ParamName>
                    <ParamType>Path</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [scheme=path.toUri().getScheme()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>