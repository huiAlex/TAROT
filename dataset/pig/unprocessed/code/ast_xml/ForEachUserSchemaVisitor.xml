<Class>
    <Id>499</Id>
    <Package>org.apache.pig.newplan.logical.visitor</Package>
    <ClassName>ForEachUserSchemaVisitor</ClassName>
    <SuperClass>LogicalRelationalNodesVisitor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>ForEachUserSchemaVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceNullByteArraySchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalSchema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>originalSchema</ParamName>
                    <ParamType>LogicalSchema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>userSchema</ParamName>
                    <ParamType>LogicalSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalSchema [replacedSchema=new LogicalSchema()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>replaceNullByteArrayFieldSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalFieldSchema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>originalFS</ParamName>
                    <ParamType>LogicalFieldSchema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>userFS</ParamName>
                    <ParamType>LogicalFieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>hasOnlyNullOrByteArraySchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>LogicalFieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>foreach</ParamName>
                    <ParamType>LOForEach</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LOGenerate [generate=(LOGenerate)foreach.getInnerPlan().getSinks().get(0)]</InnerVar>
                <InnerVar>List&lt;LogicalSchema&gt; [mExpSchemas=generate.getExpSchemas()]</InnerVar>
                <InnerVar>List&lt;LogicalSchema&gt; [mUserDefinedSchemas=generate.getUserDefinedSchema()]</InnerVar>
                <InnerVar>boolean [hasUserDefinedSchema=false]</InnerVar>
                <InnerVar>LogicalPlan [innerPlan=new LogicalPlan()]</InnerVar>
                <InnerVar>LOForEach [casterForEach=new LOForEach(plan)]</InnerVar>
                <InnerVar>List&lt;LogicalExpressionPlan&gt; [exps=new ArrayList&lt;LogicalExpressionPlan&gt;()]</InnerVar>
                <InnerVar>LOGenerate [gen=new LOGenerate(innerPlan,exps,null)]</InnerVar>
                <InnerVar>int [index=0]</InnerVar>
                <InnerVar>boolean [needCast=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>casterForEach;setInnerPlan;[innerPlan]</InnerMethodInvoke>
                <InnerMethodInvoke>casterForEach;setAlias;[foreach.getAlias()]</InnerMethodInvoke>
                <InnerMethodInvoke>innerPlan;add;[gen]</InnerMethodInvoke>
                <InnerMethodInvoke>gen;setFlattenFlags;[new boolean[index]]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetTypeToNull</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s1</ParamName>
                    <ParamType>LogicalSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addToExps</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>casterForEach</ParamName>
                    <ParamType>LOForEach</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>innerPlan</ParamName>
                    <ParamType>LogicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>gen</ParamName>
                    <ParamType>LOGenerate</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>exps</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>needCaster</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>LogicalFieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LOInnerLoad [innerLoad=new LOInnerLoad(innerPlan,casterForEach,index)]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exp=new LogicalExpressionPlan()]</InnerVar>
                <InnerVar>ProjectExpression [prj=new ProjectExpression(exp,index,0,gen)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>innerPlan;add;[innerLoad]</InnerMethodInvoke>
                <InnerMethodInvoke>innerPlan;connect;[innerLoad, gen]</InnerMethodInvoke>
                <InnerMethodInvoke>exp;add;[prj]</InnerMethodInvoke>
                <InnerMethodInvoke>exps;add;[exp]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>