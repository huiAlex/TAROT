<Class>
    <Id>213</Id>
    <Package>org.apache.pig.pen</Package>
    <ClassName>LineageTrimmingVisitor</ClassName>
    <SuperClass>LogicalRelationalNodesVisitor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>baseData</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>baseData</FieldName>
            <FieldType>LOLoad</FieldType>
        </Field>
        <Field>
            <FieldName>inputToDataMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>inputToDataMap</FieldName>
            <FieldType>FileSpec</FieldType>
        </Field>
        <Field>
            <FieldName>LogToPhyMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>LogToPhyMap</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>physPlan</FieldName>
            <FieldType>PhysicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>completeness</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>AffinityGroups</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>AffinityGroups</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>Lineage</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>Lineage</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>continueTrimming</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>pc</FieldName>
            <FieldType>PigContext</FieldType>
        </Field>
        <Field>
            <FieldName>eg</FieldName>
            <FieldType>ExampleGenerator</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>LineageTrimmingVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>baseData</ParamName>
                    <ParamType>LOLoad</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eg</ParamName>
                    <ParamType>ExampleGenerator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>LogToPhyMap</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>physPlan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pc</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;init;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;Operator,DataBag&gt; [data=eg.getData()]</InnerVar>
                <InnerVar>LineageTracer [lineage=eg.getLineage()]</InnerVar>
                <InnerVar>Map&lt;LogicalRelationalOperator,Collection&lt;IdentityHashSet&lt;Tuple&gt;&gt;&gt; [OpToEqClasses=eg.getLoToEqClassMap()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cg</ParamName>
                    <ParamType>LOCogroup</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>join</ParamName>
                    <ParamType>LOJoin</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>cs</ParamName>
                    <ParamType>LOCross</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dt</ParamName>
                    <ParamType>LODistinct</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>filter</ParamName>
                    <ParamType>LOFilter</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>LOStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>forEach</ParamName>
                    <ParamType>LOForEach</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>limOp</ParamName>
                    <ParamType>LOLimit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>load</ParamName>
                    <ParamType>LOLoad</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>LOSort</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>split</ParamName>
                    <ParamType>LOSplit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>split</ParamName>
                    <ParamType>LOSplitOutput</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>u</ParamName>
                    <ParamType>LOUnion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PruneBaseDataConstrainedCoverage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LOLoad</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>baseData</ParamName>
                    <ParamType>LOLoad</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lineage</ParamName>
                    <ParamType>LineageTracer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>equivalenceClasses</ParamName>
                    <ParamType>IdentityHashSet&lt;Tuple&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IdentityHashMap&lt;Tuple,Collection&lt;Tuple&gt;&gt; [membershipMap=lineage.getMembershipMap()]</InnerVar>
                <InnerVar>IdentityHashMap&lt;Tuple,Double&gt; [lineageGroupWeights=lineage.getWeightedCounts(2f,1)]</InnerVar>
                <InnerVar>IdentityHashMap&lt;Tuple,Set&lt;IdentityHashSet&lt;Tuple&gt;&gt;&gt; [lineageGroupToEquivClasses=new IdentityHashMap&lt;Tuple,Set&lt;IdentityHashSet&lt;Tuple&gt;&gt;&gt;()]</InnerVar>
                <InnerVar>IdentityHashSet&lt;Tuple&gt; [selectedLineageGroups=new IdentityHashSet&lt;Tuple&gt;()]</InnerVar>
                <InnerVar>IdentityHashSet&lt;Tuple&gt; [tuplesToRetain=new IdentityHashSet&lt;Tuple&gt;()]</InnerVar>
                <InnerVar>Map&lt;LOLoad,DataBag&gt; [newBaseData=new HashMap&lt;LOLoad,DataBag&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processLoad</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ld</ParamName>
                    <ParamType>LOLoad</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataBag [data=baseData.get(ld)]</InnerVar>
                <InnerVar>Set&lt;Tuple&gt; [realData=new HashSet&lt;Tuple&gt;(), syntheticData=new HashSet&lt;Tuple&gt;()]</InnerVar>
                <InnerVar>Map&lt;LOLoad,DataBag&gt; [newBaseData=new HashMap&lt;LOLoad,DataBag&gt;()]</InnerVar>
                <InnerVar>DataBag [newData=BagFactory.getInstance().newDefaultBag()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>newBaseData;put;[ld, newData]</InnerMethodInvoke>
                <InnerMethodInvoke>inputToDataMap;put;[ld.getFileSpec(), baseData.get(ld)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkNewBaseData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>data</ParamName>
                    <ParamType>DataBag</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>newBaseData</ParamName>
                    <ParamType>LOLoad</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loadData</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Pair&lt;Tuple,Double&gt;&gt; [sortedBase=new LinkedList&lt;Pair&lt;Tuple,Double&gt;&gt;()]</InnerVar>
                <InnerVar>DataBag [oldData=BagFactory.getInstance().newDefaultBag()]</InnerVar>
                <InnerVar>double [tmpCompleteness=completeness]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>oldData;addAll;[data]</InnerMethodInvoke>
                <InnerMethodInvoke>Collections;sort;[sortedBase, new Comparator&lt;Pair&lt;Tuple,Double&gt;&gt;(){
  @Override public int compare(  Pair&lt;Tuple,Double&gt; o1,  Pair&lt;Tuple,Double&gt; o2){
    return o1.second &gt; o2.second ? -1 : o1.second == o2.second ? 0 : 1;
  }
}
]</InnerMethodInvoke>
                <InnerMethodInvoke>data;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>data;addAll;[oldData]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>o1</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>o2</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processOperator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>op</ParamName>
                    <ParamType>LogicalRelationalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>checkCompleteness</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>op</ParamName>
                    <ParamType>LogicalRelationalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LineageTracer [lineage=Lineage.get(op)]</InnerVar>
                <InnerVar>Collection&lt;IdentityHashSet&lt;Tuple&gt;&gt; [affinityGroups=AffinityGroups.get(op)]</InnerVar>
                <InnerVar>Map&lt;LOLoad,DataBag&gt; [newBaseData=PruneBaseDataConstrainedCoverage(baseData,lineage,affinityGroups)]</InnerVar>
                <InnerVar>Map&lt;Operator,DataBag&gt; [derivedData=eg.getData(newBaseData)]</InnerVar>
                <InnerVar>double [newCompleteness=MetricEvaluation.getCompleteness(null,derivedData,eg.getLoToEqClassMap(),true)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Lineage;remove;[op]</InnerMethodInvoke>
                <InnerMethodInvoke>AffinityGroups;remove;[op]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBaseData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LOLoad</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>