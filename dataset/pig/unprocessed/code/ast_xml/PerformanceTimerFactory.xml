<Class>
    <Id>355</Id>
    <Package>org.apache.pig.tools.timer</Package>
    <ClassName>PerformanceTimerFactory</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>self</FieldName>
            <FieldType>PerformanceTimerFactory</FieldType>
        </Field>
        <Field>
            <FieldName>mTimers</FieldName>
            <FieldType>HashMap</FieldType>
        </Field>
        <Field>
            <FieldName>mTimers</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getPerfTimerFactory</MethodName>
            <MethodComment>/** 
 * Get the timer factory.
 * @return timer factory. 
 */
</MethodComment>
            <ReturnType>PerformanceTimerFactory</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTimer</MethodName>
            <MethodComment>/** 
 * Get a performance timer.  If the indicated timer does not exist, it will be created.  If a timer of that name already exists, it will be returned.
 * @param name Name of the timer to return.
 * @return the timer.
 */
</MethodComment>
            <ReturnType>PerformanceTimer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PerformanceTimer [timer=mTimers.get(name)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpTimers</MethodName>
            <MethodComment>/** 
 * Call print on all of the known performance timers.
 * @param out output stream to dump to
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;PerformanceTimer&gt; [c=mTimers.values()]</InnerVar>
                <InnerVar>Iterator&lt;PerformanceTimer&gt; [i=c.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dumpTimers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;dumpTimers;[System.out]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PerformanceTimerFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>