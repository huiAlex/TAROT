<Class>
    <Id>1283</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.mapReduceLayer</Package>
    <ClassName>PigRecordReader</ClassName>
    <SuperClass>RecordReader</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PigRecordReader  /** 
 * A wrapper around the actual RecordReader and loadfunc - this is needed for two reasons 1) To intercept the initialize call from hadoop and initialize the underlying actual RecordReader with the right Context object - this is achieved by looking up the Context corresponding to the input split this Reader is supposed to process 2) We need to give hadoop consistent key-value types - text and tuple respectively - so PigRecordReader will call underlying Loader's getNext() to get the Tuple value - the key is null text since key is not used in input to map() in Pig.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>counterGroup</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>timingFrequency</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>doTiming</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>curValue</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>curReader</FieldName>
            <FieldType>RecordReader</FieldType>
        </Field>
        <Field>
            <FieldName>curReader</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>loadfunc</FieldName>
            <FieldType>LoadFunc</FieldType>
        </Field>
        <Field>
            <FieldName>counterName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>inputformat</FieldName>
            <FieldType>InputFormat</FieldType>
        </Field>
        <Field>
            <FieldName>inputformat</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>pigSplit</FieldName>
            <FieldType>PigSplit</FieldType>
        </Field>
        <Field>
            <FieldName>idx</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>progress</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>context</FieldName>
            <FieldType>TaskAttemptContext</FieldType>
        </Field>
        <Field>
            <FieldName>reporter</FieldName>
            <FieldType>PigStatusReporter</FieldType>
        </Field>
        <Field>
            <FieldName>limit</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>recordCount</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>inputSpecificConf</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>PigRecordReader</MethodName>
            <MethodComment>/** 
 * @param context
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>inputformat</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pigSplit</ParamName>
                    <ParamType>PigSplit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>loadFunc</ParamName>
                    <ParamType>LoadFunc</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>TaskAttemptContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>limit</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;initNextRecordReader;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Text</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCurrentValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProgress</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>float</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>long [subprogress=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>split</ParamName>
                    <ParamType>InputSplit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>TaskAttemptContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>ConfigurationUtil;mergeConf;[context.getConfiguration(), inputSpecificConf]</InnerMethodInvoke>
                <InnerMethodInvoke>PigInputFormat;passLoadSignature;[loadfunc, pigSplit.getInputIndex(), context.getConfiguration()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextKeyValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [timeThis=doTiming &amp;&amp; ((recordCount + 1) % timingFrequency == 0)]</InnerVar>
                <InnerVar>long [startNanos=0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getMultiInputsCounerName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pigSplit</ParamName>
                    <ParamType>PigSplit</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArrayList&lt;FileSpec&gt; [inputs=(ArrayList&lt;FileSpec&gt;)ObjectSerializer.deserialize(conf.get(PigInputFormat.PIG_INPUTS))]</InnerVar>
                <InnerVar>String [fname=inputs.get(pigSplit.getInputIndex()).getFileName()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initNextRecordReader</MethodName>
            <MethodComment>/** 
 * Get the record reader for the next chunk in this CombineFileSplit.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>