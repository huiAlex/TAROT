<Class>
    <Id>178</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.mapReduceLayer</Package>
    <ClassName>SecondaryKeyOptimizer</ClassName>
    <SuperClass>MROpPlanVisitor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>oper</FieldName>
            <FieldType>PhysicalOperator</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>PhysicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>forEach</FieldName>
            <FieldType>POForEach</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>numMRUseSecondaryKey</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>numDistinctChanged</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>numSortRemoved</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>mPlan</FieldName>
            <FieldType>PhysicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>sortsToRemove</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>sortsToRemove</FieldName>
            <FieldType>POSort</FieldType>
        </Field>
        <Field>
            <FieldName>distinctsToChange</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>distinctsToChange</FieldName>
            <FieldType>PODistinct</FieldType>
        </Field>
        <Field>
            <FieldName>sortKeyInfos</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>sortKeyInfos</FieldName>
            <FieldType>SortKeyInfo</FieldType>
        </Field>
        <Field>
            <FieldName>secondarySortKeyInfo</FieldName>
            <FieldType>SortKeyInfo</FieldType>
        </Field>
        <Field>
            <FieldName>columnChainInfo</FieldName>
            <FieldType>ColumnChainInfo</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>POToChange</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>oper</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>forEach</ParamName>
                    <ParamType>POForEach</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SecondaryKeyOptimizer</MethodName>
            <MethodComment>/** 
 * @param plan The MROperPlan to visit to discover keyType
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>MROperPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSortKeyInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SortKeyInfo</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>rearrange</ParamName>
                    <ParamType>POLocalRearrange</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SortKeyInfo [result=new SortKeyInfo()]</InnerVar>
                <InnerVar>List&lt;PhysicalPlan&gt; [plans=rearrange.getPlans()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visitMROp</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>mr</ParamName>
                    <ParamType>MapReduceOper</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;SortKeyInfo&gt; [sortKeyInfos=new ArrayList&lt;SortKeyInfo&gt;()]</InnerVar>
                <InnerVar>SortKeyInfo [secondarySortKeyInfo=null]</InnerVar>
                <InnerVar>List&lt;POToChange&gt; [sortsToRemove=null]</InnerVar>
                <InnerVar>List&lt;POToChange&gt; [distinctsToChange=null]</InnerVar>
                <InnerVar>List&lt;PhysicalOperator&gt; [mapLeaves=mr.mapPlan.getLeaves()]</InnerVar>
                <InnerVar>PhysicalOperator [mapLeaf=mapLeaves.get(0)]</InnerVar>
                <InnerVar>List&lt;PhysicalOperator&gt; [reduceRoots=mr.reducePlan.getRoots()]</InnerVar>
                <InnerVar>PhysicalOperator [root=reduceRoots.get(0)]</InnerVar>
                <InnerVar>PhysicalOperator [currentNode=root]</InnerVar>
                <InnerVar>POForEach [foreach=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;trace;["Entering SecondaryKeyOptimizer.visitMROp, skip optimizing"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>VisitorException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSecondaryPlan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rearrange</ParamName>
                    <ParamType>POLocalRearrange</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>secondarySortKeyInfo</ParamName>
                    <ParamType>SortKeyInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>VisitorException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNumMRUseSecondaryKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNumSortRemoved</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDistinctChanged</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SecondaryKeyDiscover</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortKeyInfos</ParamName>
                    <ParamType>SortKeyInfo</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>secondarySortKeyInfo</ParamName>
                    <ParamType>SortKeyInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;PhysicalOperator&gt; [roots=mPlan.getRoots()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processRoot</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>root</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PhysicalOperator [currentNode=root]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processDistinct</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>distinct</ParamName>
                    <ParamType>PODistinct</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SortKeyInfo [keyInfos=new SortKeyInfo()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processProject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>project</ParamName>
                    <ParamType>POProject</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>columnChainInfo;insertInReduce;[project]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processSort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sort</ParamName>
                    <ParamType>POSort</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SortKeyInfo [keyInfo=new SortKeyInfo()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSortsToRemove</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>POSort</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDistinctsToChange</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PODistinct</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSecondarySortKeyInfo</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>SortKeyInfo</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>collectColumnChain</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnChainInfo</ParamName>
                    <ParamType>ColumnChainInfo</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PhysicalOperator [currentNode=plan.getRoots().get(0)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PlanException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>