<Class>
    <Id>325</Id>
    <Package>org.apache.pig.test.utils.dotGraph</Package>
    <ClassName>ExactKeyMatcher</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>NodeMatcher</SuperInterface>
        <SuperInterface>Operator</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExactKeyMatcher  /** 
 * This matcher only does exact key matching
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>match</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorKey</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan1</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>plan2</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>messages</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [diff1=diffKeys(plan1,plan2,messages,"plan2")]</InnerVar>
                <InnerVar>int [diff2=diffKeys(plan2,plan1,messages,"plan1")]</InnerVar>
                <InnerVar>Iterator&lt;Operator&gt; [iter=plan1.getKeys().values().iterator()]</InnerVar>
                <InnerVar>Map&lt;OperatorKey,OperatorKey&gt; [outputMap=new HashMap&lt;OperatorKey,OperatorKey&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>diffKeys</MethodName>
            <MethodComment>/** 
 * Report plan1.OperatorSet - plan2.OperatorSet
 * @param plan1
 * @param plan2
 * @param messages where the report messages go. null if no messages needed
 * @param plan2Name the name that is used to refer to plan2 in messages
 * @return
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan1</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>plan2</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>messages</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>plan2Name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [count=0]</InnerVar>
                <InnerVar>Map&lt;OperatorKey,Operator&gt; [keyList=plan1.getKeys()]</InnerVar>
                <InnerVar>Iterator&lt;OperatorKey&gt; [iter=keyList.keySet().iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>appendOpKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>operatorKey</ParamName>
                    <ParamType>OperatorKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sb</ParamName>
                    <ParamType>StringBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>sb;append;["("]</InnerMethodInvoke>
                <InnerMethodInvoke>sb;append;[operatorKey.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>sb;append;[")"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>