<Class>
    <Id>446</Id>
    <Package>org.apache.pig.backend.hadoop.hbase</Package>
    <ClassName>HBaseTableInputFormat</ClassName>
    <SuperClass>TableInputFormat</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>gt_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>gte_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>lt_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>lte_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>gt_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>gte_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>lt_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>lte_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>limit_</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>conf_</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>recordsSeen</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>limit_</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>startRow_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>endRow_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>currRow_</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>bigStart_</FieldName>
            <FieldType>BigInteger</FieldType>
        </Field>
        <Field>
            <FieldName>bigEnd_</FieldName>
            <FieldType>BigInteger</FieldType>
        </Field>
        <Field>
            <FieldName>bigRange_</FieldName>
            <FieldType>BigDecimal</FieldType>
        </Field>
        <Field>
            <FieldName>progressSoFar_</FieldName>
            <FieldType>float</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>HBaseTableInputFormat</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>HBaseTableInputFormat</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>limit</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>gt</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>gte</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lt</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>lte</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setTableRecordReader;[new HBaseTableRecordReader(limit)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withGt</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableIFBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gt</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withGte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableIFBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>gte</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withLt</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableIFBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lt</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withLte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableIFBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lte</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withLimit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableIFBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>limit</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>withConf</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableIFBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>build</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>HBaseTableInputFormat</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>HBaseTableInputFormat [inputFormat=new HBaseTableInputFormat(limit_,gt_,gte_,lt_,lte_)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getSplits</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>InputSplit</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>org.apache.hadoop.mapreduce.JobContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;InputSplit&gt; [splits=super.getSplits(context)]</InnerVar>
                <InnerVar>ListIterator&lt;InputSplit&gt; [splitIter=splits.listIterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>skipRegion</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>op</ParamName>
                    <ParamType>CompareOp</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>option</ParamName>
                    <ParamType>byte[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>BinaryComparator [comp=new BinaryComparator(option)]</InnerVar>
                <InnerVar>RowFilter [rowFilter=new RowFilter(op,comp)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>HBaseTableRecordReader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>limit</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setScan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>scan</ParamName>
                    <ParamType>Scan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>byte[] [startPadded]</InnerVar>
                <InnerVar>byte[] [endPadded]</InnerVar>
                <InnerVar>byte[] [prependHeader={1,0}]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>LOG;info;["setScan with ranges: " + bigStart_ + " - "+ bigEnd_+ " ( "+ bigRange_+ ")"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nextKeyValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean [hasMore=super.nextKeyValue()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getProgress</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>float</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>byte[] [lastPadded=currRow_]</InnerVar>
                <InnerVar>byte[] [prependHeader={1,0}]</InnerVar>
                <InnerVar>BigInteger [bigLastRow=new BigInteger(Bytes.add(prependHeader,lastPadded))]</InnerVar>
                <InnerVar>BigDecimal [processed=new BigDecimal(bigLastRow.subtract(bigStart_))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>