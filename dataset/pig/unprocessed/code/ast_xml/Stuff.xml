<Class>
    <Id>939</Id>
    <Package>org.apache.pig.piggybank.evaluation.string</Package>
    <ClassName>Stuff</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>Stuff  /** 
 * Given a string, this UDF replaces a substring given its starting index and length with the given replacement string. If the the last argument is null, the specified part of the string gets deleted.  B = FOREACH A GENERATE Stuff($0, 10, 4, 'Pie') If $0 is "Chocolate Cake" then the UDF will return "Chocolate Pie"
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [inputSize=input.size()]</InnerVar>
                <InnerVar>String [inString=(String)input.get(0)]</InnerVar>
                <InnerVar>Integer [startIndex=null]</InnerVar>
                <InnerVar>Object [inStartIndex=input.get(1)]</InnerVar>
                <InnerVar>Integer [length=null]</InnerVar>
                <InnerVar>Object [inLength=input.get(2)]</InnerVar>
                <InnerVar>String [replacementString=(String)input.get(3)]</InnerVar>
                <InnerVar>int [strLength=inString.length()]</InnerVar>
                <InnerVar>StringBuffer [result=new StringBuffer()]</InnerVar>
                <InnerVar>int [upperBound=(startIndex + length &gt; strLength) ? strLength : startIndex + length]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>outputSchema</MethodName>
            <MethodComment>/** 
 * @param input , schema of the input data
 * @return output schema
 */
</MethodComment>
            <ReturnType>Schema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>