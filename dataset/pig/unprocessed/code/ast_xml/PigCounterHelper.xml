<Class>
    <Id>619</Id>
    <Package>org.apache.pig.tools.counters</Package>
    <ClassName>PigCounterHelper</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PigCounterHelper  /** 
 * A helper class to deal with Hadoop counters in Pig.  They are stored within the singleton PigStatusReporter instance, but are null for some period of time at job startup, even after Pig has been invoked.  This class buffers counters, trying each time to get a valid Reporter and flushing stored counters each time it does.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>counterStringMap_</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>counterStringMap_</FieldName>
            <FieldType>Pair&lt;String,String&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>counterEnumMap_</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>counterEnumMap_</FieldName>
            <FieldType>Enum&lt;?&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>incrCounter</MethodName>
            <MethodComment>/** 
 * Mocks the Reporter.incrCounter, but adds buffering. See org.apache.hadoop.mapred.Reporter's incrCounter.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>group</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>incr</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PigStatusReporter [reporter=PigStatusReporter.getInstance()]</InnerVar>
                <InnerVar>Pair&lt;String,String&gt; [key=new Pair&lt;String,String&gt;(group,counterName)]</InnerVar>
                <InnerVar>Long [currentValue=counterStringMap_.get(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>counterStringMap_;put;[key, (currentValue == null ? 0 : currentValue) + incr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>incrCounter</MethodName>
            <MethodComment>/** 
 * Mocks the Reporter.incrCounter, but adds buffering. See org.apache.hadoop.mapred.Reporter's incrCounter.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>incr</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PigStatusReporter [reporter=PigStatusReporter.getInstance()]</InnerVar>
                <InnerVar>Long [currentValue=counterEnumMap_.get(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>counterEnumMap_;put;[key, (currentValue == null ? 0 : currentValue) + incr]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>