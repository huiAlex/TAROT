<Class>
    <Id>54</Id>
    <Package>org.apache.pig.builtin</Package>
    <ClassName>VALUESET</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>VALUESET  /** 
 * This UDF takes a Map and returns a Tuple containing the value set. &lt;br /&gt; Note, this UDF returns only unique values. For all values, use &lt;br /&gt; VALUELIST instead. &lt;br /&gt; &lt;pre&gt; &lt;code&gt; grunt&gt; cat data [open#apache,1#2,11#2] [apache#hadoop,3#4,12#hadoop] grunt&gt; a = load 'data' as (M:[]); grunt&gt; b = foreach a generate VALUELIST($0); ({(apache),(2)}) ({(4),(hadoop)}) &lt;/code&gt; &lt;/pre&gt;
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>TUPLE_FACTORY</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>BAG_FACTORY</FieldName>
            <FieldType>BagFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;String,Object&gt; [m=null]</InnerVar>
                <InnerVar>int [initialSetSize=getInitialSetSize(m.values())]</InnerVar>
                <InnerVar>Set&lt;Object&gt; [uniqueElements=new HashSet&lt;Object&gt;(initialSetSize)]</InnerVar>
                <InnerVar>DataBag [bag=new NonSpillableDataBag()]</InnerVar>
                <InnerVar>Iterator&lt;Object&gt; [iter=m.values().iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInitialSetSize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>c</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>outputSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Schema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FieldSchema [f=null]</InnerVar>
                <InnerVar>FieldSchema [innerFieldSchema=null]</InnerVar>
                <InnerVar>Schema [s=f.schema]</InnerVar>
                <InnerVar>Schema [innerSch=new Schema(innerFieldSchema)]</InnerVar>
                <InnerVar>Schema [bagSchema=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>allowCompileTimeCalculation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>