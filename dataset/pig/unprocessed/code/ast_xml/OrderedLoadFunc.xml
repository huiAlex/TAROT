<Class>
    <Id>855</Id>
    <Package>org.apache.pig</Package>
    <ClassName>OrderedLoadFunc</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OrderedLoadFunc  /** 
 * Implementing this interface indicates to Pig that a given loader can be used for MergeJoin. It does not mean the data itself is ordered, but rather that the splits returned by the underlying InputFormat can be ordered to match the order of the data they are loading.  For  example, files splits have a natural order (that of the file they are from) while splits of RDBMS does not (since tables have no inherent order). The position as represented by the WritableComparable object is stored in the index created by a MergeJoin sampling MapReduce job to get an ordered sequence of splits. It is necessary to read splits in order during a merge join to assure  data is being read according to the sort order.
 * @since Pig 0.7
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getSplitComparable</MethodName>
            <MethodComment>/** 
 * The WritableComparable object returned will be used to compare the position of different splits in an ordered stream
 * @param split An InputSplit from the InputFormat underlying this loader.
 * @return WritableComparable representing the position of the split in input
 * @throws IOException
 */
</MethodComment>
            <ReturnType>?</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>split</ParamName>
                    <ParamType>InputSplit</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>