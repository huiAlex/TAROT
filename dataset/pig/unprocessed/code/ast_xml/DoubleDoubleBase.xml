<Class>
    <Id>279</Id>
    <Package>org.apache.pig.piggybank.evaluation.math</Package>
    <ClassName>DoubleDoubleBase</ClassName>
    <SuperClass>Base</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DoubleDoubleBase  /** 
 * base class for math udfs that return Double value
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>compute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input1</ParamName>
                    <ParamType>Double</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>input2</ParamName>
                    <ParamType>Double</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment>/** 
 * java level API
 * @param input expects a tuple with a single Double value
 * @param output returns a Double value
 */
</MethodComment>
            <ReturnType>Double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getArgToFuncMapping</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FuncSpec</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;FuncSpec&gt; [funcList=new ArrayList&lt;FuncSpec&gt;()]</InnerVar>
                <InnerVar>List&lt;Schema.FieldSchema&gt; [fields=new ArrayList&lt;Schema.FieldSchema&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>fields;add;[new Schema.FieldSchema(null,DataType.DOUBLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>fields;add;[new Schema.FieldSchema(null,DataType.DOUBLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>funcList;add;[new FuncSpec(this.getClass().getName(),new Schema(fields))]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>