<Class>
    <Id>566</Id>
    <Package>org.apache.pig.newplan.logical.visitor</Package>
    <ClassName>UnionOnSchemaSetter</ClassName>
    <SuperClass>LogicalRelationalNodesVisitor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>UnionOnSchemaSetter  /** 
 * A visitor that modifies the logical plan (if necessary) for union-onschema functionality. It runs logical plan validator so that the correct schema of its inputs is available. It inserts foreach statements in its input if the input operator schema does not match the schema created by  merging all input schemas. Migrated from the old UnionOnSchemaSetter class.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>UnionOnSchemaSetter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>union</ParamName>
                    <ParamType>LOUnion</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalSchema [outputSchema=union.getSchema()]</InnerVar>
                <InnerVar>int [fieldCount=outputSchema.size()]</InnerVar>
                <InnerVar>OperatorPlan [plan=union.getPlan()]</InnerVar>
                <InnerVar>List&lt;Operator&gt; [preds=new ArrayList&lt;Operator&gt;()]</InnerVar>
                <InnerVar>List&lt;LogicalSchema&gt; [fieldSchemas=new ArrayList&lt;LogicalSchema&gt;(fieldCount)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>preds;addAll;[plan.getPredecessors(union)]</InnerMethodInvoke>
                <InnerMethodInvoke>union;setUnionOnSchema;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>