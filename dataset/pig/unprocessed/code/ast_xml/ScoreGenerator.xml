<Class>
    <Id>456</Id>
    <Package>org.apache.pig.tutorial</Package>
    <ClassName>ScoreGenerator</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ScoreGenerator  /** 
 * For each n-gram, we have a set of (hour, count) pairs. This function reads the set and retains those hours with above above mean count, and calculates the score of each retained hour as the  multiplier of the count of the hour over the standard deviation. A score greater than 1.0 indicates the frequency of this n-gram  in this particular hour is at least one standard deviation away  from the average frequency among all hours
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>computeMean</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counts</ParamName>
                    <ParamType>Long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [numCounts=counts.size()]</InnerVar>
                <InnerVar>double [mean=0.0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>computeSD</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counts</ParamName>
                    <ParamType>Long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>mean</ParamName>
                    <ParamType>double</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [numCounts=counts.size()]</InnerVar>
                <InnerVar>double [deviation=0.0]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>outputSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Schema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Schema [bagSchema=new Schema()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>bagSchema;add;[new Schema.FieldSchema("hour",DataType.CHARARRAY)]</InnerMethodInvoke>
                <InnerMethodInvoke>bagSchema;add;[new Schema.FieldSchema("score",DataType.DOUBLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>bagSchema;add;[new Schema.FieldSchema("count",DataType.LONG)]</InnerMethodInvoke>
                <InnerMethodInvoke>bagSchema;add;[new Schema.FieldSchema("mean",DataType.DOUBLE)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>