<Class>
    <Id>768</Id>
    <Package>org.apache.pig</Package>
    <ClassName>OverwritableStoreFunc</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OverwritableStoreFunc  /** 
 * A  {@link StoreFunc} should implement this interface to enable overwriting itsstore/output location if it already exists.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>shouldOverwrite</MethodName>
            <MethodComment>/** 
 * This method is called by the Pig runtime to determine whether to ignore output validation problems (see  {@link PigOutputFormat#checkOutputSpecs} and {@link InputOutputFileValidator#validate}) and to delete the existing output.
 * @return whether to overwrite the store/output location of this {@link StoreFunc}.
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cleanupOutput</MethodName>
            <MethodComment>/** 
 * This method is called to cleanup the store/output location of this  {@link StoreFunc}.
 * @param store The {@link POStore} object to get info about the storeoperator for this store function.
 * @param job The {@link Job} object to get job related information.
 * @throws IOException if an exception occurs during the cleanup.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>store</ParamName>
                    <ParamType>POStore</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>Job</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>