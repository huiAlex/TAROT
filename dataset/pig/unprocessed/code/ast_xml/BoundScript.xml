<Class>
    <Id>126</Id>
    <Package>org.apache.pig.scripting</Package>
    <ClassName>BoundScript</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>BoundScript  /** 
 * This represents an instance of a bound pipeline.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>queries</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>queries</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>scriptContext</FieldName>
            <FieldType>ScriptPigContext</FieldType>
        </Field>
        <Field>
            <FieldName>query</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>ctx</FieldName>
            <FieldType>PigContext</FieldType>
        </Field>
        <Field>
            <FieldName>adaptor</FieldName>
            <FieldType>PigProgressNotificationListener</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>BoundScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scriptContext</ParamName>
                    <ParamType>ScriptPigContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.queries;add;[query]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>BoundScript</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>queries</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scriptContext</ParamName>
                    <ParamType>ScriptPigContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>this.queries;addAll;[queries]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runSingle</MethodName>
            <MethodComment>/** 
 * Run a pipeline on Hadoop. If there are no stores in this pipeline then nothing will be run.
 * @return {@link PigStats}, null if there is no bound query to run.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runSingle</MethodName>
            <MethodComment>/** 
 * Run a pipeline on Hadoop. If there are no stores in this pipeline then nothing will be run.
 * @param prop Map of properties that Pig should set when running the script.This is intended for use with scripting languages that do not support the Properties object.
 * @return {@link PigStats}, null if there is no bound query to run.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PigStats [ret=exec(queries.get(0))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setPigStats;[ret]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runSingle</MethodName>
            <MethodComment>/** 
 * Run a pipeline on Hadoop. If there are no stores in this pipeline then nothing will be run.
 * @param propfile File with properties that Pig should set when running the script.
 * @return {@link PigStats}, null if there is no bound query to run.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propfile</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [props=new Properties()]</InnerVar>
                <InnerVar>FileInputStream [fin=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment>/** 
 * Run multiple instances of bound pipeline on Hadoop in parallel. If there are no stores in this pipeline then nothing will be run. Bind is called first with the list of maps of variables to bind.
 * @return a list of {@link PigStats}, one for each map of variables passed to bind.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment>/** 
 * Run multiple instances of bound pipeline on Hadoop in parallel.
 * @param prop Map of properties that Pig should set when running the script.This is intended for use with scripting languages that do not support the Properties object.
 * @return a list of {@link PigStats}, one for each map of variables passed to bind.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>prop</ParamName>
                    <ParamType>Properties</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;PigStats&gt; [stats=new ArrayList&lt;PigStats&gt;()]</InnerVar>
                <InnerVar>List&lt;PigProgressNotificationListener&gt; [listeners=ScriptState.get().getAllListeners()]</InnerVar>
                <InnerVar>SyncProgressNotificationAdaptor [adaptor=new SyncProgressNotificationAdaptor(listeners)]</InnerVar>
                <InnerVar>List&lt;Future&lt;PigStats&gt;&gt; [futures=new ArrayList&lt;Future&lt;PigStats&gt;&gt;()]</InnerVar>
                <InnerVar>ExecutorService [executor=Executors.newFixedThreadPool(queries.size())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment>/** 
 * Run multiple instances of bound pipeline on Hadoop in parallel.
 * @param propfile File with properties that Pig should set when running the script.
 * @return a list of PigResults, one for each map of variables passedto bind.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>propfile</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Properties [prop=new Properties()]</InnerVar>
                <InnerVar>FileInputStream [fin=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>illustrate</MethodName>
            <MethodComment>/** 
 * Run illustrate for this pipeline.  Results will be printed to stdout.
 * @throws IOException if illustrate fails.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>PigServer [pigServer=new PigServer(scriptContext.getPigContext(),false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;registerQueryForDiagnostics;[pigServer, queries.get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>pigServer;getExamples;[null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>explain</MethodName>
            <MethodComment>/** 
 * Explain this pipeline.  Results will be printed to stdout.
 * @throws IOException if explain fails.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>PigServer [pigServer=new PigServer(scriptContext.getPigContext(),false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;registerQueryForDiagnostics;[pigServer, queries.get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>pigServer;explain;[null, System.out]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>describe</MethodName>
            <MethodComment>/** 
 * Describe the schema of an alias in this pipeline. Results will be printed to stdout.
 * @param alias to be described
 * @throws IOException if describe fails.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PigServer [pigServer=new PigServer(scriptContext.getPigContext(),false)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;registerQueryForDiagnostics;[pigServer, queries.get(0)]</InnerMethodInvoke>
                <InnerMethodInvoke>pigServer;dumpSchema;[alias]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>query</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;PigProgressNotificationListener&gt; [listeners=ScriptState.get().getAllListeners()]</InnerVar>
                <InnerVar>PigContext [pc=scriptContext.getPigContext()]</InnerVar>
                <InnerVar>String [scriptName=new File(ScriptState.get().getFileName()).getName()]</InnerVar>
                <InnerVar>ScriptState [scriptState=pc.getExecutionEngine().instantiateScriptState()]</InnerVar>
                <InnerVar>PigServer [pigServer=new PigServer(scriptContext.getPigContext(),false)]</InnerVar>
                <InnerVar>GruntParser [grunt=new GruntParser(new StringReader(query),pigServer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>LOG;info;["Query to run:\n" + query]</InnerMethodInvoke>
                <InnerMethodInvoke>scriptState;setFileName;[scriptName]</InnerMethodInvoke>
                <InnerMethodInvoke>ScriptState;start;[scriptState]</InnerMethodInvoke>
                <InnerMethodInvoke>ScriptState.get();setScript;[query]</InnerMethodInvoke>
                <InnerMethodInvoke>grunt;setInteractive;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerQueryForDiagnostics</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pigServer</ParamName>
                    <ParamType>PigServer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pl</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>GruntParser [grunt=new GruntParser(new StringReader(pl),pigServer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>grunt;setInteractive;[false]</InnerMethodInvoke>
                <InnerMethodInvoke>pigServer;setBatchOn;[]</InnerMethodInvoke>
                <InnerMethodInvoke>pigServer;setSkipParseInRegisterForBatch;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setPigStats</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stats</ParamName>
                    <ParamType>PigStats</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ScriptEngine [engine=scriptContext.getScriptEngine()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setPigStats</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lst</ParamName>
                    <ParamType>PigStats</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [key=(name != null) ? name : this.toString()]</InnerVar>
                <InnerVar>ScriptEngine [engine=scriptContext.getScriptEngine()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>MyCallable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pl</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ctx</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>adaptor</ParamName>
                    <ParamType>PigProgressNotificationListener</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>PigContext [pc=scriptContext.getPigContext()]</InnerVar>
                <InnerVar>ScriptState [scriptState=pc.getExecutionEngine().instantiateScriptState()]</InnerVar>
                <InnerVar>PigServer [pigServer=new PigServer(ctx,true)]</InnerVar>
                <InnerVar>GruntParser [grunt=new GruntParser(new StringReader(query),pigServer)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>LOG;info;["Query to run:\n" + query]</InnerMethodInvoke>
                <InnerMethodInvoke>ScriptState;start;[scriptState]</InnerMethodInvoke>
                <InnerMethodInvoke>ScriptState.get();setScript;[query]</InnerMethodInvoke>
                <InnerMethodInvoke>ScriptState.get();registerListener;[adaptor]</InnerMethodInvoke>
                <InnerMethodInvoke>grunt;setInteractive;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>