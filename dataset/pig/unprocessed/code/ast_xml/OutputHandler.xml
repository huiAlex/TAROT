<Class>
    <Id>1119</Id>
    <Package>org.apache.pig.impl.streaming</Package>
    <ClassName>OutputHandler</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>OutputHandler  /** 
 * {@link OutputHandler} is responsible for handling the output of thePig-Streaming external command. The output of the managed executable could be fetched in a {@link OutputType#SYNCHRONOUS} manner via its &lt;code&gt;stdout&lt;/code&gt; or in an{@link OutputType#ASYNCHRONOUS} manner via an external file to which theprocess wrote its output.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>END_OF_OUTPUT</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_RECORD_DELIM</FieldName>
            <FieldType>byte[]</FieldType>
        </Field>
        <Field>
            <FieldName>deserializer</FieldName>
            <FieldType>StreamToPig</FieldType>
        </Field>
        <Field>
            <FieldName>newDeserializer</FieldName>
            <FieldType>PigStreamingBase</FieldType>
        </Field>
        <Field>
            <FieldName>in</FieldName>
            <FieldType>LineReader</FieldType>
        </Field>
        <Field>
            <FieldName>currValue</FieldName>
            <FieldType>Text</FieldType>
        </Field>
        <Field>
            <FieldName>istream</FieldName>
            <FieldType>BufferedPositionedInputStream</FieldType>
        </Field>
        <Field>
            <FieldName>recordDelimStr</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>recordDelimLength</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>alreadyClosed</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getOutputType</MethodName>
            <MethodComment>/** 
 * Get the handled &lt;code&gt;OutputType&lt;/code&gt;.
 * @return the handled &lt;code&gt;OutputType&lt;/code&gt;
 */
</MethodComment>
            <ReturnType>OutputType</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bindTo</MethodName>
            <MethodComment>/** 
 * Bind the &lt;code&gt;OutputHandler&lt;/code&gt; to the &lt;code&gt;InputStream&lt;/code&gt; from which to read the output data of the managed process.
 * @param is &lt;code&gt;InputStream&lt;/code&gt; from which to read the output dataof the managed process
 * @throws IOException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fileName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>BufferedPositionedInputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>offset</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>end</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNext</MethodName>
            <MethodComment>/** 
 * Get the next output &lt;code&gt;Tuple&lt;/code&gt; of the managed process.
 * @return the next output &lt;code&gt;Tuple&lt;/code&gt; of the managed process
 * @throws IOException
 */
</MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>currValue;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readValue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [num=in.readLine(currValue)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readNextLine</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Text [line=new Text()]</InnerVar>
                <InnerVar>int [num=in.readLine(line)]</InnerVar>
                <InnerVar>byte[] [lineBytes=line.getBytes()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isEndOfRow</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRecordDelimiter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment>/** 
 * Close the &lt;code&gt;OutputHandler&lt;/code&gt;.
 * @throws IOException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>