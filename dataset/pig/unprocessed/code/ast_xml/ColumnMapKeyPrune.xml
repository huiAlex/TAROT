<Class>
    <Id>1277</Id>
    <Package>org.apache.pig.newplan.logical.rules</Package>
    <ClassName>ColumnMapKeyPrune</ClassName>
    <SuperClass>WholePlanRule</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ColumnMapKeyPrune  /** 
 * This Rule prunes columns and map keys and set to loader. This rule depends on MapKeysPruneHelper to calculate what keys are required for a loader, and ColumnPruneHelper to calculate the required columns for a loader. Then it combines the map keys and columns info to set into the loader.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>hasRun</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>mapKeyHelper</FieldName>
            <FieldType>MapKeysPruneHelper</FieldType>
        </Field>
        <Field>
            <FieldName>columnHelper</FieldName>
            <FieldType>ColumnPruneHelper</FieldType>
        </Field>
        <Field>
            <FieldName>columnPrune</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>mapKeyPrune</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>requiredItems</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>requiredItems</FieldName>
            <FieldType>LOLoad</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ColumnMapKeyPrune</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>n</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNewTransformer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Transformer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>check</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matched</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reportChanges</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorPlan</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>merge</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matched</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ColumnPruneVisitor [columnPruneVisitor=new ColumnPruneVisitor(currentPlan,requiredItems,columnPrune)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;merge;[]</InnerMethodInvoke>
                <InnerMethodInvoke>columnPruneVisitor;visit;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>