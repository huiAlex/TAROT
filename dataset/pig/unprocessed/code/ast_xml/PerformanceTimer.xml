<Class>
    <Id>600</Id>
    <Package>org.apache.pig.tools.timer</Package>
    <ClassName>PerformanceTimer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>mState</FieldName>
            <FieldType>State</FieldType>
        </Field>
        <Field>
            <FieldName>mNanosecs</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>mStartedAt</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>mStarts</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>mName</FieldName>
            <FieldType>String</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>start</MethodName>
            <MethodComment>/** 
 * Start the timer.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stop</MethodName>
            <MethodComment>/** 
 * Stop the timer.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>print</MethodName>
            <MethodComment>/** 
 * Dump the total time, total number of starts and stops, and average run time of the timer to an output stream.
 * @param out output stream to write info to.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>double [t=mNanosecs / 1000000000.0]</InnerVar>
                <InnerVar>long [avg=mNanosecs / mStarts]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>out;print;[mName + ": "]</InnerMethodInvoke>
                <InnerMethodInvoke>out;print;[t]</InnerMethodInvoke>
                <InnerMethodInvoke>out;print;[".  Run "]</InnerMethodInvoke>
                <InnerMethodInvoke>out;print;[mStarts]</InnerMethodInvoke>
                <InnerMethodInvoke>out;print;[" times, average run time "]</InnerMethodInvoke>
                <InnerMethodInvoke>out;print;[t]</InnerMethodInvoke>
                <InnerMethodInvoke>out;println;["."]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>PerformanceTimer</MethodName>
            <MethodComment>/** 
 * @param name Name of this timer.
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>name</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>