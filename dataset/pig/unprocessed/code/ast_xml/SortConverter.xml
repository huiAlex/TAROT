<Class>
    <Id>120</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.spark.converter</Package>
    <ClassName>SortConverter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RDDConverter</SuperInterface>
        <SuperInterface>Tuple</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>TO_VALUE_FUNCTION</FieldName>
            <FieldType>FlatMapFunction</FieldType>
        </Field>
        <Field>
            <FieldName>TO_VALUE_FUNCTION</FieldName>
            <FieldType>Iterator&lt;Tuple2&lt;Tuple,Object&gt;&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>in</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>in</FieldName>
            <FieldType>Tuple2&lt;Tuple,Object&gt;</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>convert</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>predecessors</ParamName>
                    <ParamType>RDD&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>sortOperator</ParamName>
                    <ParamType>POSort</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RDD&lt;Tuple&gt; [rdd=predecessors.get(0)]</InnerVar>
                <InnerVar>int [parallelism=SparkPigContext.get().getParallelism(predecessors,sortOperator)]</InnerVar>
                <InnerVar>RDD&lt;Tuple2&lt;Tuple,Object&gt;&gt; [rddPair=rdd.map(new ToKeyValueFunction(),SparkUtil.&lt;Tuple,Object&gt;getTuple2Manifest())]</InnerVar>
                <InnerVar>JavaPairRDD&lt;Tuple,Object&gt; [r=new JavaPairRDD&lt;Tuple,Object&gt;(rddPair,SparkUtil.getManifest(Tuple.class),SparkUtil.getManifest(Object.class))]</InnerVar>
                <InnerVar>JavaPairRDD&lt;Tuple,Object&gt; [sorted=r.sortByKey(sortOperator.getMComparator(),true,parallelism)]</InnerVar>
                <InnerVar>JavaRDD&lt;Tuple&gt; [mapped=sorted.mapPartitions(TO_VALUE_FUNCTION)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>SparkUtil;assertPredecessorSize;[predecessors, sortOperator, 1]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Tuple2TransformIterable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple2&lt;Tuple,Object&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>iterator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>next</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple2&lt;Tuple,Object&gt;</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>apply</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Tuple [key=t]</InnerVar>
                <InnerVar>Object [value=null]</InnerVar>
                <InnerVar>Tuple2&lt;Tuple,Object&gt; [out=new Tuple2&lt;Tuple,Object&gt;(key,value)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>