<Class>
    <Id>1054</Id>
    <Package>org.apache.pig</Package>
    <ClassName>JVMReuseManager</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>JVMReuseManager  /** 
 * This class is used to manage JVM Reuse in case of execution engines like Tez and Spark. Static data members of a UDF, LoadFunc or StoreFunc class need to be reset or object references made null or reinitialized when the jvm container is reused for new tasks. Example usage to perform static data cleanup in a UDF as follows. public class MyUDF extends EvalFunc&lt;Tuple&gt; { private static int numInvocations = 0; private static Reporter reporter; static { // Register this class for static data cleanup JVMReuseManager.getInstance().registerForStaticDataCleanup(MyUDF.class); } // Write a public static method that performs the cleanup // and annotate it with @StaticDataCleanup
 * @StaticDataCleanup public static void staticDataCleanup() { numInvocations = 0; reporter = null; } #### UDF Code goes here ###### }
 * @since Pig 0.14
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>cleanupMethods</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cleanupMethods</FieldName>
            <FieldType>Method</FieldType>
        </Field>
        <Field>
            <FieldName>instance</FieldName>
            <FieldType>JVMReuseManager</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>JVMReuseManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>JVMReuseManager</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>registerForStaticDataCleanup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clazz</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getStaticDataCleanupMethods</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Method</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>