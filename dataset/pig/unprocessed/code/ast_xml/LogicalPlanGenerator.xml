<Class>
    <Id>782</Id>
    <Package>org.apache.pig.parser</Package>
    <ClassName>LogicalPlanGenerator</ClassName>
    <SuperClass>TreeParser</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>LogicalPlanGenerator  /** 
 * Grammar file for Pig tree parser (for schema alias validation). NOTE: THIS FILE IS BASED ON QueryParser.g, SO IF YOU CHANGE THAT FILE, YOU WILL PROBABLY NEED TO MAKE CORRESPONDING CHANGES TO THIS FILE AS WELL.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>tokenNames</FieldName>
            <FieldType>String[]</FieldType>
        </Field>
        <Field>
            <FieldName>EOF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ALL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>AMPERSAND</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>AND</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ARROBA</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>AS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ASC</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ASSERT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BAG</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BIGDECIMAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BIGDECIMALNUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BIGINTEGER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BIGINTEGERNUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BOOLEAN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BYTEARRAY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CACHE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CASE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CHARARRAY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COGROUP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COLON</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COMMA</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CROSS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CUBE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DATETIME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DCOLON</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DEFINE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DENSE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DESC</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DIGIT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DISTINCT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DIV</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DOLLAR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DOLLARVAR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DOUBLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DOUBLENUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>DOUBLE_PERIOD</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ELSE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>END</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EQUAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EXECCOMMAND</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FALSE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FAT_ARROW</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FILTER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FLATTEN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FLOAT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FLOATINGPOINT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FLOATNUMBER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FOREACH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FULL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GENERATE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>GROUP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IDENTIFIER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IMPORT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INNER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INPUT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INTEGER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INTO</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INVOKE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>JOIN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT_BRACKET</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT_CURLY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LEFT_PAREN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LETTER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LIMIT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LOAD</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LONG</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>LONGINTEGER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAPREDUCE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MINUS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ML_COMMENT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MULTILINE_QUOTEDSTRING</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NOT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NULL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_OP_EQ</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_OP_GT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_OP_GTE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_OP_LT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_OP_LTE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NUM_OP_NE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ONSCHEMA</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>OR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ORDER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>OTHERWISE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>OUTER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>OUTPUT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PARALLEL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PARTITION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PERCENT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PERIOD</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PLUS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>POUND</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>QMARK</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>QUOTEDSTRING</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RANK</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>REGISTER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RETURNS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RIGHT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RIGHT_BRACKET</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RIGHT_CURLY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RIGHT_PAREN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ROLLUP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SAMPLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SEMI_COLON</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SHIP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SL_COMMENT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SPECIALCHAR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SPLIT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STAR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STDERROR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STDIN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STDOUT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STORE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STREAM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_EQ</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_GT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_GTE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_LT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_LTE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_MATCHES</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STR_OP_NE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>THEN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>THROUGH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TRUE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UNION</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>USING</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>VOID</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>WHEN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>WS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>ANY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BAG_TYPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BAG_TYPE_CAST</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BAG_VAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BIN_EXPR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BOOL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>BOOL_COND</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CASE_COND</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CASE_EXPR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CASE_EXPR_LHS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CASE_EXPR_RHS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CAST_EXPR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>COL_RANGE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EXPR_IN_PAREN</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_DEF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FIELD_DEF_WITHOUT_IDENTIFIER</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FOREACH_PLAN_COMPLEX</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FOREACH_PLAN_SIMPLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FUNC</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FUNC_EVAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>FUNC_REF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>INVOKER_FUNC_EVAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IN_LHS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IN_RHS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>JOIN_ITEM</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>KEY_VAL_PAIR</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MACRO_BODY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MACRO_DEF</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MACRO_INLINE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAP_TYPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAP_VAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NEG</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NESTED_CMD</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NESTED_CMD_ASSI</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>NESTED_PROJ</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PARAMS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>QUERY</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>REALIAS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>RETURN_VAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>SPLIT_BRANCH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STATEMENT</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TOBAG</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TOMAP</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TOTUPLE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_TYPE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_TYPE_CAST</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>TUPLE_VAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>EVAL</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MATCHES</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>currentOp</FieldName>
            <FieldType>LogicalRelationalOperator</FieldType>
        </Field>
        <Field>
            <FieldName>GScope_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>adaptor</FieldName>
            <FieldType>TreeAdaptor</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>builder</FieldName>
            <FieldType>LogicalPlanBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>inForeachPlan</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>inNestedCommand</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>parallel</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>inputAlias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>inputIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>statement_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>command</FieldName>
            <FieldType>StreamingCommand</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>inputHandleSpecs</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>inputHandleSpecs</FieldName>
            <FieldType>HandleSpec</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>handleSpec</FieldName>
            <FieldType>HandleSpec</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>outputHandleSpecs</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>outputHandleSpecs</FieldName>
            <FieldType>HandleSpec</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>dir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>limit</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>filename</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>fieldSchema</FieldName>
            <FieldType>LogicalFieldSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>schema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>datatype</FieldName>
            <FieldType>Byte</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>datatype</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>funcSpec</FieldName>
            <FieldType>FuncSpec</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>funcName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>args</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>args</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>cubeOp</FieldName>
            <FieldType>LOCube</FieldType>
        </Field>
        <Field>
            <FieldName>cubePlans</FieldName>
            <FieldType>MultiMap</FieldType>
        </Field>
        <Field>
            <FieldName>cubePlans</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>operations</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>operations</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>inputIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>cube_clause_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>operations</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>operations</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>MultiMap</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>operations</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>operations</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>MultiMap</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>operation</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>groupPlans</FieldName>
            <FieldType>MultiMap</FieldType>
        </Field>
        <Field>
            <FieldName>groupPlans</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>inputIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>inputAliases</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>inputAliases</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>innerFlags</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>innerFlags</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>group_clause_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>GROUPTYPE</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>name</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>flattenFlag</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>schema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>comment</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>fieldSchema</FieldName>
            <FieldType>LogicalFieldSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>logicalSchema</FieldName>
            <FieldType>LogicalSchema</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>cols</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>cols</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>col</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>col</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>col</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>key</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>rankOp</FieldName>
            <FieldType>LORank</FieldType>
        </Field>
        <Field>
            <FieldName>rank_clause_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlags</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlags</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>isDenseRank</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlags</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlags</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlag</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlags</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlags</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>ascFlag</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>partitioner</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>aliasList</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>aliasList</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>joinPlans</FieldName>
            <FieldType>MultiMap</FieldType>
        </Field>
        <Field>
            <FieldName>joinPlans</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>inputIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>inputAliases</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>inputAliases</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>innerFlags</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>innerFlags</FieldName>
            <FieldType>Boolean</FieldType>
        </Field>
        <Field>
            <FieldName>join_clause_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>JOINTYPE</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>plans</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalExpressionPlan</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>foreachOp</FieldName>
            <FieldType>LOForEach</FieldType>
        </Field>
        <Field>
            <FieldName>foreach_clause_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>innerPlan</FieldName>
            <FieldType>LogicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>exprPlans</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>exprPlans</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>operators</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>operators</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>foreach_plan_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>innerPlan</FieldName>
            <FieldType>LogicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>foreachOp</FieldName>
            <FieldType>LOForEach</FieldType>
        </Field>
        <Field>
            <FieldName>nested_foreach_stack</FieldName>
            <FieldType>Stack</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>op</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>opList</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>opList</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>alias</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>expr</FieldName>
            <FieldType>LogicalExpression</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>key</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>value</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>tree</FieldName>
            <FieldType>CommonTree</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUERY_in_query87</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_statement_in_query89</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_general_statement_in_statement111</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_split_statement_in_statement116</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_realias_statement_in_statement121</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_assert_statement_in_statement126</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_register_statement_in_statement131</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_split_clause_in_split_statement140</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_realias_clause_in_realias_statement149</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_assert_clause_in_assert_statement158</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_REGISTER_in_register_statement169</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_register_statement171</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_USING_in_register_statement174</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_register_statement176</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_AS_in_register_statement178</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_register_statement180</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STATEMENT_in_general_statement199</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_general_statement203</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_op_clause_in_general_statement214</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_parallel_clause_in_general_statement216</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_REALIAS_in_realias_clause233</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_realias_clause235</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_realias_clause237</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PARALLEL_in_parallel_clause256</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_parallel_clause258</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_alias276</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_define_clause_in_op_clause302</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_load_clause_in_op_clause316</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_group_clause_in_op_clause332</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_store_clause_in_op_clause348</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_filter_clause_in_op_clause364</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_distinct_clause_in_op_clause380</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_limit_clause_in_op_clause396</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_sample_clause_in_op_clause412</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_order_clause_in_op_clause428</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rank_clause_in_op_clause444</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cross_clause_in_op_clause460</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_clause_in_op_clause476</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_union_clause_in_op_clause492</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_stream_clause_in_op_clause508</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_mr_clause_in_op_clause524</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_foreach_clause_in_op_clause540</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_clause_in_op_clause556</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_assert_clause_in_op_clause572</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DEFINE_in_define_clause586</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_define_clause588</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cmd_in_define_clause590</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DEFINE_in_define_clause605</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_define_clause607</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_define_clause609</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_EXECCOMMAND_in_cmd638</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ship_clause_in_cmd642</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cache_clause_in_cmd647</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_input_clause_in_cmd652</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_output_clause_in_cmd656</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_error_clause_in_cmd660</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SHIP_in_ship_clause683</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_path_list_in_ship_clause685</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_path_list702</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CACHE_in_cache_clause720</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_path_list_in_cache_clause722</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INPUT_in_input_clause745</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_stream_cmd_in_input_clause749</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STDIN_in_stream_cmd783</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_stream_cmd795</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STDOUT_in_stream_cmd810</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_stream_cmd822</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_stream_cmd837</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_stream_cmd849</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OUTPUT_in_output_clause877</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_stream_cmd_in_output_clause881</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STDERROR_in_error_clause909</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_error_clause919</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_error_clause941</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LOAD_in_load_clause994</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_filename_in_load_clause996</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_load_clause998</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_as_clause_in_load_clause1002</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_filename1022</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_AS_in_as_clause1039</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_field_def_list_in_as_clause1041</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FIELD_DEF_in_field_def1069</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_field_def1071</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_type_in_field_def1075</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FIELD_DEF_WITHOUT_IDENTIFIER_in_field_def1094</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_type_in_field_def1098</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_field_def_in_field_def_list1129</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_simple_type_in_type1149</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_tuple_type_in_type1159</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_bag_type_in_type1169</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_map_type_in_type1179</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BOOLEAN_in_simple_type1197</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INT_in_simple_type1204</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LONG_in_simple_type1211</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FLOAT_in_simple_type1218</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOUBLE_in_simple_type1225</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIGINTEGER_in_simple_type1232</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIGDECIMAL_in_simple_type1239</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DATETIME_in_simple_type1246</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CHARARRAY_in_simple_type1253</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BYTEARRAY_in_simple_type1260</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TUPLE_TYPE_in_tuple_type1277</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_field_def_list_in_tuple_type1287</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BAG_TYPE_in_bag_type1327</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_bag_type1329</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_tuple_type_in_bag_type1332</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MAP_TYPE_in_map_type1355</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_map_type1357</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_type_in_map_type1360</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FUNC_REF_in_func_clause1389</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_name_in_func_clause1391</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FUNC_in_func_clause1405</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_name_in_func_clause1407</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_args_in_func_clause1409</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_eid_in_func_name1439</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PERIOD_in_func_name1453</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOLLAR_in_func_name1459</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_eid_in_func_name1475</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_func_args1504</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MULTILINE_QUOTEDSTRING_in_func_args1514</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CUBE_in_cube_clause1556</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_item_in_cube_clause1558</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_cube_item1575</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_by_clause_in_cube_item1579</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BY_in_cube_by_clause1606</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_or_rollup_in_cube_by_clause1608</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_rollup_list_in_cube_or_rollup1631</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CUBE_in_cube_rollup_list1661</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ROLLUP_in_cube_rollup_list1667</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_by_expr_list_in_cube_rollup_list1673</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cube_by_expr_in_cube_by_expr_list1697</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_range_in_cube_by_expr1720</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cube_by_expr1726</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_cube_by_expr1732</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_GROUP_in_group_clause1771</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_group_item_in_group_clause1773</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_group_type_in_group_clause1778</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_partition_clause_in_group_clause1785</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_COGROUP_in_group_clause1800</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_group_item_in_group_clause1802</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_group_type_in_group_clause1807</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_partition_clause_in_group_clause1814</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_group_type1835</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_group_item1855</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_group_by_clause_in_group_item1859</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ALL_in_group_item1883</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ANY_in_group_item1907</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INNER_in_group_item1932</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OUTER_in_group_item1938</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_rel1956</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_previous_rel_in_rel1966</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_inline_op_in_rel1976</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ARROBA_in_previous_rel1988</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_op_clause_in_inline_op2010</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_parallel_clause_in_inline_op2012</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_flatten_clause_in_flatten_generated_item2038</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_range_in_flatten_generated_item2048</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_flatten_generated_item2056</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_flatten_generated_item2064</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_field_def_list_in_flatten_generated_item2083</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FLATTEN_in_flatten_clause2101</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_flatten_clause2103</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STORE_in_store_clause2121</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_store_clause2123</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_filename_in_store_clause2125</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_store_clause2127</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASSERT_in_assert_clause2161</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_assert_clause2163</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_assert_clause2165</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_comment_in_assert_clause2168</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_comment2189</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FILTER_in_filter_clause2216</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_filter_clause2218</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_filter_clause2220</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OR_in_cond2244</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_cond2250</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_cond2257</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_AND_in_cond2272</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_cond2278</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_cond2285</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NOT_in_cond2300</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_cond2306</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NULL_in_cond2321</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2323</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NOT_in_cond2326</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_eq_in_cond2341</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2347</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2354</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_ne_in_cond2369</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2375</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2382</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_lt_in_cond2397</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2403</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2410</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_lte_in_cond2425</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2431</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2438</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_gt_in_cond2453</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2459</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2466</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_gte_in_cond2481</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2487</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2494</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_MATCHES_in_cond2509</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2515</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2522</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_in_eval_in_cond2535</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_eval_in_cond2546</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BOOL_COND_in_cond2559</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_cond2565</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IN_in_in_eval2594</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IN_LHS_in_in_eval2600</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_in_eval2606</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IN_RHS_in_in_eval2626</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_in_eval2632</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FUNC_EVAL_in_func_eval2669</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_name_in_func_eval2671</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_real_arg_in_func_eval2675</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INVOKER_FUNC_EVAL_in_func_eval2695</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_func_eval2699</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_func_eval2703</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_func_eval2707</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_real_arg_in_func_eval2711</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_real_arg2743</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_real_arg2751</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_range_in_real_arg2765</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PLUS_in_expr2784</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2790</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2797</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MINUS_in_expr2812</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2818</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2825</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_expr2840</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2846</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2853</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DIV_in_expr2868</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2874</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2881</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PERCENT_in_expr2896</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2902</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2909</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_const_expr_in_expr2922</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_var_expr_in_expr2933</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NEG_in_expr2946</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2952</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CAST_EXPR_in_expr2967</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_type_cast_in_expr2969</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2975</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_EXPR_IN_PAREN_in_expr2991</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_expr2997</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_simple_type_in_type_cast3019</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_map_type_in_type_cast3029</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_tuple_type_cast_in_type_cast3039</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_bag_type_cast_in_type_cast3049</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TUPLE_TYPE_CAST_in_tuple_type_cast3074</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_type_cast_in_tuple_type_cast3078</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BAG_TYPE_CAST_in_bag_type_cast3105</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_tuple_type_cast_in_bag_type_cast3107</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_projectable_expr_in_var_expr3134</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_dot_proj_in_var_expr3144</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_pound_proj_in_var_expr3158</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_eval_in_projectable_expr3188</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_projectable_expr3199</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_bin_expr_in_projectable_expr3210</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_case_expr_in_projectable_expr3221</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_case_cond_in_projectable_expr3232</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PERIOD_in_dot_proj3258</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_alias_or_index_in_dot_proj3262</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_alias_in_col_alias_or_index3282</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_index_in_col_alias_or_index3288</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_GROUP_in_col_alias3303</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CUBE_in_col_alias3310</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_col_alias3317</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOLLARVAR_in_col_index3332</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_COL_RANGE_in_col_range3351</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_col_range3358</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOUBLE_PERIOD_in_col_range3363</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_col_range3370</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_POUND_in_pound_proj3396</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_pound_proj3400</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NULL_in_pound_proj3406</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIN_EXPR_in_bin_expr3426</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_bin_expr3428</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_bin_expr3435</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_bin_expr3442</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CASE_EXPR_in_case_expr3471</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CASE_EXPR_LHS_in_case_expr3479</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_case_expr3485</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CASE_EXPR_RHS_in_case_expr3516</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_case_expr3522</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CASE_COND_in_case_cond3562</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_WHEN_in_case_cond3566</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_case_cond3570</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_THEN_in_case_cond3598</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_case_cond3602</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LIMIT_in_limit_clause3644</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_limit_clause3646</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_limit_clause3650</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LONGINTEGER_in_limit_clause3660</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_limit_clause3670</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SAMPLE_in_sample_clause3706</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_sample_clause3708</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOUBLENUMBER_in_sample_clause3712</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_sample_clause3722</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_RANK_in_rank_clause3768</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_rank_clause3770</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rank_by_statement_in_rank_clause3772</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BY_in_rank_by_statement3798</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rank_by_clause_in_rank_by_statement3800</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DENSE_in_rank_by_statement3804</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_rank_by_clause3833</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_rank_by_clause3842</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_rank_by_clause3848</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rank_col_in_rank_by_clause3860</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_range_in_rank_col3886</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_rank_col3890</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_rank_col3894</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_rank_col3904</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_rank_col3909</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_rank_col3913</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ORDER_in_order_clause3943</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_order_clause3945</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_order_by_clause_in_order_clause3947</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_order_clause3949</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_order_by_clause3976</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_order_by_clause3985</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_order_by_clause3991</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_order_col_in_order_by_clause4003</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_range_in_order_col4029</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_order_col4033</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_order_col4037</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_order_col4047</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_order_col4052</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_order_col4056</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DISTINCT_in_distinct_clause4076</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_distinct_clause4078</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_partition_clause_in_distinct_clause4080</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PARTITION_in_partition_clause4103</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_name_in_partition_clause4105</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CROSS_in_cross_clause4127</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_list_in_cross_clause4129</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_partition_clause_in_cross_clause4131</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_rel_list4159</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_JOIN_in_join_clause4198</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_sub_clause_in_join_clause4200</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_type_in_join_clause4202</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_partition_clause_in_join_clause4205</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_join_type4226</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_item_in_join_sub_clause4241</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LEFT_in_join_sub_clause4245</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_RIGHT_in_join_sub_clause4264</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FULL_in_join_sub_clause4283</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OUTER_in_join_sub_clause4289</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_item_in_join_sub_clause4292</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_item_in_join_sub_clause4302</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_JOIN_ITEM_in_join_item4315</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_join_item4317</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_group_by_clause_in_join_item4319</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BY_in_join_group_by_clause4346</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_group_by_expr_in_join_group_by_clause4350</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_range_in_join_group_by_expr4375</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_join_group_by_expr4381</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STAR_in_join_group_by_expr4387</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_UNION_in_union_clause4412</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ONSCHEMA_in_union_clause4416</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_list_in_union_clause4423</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FOREACH_in_foreach_clause4459</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_foreach_clause4461</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_foreach_plan_in_foreach_clause4463</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FOREACH_PLAN_SIMPLE_in_foreach_plan4499</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_generate_clause_in_foreach_plan4501</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FOREACH_PLAN_COMPLEX_in_foreach_plan4510</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_blk_in_foreach_plan4512</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_command_in_nested_blk4523</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_generate_clause_in_nested_blk4526</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NESTED_CMD_in_nested_command4548</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_nested_command4550</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_in_nested_command4552</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NESTED_CMD_ASSI_in_nested_command4570</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_nested_command4572</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_nested_command4574</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_proj_in_nested_op4596</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_filter_in_nested_op4604</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_sort_in_nested_op4612</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_distinct_in_nested_op4621</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_limit_in_nested_op4629</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_cross_in_nested_op4637</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_foreach_in_nested_op4645</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NESTED_PROJ_in_nested_proj4669</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_nested_proj4681</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_nested_proj4696</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FILTER_in_nested_filter4749</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_in_nested_filter4751</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_nested_filter4753</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ORDER_in_nested_sort4787</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_in_nested_sort4789</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_order_by_clause_in_nested_sort4791</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_func_clause_in_nested_sort4793</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DISTINCT_in_nested_distinct4823</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_in_nested_distinct4825</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LIMIT_in_nested_limit4858</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_in_nested_limit4860</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_nested_limit4864</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_expr_in_nested_limit4874</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CROSS_in_nested_cross4907</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_list_in_nested_cross4909</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FOREACH_in_nested_foreach4941</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_in_nested_foreach4943</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_generate_clause_in_nested_foreach4945</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_GENERATE_in_generate_clause4974</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_flatten_generated_item_in_generate_clause4978</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_col_ref_in_nested_op_input5044</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_proj_in_nested_op_input5055</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_nested_op_input_in_nested_op_input_list5081</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STREAM_in_stream_clause5106</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_stream_clause5108</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_EXECCOMMAND_in_stream_clause5112</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_stream_clause5135</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_as_clause_in_stream_clause5177</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MAPREDUCE_in_mr_clause5205</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_mr_clause5207</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_path_list_in_mr_clause5209</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_store_clause_in_mr_clause5220</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_load_clause_in_mr_clause5229</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_EXECCOMMAND_in_mr_clause5236</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SPLIT_in_split_clause5256</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_in_split_clause5264</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_split_branch_in_split_clause5280</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_split_otherwise_in_split_clause5283</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SPLIT_BRANCH_in_split_branch5312</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_split_branch5314</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_cond_in_split_branch5316</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OTHERWISE_in_split_otherwise5350</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_in_split_otherwise5352</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ALL_in_split_otherwise5356</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_alias_col_ref_in_col_ref5381</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_dollar_col_ref_in_col_ref5389</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_GROUP_in_alias_col_ref5406</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CUBE_in_alias_col_ref5416</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_alias_col_ref5426</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOLLARVAR_in_dollar_col_ref5445</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_literal_in_const_expr5464</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_scalar_in_literal5482</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_map_in_literal5492</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_bag_in_literal5502</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_tuple_in_literal5512</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_num_scalar_in_scalar5530</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_scalar5540</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NULL_in_scalar5550</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TRUE_in_scalar5560</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FALSE_in_scalar5570</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MINUS_in_num_scalar5595</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_num_scalar5608</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LONGINTEGER_in_num_scalar5622</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FLOATNUMBER_in_num_scalar5636</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOUBLENUMBER_in_num_scalar5650</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIGINTEGERNUMBER_in_num_scalar5664</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIGDECIMALNUMBER_in_num_scalar5678</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MAP_VAL_in_map5710</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_keyvalue_in_map5714</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_KEY_VAL_PAIR_in_keyvalue5741</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_map_key_in_keyvalue5743</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_literal_in_keyvalue5745</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_QUOTEDSTRING_in_map_key5765</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BAG_VAL_in_bag5787</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_tuple_in_bag5791</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TUPLE_VAL_in_tuple5823</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_literal_in_tuple5827</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_str_op_in_eid5852</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IMPORT_in_eid5862</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_RETURNS_in_eid5872</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DEFINE_in_eid5882</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LOAD_in_eid5892</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FILTER_in_eid5902</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FOREACH_in_eid5912</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MATCHES_in_eid5922</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ORDER_in_eid5932</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DISTINCT_in_eid5942</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_COGROUP_in_eid5952</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CUBE_in_eid5962</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ROLLUP_in_eid5972</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_JOIN_in_eid5982</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CROSS_in_eid5992</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_UNION_in_eid6002</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SPLIT_in_eid6012</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTO_in_eid6022</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IF_in_eid6032</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ALL_in_eid6042</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_AS_in_eid6052</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BY_in_eid6062</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_USING_in_eid6072</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INNER_in_eid6082</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OUTER_in_eid6092</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PARALLEL_in_eid6102</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_PARTITION_in_eid6112</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_GROUP_in_eid6122</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_AND_in_eid6132</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OR_in_eid6142</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NOT_in_eid6152</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_GENERATE_in_eid6162</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FLATTEN_in_eid6172</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_EVAL_in_eid6182</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASC_in_eid6192</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DESC_in_eid6202</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BOOLEAN_in_eid6212</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INT_in_eid6222</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LONG_in_eid6232</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FLOAT_in_eid6242</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOUBLE_in_eid6252</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIGINTEGER_in_eid6262</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BIGDECIMAL_in_eid6272</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DATETIME_in_eid6282</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CHARARRAY_in_eid6292</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BYTEARRAY_in_eid6302</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_BAG_in_eid6312</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TUPLE_in_eid6322</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MAP_in_eid6332</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IS_in_eid6342</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_NULL_in_eid6352</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TRUE_in_eid6362</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FALSE_in_eid6372</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STREAM_in_eid6382</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_THROUGH_in_eid6392</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STORE_in_eid6402</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_MAPREDUCE_in_eid6412</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SHIP_in_eid6422</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_CACHE_in_eid6432</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INPUT_in_eid6442</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OUTPUT_in_eid6452</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STDERROR_in_eid6462</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STDIN_in_eid6472</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STDOUT_in_eid6482</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LIMIT_in_eid6492</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_SAMPLE_in_eid6502</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LEFT_in_eid6512</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_RIGHT_in_eid6522</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_FULL_in_eid6532</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_IDENTIFIER_in_eid6542</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TOBAG_in_eid6552</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TOMAP_in_eid6562</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_TOTUPLE_in_eid6572</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_ASSERT_in_eid6582</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_eq_in_rel_op6595</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_ne_in_rel_op6606</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_gt_in_rel_op6617</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_gte_in_rel_op6628</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_lt_in_rel_op6639</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_rel_op_lte_in_rel_op6650</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_MATCHES_in_rel_op6661</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_EQ_in_rel_str_op6752</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_NE_in_rel_str_op6759</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_GT_in_rel_str_op6766</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_LT_in_rel_str_op6773</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_GTE_in_rel_str_op6780</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_LTE_in_rel_str_op6787</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_STR_OP_MATCHES_in_rel_str_op6794</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_synpred147_LogicalPlanGenerator3650</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_LONGINTEGER_in_synpred148_LogicalPlanGenerator3660</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_DOUBLENUMBER_in_synpred149_LogicalPlanGenerator3712</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_item_in_synpred179_LogicalPlanGenerator4241</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_set_in_synpred179_LogicalPlanGenerator4243</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_OUTER_in_synpred179_LogicalPlanGenerator4289</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_join_item_in_synpred179_LogicalPlanGenerator4292</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
        <Field>
            <FieldName>FOLLOW_INTEGER_in_synpred196_LogicalPlanGenerator4864</FieldName>
            <FieldType>BitSet</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getDelegates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TreeParser[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>TreeNodeStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>TreeNodeStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>state</ParamName>
                    <ParamType>RecognizerSharedState</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setTreeAdaptor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>adaptor</ParamName>
                    <ParamType>TreeAdaptor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTreeAdaptor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TreeAdaptor</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTokenNames</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getGrammarFileName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLogicalPlan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlan</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOperators</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLastRel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>recoverFromMismatchedToken</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>IntStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ttype</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>follow</ParamName>
                    <ParamType>BitSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>recoverFromMismatchedSet</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>IntStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>RecognitionException</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>follow</ParamName>
                    <ParamType>BitSet</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>TreeNodeStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>builder</ParamName>
                    <ParamType>LogicalPlanBuilder</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>TreeNodeStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pigContext</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>scope</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileNameMap</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>query</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.query_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.query_return [retval=new LogicalPlanGenerator.query_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUERY1=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.statement_return [statement2=null]</InnerVar>
                <InnerVar>CommonTree [QUERY1_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.statement_return [retval=new LogicalPlanGenerator.statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.general_statement_return [general_statement3=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.split_statement_return [split_statement4=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.realias_statement_return [realias_statement5=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.assert_statement_return [assert_statement6=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.register_statement_return [register_statement7=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>statement_stack;push;[new statement_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>split_statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.split_statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.split_statement_return [retval=new LogicalPlanGenerator.split_statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.split_clause_return [split_clause8=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>realias_statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.realias_statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.realias_statement_return [retval=new LogicalPlanGenerator.realias_statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.realias_clause_return [realias_clause9=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assert_statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.assert_statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.assert_statement_return [retval=new LogicalPlanGenerator.assert_statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.assert_clause_return [assert_clause10=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>register_statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.register_statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.register_statement_return [retval=new LogicalPlanGenerator.register_statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [REGISTER11=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING12=null]</InnerVar>
                <InnerVar>CommonTree [USING13=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER14=null]</InnerVar>
                <InnerVar>CommonTree [AS15=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER16=null]</InnerVar>
                <InnerVar>CommonTree [REGISTER11_tree=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING12_tree=null]</InnerVar>
                <InnerVar>CommonTree [USING13_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER14_tree=null]</InnerVar>
                <InnerVar>CommonTree [AS15_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER16_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>general_statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.general_statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.general_statement_return [retval=new LogicalPlanGenerator.general_statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STATEMENT17=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.op_clause_return [oa=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias18=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.parallel_clause_return [parallel_clause19=null]</InnerVar>
                <InnerVar>CommonTree [STATEMENT17_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>realias_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.realias_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.realias_clause_return [retval=new LogicalPlanGenerator.realias_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [REALIAS20=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER22=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias21=null]</InnerVar>
                <InnerVar>CommonTree [REALIAS20_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER22_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>parallel_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.parallel_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.parallel_clause_return [retval=new LogicalPlanGenerator.parallel_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [PARALLEL23=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER24=null]</InnerVar>
                <InnerVar>CommonTree [PARALLEL23_tree=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER24_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>alias</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.alias_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.alias_return [retval=new LogicalPlanGenerator.alias_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER25=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER25_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>op_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.op_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.op_clause_return [retval=new LogicalPlanGenerator.op_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.define_clause_return [define_clause26=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.load_clause_return [load_clause27=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.group_clause_return [group_clause28=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.store_clause_return [store_clause29=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.filter_clause_return [filter_clause30=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.distinct_clause_return [distinct_clause31=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.limit_clause_return [limit_clause32=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.sample_clause_return [sample_clause33=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.order_clause_return [order_clause34=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rank_clause_return [rank_clause35=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cross_clause_return [cross_clause36=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_clause_return [join_clause37=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.union_clause_return [union_clause38=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.stream_clause_return [stream_clause39=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.mr_clause_return [mr_clause40=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.foreach_clause_return [foreach_clause41=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_clause_return [cube_clause42=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.assert_clause_return [assert_clause43=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>define_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.define_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.define_clause_return [retval=new LogicalPlanGenerator.define_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [DEFINE44=null]</InnerVar>
                <InnerVar>CommonTree [DEFINE47=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias45=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cmd_return [cmd46=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias48=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause49=null]</InnerVar>
                <InnerVar>CommonTree [DEFINE44_tree=null]</InnerVar>
                <InnerVar>CommonTree [DEFINE47_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cmd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cmd_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cmd_return [retval=new LogicalPlanGenerator.cmd_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [EXECCOMMAND50=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.ship_clause_return [ship_clause51=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cache_clause_return [cache_clause52=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.input_clause_return [input_clause53=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.output_clause_return [output_clause54=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.error_clause_return [error_clause55=null]</InnerVar>
                <InnerVar>CommonTree [EXECCOMMAND50_tree=null]</InnerVar>
                <InnerVar>List&lt;String&gt; [shipPaths=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>List&lt;String&gt; [cachePaths=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>SourceLocation [loc=new SourceLocation((PigParserNode)((CommonTree)retval.start))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ship_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.ship_clause_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>paths</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.ship_clause_return [retval=new LogicalPlanGenerator.ship_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [SHIP56=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.path_list_return [path_list57=null]</InnerVar>
                <InnerVar>CommonTree [SHIP56_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>path_list</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.path_list_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>paths</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.path_list_return [retval=new LogicalPlanGenerator.path_list_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING58=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING58_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cache_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cache_clause_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>paths</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cache_clause_return [retval=new LogicalPlanGenerator.cache_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CACHE59=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.path_list_return [path_list60=null]</InnerVar>
                <InnerVar>CommonTree [CACHE59_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>input_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.input_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.input_clause_return [retval=new LogicalPlanGenerator.input_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [INPUT61=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.stream_cmd_return [stream_cmd62=null]</InnerVar>
                <InnerVar>CommonTree [INPUT61_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream_cmd</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.stream_cmd_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.stream_cmd_return [retval=new LogicalPlanGenerator.stream_cmd_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STDIN63=null]</InnerVar>
                <InnerVar>CommonTree [STDOUT65=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING67=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause64=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause66=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause68=null]</InnerVar>
                <InnerVar>CommonTree [STDIN63_tree=null]</InnerVar>
                <InnerVar>CommonTree [STDOUT65_tree=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING67_tree=null]</InnerVar>
                <InnerVar>String [handleName=null]</InnerVar>
                <InnerVar>FuncSpec [fs=null]</InnerVar>
                <InnerVar>String [deserializer=PigStreaming.class.getName() + "()"]</InnerVar>
                <InnerVar>byte [ft=in ? FunctionType.PIGTOSTREAMFUNC : FunctionType.STREAMTOPIGFUNC]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>output_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.output_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.output_clause_return [retval=new LogicalPlanGenerator.output_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [OUTPUT69=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.stream_cmd_return [stream_cmd70=null]</InnerVar>
                <InnerVar>CommonTree [OUTPUT69_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>error_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.error_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.error_clause_return [retval=new LogicalPlanGenerator.error_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STDERROR71=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING72=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER73=null]</InnerVar>
                <InnerVar>CommonTree [STDERROR71_tree=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING72_tree=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER73_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>load_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.load_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.load_clause_return [retval=new LogicalPlanGenerator.load_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [LOAD74=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.filename_return [filename75=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause76=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.as_clause_return [as_clause77=null]</InnerVar>
                <InnerVar>CommonTree [LOAD74_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>filename</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.filename_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.filename_return [retval=new LogicalPlanGenerator.filename_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING78=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING78_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>as_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.as_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.as_clause_return [retval=new LogicalPlanGenerator.as_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [AS79=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.field_def_list_return [field_def_list80=null]</InnerVar>
                <InnerVar>CommonTree [AS79_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>field_def</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.field_def_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>nvc</ParamName>
                    <ParamType>NumValCarrier</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.field_def_return [retval=new LogicalPlanGenerator.field_def_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FIELD_DEF81=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER82=null]</InnerVar>
                <InnerVar>CommonTree [FIELD_DEF_WITHOUT_IDENTIFIER84=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.type_return [type83=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.type_return [type85=null]</InnerVar>
                <InnerVar>CommonTree [FIELD_DEF81_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER82_tree=null]</InnerVar>
                <InnerVar>CommonTree [FIELD_DEF_WITHOUT_IDENTIFIER84_tree=null]</InnerVar>
                <InnerVar>byte [datatype=DataType.NULL]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>field_def_list</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.field_def_list_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.field_def_list_return [retval=new LogicalPlanGenerator.field_def_list_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.field_def_return [field_def86=null]</InnerVar>
                <InnerVar>NumValCarrier [nvc=new NumValCarrier()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.type_return [retval=new LogicalPlanGenerator.type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.simple_type_return [simple_type87=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.tuple_type_return [tuple_type88=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.bag_type_return [bag_type89=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.map_type_return [map_type90=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>simple_type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.simple_type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.simple_type_return [retval=new LogicalPlanGenerator.simple_type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BOOLEAN91=null]</InnerVar>
                <InnerVar>CommonTree [INT92=null]</InnerVar>
                <InnerVar>CommonTree [LONG93=null]</InnerVar>
                <InnerVar>CommonTree [FLOAT94=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLE95=null]</InnerVar>
                <InnerVar>CommonTree [BIGINTEGER96=null]</InnerVar>
                <InnerVar>CommonTree [BIGDECIMAL97=null]</InnerVar>
                <InnerVar>CommonTree [DATETIME98=null]</InnerVar>
                <InnerVar>CommonTree [CHARARRAY99=null]</InnerVar>
                <InnerVar>CommonTree [BYTEARRAY100=null]</InnerVar>
                <InnerVar>CommonTree [BOOLEAN91_tree=null]</InnerVar>
                <InnerVar>CommonTree [INT92_tree=null]</InnerVar>
                <InnerVar>CommonTree [LONG93_tree=null]</InnerVar>
                <InnerVar>CommonTree [FLOAT94_tree=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLE95_tree=null]</InnerVar>
                <InnerVar>CommonTree [BIGINTEGER96_tree=null]</InnerVar>
                <InnerVar>CommonTree [BIGDECIMAL97_tree=null]</InnerVar>
                <InnerVar>CommonTree [DATETIME98_tree=null]</InnerVar>
                <InnerVar>CommonTree [CHARARRAY99_tree=null]</InnerVar>
                <InnerVar>CommonTree [BYTEARRAY100_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tuple_type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.tuple_type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.tuple_type_return [retval=new LogicalPlanGenerator.tuple_type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE_TYPE101=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.field_def_list_return [field_def_list102=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE_TYPE101_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bag_type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.bag_type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.bag_type_return [retval=new LogicalPlanGenerator.bag_type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BAG_TYPE103=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER104=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.tuple_type_return [tuple_type105=null]</InnerVar>
                <InnerVar>CommonTree [BAG_TYPE103_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER104_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>map_type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.map_type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.map_type_return [retval=new LogicalPlanGenerator.map_type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [MAP_TYPE106=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER107=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.type_return [type108=null]</InnerVar>
                <InnerVar>CommonTree [MAP_TYPE106_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER107_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>func_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.func_clause_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ft</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.func_clause_return [retval=new LogicalPlanGenerator.func_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FUNC_REF109=null]</InnerVar>
                <InnerVar>CommonTree [FUNC111=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_name_return [func_name110=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_name_return [func_name112=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_args_return [func_args113=null]</InnerVar>
                <InnerVar>CommonTree [FUNC_REF109_tree=null]</InnerVar>
                <InnerVar>CommonTree [FUNC111_tree=null]</InnerVar>
                <InnerVar>SourceLocation [loc=new SourceLocation((PigParserNode)((CommonTree)retval.start))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>func_name</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.func_name_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.func_name_return [retval=new LogicalPlanGenerator.func_name_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [PERIOD114=null]</InnerVar>
                <InnerVar>CommonTree [DOLLAR115=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.eid_return [p1=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.eid_return [p2=null]</InnerVar>
                <InnerVar>CommonTree [PERIOD114_tree=null]</InnerVar>
                <InnerVar>CommonTree [DOLLAR115_tree=null]</InnerVar>
                <InnerVar>StringBuilder [buf=new StringBuilder()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>func_args</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.func_args_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.func_args_return [retval=new LogicalPlanGenerator.func_args_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING116=null]</InnerVar>
                <InnerVar>CommonTree [MULTILINE_QUOTEDSTRING117=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING116_tree=null]</InnerVar>
                <InnerVar>CommonTree [MULTILINE_QUOTEDSTRING117_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_clause_return [retval=new LogicalPlanGenerator.cube_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CUBE118=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_item_return [cube_item119=null]</InnerVar>
                <InnerVar>CommonTree [CUBE118_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
                <InnerMethodInvoke>cube_clause_stack;push;[new cube_clause_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_item</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_item_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_item_return [retval=new LogicalPlanGenerator.cube_item_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel120=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_by_clause_return [cube_by_clause121=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_by_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_by_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_by_clause_return [retval=new LogicalPlanGenerator.cube_by_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BY122=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_or_rollup_return [cube_or_rollup123=null]</InnerVar>
                <InnerVar>CommonTree [BY122_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_or_rollup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_or_rollup_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_or_rollup_return [retval=new LogicalPlanGenerator.cube_or_rollup_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_rollup_list_return [cube_rollup_list124=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_rollup_list</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_rollup_list_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_rollup_list_return [retval=new LogicalPlanGenerator.cube_rollup_list_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CUBE125=null]</InnerVar>
                <InnerVar>CommonTree [ROLLUP126=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_by_expr_list_return [cube_by_expr_list127=null]</InnerVar>
                <InnerVar>CommonTree [CUBE125_tree=null]</InnerVar>
                <InnerVar>CommonTree [ROLLUP126_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_by_expr_list</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_by_expr_list_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_by_expr_list_return [retval=new LogicalPlanGenerator.cube_by_expr_list_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cube_by_expr_return [cube_by_expr128=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cube_by_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cube_by_expr_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cube_by_expr_return [retval=new LogicalPlanGenerator.cube_by_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STAR131=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_range_return [col_range129=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr130=null]</InnerVar>
                <InnerVar>CommonTree [STAR131_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>group_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.group_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.group_clause_return [retval=new LogicalPlanGenerator.group_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [GROUP132=null]</InnerVar>
                <InnerVar>CommonTree [COGROUP136=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.group_item_return [group_item133=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.group_type_return [group_type134=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.partition_clause_return [partition_clause135=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.group_item_return [group_item137=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.group_type_return [group_type138=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.partition_clause_return [partition_clause139=null]</InnerVar>
                <InnerVar>CommonTree [GROUP132_tree=null]</InnerVar>
                <InnerVar>CommonTree [COGROUP136_tree=null]</InnerVar>
                <InnerVar>GROUPTYPE [groupType=GROUPTYPE.REGULAR]</InnerVar>
                <InnerVar>SourceLocation [loc=new SourceLocation((PigParserNode)((CommonTree)retval.start))]</InnerVar>
                <InnerVar>int [oldStatementIndex=((statement_scope)statement_stack.peek()).inputIndex]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
                <InnerMethodInvoke>group_clause_stack;push;[new group_clause_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>group_type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.group_type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.group_type_return [retval=new LogicalPlanGenerator.group_type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING140=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING140_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>group_item</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.group_item_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.group_item_return [retval=new LogicalPlanGenerator.group_item_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ALL143=null]</InnerVar>
                <InnerVar>CommonTree [ANY144=null]</InnerVar>
                <InnerVar>CommonTree [INNER145=null]</InnerVar>
                <InnerVar>CommonTree [OUTER146=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel141=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_group_by_clause_return [join_group_by_clause142=null]</InnerVar>
                <InnerVar>CommonTree [ALL143_tree=null]</InnerVar>
                <InnerVar>CommonTree [ANY144_tree=null]</InnerVar>
                <InnerVar>CommonTree [INNER145_tree=null]</InnerVar>
                <InnerVar>CommonTree [OUTER146_tree=null]</InnerVar>
                <InnerVar>boolean [inner=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_return [retval=new LogicalPlanGenerator.rel_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias147=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.previous_rel_return [previous_rel148=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.inline_op_return [inline_op149=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>previous_rel</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.previous_rel_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.previous_rel_return [retval=new LogicalPlanGenerator.previous_rel_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ARROBA150=null]</InnerVar>
                <InnerVar>CommonTree [ARROBA150_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>inline_op</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.inline_op_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.inline_op_return [retval=new LogicalPlanGenerator.inline_op_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.op_clause_return [op_clause151=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.parallel_clause_return [parallel_clause152=null]</InnerVar>
                <InnerVar>String [al=((statement_scope)statement_stack.peek()).alias]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flatten_generated_item</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.flatten_generated_item_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.flatten_generated_item_return [retval=new LogicalPlanGenerator.flatten_generated_item_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STAR156=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.flatten_clause_return [flatten_clause153=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_range_return [col_range154=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr155=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.field_def_list_return [field_def_list157=null]</InnerVar>
                <InnerVar>CommonTree [STAR156_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flatten_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.flatten_clause_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.flatten_clause_return [retval=new LogicalPlanGenerator.flatten_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FLATTEN158=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr159=null]</InnerVar>
                <InnerVar>CommonTree [FLATTEN158_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>store_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.store_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.store_clause_return [retval=new LogicalPlanGenerator.store_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STORE160=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel161=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.filename_return [filename162=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause163=null]</InnerVar>
                <InnerVar>CommonTree [STORE160_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>assert_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.assert_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.assert_clause_return [retval=new LogicalPlanGenerator.assert_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ASSERT164=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel165=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [cond166=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.comment_return [comment167=null]</InnerVar>
                <InnerVar>CommonTree [ASSERT164_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exprPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>comment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.comment_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.comment_return [retval=new LogicalPlanGenerator.comment_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING168=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING168_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>filter_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.filter_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.filter_clause_return [retval=new LogicalPlanGenerator.filter_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FILTER169=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel170=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [cond171=null]</InnerVar>
                <InnerVar>CommonTree [FILTER169_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exprPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cond</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cond_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exprPlan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cond_return [retval=new LogicalPlanGenerator.cond_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [OR172=null]</InnerVar>
                <InnerVar>CommonTree [AND173=null]</InnerVar>
                <InnerVar>CommonTree [NOT174=null]</InnerVar>
                <InnerVar>CommonTree [NULL175=null]</InnerVar>
                <InnerVar>CommonTree [NOT177=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_MATCHES184=null]</InnerVar>
                <InnerVar>CommonTree [BOOL_COND187=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [left=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [right=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [c=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [e1=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [e2=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr176=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_eq_return [rel_op_eq178=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_ne_return [rel_op_ne179=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_lt_return [rel_op_lt180=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_lte_return [rel_op_lte181=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_gt_return [rel_op_gt182=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_gte_return [rel_op_gte183=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.in_eval_return [in_eval185=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_eval_return [func_eval186=null]</InnerVar>
                <InnerVar>CommonTree [OR172_tree=null]</InnerVar>
                <InnerVar>CommonTree [AND173_tree=null]</InnerVar>
                <InnerVar>CommonTree [NOT174_tree=null]</InnerVar>
                <InnerVar>CommonTree [NULL175_tree=null]</InnerVar>
                <InnerVar>CommonTree [NOT177_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_MATCHES184_tree=null]</InnerVar>
                <InnerVar>CommonTree [BOOL_COND187_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>in_eval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.in_eval_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.in_eval_return [retval=new LogicalPlanGenerator.in_eval_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [IN188=null]</InnerVar>
                <InnerVar>CommonTree [IN_LHS189=null]</InnerVar>
                <InnerVar>CommonTree [IN_RHS190=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [lhs=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [rhs=null]</InnerVar>
                <InnerVar>CommonTree [IN188_tree=null]</InnerVar>
                <InnerVar>CommonTree [IN_LHS189_tree=null]</InnerVar>
                <InnerVar>CommonTree [IN_RHS190_tree=null]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [lhsExprs=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [rhsExprs=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>func_eval</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.func_eval_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.func_eval_return [retval=new LogicalPlanGenerator.func_eval_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [package_name=null]</InnerVar>
                <InnerVar>CommonTree [function_name=null]</InnerVar>
                <InnerVar>CommonTree [is_static=null]</InnerVar>
                <InnerVar>CommonTree [FUNC_EVAL191=null]</InnerVar>
                <InnerVar>CommonTree [INVOKER_FUNC_EVAL194=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_name_return [func_name192=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.real_arg_return [real_arg193=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.real_arg_return [real_arg195=null]</InnerVar>
                <InnerVar>CommonTree [package_name_tree=null]</InnerVar>
                <InnerVar>CommonTree [function_name_tree=null]</InnerVar>
                <InnerVar>CommonTree [is_static_tree=null]</InnerVar>
                <InnerVar>CommonTree [FUNC_EVAL191_tree=null]</InnerVar>
                <InnerVar>CommonTree [INVOKER_FUNC_EVAL194_tree=null]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [args=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>real_arg</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.real_arg_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.real_arg_return [retval=new LogicalPlanGenerator.real_arg_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STAR196=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [e=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_range_return [cr=null]</InnerVar>
                <InnerVar>CommonTree [STAR196_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.expr_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.expr_return [retval=new LogicalPlanGenerator.expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [PLUS197=null]</InnerVar>
                <InnerVar>CommonTree [MINUS198=null]</InnerVar>
                <InnerVar>CommonTree [STAR199=null]</InnerVar>
                <InnerVar>CommonTree [DIV200=null]</InnerVar>
                <InnerVar>CommonTree [PERCENT201=null]</InnerVar>
                <InnerVar>CommonTree [NEG204=null]</InnerVar>
                <InnerVar>CommonTree [CAST_EXPR205=null]</InnerVar>
                <InnerVar>CommonTree [EXPR_IN_PAREN207=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [left=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [right=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [e=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.const_expr_return [const_expr202=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.var_expr_return [var_expr203=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.type_cast_return [type_cast206=null]</InnerVar>
                <InnerVar>CommonTree [PLUS197_tree=null]</InnerVar>
                <InnerVar>CommonTree [MINUS198_tree=null]</InnerVar>
                <InnerVar>CommonTree [STAR199_tree=null]</InnerVar>
                <InnerVar>CommonTree [DIV200_tree=null]</InnerVar>
                <InnerVar>CommonTree [PERCENT201_tree=null]</InnerVar>
                <InnerVar>CommonTree [NEG204_tree=null]</InnerVar>
                <InnerVar>CommonTree [CAST_EXPR205_tree=null]</InnerVar>
                <InnerVar>CommonTree [EXPR_IN_PAREN207_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>type_cast</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.type_cast_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.type_cast_return [retval=new LogicalPlanGenerator.type_cast_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.simple_type_return [simple_type208=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.map_type_return [map_type209=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.tuple_type_cast_return [tuple_type_cast210=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.bag_type_cast_return [bag_type_cast211=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tuple_type_cast</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.tuple_type_cast_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.tuple_type_cast_return [retval=new LogicalPlanGenerator.tuple_type_cast_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE_TYPE_CAST212=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.type_cast_return [type_cast213=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE_TYPE_CAST212_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bag_type_cast</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.bag_type_cast_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.bag_type_cast_return [retval=new LogicalPlanGenerator.bag_type_cast_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BAG_TYPE_CAST214=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.tuple_type_cast_return [tuple_type_cast215=null]</InnerVar>
                <InnerVar>CommonTree [BAG_TYPE_CAST214_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>var_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.var_expr_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.var_expr_return [retval=new LogicalPlanGenerator.var_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.projectable_expr_return [projectable_expr216=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.dot_proj_return [dot_proj217=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.pound_proj_return [pound_proj218=null]</InnerVar>
                <InnerVar>List&lt;Object&gt; [columns=null]</InnerVar>
                <InnerVar>SourceLocation [loc=new SourceLocation((PigParserNode)((CommonTree)retval.start))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>projectable_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.projectable_expr_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.projectable_expr_return [retval=new LogicalPlanGenerator.projectable_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_eval_return [func_eval219=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [col_ref220=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.bin_expr_return [bin_expr221=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.case_expr_return [case_expr222=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.case_cond_return [case_cond223=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dot_proj</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.dot_proj_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.dot_proj_return [retval=new LogicalPlanGenerator.dot_proj_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [PERIOD224=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_alias_or_index_return [col_alias_or_index225=null]</InnerVar>
                <InnerVar>CommonTree [PERIOD224_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>col_alias_or_index</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.col_alias_or_index_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.col_alias_or_index_return [retval=new LogicalPlanGenerator.col_alias_or_index_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_alias_return [col_alias226=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_index_return [col_index227=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>col_alias</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.col_alias_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.col_alias_return [retval=new LogicalPlanGenerator.col_alias_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [GROUP228=null]</InnerVar>
                <InnerVar>CommonTree [CUBE229=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER230=null]</InnerVar>
                <InnerVar>CommonTree [GROUP228_tree=null]</InnerVar>
                <InnerVar>CommonTree [CUBE229_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER230_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>col_index</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.col_index_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.col_index_return [retval=new LogicalPlanGenerator.col_index_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [DOLLARVAR231=null]</InnerVar>
                <InnerVar>CommonTree [DOLLARVAR231_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>col_range</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.col_range_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.col_range_return [retval=new LogicalPlanGenerator.col_range_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [COL_RANGE232=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLE_PERIOD233=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [startExpr=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [endExpr=null]</InnerVar>
                <InnerVar>CommonTree [COL_RANGE232_tree=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLE_PERIOD233_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>pound_proj</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.pound_proj_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.pound_proj_return [retval=new LogicalPlanGenerator.pound_proj_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [POUND234=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING235=null]</InnerVar>
                <InnerVar>CommonTree [NULL236=null]</InnerVar>
                <InnerVar>CommonTree [POUND234_tree=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING235_tree=null]</InnerVar>
                <InnerVar>CommonTree [NULL236_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bin_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.bin_expr_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.bin_expr_return [retval=new LogicalPlanGenerator.bin_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BIN_EXPR237=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [e1=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [e2=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [cond238=null]</InnerVar>
                <InnerVar>CommonTree [BIN_EXPR237_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>case_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.case_expr_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.case_expr_return [retval=new LogicalPlanGenerator.case_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CASE_EXPR239=null]</InnerVar>
                <InnerVar>CommonTree [CASE_EXPR_LHS240=null]</InnerVar>
                <InnerVar>CommonTree [CASE_EXPR_RHS241=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [lhs=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [rhs=null]</InnerVar>
                <InnerVar>CommonTree [CASE_EXPR239_tree=null]</InnerVar>
                <InnerVar>CommonTree [CASE_EXPR_LHS240_tree=null]</InnerVar>
                <InnerVar>CommonTree [CASE_EXPR_RHS241_tree=null]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [lhsExprs=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [rhsExprs=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>case_cond</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.case_cond_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.case_cond_return [retval=new LogicalPlanGenerator.case_cond_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CASE_COND242=null]</InnerVar>
                <InnerVar>CommonTree [WHEN243=null]</InnerVar>
                <InnerVar>CommonTree [THEN245=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [cond244=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr246=null]</InnerVar>
                <InnerVar>CommonTree [CASE_COND242_tree=null]</InnerVar>
                <InnerVar>CommonTree [WHEN243_tree=null]</InnerVar>
                <InnerVar>CommonTree [THEN245_tree=null]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [conds=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
                <InnerVar>List&lt;LogicalExpression&gt; [exprs=new ArrayList&lt;LogicalExpression&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>limit_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.limit_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.limit_clause_return [retval=new LogicalPlanGenerator.limit_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [LIMIT247=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER249=null]</InnerVar>
                <InnerVar>CommonTree [LONGINTEGER250=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel248=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr251=null]</InnerVar>
                <InnerVar>CommonTree [LIMIT247_tree=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER249_tree=null]</InnerVar>
                <InnerVar>CommonTree [LONGINTEGER250_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exprPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sample_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.sample_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.sample_clause_return [retval=new LogicalPlanGenerator.sample_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [SAMPLE252=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLENUMBER254=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel253=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr255=null]</InnerVar>
                <InnerVar>CommonTree [SAMPLE252_tree=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLENUMBER254_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exprPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rank_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rank_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rank_clause_return [retval=new LogicalPlanGenerator.rank_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [RANK256=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel257=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rank_by_statement_return [rank_by_statement258=null]</InnerVar>
                <InnerVar>CommonTree [RANK256_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
                <InnerMethodInvoke>rank_clause_stack;push;[new rank_clause_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rank_by_statement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rank_by_statement_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rank_by_statement_return [retval=new LogicalPlanGenerator.rank_by_statement_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BY259=null]</InnerVar>
                <InnerVar>CommonTree [DENSE261=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rank_by_clause_return [rank_by_clause260=null]</InnerVar>
                <InnerVar>CommonTree [BY259_tree=null]</InnerVar>
                <InnerVar>CommonTree [DENSE261_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rank_by_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rank_by_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rank_by_clause_return [retval=new LogicalPlanGenerator.rank_by_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STAR262=null]</InnerVar>
                <InnerVar>CommonTree [ASC263=null]</InnerVar>
                <InnerVar>CommonTree [DESC264=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rank_col_return [rank_col265=null]</InnerVar>
                <InnerVar>CommonTree [STAR262_tree=null]</InnerVar>
                <InnerVar>CommonTree [ASC263_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC264_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rank_col</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rank_col_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rank_col_return [retval=new LogicalPlanGenerator.rank_col_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ASC267=null]</InnerVar>
                <InnerVar>CommonTree [DESC268=null]</InnerVar>
                <InnerVar>CommonTree [ASC270=null]</InnerVar>
                <InnerVar>CommonTree [DESC271=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_range_return [col_range266=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [col_ref269=null]</InnerVar>
                <InnerVar>CommonTree [ASC267_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC268_tree=null]</InnerVar>
                <InnerVar>CommonTree [ASC270_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC271_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>order_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.order_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.order_clause_return [retval=new LogicalPlanGenerator.order_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ORDER272=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel273=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.order_by_clause_return [order_by_clause274=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause275=null]</InnerVar>
                <InnerVar>CommonTree [ORDER272_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>order_by_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.order_by_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.order_by_clause_return [retval=new LogicalPlanGenerator.order_by_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STAR276=null]</InnerVar>
                <InnerVar>CommonTree [ASC277=null]</InnerVar>
                <InnerVar>CommonTree [DESC278=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.order_col_return [order_col279=null]</InnerVar>
                <InnerVar>CommonTree [STAR276_tree=null]</InnerVar>
                <InnerVar>CommonTree [ASC277_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC278_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>order_col</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.order_col_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.order_col_return [retval=new LogicalPlanGenerator.order_col_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ASC281=null]</InnerVar>
                <InnerVar>CommonTree [DESC282=null]</InnerVar>
                <InnerVar>CommonTree [ASC284=null]</InnerVar>
                <InnerVar>CommonTree [DESC285=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_range_return [col_range280=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [col_ref283=null]</InnerVar>
                <InnerVar>CommonTree [ASC281_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC282_tree=null]</InnerVar>
                <InnerVar>CommonTree [ASC284_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC285_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>distinct_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.distinct_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.distinct_clause_return [retval=new LogicalPlanGenerator.distinct_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [DISTINCT286=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel287=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.partition_clause_return [partition_clause288=null]</InnerVar>
                <InnerVar>CommonTree [DISTINCT286_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>partition_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.partition_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.partition_clause_return [retval=new LogicalPlanGenerator.partition_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [PARTITION289=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_name_return [func_name290=null]</InnerVar>
                <InnerVar>CommonTree [PARTITION289_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>cross_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.cross_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.cross_clause_return [retval=new LogicalPlanGenerator.cross_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CROSS291=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_list_return [rel_list292=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.partition_clause_return [partition_clause293=null]</InnerVar>
                <InnerVar>CommonTree [CROSS291_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_list</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_list_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_list_return [retval=new LogicalPlanGenerator.rel_list_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel294=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>join_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.join_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.join_clause_return [retval=new LogicalPlanGenerator.join_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [JOIN295=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_sub_clause_return [join_sub_clause296=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_type_return [join_type297=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.partition_clause_return [partition_clause298=null]</InnerVar>
                <InnerVar>CommonTree [JOIN295_tree=null]</InnerVar>
                <InnerVar>int [oldStatementIndex=((statement_scope)statement_stack.peek()).inputIndex]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
                <InnerMethodInvoke>join_clause_stack;push;[new join_clause_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>join_type</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.join_type_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.join_type_return [retval=new LogicalPlanGenerator.join_type_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING299=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING299_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>join_sub_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.join_sub_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.join_sub_clause_return [retval=new LogicalPlanGenerator.join_sub_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [LEFT301=null]</InnerVar>
                <InnerVar>CommonTree [RIGHT302=null]</InnerVar>
                <InnerVar>CommonTree [FULL303=null]</InnerVar>
                <InnerVar>CommonTree [OUTER304=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_item_return [join_item300=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_item_return [join_item305=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_item_return [join_item306=null]</InnerVar>
                <InnerVar>CommonTree [LEFT301_tree=null]</InnerVar>
                <InnerVar>CommonTree [RIGHT302_tree=null]</InnerVar>
                <InnerVar>CommonTree [FULL303_tree=null]</InnerVar>
                <InnerVar>CommonTree [OUTER304_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>join_item</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.join_item_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.join_item_return [retval=new LogicalPlanGenerator.join_item_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [JOIN_ITEM307=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel308=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_group_by_clause_return [join_group_by_clause309=null]</InnerVar>
                <InnerVar>CommonTree [JOIN_ITEM307_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>join_group_by_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.join_group_by_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.join_group_by_clause_return [retval=new LogicalPlanGenerator.join_group_by_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BY310=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.join_group_by_expr_return [join_group_by_expr311=null]</InnerVar>
                <InnerVar>CommonTree [BY310_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>join_group_by_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.join_group_by_expr_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.join_group_by_expr_return [retval=new LogicalPlanGenerator.join_group_by_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STAR314=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_range_return [col_range312=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr313=null]</InnerVar>
                <InnerVar>CommonTree [STAR314_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>union_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.union_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.union_clause_return [retval=new LogicalPlanGenerator.union_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [UNION315=null]</InnerVar>
                <InnerVar>CommonTree [ONSCHEMA316=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_list_return [rel_list317=null]</InnerVar>
                <InnerVar>CommonTree [UNION315_tree=null]</InnerVar>
                <InnerVar>CommonTree [ONSCHEMA316_tree=null]</InnerVar>
                <InnerVar>boolean [onSchema=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>foreach_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.foreach_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.foreach_clause_return [retval=new LogicalPlanGenerator.foreach_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH318=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel319=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.foreach_plan_return [foreach_plan320=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH318_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
                <InnerMethodInvoke>foreach_clause_stack;push;[new foreach_clause_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>foreach_plan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.foreach_plan_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.foreach_plan_return [retval=new LogicalPlanGenerator.foreach_plan_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH_PLAN_SIMPLE321=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH_PLAN_COMPLEX323=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.generate_clause_return [generate_clause322=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_blk_return [nested_blk324=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH_PLAN_SIMPLE321_tree=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH_PLAN_COMPLEX323_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>foreach_plan_stack;push;[new foreach_plan_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_blk</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_blk_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_blk_return [retval=new LogicalPlanGenerator.nested_blk_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_command_return [nested_command325=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.generate_clause_return [generate_clause326=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_command</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_command_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_command_return [retval=new LogicalPlanGenerator.nested_command_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [NESTED_CMD327=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER328=null]</InnerVar>
                <InnerVar>CommonTree [NESTED_CMD_ASSI330=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER331=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_return [nested_op329=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr332=null]</InnerVar>
                <InnerVar>CommonTree [NESTED_CMD327_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER328_tree=null]</InnerVar>
                <InnerVar>CommonTree [NESTED_CMD_ASSI330_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER331_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exprPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_op</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_op_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_op_return [retval=new LogicalPlanGenerator.nested_op_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_proj_return [nested_proj333=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_filter_return [nested_filter334=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_sort_return [nested_sort335=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_distinct_return [nested_distinct336=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_limit_return [nested_limit337=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_cross_return [nested_cross338=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_foreach_return [nested_foreach339=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_proj</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_proj_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_proj_return [retval=new LogicalPlanGenerator.nested_proj_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [NESTED_PROJ340=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [cr0=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [cr=null]</InnerVar>
                <InnerVar>CommonTree [NESTED_PROJ340_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [plan=new LogicalExpressionPlan()]</InnerVar>
                <InnerVar>List&lt;LogicalExpressionPlan&gt; [plans=new ArrayList&lt;LogicalExpressionPlan&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_filter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_filter_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_filter_return [retval=new LogicalPlanGenerator.nested_filter_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FILTER341=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [nested_op_input342=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [cond343=null]</InnerVar>
                <InnerVar>CommonTree [FILTER341_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [plan=new LogicalExpressionPlan()]</InnerVar>
                <InnerVar>Operator [inputOp=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_sort</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_sort_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_sort_return [retval=new LogicalPlanGenerator.nested_sort_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [ORDER344=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [nested_op_input345=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.order_by_clause_return [order_by_clause346=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.func_clause_return [func_clause347=null]</InnerVar>
                <InnerVar>CommonTree [ORDER344_tree=null]</InnerVar>
                <InnerVar>Operator [inputOp=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_distinct</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_distinct_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_distinct_return [retval=new LogicalPlanGenerator.nested_distinct_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [DISTINCT348=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [nested_op_input349=null]</InnerVar>
                <InnerVar>CommonTree [DISTINCT348_tree=null]</InnerVar>
                <InnerVar>Operator [inputOp=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_limit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_limit_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_limit_return [retval=new LogicalPlanGenerator.nested_limit_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [LIMIT350=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER352=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [nested_op_input351=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.expr_return [expr353=null]</InnerVar>
                <InnerVar>CommonTree [LIMIT350_tree=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER352_tree=null]</InnerVar>
                <InnerVar>Operator [inputOp=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [exprPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_cross</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_cross_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_cross_return [retval=new LogicalPlanGenerator.nested_cross_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [CROSS354=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_list_return [nested_op_input_list355=null]</InnerVar>
                <InnerVar>CommonTree [CROSS354_tree=null]</InnerVar>
                <InnerVar>Operator [inputOp=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_foreach</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_foreach_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>alias</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_foreach_return [retval=new LogicalPlanGenerator.nested_foreach_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH356=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [nested_op_input357=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.generate_clause_return [generate_clause358=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH356_tree=null]</InnerVar>
                <InnerVar>Operator [inputOp=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>nested_foreach_stack;push;[new nested_foreach_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generate_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.generate_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.generate_clause_return [retval=new LogicalPlanGenerator.generate_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [GENERATE359=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.flatten_generated_item_return [flatten_generated_item360=null]</InnerVar>
                <InnerVar>CommonTree [GENERATE359_tree=null]</InnerVar>
                <InnerVar>List&lt;LogicalExpressionPlan&gt; [plans=new ArrayList&lt;LogicalExpressionPlan&gt;()]</InnerVar>
                <InnerVar>List&lt;Boolean&gt; [flattenFlags=new ArrayList&lt;Boolean&gt;()]</InnerVar>
                <InnerVar>List&lt;LogicalSchema&gt; [schemas=new ArrayList&lt;LogicalSchema&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_op_input</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_op_input_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [retval=new LogicalPlanGenerator.nested_op_input_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.col_ref_return [col_ref361=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_proj_return [nested_proj362=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [plan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>nested_op_input_list</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.nested_op_input_list_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.nested_op_input_list_return [retval=new LogicalPlanGenerator.nested_op_input_list_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.nested_op_input_return [nested_op_input363=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stream_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.stream_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.stream_clause_return [retval=new LogicalPlanGenerator.stream_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STREAM364=null]</InnerVar>
                <InnerVar>CommonTree [EXECCOMMAND366=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER367=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel365=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.as_clause_return [as_clause368=null]</InnerVar>
                <InnerVar>CommonTree [STREAM364_tree=null]</InnerVar>
                <InnerVar>CommonTree [EXECCOMMAND366_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER367_tree=null]</InnerVar>
                <InnerVar>StreamingCommand [cmd=null]</InnerVar>
                <InnerVar>SourceLocation [loc=new SourceLocation((PigParserNode)((CommonTree)retval.start))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>mr_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.mr_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.mr_clause_return [retval=new LogicalPlanGenerator.mr_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [MAPREDUCE369=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING370=null]</InnerVar>
                <InnerVar>CommonTree [EXECCOMMAND374=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.path_list_return [path_list371=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.store_clause_return [store_clause372=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.load_clause_return [load_clause373=null]</InnerVar>
                <InnerVar>CommonTree [MAPREDUCE369_tree=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING370_tree=null]</InnerVar>
                <InnerVar>CommonTree [EXECCOMMAND374_tree=null]</InnerVar>
                <InnerVar>List&lt;String&gt; [paths=new ArrayList&lt;String&gt;()]</InnerVar>
                <InnerVar>String [alias=((statement_scope)statement_stack.peek()).alias]</InnerVar>
                <InnerVar>SourceLocation [loc=new SourceLocation((PigParserNode)((CommonTree)retval.start))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>split_clause</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.split_clause_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.split_clause_return [retval=new LogicalPlanGenerator.split_clause_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [SPLIT375=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_return [rel376=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.split_branch_return [split_branch377=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.split_otherwise_return [split_otherwise378=null]</InnerVar>
                <InnerVar>CommonTree [SPLIT375_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>split_branch</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.split_branch_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.split_branch_return [retval=new LogicalPlanGenerator.split_branch_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [SPLIT_BRANCH379=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias380=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.cond_return [cond381=null]</InnerVar>
                <InnerVar>CommonTree [SPLIT_BRANCH379_tree=null]</InnerVar>
                <InnerVar>LogicalExpressionPlan [splitPlan=new LogicalExpressionPlan()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>split_otherwise</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.split_otherwise_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.split_otherwise_return [retval=new LogicalPlanGenerator.split_otherwise_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [OTHERWISE382=null]</InnerVar>
                <InnerVar>CommonTree [ALL384=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_return [alias383=null]</InnerVar>
                <InnerVar>CommonTree [OTHERWISE382_tree=null]</InnerVar>
                <InnerVar>CommonTree [ALL384_tree=null]</InnerVar>
                <InnerVar>boolean [allowNulls=false]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>GScope_stack;push;[new GScope_scope()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PlanGenerationFailureException</ExceptionType>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>col_ref</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.col_ref_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.col_ref_return [retval=new LogicalPlanGenerator.col_ref_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.alias_col_ref_return [alias_col_ref385=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.dollar_col_ref_return [dollar_col_ref386=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>alias_col_ref</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.alias_col_ref_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.alias_col_ref_return [retval=new LogicalPlanGenerator.alias_col_ref_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [GROUP387=null]</InnerVar>
                <InnerVar>CommonTree [CUBE388=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER389=null]</InnerVar>
                <InnerVar>CommonTree [GROUP387_tree=null]</InnerVar>
                <InnerVar>CommonTree [CUBE388_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER389_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>dollar_col_ref</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.dollar_col_ref_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.dollar_col_ref_return [retval=new LogicalPlanGenerator.dollar_col_ref_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [DOLLARVAR390=null]</InnerVar>
                <InnerVar>CommonTree [DOLLARVAR390_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>const_expr</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.const_expr_return</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.const_expr_return [retval=new LogicalPlanGenerator.const_expr_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.literal_return [literal391=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>literal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.literal_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.literal_return [retval=new LogicalPlanGenerator.literal_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.scalar_return [scalar392=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.map_return [map393=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.bag_return [bag394=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.tuple_return [tuple395=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>scalar</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.scalar_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.scalar_return [retval=new LogicalPlanGenerator.scalar_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING397=null]</InnerVar>
                <InnerVar>CommonTree [NULL398=null]</InnerVar>
                <InnerVar>CommonTree [TRUE399=null]</InnerVar>
                <InnerVar>CommonTree [FALSE400=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.num_scalar_return [num_scalar396=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING397_tree=null]</InnerVar>
                <InnerVar>CommonTree [NULL398_tree=null]</InnerVar>
                <InnerVar>CommonTree [TRUE399_tree=null]</InnerVar>
                <InnerVar>CommonTree [FALSE400_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>num_scalar</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.num_scalar_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.num_scalar_return [retval=new LogicalPlanGenerator.num_scalar_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [MINUS401=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER402=null]</InnerVar>
                <InnerVar>CommonTree [LONGINTEGER403=null]</InnerVar>
                <InnerVar>CommonTree [FLOATNUMBER404=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLENUMBER405=null]</InnerVar>
                <InnerVar>CommonTree [BIGINTEGERNUMBER406=null]</InnerVar>
                <InnerVar>CommonTree [BIGDECIMALNUMBER407=null]</InnerVar>
                <InnerVar>CommonTree [MINUS401_tree=null]</InnerVar>
                <InnerVar>CommonTree [INTEGER402_tree=null]</InnerVar>
                <InnerVar>CommonTree [LONGINTEGER403_tree=null]</InnerVar>
                <InnerVar>CommonTree [FLOATNUMBER404_tree=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLENUMBER405_tree=null]</InnerVar>
                <InnerVar>CommonTree [BIGINTEGERNUMBER406_tree=null]</InnerVar>
                <InnerVar>CommonTree [BIGDECIMALNUMBER407_tree=null]</InnerVar>
                <InnerVar>int [sign=1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>map</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.map_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.map_return [retval=new LogicalPlanGenerator.map_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [MAP_VAL408=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.keyvalue_return [keyvalue409=null]</InnerVar>
                <InnerVar>CommonTree [MAP_VAL408_tree=null]</InnerVar>
                <InnerVar>Map&lt;String,Object&gt; [kvs=new HashMap&lt;String,Object&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>keyvalue</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.keyvalue_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.keyvalue_return [retval=new LogicalPlanGenerator.keyvalue_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [KEY_VAL_PAIR410=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.map_key_return [map_key411=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.literal_return [literal412=null]</InnerVar>
                <InnerVar>CommonTree [KEY_VAL_PAIR410_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>map_key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.map_key_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.map_key_return [retval=new LogicalPlanGenerator.map_key_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING413=null]</InnerVar>
                <InnerVar>CommonTree [QUOTEDSTRING413_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>bag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.bag_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.bag_return [retval=new LogicalPlanGenerator.bag_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [BAG_VAL414=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.tuple_return [tuple415=null]</InnerVar>
                <InnerVar>CommonTree [BAG_VAL414_tree=null]</InnerVar>
                <InnerVar>DataBag [dataBag=builder.createDataBag()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>tuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.tuple_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.tuple_return [retval=new LogicalPlanGenerator.tuple_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE_VAL416=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.literal_return [literal417=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE_VAL416_tree=null]</InnerVar>
                <InnerVar>List&lt;Object&gt; [objList=new ArrayList&lt;Object&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>eid</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.eid_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.eid_return [retval=new LogicalPlanGenerator.eid_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [IMPORT419=null]</InnerVar>
                <InnerVar>CommonTree [RETURNS420=null]</InnerVar>
                <InnerVar>CommonTree [DEFINE421=null]</InnerVar>
                <InnerVar>CommonTree [LOAD422=null]</InnerVar>
                <InnerVar>CommonTree [FILTER423=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH424=null]</InnerVar>
                <InnerVar>CommonTree [MATCHES425=null]</InnerVar>
                <InnerVar>CommonTree [ORDER426=null]</InnerVar>
                <InnerVar>CommonTree [DISTINCT427=null]</InnerVar>
                <InnerVar>CommonTree [COGROUP428=null]</InnerVar>
                <InnerVar>CommonTree [CUBE429=null]</InnerVar>
                <InnerVar>CommonTree [ROLLUP430=null]</InnerVar>
                <InnerVar>CommonTree [JOIN431=null]</InnerVar>
                <InnerVar>CommonTree [CROSS432=null]</InnerVar>
                <InnerVar>CommonTree [UNION433=null]</InnerVar>
                <InnerVar>CommonTree [SPLIT434=null]</InnerVar>
                <InnerVar>CommonTree [INTO435=null]</InnerVar>
                <InnerVar>CommonTree [IF436=null]</InnerVar>
                <InnerVar>CommonTree [ALL437=null]</InnerVar>
                <InnerVar>CommonTree [AS438=null]</InnerVar>
                <InnerVar>CommonTree [BY439=null]</InnerVar>
                <InnerVar>CommonTree [USING440=null]</InnerVar>
                <InnerVar>CommonTree [INNER441=null]</InnerVar>
                <InnerVar>CommonTree [OUTER442=null]</InnerVar>
                <InnerVar>CommonTree [PARALLEL443=null]</InnerVar>
                <InnerVar>CommonTree [PARTITION444=null]</InnerVar>
                <InnerVar>CommonTree [GROUP445=null]</InnerVar>
                <InnerVar>CommonTree [AND446=null]</InnerVar>
                <InnerVar>CommonTree [OR447=null]</InnerVar>
                <InnerVar>CommonTree [NOT448=null]</InnerVar>
                <InnerVar>CommonTree [GENERATE449=null]</InnerVar>
                <InnerVar>CommonTree [FLATTEN450=null]</InnerVar>
                <InnerVar>CommonTree [EVAL451=null]</InnerVar>
                <InnerVar>CommonTree [ASC452=null]</InnerVar>
                <InnerVar>CommonTree [DESC453=null]</InnerVar>
                <InnerVar>CommonTree [BOOLEAN454=null]</InnerVar>
                <InnerVar>CommonTree [INT455=null]</InnerVar>
                <InnerVar>CommonTree [LONG456=null]</InnerVar>
                <InnerVar>CommonTree [FLOAT457=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLE458=null]</InnerVar>
                <InnerVar>CommonTree [BIGINTEGER459=null]</InnerVar>
                <InnerVar>CommonTree [BIGDECIMAL460=null]</InnerVar>
                <InnerVar>CommonTree [DATETIME461=null]</InnerVar>
                <InnerVar>CommonTree [CHARARRAY462=null]</InnerVar>
                <InnerVar>CommonTree [BYTEARRAY463=null]</InnerVar>
                <InnerVar>CommonTree [BAG464=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE465=null]</InnerVar>
                <InnerVar>CommonTree [MAP466=null]</InnerVar>
                <InnerVar>CommonTree [IS467=null]</InnerVar>
                <InnerVar>CommonTree [NULL468=null]</InnerVar>
                <InnerVar>CommonTree [TRUE469=null]</InnerVar>
                <InnerVar>CommonTree [FALSE470=null]</InnerVar>
                <InnerVar>CommonTree [STREAM471=null]</InnerVar>
                <InnerVar>CommonTree [THROUGH472=null]</InnerVar>
                <InnerVar>CommonTree [STORE473=null]</InnerVar>
                <InnerVar>CommonTree [MAPREDUCE474=null]</InnerVar>
                <InnerVar>CommonTree [SHIP475=null]</InnerVar>
                <InnerVar>CommonTree [CACHE476=null]</InnerVar>
                <InnerVar>CommonTree [INPUT477=null]</InnerVar>
                <InnerVar>CommonTree [OUTPUT478=null]</InnerVar>
                <InnerVar>CommonTree [STDERROR479=null]</InnerVar>
                <InnerVar>CommonTree [STDIN480=null]</InnerVar>
                <InnerVar>CommonTree [STDOUT481=null]</InnerVar>
                <InnerVar>CommonTree [LIMIT482=null]</InnerVar>
                <InnerVar>CommonTree [SAMPLE483=null]</InnerVar>
                <InnerVar>CommonTree [LEFT484=null]</InnerVar>
                <InnerVar>CommonTree [RIGHT485=null]</InnerVar>
                <InnerVar>CommonTree [FULL486=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER487=null]</InnerVar>
                <InnerVar>CommonTree [TOBAG488=null]</InnerVar>
                <InnerVar>CommonTree [TOMAP489=null]</InnerVar>
                <InnerVar>CommonTree [TOTUPLE490=null]</InnerVar>
                <InnerVar>CommonTree [ASSERT491=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_str_op_return [rel_str_op418=null]</InnerVar>
                <InnerVar>CommonTree [IMPORT419_tree=null]</InnerVar>
                <InnerVar>CommonTree [RETURNS420_tree=null]</InnerVar>
                <InnerVar>CommonTree [DEFINE421_tree=null]</InnerVar>
                <InnerVar>CommonTree [LOAD422_tree=null]</InnerVar>
                <InnerVar>CommonTree [FILTER423_tree=null]</InnerVar>
                <InnerVar>CommonTree [FOREACH424_tree=null]</InnerVar>
                <InnerVar>CommonTree [MATCHES425_tree=null]</InnerVar>
                <InnerVar>CommonTree [ORDER426_tree=null]</InnerVar>
                <InnerVar>CommonTree [DISTINCT427_tree=null]</InnerVar>
                <InnerVar>CommonTree [COGROUP428_tree=null]</InnerVar>
                <InnerVar>CommonTree [CUBE429_tree=null]</InnerVar>
                <InnerVar>CommonTree [ROLLUP430_tree=null]</InnerVar>
                <InnerVar>CommonTree [JOIN431_tree=null]</InnerVar>
                <InnerVar>CommonTree [CROSS432_tree=null]</InnerVar>
                <InnerVar>CommonTree [UNION433_tree=null]</InnerVar>
                <InnerVar>CommonTree [SPLIT434_tree=null]</InnerVar>
                <InnerVar>CommonTree [INTO435_tree=null]</InnerVar>
                <InnerVar>CommonTree [IF436_tree=null]</InnerVar>
                <InnerVar>CommonTree [ALL437_tree=null]</InnerVar>
                <InnerVar>CommonTree [AS438_tree=null]</InnerVar>
                <InnerVar>CommonTree [BY439_tree=null]</InnerVar>
                <InnerVar>CommonTree [USING440_tree=null]</InnerVar>
                <InnerVar>CommonTree [INNER441_tree=null]</InnerVar>
                <InnerVar>CommonTree [OUTER442_tree=null]</InnerVar>
                <InnerVar>CommonTree [PARALLEL443_tree=null]</InnerVar>
                <InnerVar>CommonTree [PARTITION444_tree=null]</InnerVar>
                <InnerVar>CommonTree [GROUP445_tree=null]</InnerVar>
                <InnerVar>CommonTree [AND446_tree=null]</InnerVar>
                <InnerVar>CommonTree [OR447_tree=null]</InnerVar>
                <InnerVar>CommonTree [NOT448_tree=null]</InnerVar>
                <InnerVar>CommonTree [GENERATE449_tree=null]</InnerVar>
                <InnerVar>CommonTree [FLATTEN450_tree=null]</InnerVar>
                <InnerVar>CommonTree [EVAL451_tree=null]</InnerVar>
                <InnerVar>CommonTree [ASC452_tree=null]</InnerVar>
                <InnerVar>CommonTree [DESC453_tree=null]</InnerVar>
                <InnerVar>CommonTree [BOOLEAN454_tree=null]</InnerVar>
                <InnerVar>CommonTree [INT455_tree=null]</InnerVar>
                <InnerVar>CommonTree [LONG456_tree=null]</InnerVar>
                <InnerVar>CommonTree [FLOAT457_tree=null]</InnerVar>
                <InnerVar>CommonTree [DOUBLE458_tree=null]</InnerVar>
                <InnerVar>CommonTree [BIGINTEGER459_tree=null]</InnerVar>
                <InnerVar>CommonTree [BIGDECIMAL460_tree=null]</InnerVar>
                <InnerVar>CommonTree [DATETIME461_tree=null]</InnerVar>
                <InnerVar>CommonTree [CHARARRAY462_tree=null]</InnerVar>
                <InnerVar>CommonTree [BYTEARRAY463_tree=null]</InnerVar>
                <InnerVar>CommonTree [BAG464_tree=null]</InnerVar>
                <InnerVar>CommonTree [TUPLE465_tree=null]</InnerVar>
                <InnerVar>CommonTree [MAP466_tree=null]</InnerVar>
                <InnerVar>CommonTree [IS467_tree=null]</InnerVar>
                <InnerVar>CommonTree [NULL468_tree=null]</InnerVar>
                <InnerVar>CommonTree [TRUE469_tree=null]</InnerVar>
                <InnerVar>CommonTree [FALSE470_tree=null]</InnerVar>
                <InnerVar>CommonTree [STREAM471_tree=null]</InnerVar>
                <InnerVar>CommonTree [THROUGH472_tree=null]</InnerVar>
                <InnerVar>CommonTree [STORE473_tree=null]</InnerVar>
                <InnerVar>CommonTree [MAPREDUCE474_tree=null]</InnerVar>
                <InnerVar>CommonTree [SHIP475_tree=null]</InnerVar>
                <InnerVar>CommonTree [CACHE476_tree=null]</InnerVar>
                <InnerVar>CommonTree [INPUT477_tree=null]</InnerVar>
                <InnerVar>CommonTree [OUTPUT478_tree=null]</InnerVar>
                <InnerVar>CommonTree [STDERROR479_tree=null]</InnerVar>
                <InnerVar>CommonTree [STDIN480_tree=null]</InnerVar>
                <InnerVar>CommonTree [STDOUT481_tree=null]</InnerVar>
                <InnerVar>CommonTree [LIMIT482_tree=null]</InnerVar>
                <InnerVar>CommonTree [SAMPLE483_tree=null]</InnerVar>
                <InnerVar>CommonTree [LEFT484_tree=null]</InnerVar>
                <InnerVar>CommonTree [RIGHT485_tree=null]</InnerVar>
                <InnerVar>CommonTree [FULL486_tree=null]</InnerVar>
                <InnerVar>CommonTree [IDENTIFIER487_tree=null]</InnerVar>
                <InnerVar>CommonTree [TOBAG488_tree=null]</InnerVar>
                <InnerVar>CommonTree [TOMAP489_tree=null]</InnerVar>
                <InnerVar>CommonTree [TOTUPLE490_tree=null]</InnerVar>
                <InnerVar>CommonTree [ASSERT491_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_return [retval=new LogicalPlanGenerator.rel_op_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_MATCHES498=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_eq_return [rel_op_eq492=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_ne_return [rel_op_ne493=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_gt_return [rel_op_gt494=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_gte_return [rel_op_gte495=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_lt_return [rel_op_lt496=null]</InnerVar>
                <InnerVar>LogicalPlanGenerator.rel_op_lte_return [rel_op_lte497=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_MATCHES498_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op_eq</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_eq_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_eq_return [retval=new LogicalPlanGenerator.rel_op_eq_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [set499=null]</InnerVar>
                <InnerVar>CommonTree [set499_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op_ne</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_ne_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_ne_return [retval=new LogicalPlanGenerator.rel_op_ne_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [set500=null]</InnerVar>
                <InnerVar>CommonTree [set500_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op_gt</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_gt_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_gt_return [retval=new LogicalPlanGenerator.rel_op_gt_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [set501=null]</InnerVar>
                <InnerVar>CommonTree [set501_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op_gte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_gte_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_gte_return [retval=new LogicalPlanGenerator.rel_op_gte_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [set502=null]</InnerVar>
                <InnerVar>CommonTree [set502_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op_lt</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_lt_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_lt_return [retval=new LogicalPlanGenerator.rel_op_lt_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [set503=null]</InnerVar>
                <InnerVar>CommonTree [set503_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_op_lte</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_op_lte_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_op_lte_return [retval=new LogicalPlanGenerator.rel_op_lte_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [set504=null]</InnerVar>
                <InnerVar>CommonTree [set504_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getTree</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>rel_str_op</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalPlanGenerator.rel_str_op_return</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>LogicalPlanGenerator.rel_str_op_return [retval=new LogicalPlanGenerator.rel_str_op_return()]</InnerVar>
                <InnerVar>CommonTree [root_0=null]</InnerVar>
                <InnerVar>CommonTree [_first_0=null]</InnerVar>
                <InnerVar>CommonTree [_last=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_EQ505=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_NE506=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_GT507=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_LT508=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_GTE509=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_LTE510=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_MATCHES511=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_EQ505_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_NE506_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_GT507_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_LT508_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_GTE509_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_LTE510_tree=null]</InnerVar>
                <InnerVar>CommonTree [STR_OP_MATCHES511_tree=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred147_LogicalPlanGenerator_fragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred148_LogicalPlanGenerator_fragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred149_LogicalPlanGenerator_fragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred179_LogicalPlanGenerator_fragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred196_LogicalPlanGenerator_fragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>RecognitionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred149_LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [start=input.mark()]</InnerVar>
                <InnerVar>boolean [success=!state.failed]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>input;rewind;[start]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred179_LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [start=input.mark()]</InnerVar>
                <InnerVar>boolean [success=!state.failed]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>input;rewind;[start]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred147_LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [start=input.mark()]</InnerVar>
                <InnerVar>boolean [success=!state.failed]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>input;rewind;[start]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred196_LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [start=input.mark()]</InnerVar>
                <InnerVar>boolean [success=!state.failed]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>input;rewind;[start]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>synpred148_LogicalPlanGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>int [start=input.mark()]</InnerVar>
                <InnerVar>boolean [success=!state.failed]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>input;rewind;[start]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>