<Class>
    <Id>1232</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.spark.converter</Package>
    <ClassName>StoreConverter</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>RDDConverter</SuperInterface>
        <SuperInterface>Tuple</SuperInterface>
    </SuperInterfaceList>
    <ClassComment>StoreConverter  /** 
 * Converter that takes a POStore and stores it's content.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>jobConf</FieldName>
            <FieldType>JobConf</FieldType>
        </Field>
        <Field>
            <FieldName>EMPTY_TEXT</FieldName>
            <FieldType>Text</FieldType>
        </Field>
        <Field>
            <FieldName>counterGroupName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>counterName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>sparkCounters</FieldName>
            <FieldType>SparkCounters</FieldType>
        </Field>
        <Field>
            <FieldName>disableCounter</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StoreConverter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jobConf</ParamName>
                    <ParamType>JobConf</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>convert</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple2&lt;Text,Tuple&gt;</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>predecessors</ParamName>
                    <ParamType>RDD&lt;Tuple&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>op</ParamName>
                    <ParamType>POStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>RDD&lt;Tuple&gt; [rdd=predecessors.get(0)]</InnerVar>
                <InnerVar>JavaRDD&lt;Tuple2&lt;Text,Tuple&gt;&gt; [rddPairs=rdd.toJavaRDD().map(buildFromTupleFunction(op))]</InnerVar>
                <InnerVar>PairRDDFunctions&lt;Text,Tuple&gt; [pairRDDFunctions=new PairRDDFunctions&lt;Text,Tuple&gt;(rddPairs.rdd(),SparkUtil.getManifest(Text.class),SparkUtil.getManifest(Tuple.class),null)]</InnerVar>
                <InnerVar>POStore [poStore=configureStorer(jobConf,op)]</InnerVar>
                <InnerVar>RDD&lt;Tuple2&lt;Text,Tuple&gt;&gt; [retRdd=rddPairs.rdd()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>SparkUtil;assertPredecessorSize;[predecessors, op, 1]</InnerMethodInvoke>
                <InnerMethodInvoke>SparkPigStatusReporter.getInstance();createCounter;[SparkStatsUtil.SPARK_STORE_COUNTER_GROUP, SparkStatsUtil.getCounterName(op)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configureStorer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>POStore</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jobConf</ParamName>
                    <ParamType>JobConf</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>op</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>ArrayList&lt;POStore&gt; [storeLocations=Lists.newArrayList()]</InnerVar>
                <InnerVar>POStore [poStore=(POStore)op]</InnerVar>
                <InnerVar>StoreFuncInterface [sFunc=poStore.getStoreFunc()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>storeLocations;add;[poStore]</InnerMethodInvoke>
                <InnerMethodInvoke>sFunc;setStoreLocation;[poStore.getSFile().getFileName(), new org.apache.hadoop.mapreduce.Job(jobConf)]</InnerMethodInvoke>
                <InnerMethodInvoke>poStore;setInputs;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>poStore;setParentPlan;[null]</InnerMethodInvoke>
                <InnerMethodInvoke>jobConf;set;[JobControlCompiler.PIG_MAP_STORES, ObjectSerializer.serialize(Lists.newArrayList())]</InnerMethodInvoke>
                <InnerMethodInvoke>jobConf;set;[JobControlCompiler.PIG_REDUCE_STORES, ObjectSerializer.serialize(storeLocations)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>call</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Text</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v1</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCounterGroupName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterGroupName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCounterName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>counterName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setSparkCounters</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sparkCounter</ParamName>
                    <ParamType>SparkCounters</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setDisableCounter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>disableCounter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>buildFromTupleFunction</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FromTupleFunction</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>op</ParamName>
                    <ParamType>POStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FromTupleFunction [ftf=new FromTupleFunction()]</InnerVar>
                <InnerVar>boolean [disableCounter=op.disableCounter()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>