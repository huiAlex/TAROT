<Class>
    <Id>641</Id>
    <Package>org.apache.pig.newplan.logical.visitor</Package>
    <ClassName>ColumnAliasConversionVisitor</ClassName>
    <SuperClass>AllExpressionVisitor</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ColumnAliasConversionVisitor  /** 
 * Logical plan visitor which will convert all column alias references to column indexes, using the underlying anonymous expression plan visitor.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>ColumnAliasConversionVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getVisitor</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalExpressionVisitor</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>exprPlan</ParamName>
                    <ParamType>LogicalExpressionPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>ProjectExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expr;setColumnNumberFromAlias;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>expr</ParamName>
                    <ParamType>DereferenceExpression</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Object&gt; [rawCols=expr.getRawColumns()]</InnerVar>
                <InnerVar>List&lt;Integer&gt; [cols=new ArrayList&lt;Integer&gt;(rawCols.size())]</InnerVar>
                <InnerVar>LogicalExpressionPlan [plan=(LogicalExpressionPlan)expr.getPlan()]</InnerVar>
                <InnerVar>LogicalExpression [pred=(LogicalExpression)plan.getSuccessors(expr).get(0)]</InnerVar>
                <InnerVar>LogicalSchema [schema=null]</InnerVar>
                <InnerVar>int [col=-1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>expr;setBagColumns;[cols]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>