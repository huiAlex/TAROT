<Class>
    <Id>169</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators</Package>
    <ClassName>JoinPackager</ClassName>
    <SuperClass>Packager</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>forEach</FieldName>
            <FieldType>POOptimizedForEach</FieldType>
        </Field>
        <Field>
            <FieldName>newKey</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>res</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>eopResult</FieldName>
            <FieldType>Result</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_CHUNK_SIZE</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>chunkSize</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>forEachResult</FieldName>
            <FieldType>Result</FieldType>
        </Field>
        <Field>
            <FieldName>dbs</FieldName>
            <FieldType>DataBag[]</FieldType>
        </Field>
        <Field>
            <FieldName>lastBagIndex</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>lastBagIter</FieldName>
            <FieldType>Iterator</FieldType>
        </Field>
        <Field>
            <FieldName>lastBagIter</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>JoinPackager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>p</ParamName>
                    <ParamType>Packager</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>f</ParamName>
                    <ParamType>POForEach</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [scope=f.getOperatorKey().getScope()]</InnerVar>
                <InnerVar>NodeIdGenerator [nig=NodeIdGenerator.getGenerator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNext</MethodName>
            <MethodComment>/** 
 * Calls getNext to get next ForEach result. The input for POJoinPackage is a (key, NullableTuple) pair. We will materialize n-1 inputs into bags, feed input#n one tuple a time to the delegated ForEach operator, the input for ForEach is (input#1, input#2, input#3....input#n[i]), i=(1..k), suppose input#n consists of k tuples. For every ForEach input, pull all the results from ForEach. getNext will be called multiple times for a particular input, it returns one output tuple from ForEach every time we call getNext, so we need to maintain internal status to keep tracking of where we are.
 */
</MethodComment>
            <ReturnType>Result</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Tuple [it=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;detachInput;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>attachInput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bags</ParamName>
                    <ParamType>DataBag[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>readOnce</ParamName>
                    <ParamType>boolean[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;checkBagType;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInputPlans</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PhysicalPlan</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setInputPlans</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plans</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>forEach;setInputPlans;[plans]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setToBeFlattened</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>flattens</ParamName>
                    <ParamType>Boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>forEach;setToBeFlattened;[flattens]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getForEach</MethodName>
            <MethodComment>/** 
 * @return the forEach
 */
</MethodComment>
            <ReturnType>POOptimizedForEach</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setChunkSize</MethodName>
            <MethodComment>/** 
 * @param chunkSize - the chunk size for the biggest input
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>chunkSize</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setIllustrator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>illustrator</ParamName>
                    <ParamType>Illustrator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>forEach;setIllustrator;[illustrator]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>name</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>