<Class>
    <Id>364</Id>
    <Package>org.apache.pig.newplan.optimizer</Package>
    <ClassName>Transformer</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>check</MethodName>
            <MethodComment>/** 
 * check if the transform should be done.  If this is being called then the pattern matches, but there may be other criteria that must be met as well.
 * @param matched the sub-set of the plan that matches the pattern. This subset has the same graph as the pattern, but the operators point to the same objects as the plan to be matched.
 * @return true if the transform should be done.
 * @throws Transformer
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matched</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>transform</MethodName>
            <MethodComment>/** 
 * Transform the tree
 * @param matched the sub-set of the plan that matches the pattern. This subset has the same graph as the pattern, but the operators point to the same objects as the plan to be matched.
 * @throws Transformer
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>matched</ParamName>
                    <ParamType>OperatorPlan</ParamType>
                </Parameter>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>reportChanges</MethodName>
            <MethodComment>/** 
 * Report what parts of the tree were transformed.  This is so that  listeners can know which part of the tree to visit and modify schemas, annotations, etc.  So any nodes that were removed need will not be in this plan, only nodes that were added or moved.
 * @return OperatorPlan that describes just the changed nodes.
 */
</MethodComment>
            <ReturnType>OperatorPlan</ReturnType>
            <ParameterList/>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>