<Class>
    <Id>468</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.fetch</Package>
    <ClassName>FetchLauncher</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>FetchLauncher  /** 
 * This class is responsible for executing the fetch task, saving the result to disk and do the necessary cleanup afterwards.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>pigContext</FieldName>
            <FieldType>PigContext</FieldType>
        </Field>
        <Field>
            <FieldName>conf</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>FetchLauncher</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pigContext</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>launchPig</MethodName>
            <MethodComment>/** 
 * Runs the fetch task by executing chain of calls on the PhysicalPlan from the leaf up to the LoadFunc
 * @param pp - Physical plan
 * @return SimpleFetchPigStats instance representing the fetched result
 * @throws IOException
 */
</MethodComment>
            <ReturnType>PigStats</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pp</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>explain</MethodName>
            <MethodComment>/** 
 * Creates an empty MR plan
 * @param pp - Physical plan
 * @param pc - PigContext
 * @param ps - PrintStream to write the plan to
 * @param format format of the output plan
 * @throws PlanException
 * @throws VisitorException
 * @throws IOException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pp</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pc</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ps</ParamName>
                    <ParamType>PrintStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>format</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PlanException</ExceptionType>
                <ExceptionType>VisitorException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>init</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>pp</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>poStore</ParamName>
                    <ParamType>POStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TaskAttemptID [taskAttemptID=HadoopShims.getNewTaskAttemptID()]</InnerVar>
                <InnerVar>String [currentTime=Long.toString(System.currentTimeMillis())]</InnerVar>
                <InnerVar>UDFContext [udfContext=UDFContext.getUDFContext()]</InnerVar>
                <InnerVar>boolean [aggregateWarning="true".equalsIgnoreCase(conf.get("aggregate.warning"))]</InnerVar>
                <InnerVar>PigStatusReporter [pigStatusReporter=PigStatusReporter.getInstance()]</InnerVar>
                <InnerVar>PigHadoopLogger [pigHadoopLogger=PigHadoopLogger.getInstance()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>poStore;setStoreImpl;[new FetchPOStoreImpl(pigContext)]</InnerMethodInvoke>
                <InnerMethodInvoke>poStore;setUp;[]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;setInt;[MRConfiguration.JOB_APPLICATION_ATTEMPT_ID, taskAttemptID.getId()]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;["pig.script.submitted.timestamp", currentTime]</InnerMethodInvoke>
                <InnerMethodInvoke>conf;set;["pig.job.submitted.timestamp", currentTime]</InnerMethodInvoke>
                <InnerMethodInvoke>PhysicalOperator;setReporter;[new FetchProgressableReporter()]</InnerMethodInvoke>
                <InnerMethodInvoke>SchemaTupleBackend;initialize;[conf, pigContext]</InnerMethodInvoke>
                <InnerMethodInvoke>udfContext;addJobConf;[conf]</InnerMethodInvoke>
                <InnerMethodInvoke>udfContext;setClientSystemProps;[pigContext.getProperties()]</InnerMethodInvoke>
                <InnerMethodInvoke>udfContext;serialize;[conf]</InnerMethodInvoke>
                <InnerMethodInvoke>PigMapReduce.sJobConfInternal;set;[conf]</InnerMethodInvoke>
                <InnerMethodInvoke>Utils;setDefaultTimeZone;[conf]</InnerMethodInvoke>
                <InnerMethodInvoke>pigStatusReporter;setContext;[new FetchTaskContext(new FetchContext())]</InnerMethodInvoke>
                <InnerMethodInvoke>pigHadoopLogger;setReporter;[pigStatusReporter]</InnerMethodInvoke>
                <InnerMethodInvoke>pigHadoopLogger;setAggregate;[aggregateWarning]</InnerMethodInvoke>
                <InnerMethodInvoke>PhysicalOperator;setPigLogger;[pigHadoopLogger]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>runPipeline</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>posStore</ParamName>
                    <ParamType>POStore</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>