<Class>
    <Id>312</Id>
    <Package>org.apache.pig.piggybank.storage.hiverc</Package>
    <ClassName>HiveRCOutputFormat</ClassName>
    <SuperClass>FileOutputFormat</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Logger</FieldType>
        </Field>
        <Field>
            <FieldName>COMPRESSION_CODEC_CONF</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_EXTENSION</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>EXTENSION_OVERRIDE_CONF</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>rcfile</FieldName>
            <FieldType>RCFile.Writer</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>setColumnNumber</MethodName>
            <MethodComment>/** 
 * set number of columns into the given configuration.
 * @param conf configuration instance which need to set the column number
 * @param columnNum column number for RCFile's Writer
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>conf;setInt;[RCFile.COLUMN_NUMBER_CONF_STR, columnNum]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getColumnNumber</MethodName>
            <MethodComment>/** 
 * Returns the number of columns set in the conf for writers.
 * @param conf
 * @return number of columns for RCFile's writer
 */
</MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createRCFileWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>RCFile.Writer</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>TaskAttemptContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnMetadata</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Configuration [conf=job.getConfiguration()]</InnerVar>
                <InnerVar>String [codecOverride=conf.get(COMPRESSION_CODEC_CONF)]</InnerVar>
                <InnerVar>CompressionCodec [codec=null]</InnerVar>
                <InnerVar>Metadata [metadata=null]</InnerVar>
                <InnerVar>String [ext=conf.get(EXTENSION_OVERRIDE_CONF,DEFAULT_EXTENSION)]</InnerVar>
                <InnerVar>Path [file=getDefaultWorkFile(job,ext.equalsIgnoreCase("none") ? null : ext)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>LOG;info;["writing to rcfile " + file.toString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Writer</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>outputFormat</ParamName>
                    <ParamType>HiveRCOutputFormat</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>TaskAttemptContext</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>columnMetadata</ParamName>
                    <ParamType>Text</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>context</ParamName>
                    <ParamType>TaskAttemptContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rcfile;close;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>write</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>NullWritable</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>value</ParamName>
                    <ParamType>Writable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>rcfile;append;[value]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getRecordWriter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>NullWritable</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>job</ParamName>
                    <ParamType>TaskAttemptContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>