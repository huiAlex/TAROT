<Class>
    <Id>320</Id>
    <Package>org.apache.pig.pen</Package>
    <ClassName>ExampleGenerator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>ExampleGenerator  /** 
 * This class is used to generate example tuples for the ILLUSTRATE purpose
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>plan</FieldName>
            <FieldType>LogicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>newPlan</FieldName>
            <FieldType>LogicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>baseData</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>baseData</FieldName>
            <FieldType>LOLoad</FieldType>
        </Field>
        <Field>
            <FieldName>pigContext</FieldName>
            <FieldType>PigContext</FieldType>
        </Field>
        <Field>
            <FieldName>physPlan</FieldName>
            <FieldType>PhysicalPlan</FieldType>
        </Field>
        <Field>
            <FieldName>physPlanReseter</FieldName>
            <FieldType>PhysicalPlanResetter</FieldType>
        </Field>
        <Field>
            <FieldName>execEngine</FieldName>
            <FieldType>MRExecutionEngine</FieldType>
        </Field>
        <Field>
            <FieldName>localMRRunner</FieldName>
            <FieldType>LocalMapReduceSimulator</FieldType>
        </Field>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_RECORDS</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>logToPhyMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>logToPhyMap</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>poLoadToLogMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>poLoadToLogMap</FieldName>
            <FieldType>PhysicalOperator</FieldType>
        </Field>
        <Field>
            <FieldName>poToLogMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>poToLogMap</FieldName>
            <FieldType>PhysicalOperator</FieldType>
        </Field>
        <Field>
            <FieldName>poToEqclassesMap</FieldName>
            <FieldType>HashMap</FieldType>
        </Field>
        <Field>
            <FieldName>poToEqclassesMap</FieldName>
            <FieldType>PhysicalOperator</FieldType>
        </Field>
        <Field>
            <FieldName>lineage</FieldName>
            <FieldType>LineageTracer</FieldType>
        </Field>
        <Field>
            <FieldName>logToDataMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>logToDataMap</FieldName>
            <FieldType>Operator</FieldType>
        </Field>
        <Field>
            <FieldName>forEachInnerLogToDataMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>forEachInnerLogToDataMap</FieldName>
            <FieldType>LOForEach</FieldType>
        </Field>
        <Field>
            <FieldName>forEachInnerLogToPhyMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>forEachInnerLogToPhyMap</FieldName>
            <FieldType>LOForEach</FieldType>
        </Field>
        <Field>
            <FieldName>oriLimitMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>oriLimitMap</FieldName>
            <FieldType>LOLimit</FieldType>
        </Field>
        <Field>
            <FieldName>poLoadToSchemaMap</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>poLoadToSchemaMap</FieldName>
            <FieldType>POLoad</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>ExampleGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>hadoopPigContext</ParamName>
                    <ParamType>PigContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>FileLocalizer;setInitialized;[false]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLineage</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LineageTracer</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLogToPhyMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Operator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setMaxRecords</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>max</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getExamples</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Operator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;Operator&gt; [loads=newPlan.getSources()]</InnerVar>
                <InnerVar>List&lt;PhysicalOperator&gt; [pRoots=physPlan.getRoots()]</InnerVar>
                <InnerVar>boolean [hasLimit=false]</InnerVar>
                <InnerVar>Map&lt;Operator,DataBag&gt; [derivedData=null]</InnerVar>
                <InnerVar>LineageTrimmingVisitor [trimmer=new LineageTrimmingVisitor(newPlan,baseData,this,logToPhyMap,physPlan,pigContext)]</InnerVar>
                <InnerVar>AugmentBaseDataVisitor [augment=new AugmentBaseDataVisitor(newPlan,logToPhyMap,baseData,derivedData)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>trimmer;visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>augment;visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>trimmer;visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>System.out;println;[DisplayExamples.printTabular(newPlan,derivedData,forEachInnerLogToDataMap)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readBaseData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>loads</ParamName>
                    <ParamType>Operator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PhysicalPlan [thisPhyPlan=new PhysicalPlan()]</InnerVar>
                <InnerVar>Map&lt;Operator,DataBag&gt; [result=getData(thisPhyPlan)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
                <ExceptionType>FrontendException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compilePlan</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PhysicalPlan</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>LogicalPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>PhysicalPlan [result=execEngine.compile(plan,null)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>plan;optimize;[pigContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Operator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Operator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IllustratorAttacher [attacher=new IllustratorAttacher(plan,lineage,MAX_RECORDS,poLoadToSchemaMap,pigContext)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>attacher;visit;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;getLogToDataMap;[attacher.getDataMap()]</InnerMethodInvoke>
                <InnerMethodInvoke>localMRRunner;launchPig;[plan, baseData, lineage, attacher, this, pigContext]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>PigException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>InterruptedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getData</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Operator</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>newBaseData</ParamName>
                    <ParamType>LOLoad</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>Exception</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>phyToMRTransform</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>plan</ParamName>
                    <ParamType>PhysicalPlan</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>phyToDataMap</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Map&lt;PhysicalOperator,PhysicalOperator&gt; [phyToMRMap=localMRRunner.getPhyToMRMap()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLogToDataMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>phyToDataMap</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>logToDataMap;clear;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setLoadDataMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getEqClasses</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IdentityHashSet&lt;Tuple&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;LogicalRelationalOperator,Collection&lt;IdentityHashSet&lt;Tuple&gt;&gt;&gt; [logToEqclassesMap=getLoToEqClassMap()]</InnerVar>
                <InnerVar>LinkedList&lt;IdentityHashSet&lt;Tuple&gt;&gt; [ret=new LinkedList&lt;IdentityHashSet&lt;Tuple&gt;&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLoToEqClassMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LogicalRelationalOperator</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Map&lt;LogicalRelationalOperator,Collection&lt;IdentityHashSet&lt;Tuple&gt;&gt;&gt; [ret=EquivalenceClasses.getLoToEqClassMap(physPlan,newPlan,logToPhyMap,logToDataMap,forEachInnerLogToPhyMap,poToEqclassesMap)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>