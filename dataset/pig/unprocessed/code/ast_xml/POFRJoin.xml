<Class>
    <Id>598</Id>
    <Package>org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators</Package>
    <ClassName>POFRJoin</ClassName>
    <SuperClass>PhysicalOperator</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>POFRJoin  /** 
 * The operator models the join keys using the Local Rearrange operators which are configured with the plan specified by the user. It also sets up one Hashtable per replicated input which maps the Key(k) stored as a Tuple to a DataBag which holds all the values in the input having the same key(k) The getNext() reads an input from its predecessor and separates them into key &amp; value. It configures a foreach operator with the databags obtained from each Hashtable for the key and also with the value for the fragment input. It then returns tuples returned by this foreach operator.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>serialVersionUID</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>fragment</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>phyPlanLists</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>phyPlanLists</FieldName>
            <FieldType>List&lt;PhysicalPlan&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>keyTypes</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>keyTypes</FieldName>
            <FieldType>List&lt;Byte&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>LRs</FieldName>
            <FieldType>POLocalRearrange[]</FieldType>
        </Field>
        <Field>
            <FieldName>replFiles</FieldName>
            <FieldType>FileSpec[]</FieldType>
        </Field>
        <Field>
            <FieldName>constExps</FieldName>
            <FieldType>ConstantExpression[]</FieldType>
        </Field>
        <Field>
            <FieldName>fe</FieldName>
            <FieldType>POForEach</FieldType>
        </Field>
        <Field>
            <FieldName>isLeftOuterJoin</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>nullBag</FieldName>
            <FieldType>DataBag</FieldType>
        </Field>
        <Field>
            <FieldName>inputSchemas</FieldName>
            <FieldType>Schema[]</FieldType>
        </Field>
        <Field>
            <FieldName>keySchemas</FieldName>
            <FieldType>Schema[]</FieldType>
        </Field>
        <Field>
            <FieldName>replicates</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>replicates</FieldName>
            <FieldType>Map&lt;? extends Object,? extends List&lt;Tuple&gt;&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>processingPlan</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>dumTup</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>setUp</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>tf</FieldName>
            <FieldType>SchemaTupleFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>POFRJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>k</ParamName>
                    <ParamType>OperatorKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rp</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inp</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ppLists</ParamName>
                    <ParamType>List&lt;PhysicalPlan&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyTypes</ParamName>
                    <ParamType>List&lt;Byte&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replFiles</ParamName>
                    <ParamType>FileSpec[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fragment</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLeftOuter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nullTuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>POFRJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>k</ParamName>
                    <ParamType>OperatorKey</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>rp</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inp</ParamName>
                    <ParamType>PhysicalOperator</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ppLists</ParamName>
                    <ParamType>List&lt;PhysicalPlan&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keyTypes</ParamName>
                    <ParamType>List&lt;Byte&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>replFiles</ParamName>
                    <ParamType>FileSpec[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fragment</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isLeftOuter</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>nullTuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>inputSchemas</ParamName>
                    <ParamType>Schema[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>keySchemas</ParamName>
                    <ParamType>Schema[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;Tuple&gt; [tupList=new ArrayList&lt;Tuple&gt;()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;createJoinPlans;[k]</InnerMethodInvoke>
                <InnerMethodInvoke>tupList;add;[nullTuple]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>POFRJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>copy</ParamName>
                    <ParamType>POFRJoin</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>genKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>OperatorKey</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>old</ParamName>
                    <ParamType>OperatorKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createJoinPlans</MethodName>
            <MethodComment>/** 
 * Configures the Local Rearrange operators &amp; the foreach operator
 * @param old
 * @throws ExecException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>old</ParamName>
                    <ParamType>OperatorKey</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>List&lt;PhysicalPlan&gt; [fePlans=new ArrayList&lt;PhysicalPlan&gt;()]</InnerVar>
                <InnerVar>List&lt;Boolean&gt; [flatList=new ArrayList&lt;Boolean&gt;()]</InnerVar>
                <InnerVar>int [i=-1]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>visit</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>v</ParamName>
                    <ParamType>PhyPlanVisitor</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>v;visitFRJoin;[this]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>VisitorException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>name</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>supportsMultipleInputs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>supportsMultipleOutputs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Result</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Result [res=null]</InnerVar>
                <InnerVar>Result [inp=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TupleToMapKey</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>ct</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tf</ParamName>
                    <ParamType>SchemaTupleFactory</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>put</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TuplesToSchemaTupleList</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>val</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>get</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>TuplesToSchemaTupleList</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setUpHashMap</MethodName>
            <MethodComment>/** 
 * Builds the HashMaps by reading each replicated input from the DFS using a Load operator
 * @throws ExecException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SchemaTupleFactory[] [inputSchemaTupleFactories=new SchemaTupleFactory[inputSchemas.length]]</InnerVar>
                <InnerVar>SchemaTupleFactory[] [keySchemaTupleFactories=new SchemaTupleFactory[inputSchemas.length]]</InnerVar>
                <InnerVar>int [i=-1]</InnerVar>
                <InnerVar>long [time1=System.currentTimeMillis()]</InnerVar>
                <InnerVar>long [time2=System.currentTimeMillis()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>log;debug;["Hash Table built. Time taken: " + (time2 - time1)]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isKeyNull</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>readObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>is</ParamName>
                    <ParamType>ObjectInputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>is;defaultReadObject;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ClassNotFoundException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getValueTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>lr</ParamName>
                    <ParamType>POLocalRearrange</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>tuple</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Tuple [val=(Tuple)tuple.get(2)]</InnerVar>
                <InnerVar>Tuple [retTup=null]</InnerVar>
                <InnerVar>boolean [isProjectStar=lr.isProjectStar()]</InnerVar>
                <InnerVar>Map&lt;Integer,Integer&gt; [keyLookup=lr.getProjectedColsMap()]</InnerVar>
                <InnerVar>int [keyLookupSize=keyLookup.size()]</InnerVar>
                <InnerVar>Object [key=tuple.get(1)]</InnerVar>
                <InnerVar>boolean [isKeyTuple=lr.isKeyTuple()]</InnerVar>
                <InnerVar>Tuple [keyAsTuple=isKeyTuple ? (Tuple)tuple.get(1) : null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getJoinPlans</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>List&lt;PhysicalPlan&gt;</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLRs</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>POLocalRearrange[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLeftOuterJoin</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setFragment</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fragment</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getReplFiles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>FileSpec[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setReplFiles</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>replFiles</ParamName>
                    <ParamType>FileSpec[]</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>illustratorMarkup</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>in</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>out</ParamName>
                    <ParamType>Object</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>eqClassIndex</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>clone</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>POFRJoin</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>POFRJoin [clone=(POFRJoin)super.clone()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>CloneNotSupportedException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>