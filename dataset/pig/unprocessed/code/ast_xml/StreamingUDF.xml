<Class>
    <Id>179</Id>
    <Package>org.apache.pig.impl.builtin</Package>
    <ClassName>StreamingUDF</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>log</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>PYTHON_CONTROLLER_JAR_PATH</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>PYTHON_PIG_UTIL_PATH</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>UDF_LANGUAGE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PATH_TO_CONTROLLER_FILE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UDF_FILE_NAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UDF_FILE_PATH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>UDF_NAME</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>PATH_TO_FILE_CACHE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STD_OUT_OUTPUT_PATH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>STD_ERR_OUTPUT_PATH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>CONTROLLER_LOG_FILE_PATH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>IS_ILLUSTRATE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>language</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>filePath</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>funcName</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>schema</FieldName>
            <FieldType>Schema</FieldType>
        </Field>
        <Field>
            <FieldName>execType</FieldName>
            <FieldType>ExecType</FieldType>
        </Field>
        <Field>
            <FieldName>isIllustrate</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>initialized</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>soc</FieldName>
            <FieldType>ScriptingOutputCapturer</FieldType>
        </Field>
        <Field>
            <FieldName>process</FieldName>
            <FieldType>Process</FieldType>
        </Field>
        <Field>
            <FieldName>stderrThread</FieldName>
            <FieldType>ProcessErrorThread</FieldType>
        </Field>
        <Field>
            <FieldName>stdinThread</FieldName>
            <FieldType>ProcessInputThread</FieldType>
        </Field>
        <Field>
            <FieldName>stdoutThread</FieldName>
            <FieldType>ProcessOutputThread</FieldType>
        </Field>
        <Field>
            <FieldName>inputHandler</FieldName>
            <FieldType>InputHandler</FieldType>
        </Field>
        <Field>
            <FieldName>outputHandler</FieldName>
            <FieldType>OutputHandler</FieldType>
        </Field>
        <Field>
            <FieldName>inputQueue</FieldName>
            <FieldType>BlockingQueue</FieldType>
        </Field>
        <Field>
            <FieldName>inputQueue</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
        <Field>
            <FieldName>outputQueue</FieldName>
            <FieldType>BlockingQueue</FieldType>
        </Field>
        <Field>
            <FieldName>outputQueue</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>stdin</FieldName>
            <FieldType>DataOutputStream</FieldType>
        </Field>
        <Field>
            <FieldName>stdout</FieldName>
            <FieldType>InputStream</FieldType>
        </Field>
        <Field>
            <FieldName>stderr</FieldName>
            <FieldType>InputStream</FieldType>
        </Field>
        <Field>
            <FieldName>ERROR_OUTPUT</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>NULL_OBJECT</FieldName>
            <FieldType>Object</FieldType>
        </Field>
        <Field>
            <FieldName>outerrThreadsError</FieldName>
            <FieldType>StreamingUDFException</FieldType>
        </Field>
        <Field>
            <FieldName>TURN_ON_OUTPUT_CAPTURING</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>WAIT_FOR_ERROR_LENGTH</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>MAX_WAIT_FOR_ERROR_ATTEMPTS</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>StreamingUDF</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>language</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>filePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>funcName</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>outputSchemaString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>schemaLineNumber</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>execType</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>isIllustrate</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>StreamingUDFOutputSchemaException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initialize</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;startUdfController;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;createInputHandlers;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;setStreams;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;startThreads;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startUdfController</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StreamingCommand</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StreamingCommand [sc=new StreamingCommand(null,constructCommand())]</InnerVar>
                <InnerVar>ProcessBuilder [processBuilder=StreamingUtil.createProcess(sc)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>Runtime.getRuntime();addShutdownHook;[new Thread(new ProcessKiller())]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>constructCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String[] [command=new String[10]]</InnerVar>
                <InnerVar>Configuration [conf=UDFContext.getUDFContext().getJobConf()]</InnerVar>
                <InnerVar>String [jarPath=conf.get("mapreduce.job.jar")]</InnerVar>
                <InnerVar>String [jobDir]</InnerVar>
                <InnerVar>String [standardOutputRootWriteLocation=soc.getStandardOutputRootWriteLocation()]</InnerVar>
                <InnerVar>String [controllerLogFileName, outFileName, errOutFileName]</InnerVar>
                <InnerVar>int [lastSeparator=filePath.lastIndexOf(File.separator) + 1]</InnerVar>
                <InnerVar>String [fileCachePath=jobDir + filePath.substring(0,lastSeparator)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>soc;registerOutputLocation;[funcName, outFileName]</InnerMethodInvoke>
                <InnerMethodInvoke>null;ensureUserFileAvailable;[command, fileCachePath]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ensureUserFileAvailable</MethodName>
            <MethodComment>/** 
 * Need to make sure the user's file is available. If jar hasn't been exploded, just copy the udf file to its path relative to the controller file and update file cache path appropriately.
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>command</ParamName>
                    <ParamType>String[]</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fileCachePath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [userUdfFile=new File(fileCachePath + command[UDF_FILE_NAME] + getUserFileExtension())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getUserFileExtension</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createInputHandlers</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>PigStreamingUDF [serializer=new PigStreamingUDF()]</InnerVar>
                <InnerVar>PigStreamingUDF [deserializer=new PigStreamingUDF(schema.getField(0))]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
                <ExceptionType>FrontendException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setStreams</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>outputHandler;bindTo;["", new BufferedPositionedInputStream(stdout), 0, Long.MAX_VALUE]</InnerMethodInvoke>
                <InnerMethodInvoke>inputHandler;bindTo;[stdin]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>startThreads</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>stdinThread;start;[]</InnerMethodInvoke>
                <InnerMethodInvoke>stdoutThread;start;[]</InnerMethodInvoke>
                <InnerMethodInvoke>stderrThread;start;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getControllerPath</MethodName>
            <MethodComment>/** 
 * Find the path to the controller file for the streaming language. First check path to job jar and if the file is not found (like in the case of running hadoop in standalone mode) write the necessary files to temporary files and return that path.
 * @param language
 * @param jarPath
 * @return
 * @throws IOException
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>jarPath</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPython</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getOutput</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Object</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Object [o=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>outputSchema</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Schema</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ProcessInputThread</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setDaemon;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ProcessOutputThread</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setDaemon;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Object [o=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ProcessErrorThread</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;setDaemon;[true]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>run</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>process;destroy;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>