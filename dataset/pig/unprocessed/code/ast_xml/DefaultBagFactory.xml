<Class>
    <Id>1197</Id>
    <Package>org.apache.pig.data</Package>
    <ClassName>DefaultBagFactory</ClassName>
    <SuperClass>BagFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DefaultBagFactory  /** 
 * Default implementation of BagFactory.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>newDefaultBag</MethodName>
            <MethodComment>/** 
 * Get a default (unordered, not distinct) data bag.
 */
</MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DataBag [b=new DefaultDataBag()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newDefaultBag</MethodName>
            <MethodComment>/** 
 * Get a default (unordered, not distinct) data bag from an existing list of tuples. Note that the bag does NOT copy the tuples but uses the provided list as its backing store. So it takes ownership of the list.
 */
</MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>listOfTuples</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataBag [b=new DefaultDataBag(listOfTuples)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newLimitedSortedBag</MethodName>
            <MethodComment>/** 
 * Get a limited sorted data bag.
 * @param comp Comparator that controls how the data is sorted.If null, default comparator will be used.
 */
</MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>comp</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>limit</ParamName>
                    <ParamType>long</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataBag [b=new LimitedSortedDataBag(comp,limit)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newSortedBag</MethodName>
            <MethodComment>/** 
 * Get a sorted data bag.
 * @param comp Comparator that controls how the data is sorted.If null, default comparator will be used.
 */
</MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>comp</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>DataBag [b=new SortedDataBag(comp)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>newDistinctBag</MethodName>
            <MethodComment>/** 
 * Get a distinct data bag.
 */
</MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>DataBag [b=new DistinctDataBag()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DefaultBagFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>