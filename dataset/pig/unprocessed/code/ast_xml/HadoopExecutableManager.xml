<Class>
    <Id>291</Id>
    <Package>org.apache.pig.backend.hadoop.streaming</Package>
    <ClassName>HadoopExecutableManager</ClassName>
    <SuperClass>ExecutableManager</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>HadoopExecutableManager  /** 
 * {@link HadoopExecutableManager} is a specialization of {@link ExecutableManager} and provides HDFS-specific support for secondaryoutputs, task-logs etc. &lt;code&gt;HadoopExecutableManager&lt;/code&gt; provides support for  secondary outputs of the managed process and also persists the logs of the tasks on HDFS. 
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>NUMBER_FORMAT</FieldName>
            <FieldType>NumberFormat</FieldType>
        </Field>
        <Field>
            <FieldName>job</FieldName>
            <FieldType>Configuration</FieldType>
        </Field>
        <Field>
            <FieldName>scriptOutputDir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>scriptLogDir</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>taskId</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>errorStream</FieldName>
            <FieldType>FSDataOutputStream</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>getOutputName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>partition</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>HadoopExecutableManager</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>configure</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>POStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>File [executable=new File(command.getExecutable())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;writeDebugHeader;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>close</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeErrorToHDFS</MethodName>
            <MethodComment>/** 
 * Should the stderr data of this task be persisted on HDFS?
 * @param limit maximum number of tasks whose stderr log-files are persisted
 * @param taskId id of the task
 * @return &lt;code&gt;true&lt;/code&gt; if stderr data of task should be persisted on HDFS, &lt;code&gt;false&lt;/code&gt; otherwise
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>limit</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>taskId</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>processError</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>error</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDebugHeader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processError;["===== Task Information Header ====="]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\nCommand: " + command]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\nStart time: " + new Date(System.currentTimeMillis())]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\n=====          * * *          =====\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>writeDebugFooter</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>List&lt;HandleSpec&gt; [inputSpecs=command.getHandleSpecs(Handle.INPUT)]</InnerVar>
                <InnerVar>HandleSpec [inputSpec=(inputSpecs != null) ? inputSpecs.get(0) : null]</InnerVar>
                <InnerVar>List&lt;HandleSpec&gt; [outputSpecs=command.getHandleSpecs(Handle.OUTPUT)]</InnerVar>
                <InnerVar>HandleSpec [outputSpec=(outputSpecs != null) ? outputSpecs.get(0) : null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;processError;["===== Task Information Footer ====="]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\nEnd time: " + new Date(System.currentTimeMillis())]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\nExit code: " + exitCode]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\nInput bytes: " + inputBytes + " bytes "+ ((inputSpec != null) ? "(" + inputSpec.getName() + " using "+ inputSpec.getSpec()+ ")" : "")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\nOutput bytes: " + outputBytes + " bytes "+ ((outputSpec != null) ? "(" + outputSpec.getName() + " using "+ outputSpec.getSpec()+ ")" : "")]</InnerMethodInvoke>
                <InnerMethodInvoke>null;processError;["\n=====          * * *          =====\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>