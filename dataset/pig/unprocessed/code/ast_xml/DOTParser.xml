<Class>
    <Id>308</Id>
    <Package>org.apache.pig.test.utils.dotGraph.parser</Package>
    <ClassName>DOTParser</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface>DOTParserTreeConstants</SuperInterface>
        <SuperInterface>DOTParserConstants</SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>jjtree</FieldName>
            <FieldType>JJTDOTParserState</FieldType>
        </Field>
        <Field>
            <FieldName>nodeAttributes</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>nodeAttributes</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>edgeAttributes</FieldName>
            <FieldType>Map</FieldType>
        </Field>
        <Field>
            <FieldName>edgeAttributes</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>token_source</FieldName>
            <FieldType>DOTParserTokenManager</FieldType>
        </Field>
        <Field>
            <FieldName>jj_input_stream</FieldName>
            <FieldType>SimpleCharStream</FieldType>
        </Field>
        <Field>
            <FieldName>token</FieldName>
            <FieldType>Token</FieldType>
        </Field>
        <Field>
            <FieldName>jj_nt</FieldName>
            <FieldType>Token</FieldType>
        </Field>
        <Field>
            <FieldName>jj_ntk</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>jj_scanpos</FieldName>
            <FieldType>Token</FieldType>
        </Field>
        <Field>
            <FieldName>jj_lastpos</FieldName>
            <FieldType>Token</FieldType>
        </Field>
        <Field>
            <FieldName>jj_la</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>jj_gen</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>jj_la1</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>jj_la1_0</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>jj_2_rtns</FieldName>
            <FieldType>JJCalls[]</FieldType>
        </Field>
        <Field>
            <FieldName>jj_rescan</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>jj_gc</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>jj_ls</FieldName>
            <FieldType>LookaheadSuccess</FieldType>
        </Field>
        <Field>
            <FieldName>jj_expentries</FieldName>
            <FieldType>java.util.List</FieldType>
        </Field>
        <Field>
            <FieldName>jj_expentry</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>jj_kind</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>jj_lasttokens</FieldName>
            <FieldType>int[]</FieldType>
        </Field>
        <Field>
            <FieldName>jj_endpos</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>gen</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>first</FieldName>
            <FieldType>Token</FieldType>
        </Field>
        <Field>
            <FieldName>arg</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>next</FieldName>
            <FieldType>JJCalls</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>unquote</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Parse</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DotGraph</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SimpleNode [jjtn000=new SimpleNode(JJTPARSE)]</InnerVar>
                <InnerVar>boolean [jjtc000=true]</InnerVar>
                <InnerVar>DotGraph [dotGraph=null]</InnerVar>
                <InnerVar>DotState [dotState=new DotState()]</InnerVar>
                <InnerVar>Token [graphName]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;openNodeScope;[jjtn000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AttributeStatement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dotGraph</ParamName>
                    <ParamType>DotGraph</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dotState</ParamName>
                    <ParamType>DotState</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SimpleNode [jjtn000=new SimpleNode(JJTATTRIBUTESTATEMENT)]</InnerVar>
                <InnerVar>boolean [jjtc000=true]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [attributes]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;openNodeScope;[jjtn000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>NodeStatement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dotGraph</ParamName>
                    <ParamType>DotGraph</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dotState</ParamName>
                    <ParamType>DotState</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SimpleNode [jjtn000=new SimpleNode(JJTNODESTATEMENT)]</InnerVar>
                <InnerVar>boolean [jjtc000=true]</InnerVar>
                <InnerVar>Token [nodeName]</InnerVar>
                <InnerVar>DotNode [node=new DotNode()]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [attributes]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;openNodeScope;[jjtn000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>EdgeStatement</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>dotGraph</ParamName>
                    <ParamType>DotGraph</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>dotState</ParamName>
                    <ParamType>DotState</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>SimpleNode [jjtn000=new SimpleNode(JJTEDGESTATEMENT)]</InnerVar>
                <InnerVar>boolean [jjtc000=true]</InnerVar>
                <InnerVar>Token [nodeName1]</InnerVar>
                <InnerVar>Token [nodeName2]</InnerVar>
                <InnerVar>String [startingNode]</InnerVar>
                <InnerVar>DotNode [node=new DotNode()]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [attributes]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;openNodeScope;[jjtn000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>AttributeList</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SimpleNode [jjtn000=new SimpleNode(JJTATTRIBUTELIST)]</InnerVar>
                <InnerVar>boolean [jjtc000=true]</InnerVar>
                <InnerVar>Map&lt;String,String&gt; [attributes=new HashMap&lt;String,String&gt;()]</InnerVar>
                <InnerVar>String[] [keyValuePair]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;openNodeScope;[jjtn000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>Attribute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String[]</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>SimpleNode [jjtn000=new SimpleNode(JJTATTRIBUTE)]</InnerVar>
                <InnerVar>boolean [jjtc000=true]</InnerVar>
                <InnerVar>Token [attName]</InnerVar>
                <InnerVar>Token [value]</InnerVar>
                <InnerVar>String[] [keyValuePair=new String[2]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;openNodeScope;[jjtn000]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_2_1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>xla</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_3_1</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_3R_5</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_3R_4</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Token [xsp]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_la1_init_0</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DOTParser</MethodName>
            <MethodComment>/** 
 * Constructor with InputStream. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>java.io.InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DOTParser</MethodName>
            <MethodComment>/** 
 * Constructor with InputStream and supplied encoding 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>java.io.InputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encoding</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReInit</MethodName>
            <MethodComment>/** 
 * Reinitialise. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>java.io.InputStream</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;ReInit;[stream, null]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReInit</MethodName>
            <MethodComment>/** 
 * Reinitialise. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>java.io.InputStream</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>encoding</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>token_source;ReInit;[jj_input_stream]</InnerMethodInvoke>
                <InnerMethodInvoke>jjtree;reset;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DOTParser</MethodName>
            <MethodComment>/** 
 * Constructor. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>java.io.Reader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReInit</MethodName>
            <MethodComment>/** 
 * Reinitialise. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>stream</ParamName>
                    <ParamType>java.io.Reader</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jj_input_stream;ReInit;[stream, 1, 1]</InnerMethodInvoke>
                <InnerMethodInvoke>token_source;ReInit;[jj_input_stream]</InnerMethodInvoke>
                <InnerMethodInvoke>jjtree;reset;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>DOTParser</MethodName>
            <MethodComment>/** 
 * Constructor with generated Token Manager. 
 */
</MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>DOTParserTokenManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReInit</MethodName>
            <MethodComment>/** 
 * Reinitialise. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>tm</ParamName>
                    <ParamType>DOTParserTokenManager</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jjtree;reset;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_consume_token</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Token</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kind</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Token [oldToken]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ParseException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_scan_token</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kind</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextToken</MethodName>
            <MethodComment>/** 
 * Get the next Token. 
 */
</MethodComment>
            <ReturnType>Token</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getToken</MethodName>
            <MethodComment>/** 
 * Get the specific Token. 
 */
</MethodComment>
            <ReturnType>Token</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Token [t=token]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_ntk</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_add_error_token</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>kind</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>pos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateParseException</MethodName>
            <MethodComment>/** 
 * Generate ParseException. 
 */
</MethodComment>
            <ReturnType>ParseException</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>boolean[] [la1tokens=new boolean[30]]</InnerVar>
                <InnerVar>int[][] [exptokseq=new int[jj_expentries.size()][]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>jj_expentries;clear;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;jj_rescan_token;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;jj_add_error_token;[0, 0]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>enable_tracing</MethodName>
            <MethodComment>/** 
 * Enable tracing. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>disable_tracing</MethodName>
            <MethodComment>/** 
 * Disable tracing. 
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_rescan_token</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>jj_save</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>index</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>xla</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JJCalls [p=jj_2_rtns[index]]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>