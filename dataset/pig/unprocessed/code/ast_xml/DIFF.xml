<Class>
    <Id>1213</Id>
    <Package>org.apache.pig.builtin</Package>
    <ClassName>DIFF</ClassName>
    <SuperClass>EvalFunc</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>DIFF  /** 
 * DIFF takes two bags as arguments and compares them.   Any tuples that are in one bag but not the other are returned.  If the fields are not bags then they will be returned if they do not match, or  an empty bag will be returned if the two records match. &lt;p&gt; The implementation assumes that both bags being passed to this function will fit entirely into memory simultaneously.  If that is not the case the UDF will still function, but it will be &lt;strong&gt;very&lt;/strong&gt; slow.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>mTupleFactory</FieldName>
            <FieldType>TupleFactory</FieldType>
        </Field>
        <Field>
            <FieldName>mBagFactory</FieldName>
            <FieldType>BagFactory</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>exec</MethodName>
            <MethodComment>/** 
 * Compares a tuple with two fields. Emits any differences.
 * @param input a tuple with exactly two fields.
 * @throws IOException if there are not exactly two fields in a tuple
 */
</MethodComment>
            <ReturnType>DataBag</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>input</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>computeDiff</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>bag1</ParamName>
                    <ParamType>DataBag</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>bag2</ParamName>
                    <ParamType>DataBag</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>emitTo</ParamName>
                    <ParamType>DataBag</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Set&lt;Tuple&gt; [s1=new HashSet&lt;Tuple&gt;()]</InnerVar>
                <InnerVar>Iterator&lt;Tuple&gt; [i1=bag1.iterator()]</InnerVar>
                <InnerVar>Set&lt;Tuple&gt; [s2=new HashSet&lt;Tuple&gt;()]</InnerVar>
                <InnerVar>Iterator&lt;Tuple&gt; [i2=bag2.iterator()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>allowCompileTimeCalculation</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>