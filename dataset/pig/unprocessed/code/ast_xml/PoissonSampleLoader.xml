<Class>
    <Id>816</Id>
    <Package>org.apache.pig.impl.builtin</Package>
    <ClassName>PoissonSampleLoader</ClassName>
    <SuperClass>SampleLoader</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PoissonSampleLoader  /** 
 * See "Skewed Join sampler" in http://wiki.apache.org/pig/PigSampler
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>NUMROWS_TUPLE_MARKER</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>numRowsSampled</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>avgTupleMemSz</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>rowNum</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>skipInterval</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>memToSkipPerSample</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>numRowSplTupleReturned</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>DEFAULT_SAMPLE_RATE</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>sampleRate</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>totalMemory</FieldName>
            <FieldType>long</FieldType>
        </Field>
        <Field>
            <FieldName>heapPerc</FieldName>
            <FieldType>double</FieldType>
        </Field>
        <Field>
            <FieldName>newSample</FieldName>
            <FieldType>Tuple</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>PoissonSampleLoader</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>funcSpec</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>ns</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>Tuple [t=loader.getNext()]</InnerVar>
                <InnerVar>Tuple [currentSample=newSample]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;updateSkipInterval;[t]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>updateSkipInterval</MethodName>
            <MethodComment>/** 
 * Update the average tuple size base on newly sampled tuple t and recalculate skipInterval
 * @param t - tuple
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>t</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>createNumRowTuple</MethodName>
            <MethodComment>/** 
 * @param sample - sample tuple
 * @return - Tuple appended with special marker string column, num-rows column
 * @throws ExecException
 */
</MethodComment>
            <ReturnType>Tuple</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>sample</ParamName>
                    <ParamType>Tuple</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [sz=(sample == null) ? 0 : sample.size()]</InnerVar>
                <InnerVar>TupleFactory [factory=TupleFactory.getInstance()]</InnerVar>
                <InnerVar>Tuple [t=factory.newTuple(sz + 2)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>t;set;[sz, NUMROWS_TUPLE_MARKER]</InnerMethodInvoke>
                <InnerMethodInvoke>t;set;[sz + 1, rowNum]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>ExecException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepareToRead</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>reader</ParamName>
                    <ParamType>RecordReader</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>split</ParamName>
                    <ParamType>PigSplit</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Configuration [conf=split.getConf()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>IOException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>