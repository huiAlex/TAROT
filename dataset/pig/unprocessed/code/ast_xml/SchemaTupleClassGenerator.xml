<Class>
    <Id>703</Id>
    <Package>org.apache.pig.data</Package>
    <ClassName>SchemaTupleClassGenerator</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>SchemaTupleClassGenerator  /** 
 * This class encapsulates the generation of SchemaTuples, as well as some logic around shipping code to the distributed cache.
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOG</FieldName>
            <FieldType>Log</FieldType>
        </Field>
        <Field>
            <FieldName>key</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>defaultValue</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>annotation</FieldName>
            <FieldType>Class</FieldType>
        </Field>
        <Field>
            <FieldName>annotation</FieldName>
            <FieldType>?</FieldType>
        </Field>
        <Field>
            <FieldName>nextGlobalClassIdentifier</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>compTup</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>compStr</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>compIsNull</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>compByte</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>listOfQueuesForIds</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>listOfQueuesForIds</FieldName>
            <FieldType>Queue&lt;Integer&gt;</FieldType>
        </Field>
        <Field>
            <FieldName>schema</FieldName>
            <FieldType>Schema</FieldType>
        </Field>
        <Field>
            <FieldName>primitives</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>isNulls</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>booleanBytes</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>booleans</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>codeDir</FieldName>
            <FieldType>File</FieldType>
        </Field>
        <Field>
            <FieldName>idQueue</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>idQueue</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>byteField</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>byteIncr</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>nullByte</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>byteIncr</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>nullByte</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>byteIncr</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>s</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>idQueue</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>idQueue</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>booleans</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>booleans</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>size</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>s</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>booleans</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>primitives</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>idQueue</FieldName>
            <FieldType>Queue</FieldType>
        </Field>
        <Field>
            <FieldName>idQueue</FieldName>
            <FieldType>Integer</FieldType>
        </Field>
        <Field>
            <FieldName>booleanByte</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>booleans</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>i</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>i</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>listOfFutureMethods</FieldName>
            <FieldType>List</FieldType>
        </Field>
        <Field>
            <FieldName>listOfFutureMethods</FieldName>
            <FieldType>TypeInFunctionStringOut</FieldType>
        </Field>
        <Field>
            <FieldName>id</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>appendable</FieldName>
            <FieldType>boolean</FieldType>
        </Field>
        <Field>
            <FieldName>contextAnnotations</FieldName>
            <FieldType>String</FieldType>
        </Field>
        <Field>
            <FieldName>fieldPos</FieldName>
            <FieldType>int</FieldType>
        </Field>
        <Field>
            <FieldName>content</FieldName>
            <FieldType>StringBuilder</FieldType>
        </Field>
        <Field>
            <FieldName>type</FieldName>
            <FieldType>byte</FieldType>
        </Field>
        <Field>
            <FieldName>appendable</FieldName>
            <FieldType>int</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>SchemaTupleClassGenerator</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>GenContext</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>key</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>defaultValue</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>annotation</ParamName>
                    <ParamType>?</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>key</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAnnotationCanonicalName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldGenerate</MethodName>
            <MethodComment>/** 
 * Checks the generated class to see if the annotation associated with this enum is present.
 * @param clazz
 * @return boolean type value
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>clazz</ParamName>
                    <ParamType>Class</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>shouldGenerate</MethodName>
            <MethodComment>/** 
 * Given a job configuration file, this checks to see if the default value has been overriden.
 * @param conf
 * @return boolean type value
 */
</MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>conf</ParamName>
                    <ParamType>Configuration</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [shouldString=conf.get(key)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resetGlobalClassIdentifier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateSchemaTuple</MethodName>
            <MethodComment>/** 
 * This class actually generates the code for a given Schema.
 * @param s as Schema
 * @param appendable as boolean, true or false depending on whether it should be appendable
 * @param id as int, id means identifier
 * @param contexts which are a list of contexts in which the SchemaTuple is intended to be instantiated
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>codeDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>contexts</ParamName>
                    <ParamType>GenContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [contextAnnotations=new StringBuilder()]</InnerVar>
                <InnerVar>String [codeString=produceCodeString(s,appendable,id,contextAnnotations.toString(),codeDir)]</InnerVar>
                <InnerVar>String [name="SchemaTuple_" + id]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>LOG;info;["Compiling class " + name + " for Schema: "+ s+ ", and appendability: "+ appendable]</InnerMethodInvoke>
                <InnerMethodInvoke>null;compileCodeString;[name, codeString, codeDir]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>generateSchemaTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>codeDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>contexts</ParamName>
                    <ParamType>GenContext</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>int [id=SchemaTupleClassGenerator.getNextGlobalClassIdentifier()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;generateSchemaTuple;[s, appendable, id, codeDir, contexts]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>produceCodeString</MethodName>
            <MethodComment>/** 
 * This method generates the actual SchemaTuple for the given Schema.
 * @param schema
 * @param whether the class should be appendable
 * @param identifier
 * @return  the generated class's implementation
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>contextAnnotations</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>codeDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>TypeInFunctionStringOutFactory [f=new TypeInFunctionStringOutFactory(s,id,appendable,contextAnnotations,codeDir)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getNextGlobalClassIdentifier</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>int</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>compileCodeString</MethodName>
            <MethodComment>/** 
 * This method takes generated code, and compiles it down to a class file. It will output the generated class file to the static temporary directory for generated code. Note that the compiler will use the classpath that Pig is instantiated with, as well as the generated directory.
 * @param String of generated code
 * @param name of class
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>className</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>generatedCodeString</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>codeDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>JavaCompilerHelper [compiler=new JavaCompilerHelper()]</InnerVar>
                <InnerVar>String [tempDir=codeDir.getAbsolutePath()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>compiler;addToClassPath;[tempDir]</InnerMethodInvoke>
                <InnerMethodInvoke>LOG;debug;["Compiling SchemaTuple code with classpath: " + compiler.getClassPath()]</InnerMethodInvoke>
                <InnerMethodInvoke>compiler;compile;[tempDir, new JavaCompilerHelper.JavaSourceFromString(className,generatedCodeString)]</InnerMethodInvoke>
                <InnerMethodInvoke>LOG;info;["Successfully compiled class: " + className]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CompareToSpecificString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected int generatedCodeCompareToSpecific(SchemaTuple_" + id + " t) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    int i = 0;"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    i = compare(checkIfNull_" + fieldNum + "(), getPos_"+ fieldNum+ "(), t.checkIfNull_"+ fieldNum+ "(), t.getPos_"+ fieldNum+ "());"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    if (i != 0) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        return i;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    return i;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>CompareToString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected int generatedCodeCompareTo(SchemaTuple t, boolean checkType) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    int i;"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["        i = compareWithElementAtPos(checkIfNull_" + fieldNum + "(), getPos_"+ fieldNum+ "(), t, "+ fieldNum+ ");"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        if (i != 0) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["            return i;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        }"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    return 0;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public int generatedCodeHashCode() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    int h = 17;"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    h = hashCodePiece(h, getPos_" + fieldPos + "(), checkIfNull_"+ fieldPos+ "());"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    return h;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>String [s]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["private static Schema schema = staticSchemaGen(\"" + s + "\");"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public Schema getSchema() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    return schema;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>FieldString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>codeDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>listOfQueuesForIds</ParamName>
                    <ParamType>Queue&lt;Integer&gt;</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>schema</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>codeDir</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>File</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SetPosString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>idQueue</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public void generatedCodeSetIterator(Iterator&lt;Object&gt; it) throws ExecException {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    setPos_" + fieldPos + "(unbox(it.next(), getDummy_"+ fieldPos+ "()));"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public void generatedCodeSetField(int fieldNum, Object val) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    switch (fieldNum) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    case (" + fieldPos + "):"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        if (val == null) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["            setNull_" + fieldPos + "(true);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["            return;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        setPos_" + fieldPos + "(unbox(val, getDummy_"+ fieldPos+ "()));"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        break;"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    default:"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        throw new ExecException(\"Invalid index given to set: \" + fieldNum);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public Object generatedCodeGetField(int fieldNum) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    switch (fieldNum) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    case (" + fieldPos + "): return checkIfNull_"+ fieldPos+ "() ? null : box(getPos_"+ fieldPos+ "());"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    default: throw new ExecException(\"Invalid index given to get: \" + fieldNum);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public boolean isGeneratedCodeFieldNull(int fieldNum) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    switch (fieldNum) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    case (" + fieldPos + "): return checkIfNull_"+ fieldPos+ "();"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    default: throw new ExecException(\"Invalid index given: \" + fieldNum);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["public boolean checkIfNull_" + fieldPos + "() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["public void setNull_" + fieldPos + "(boolean b) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected SchemaTuple generatedCodeSetSpecific(SchemaTuple_" + id + " t) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    if (t.checkIfNull_" + fieldPos + "()) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        setNull_" + fieldPos + "(true);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    } else {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        setPos_" + fieldPos + "(t.getPos_"+ fieldPos+ "());"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    return this;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SetEqualToSchemaTupleSpecificString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>IsSpecificSchemaTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public boolean isSpecificSchemaTuple(Object o) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    return o instanceof SchemaTuple_" + id + ";"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected boolean[] generatedCodeNullsArray() throws IOException {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;[s]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    return b;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>WriteNullsString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected void generatedCodeReadFields(DataInput in, boolean[] b) throws IOException {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>ReadString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>idQueue</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected void generatedCodeWriteElements(DataOutput out) throws IOException {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public long getGeneratedCodeMemorySize() {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;[s]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["public " + typeName() + " getDummy_"+ fieldPos+ "() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>GetPosString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>idQueue</ParamName>
                    <ParamType>Integer</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public int getSchemaTupleIdentifier() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    return " + id + ";"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>GetSchemaTupleIdentifierString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fS</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected int schemaSize() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    return " + i + ";"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fS</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected int generatedCodeSize() {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    return " + i + ";"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SizeString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["public byte getGeneratedCodeFieldType(int fieldNum) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    switch (fieldNum) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    case (" + fieldNum + "): return "+ fs.type+ ";"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    default: throw new ExecException(\"Invalid index given: \" + fieldNum);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>SetEqualToSchemaTupleString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected SchemaTuple generatedCodeSet(SchemaTuple t, boolean checkClass) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    if (checkClass &amp;&amp; t instanceof SchemaTuple_" + id + ") {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        return setSpecific((SchemaTuple_" + id + ")t);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    if (t.size() &lt; schemaSize()) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        throw new ExecException(\"Given SchemaTuple does not have as many fields as \"+getClass()+\" (\"+t.size()+\" vs \"+schemaSize()+\")\");"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    List&lt;Schema.FieldSchema&gt; theirFS = t.getSchema().getFields();"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    if (" + fs.type + " != theirFS.get("+ fieldNum+ ").type) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        throw new ExecException(\"Given SchemaTuple does not match current in field " + fieldNum + ". Expected type: "+ fs.type+ ", found: \" + theirFS.get("+ fieldNum+ ").type);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    if (t.isNull(" + fieldNum + ")) {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        setNull_" + fieldNum + "(true);"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    } else {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    return this;"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TypeAwareGetString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected " + name() + " generatedCodeGet"+ properName()+ "(int fieldNum) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    switch(fieldNum) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    default:"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["        return unbox" + properName() + "(getTypeAwareBase(fieldNum, \""+ name()+ "\"));"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TypeAwareSetString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>thisType</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>byte</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>name</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>properName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["@Override"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["protected void generatedCodeSet" + properName() + "(int fieldNum, "+ name()+ " val) throws ExecException {"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    switch(fieldNum) {"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldNum</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["    default: setTypeAwareBase(fieldNum, val, \"" + name() + "\");"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["    }"]</InnerMethodInvoke>
                <InnerMethodInvoke>null;add;["}"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TypeInFunctionStringOutFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>Schema</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>id</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>contextAnnotations</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>codeDir</ParamName>
                    <ParamType>File</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Queue&lt;Integer&gt; [nextNestedSchemaIdForSetPos=Lists.newLinkedList()]</InnerVar>
                <InnerVar>Queue&lt;Integer&gt; [nextNestedSchemaIdForGetPos=Lists.newLinkedList()]</InnerVar>
                <InnerVar>Queue&lt;Integer&gt; [nextNestedSchemaIdForReadField=Lists.newLinkedList()]</InnerVar>
                <InnerVar>List&lt;Queue&lt;Integer&gt;&gt; [listOfQueuesForIds=Lists.newArrayList(nextNestedSchemaIdForSetPos,nextNestedSchemaIdForGetPos,nextNestedSchemaIdForReadField)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>listOfFutureMethods;add;[new FieldString(codeDir,listOfQueuesForIds,s,appendable)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new SetPosString(nextNestedSchemaIdForSetPos)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GetPosString(nextNestedSchemaIdForGetPos)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GetDummyString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GenericSetString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GenericGetString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GeneralIsNullString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new CheckIfNullString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new SetNullString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new SetEqualToSchemaTupleSpecificString(id)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new WriteNullsString(appendable)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new ReadString(nextNestedSchemaIdForReadField,appendable)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new WriteString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new SizeString(appendable)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new MemorySizeString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GetSchemaTupleIdentifierString(id)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new HashCode()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new SchemaSizeString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new GetTypeString()]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new CompareToString(id)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new CompareToSpecificString(id,appendable)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new SetEqualToSchemaTupleString(id)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new IsSpecificSchemaTuple(id)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.INTEGER)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.LONG)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.FLOAT)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.DOUBLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.BYTEARRAY)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.CHARARRAY)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.BOOLEAN)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.DATETIME)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.BIGDECIMAL)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.BIGINTEGER)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.TUPLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.BAG)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareSetString(DataType.MAP)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.INTEGER)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.LONG)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.FLOAT)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.DOUBLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.BYTEARRAY)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.CHARARRAY)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.BOOLEAN)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.DATETIME)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.BIGDECIMAL)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.BIGINTEGER)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.TUPLE)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.BAG)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new TypeAwareGetString(DataType.MAP)]</InnerMethodInvoke>
                <InnerMethodInvoke>listOfFutureMethods;add;[new ListSetString()]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar>StringBuilder [head=new StringBuilder().append("import java.util.List;\n").append("import java.util.Map;\n").append("import java.util.Iterator;\n").append("import java.io.DataOutput;\n").append("import java.io.DataInput;\n").append("import java.io.IOException;\n").append("import java.math.BigDecimal;\n").append("import java.math.BigInteger;\n").append("\n").append("import com.google.common.collect.Lists;\n").append("\n").append("import org.joda.time.DateTime;").append("\n").append("import org.apache.pig.data.DataType;\n").append("import org.apache.pig.data.DataBag;\n").append("import org.apache.pig.data.Tuple;\n").append("import org.apache.pig.data.SchemaTuple;\n").append("import org.apache.pig.data.AppendableSchemaTuple;\n").append("import org.apache.pig.data.utils.SedesHelper;\n").append("import org.apache.pig.data.utils.BytesHelper;\n").append("import org.apache.pig.data.DataByteArray;\n").append("import org.apache.pig.data.BinInterSedes;\n").append("import org.apache.pig.impl.util.Utils;\n").append("import org.apache.pig.impl.logicalLayer.schema.Schema;\n").append("import org.apache.pig.impl.logicalLayer.FrontendException;\n").append("import org.apache.pig.backend.executionengine.ExecException;\n").append("import org.apache.pig.data.SizeUtil;\n").append("import org.apache.pig.data.SchemaTuple.SchemaTupleQuickGenerator;\n").append("\n").append(contextAnnotations)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>head.append("\n").append("    @Override\n").append("    public SchemaTupleQuickGenerator&lt;SchemaTuple_" + id + "&gt; getQuickGenerator() {\n").append("        return new SchemaTupleQuickGenerator&lt;SchemaTuple_" + id + "&gt;() {\n").append("            @Override\n").append("            public SchemaTuple_" + id + " make() {\n").append("                return new SchemaTuple_" + id + "();\n").append("            }\n").append("        };\n");append;["    }\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepare</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>process</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fieldPos</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>end</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getContent</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StringBuilder</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TypeInFunctionStringOut</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;add;["// this code generated by " + getClass()]</InnerMethodInvoke>
                <InnerMethodInvoke>null;addBreak;[]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isAppendable</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>TypeInFunctionStringOut</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>appendable</ParamName>
                    <ParamType>boolean</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>spaces</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>StringBuilder</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>indent</ParamName>
                    <ParamType>int</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>StringBuilder [out=new StringBuilder()]</InnerVar>
                <InnerVar>String [space="    "]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>add</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>s</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>addBreak</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>content;append;["\n"]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>prepareProcess</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>fs</ParamName>
                    <ParamType>Schema.FieldSchema</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>null;process;[fieldPos, fs]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isInt</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isLong</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isFloat</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDouble</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDateTime</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBigDecimal</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBigInteger</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isPrimitive</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBoolean</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isString</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBytearray</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isTuple</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isBag</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isMap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isObject</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>typeName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList/>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>typeName</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>proper</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>type</ParamName>
                    <ParamType>byte</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String [s=typeName(type)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>