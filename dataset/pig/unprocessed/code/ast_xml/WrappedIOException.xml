<Class>
    <Id>328</Id>
    <Package>org.apache.pig.impl.util</Package>
    <ClassName>WrappedIOException</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>WrappedIOException  /** 
 * @deprecated This class was introduced to overcome the limitation that before Java 1.6,  {@link IOException} did not have a constructor which took a {@link Throwable} argument. Since Pig code is now compiled with Java 1.6 and {@link EvalFunc} and {@link LoadFunc} user implementations should also use Java 1.6, they can use  {@link IOException} instead. From Java 1.6, {@link IOException} has constructors which take a {@link Throwable}argument.
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>wrap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IOException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>wrap</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>IOException</ReturnType>
            <ParameterList>
                <Parameter>
                    <ParamName>message</ParamName>
                    <ParamType>String</ParamType>
                </Parameter>
                <Parameter>
                    <ParamName>e</ParamName>
                    <ParamType>Throwable</ParamType>
                </Parameter>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IOException [wrappedException=new IOException(message + " [" + e.getMessage()+ "]")]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>wrappedException;setStackTrace;[e.getStackTrace()]</InnerMethodInvoke>
                <InnerMethodInvoke>wrappedException;initCause;[e]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>