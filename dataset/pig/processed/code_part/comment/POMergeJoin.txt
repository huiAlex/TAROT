oper implement:compound
implement merg:nsubj
join merg:xcomp
algorithm join:obj
map side:compound
side join:nsubj
input identifi:nsubj
join input:acl
left identifi:advcl
left tupl:amod
input tupl:compound
tupl record:nsubj
input record:compound
map record:nmod
tupl read:nsubj
hdfs read:obl
open read:advcl
stream open:obj
join support:nsubj
outer join:nsubj
join support:ccomp
data assum:nsubj
sort assum:xcomp
ascend order:amod
order sort:obl
data sort:nsubj
sort fail:advcl
descend order:amod
order sort:obl
effici generat:amod
tupl generat:compound
amount decreas:obj
memori amount:nmod
map task:compound
merg join:nsubj
join perform:ccomp
inp inp plan:compound
inp plan input:nsubj
local oper:amod
rearrang oper:compound
oper configur:obj
helper method:compound
set method:acl
tupl factori member:compound
store list:acl
tupl store:obj
implement depend:nsubj
list implement:nmod
list object:compound
object store:nsubj
tupl store:obj
extend class:acl
array list extend:obj
provid easi:xcomp
fli convers:compound
convers provid:obl
tupl convers:nmod
schema tupl provid:obl
sourc schema tupl:nmod
input file set:nsubj
set input file:acl
