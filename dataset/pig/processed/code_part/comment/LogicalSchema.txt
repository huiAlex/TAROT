logic perspect:amod
perspect schema:obl
reset uid:compound
fieldschema uid:nmod
schema compar:obj
check compar:advcl
input schema:compound
schema cast:nsubj
cast check:advcl
cast schema:compound
sch schema:compound
schema cast:obl
cast input:compound
input schema:compound
sch schema:compound
cast oper:compound
oper schema:nmod
true oper:amod
castabl true:obl
field add:obj
schema add:obl
ad field:acl
schema ad:obl
field fetch:obj
alia field:compound
alia field:compound
field fetch:obl
null field:dep
field null:obl
logic field schema find:obj
field match:nsubj
part match:obj
namespac alia:amod
alia part:nmod
field schema return:obj
schema return:obj
null alia:amod
alia return:obj
null logic field schema:dep
alia tupl:nsubj
tupl null:dep
field fetch:obj
field number:compound
field num number:compound
field number:compound
number fetch:obl
field fetch:obj
field list:compound
field list:nmod
schema size:nmod
schema equal:nsubj
equal size:amod
size equal:ccomp
field schema:compound
schema equal:nsubj
consid schema:acl
function compar:nsubj
alia compar:obj
field alia:nmod
schema equal:nsubj
equal size:amod
size equal:ccomp
field schema:compound
schema equal:nsubj
consid schema:acl
compar alia argument:compound
argument set:nsubj
set compar:advcl
true set:advcl
alia compar:nsubj
field alia:nmod
true equal:amod
equal compar alia:amod
field index:nmod
field index:nmod
schema merg:obj
user declar:dep
declar schema:amod
union side:obl
left side:amod
side schema:parataxis
schema infer:obj
union side:obl
side infer:parataxis
mode merg:nsubj
schema merg:obj
load union:compound
foreach union:compound
union merg:obl
load foreach:compound
user defin:dep
defin schema:amod
schema set:xcomp
specif type:amod
string numer:conj
case type:compound
type mismatch:compound
mismatch expect:obl
type check visitor fill:nsubj
fill expect:ccomp
gap fill:obj
merg schema:amod
null schema:conj
merg fail:nsubj
fail null:acl
merg collect:compound
schema collect:nmod
column alias:compound
merg schema schema:nmod
function merg:nsubj
merg function:acl
schema merg:dep
type incompat:nsubj
incompat merg:advcl
bag tupl:conj
consid equal:ccomp
compat list:amod
schema list:compound
list consid:obj
schema consid:obl
merg consid:advcl
column alia:compound
alia merg:nsubj
schema merg:obj
schema merg:obj
column alias:compound
function merg:nsubj
merg function:acl
schema merg:dep
type incompat:nsubj
incompat merg:advcl
bag tupl:conj
consid equal:ccomp
compat consid:xcomp
schema compar:obj
equal relax:compound
schema relax:compound
relax check:dep
true schema:amod
schema check:nsubj
relax alia check:obj
true check:advcl
alias check:nsubj
check compar:advcl
true check:xcomp
schema equal:nsubj
equal check:advcl
fals equal:dep
pig schema:compound
schema requir:nsubj
tupl schema:compound
schema requir:obj
bag requir:obl
gap fill:obj
equal defin:nsubj
schema type:conj
null schema:amod
schema type:conj
alia check:nsubj
uid alia:conj
uid check:nsubj
equal defin:nsubj
schema type:conj
null schema:amod
schema type:conj
compar alia set:nsubj
argument compar alia:dep
set compar:advcl
true set:advcl
alia compar:nsubj
true equal:amod
equal compar alia:amod
valu give:obj
uid give:obl
field schema:compound
schema uid:nmod
field schema:compound
add stamp:dep
uid add:obj
field schema argument:compound
argument uid:nmod
field schema add:obl
argument null:nsubj
null add:advcl
field schema stamp:dep
uid field schema:compound
uid field schema field schema:compound
field schema stamp:obl
uid rest:obj
fieldschema uid:nmod
schema uid:nmod
schema fieldschema:conj
compar fals:dep
field schema:compound
schema compar:obj
equal relax:compound
relax compar:obl
true check:advcl
check relax:acl
tupl schema:amod
schema check:iobj
relax alia check:obj
true check:advcl
check relax alia:acl
alias equal:nsubj
true equal:dep
field schema equal:nsubj
equal check:xcomp
castabl check:advcl
true castabl:dep
merg depend:ccomp
logic field schema merg:obj
behavior depend:nsubj
merg behavior:nmod
mode depend:obl
left side:amod
compat side:dep
mode throw:obl
null schema:amod
specif type:amod
load foreach:compound
foreach schema:obl
user declar:dep
declar schema:amod
load foreach:compound
foreach infer:obl
schema infer:obj
union mode:obl
left side:amod
side mode:compound
merg mode:compound
mode schema:parataxis
pig schema:compound
field schema:compound
schema requir:nsubj
tupl schema:compound
schema requir:obj
bag requir:obl
gap fill:obj
