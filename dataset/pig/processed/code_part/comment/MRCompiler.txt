compil map:amod
plan map:compound
map reduc:nsubj
plan built:nsubj
built reduc:dep
compil built:obl
compil plan:acl
physic plan:amod
plan compil:obj
method compil:nsubj
user call:nsubj
call method:acl
plan compil:obj
submit plan:amod
store oper:compound
leaf oper:nmod
map reduc:nsubj
plan reduc:obj
plan compil:obj
map reduc oper:compound
oper compil:obl
store compil:obl
store oper:conj
cur compil:obl
reduc merg plan:compound
oper reduc:obj
leaf node:compound
node reduc:obl
map mro:compound
oper mro:compound
mro node:nmod
ad reduc:advcl
load ad:obj
merg plan connect:obj
list merg plan:dep
reduc oper:compound
map oper:nmod
oper list:nmod
forc reduc:nsubj
current map:amod
job reduc:obj
store reduc:obl
temporari file:amod
file reduc:obl
spec file:compound
temp file:compound
forc file:dep
store forc:obj
finish oper:acl
store finish:obl
roper start:obj
connect start:conj
load store:compound
store insert:nsubj
oper insert:obl
temporari dfs:amod
dfs return:dep
path return:discourse
map oper:compound
oper merg:obj
compil input oper:nmod
singl roper:amod
merg roper:amod
map roper:compound
roper merg:obl
return merg:conj
list return:obj
merg oper:amod
map oper:compound
rest oper:nmod
rest oper:conj
reduc oper:compound
oper return:advcl
map oper:compound
oper remov:obj
merg oper:acl
plan merg:obl
connect move:nsubj
merg oper:amod
map oper:compound
oper move:obl
merg implement:csubj
sequenc implement:obl
binari merg:amod
merg sequenc:nmod
phi plan fin plan:compound
fin plan merg:appos
list lst:compound
lst fin plan:appos
fin plan merg:dep
lst compil input:compound
list merg:nmod
map plan:compound
plan list:nmod
fin plan final:amod
final plan:amod
plan list:nmod
merg list:amod
plan list:compound
list plan:acl
map plan:compound
plan list:nmod
merg list:acl
split oper:compound
oper compil:obj
split job:compound
job close:obj
replac close:advcl
split oper:compound
oper replac:obj
store replac:obl
creat close:advcl
creat replac:conj
map roper:compound
roper creat:obj
return close:conj
current oper:amod
oper compil:dep
oper compil:nsubj
compil return:dep
oper connect:nsubj
split job:compound
job connect:obl
load store:compound
store connect:obl
split oper:compound
oper add:obj
split map:compound
map add:obl
oper split:dep
multipl input:amod
join input:compound
input number:nmod
prune oper:conj
input prune:obj
fragment input:compound
creat oper:conj
creat prune:conj
separ job:amod
job creat:obj
replic input:amod
replic file:amod
configur file:acl
pofr join oper:compound
oper configur:obl
join job:amod
job set:ccomp
paramet set:ccomp
paramet job:conj
leftmost relat:compound
relat refer:nsubj
base relat:compound
relat refer:obl
mapper fed:obl
oper connect:nsubj
base mro refer:obl
oper creat:obj
index job:compound
idx oper job:appos
idx oper connect:obj
map oper connect:obl
plan map oper:nmod
merg join:nsubj
join input:compound
work join:obj
oper predecessor:compound
identifi predecessor:acl
left identifi:advcl
oper merg:obj
job generat:obj
oper run:nsubj
generat run:xcomp
fli index:compound
index generat:obj
side index:nmod
oper identifi:nsubj
oper identifi:obl
map phase:compound
phase oper:dep
load preced:obl
physic plan:amod
set yank:conj
plan yank:obl
join plan:nmod
phase reduc:obj
start oper:compound
map phase:compound
phase add:advcl
add left oper:appos
join oper:compound
oper add:obj
phase reduc:obj
start close:conj
oper start:obj
counter job:compound
job depend:obl
row number:compound
number depend:advcl
row number:compound
number save:obl
previous job:amod
job save:nsubj
counter ad:nsubj
ad save:conj
leaf ad:obl
map task:compound
task leaf:nmod
counter ad:nsubj
leaf ad:obl
reduc task:compound
task leaf:nmod
sort phase:compound
phase ad:dep
rank close:obl
previous job:amod
job close:obj
rank ad:nsubj
ad close:conj
map phase:compound
phase ad:obl
sampl job:compound
job join:nsubj
skew job:acl
join creat:ccomp
pattern packag:dep
join packag chang:obl
materi avoid:ccomp
input materi:obj
construct avoid:ccomp
construct materi:conj
result construct:obj
join plan:compound
fli join:obl
map join:obj
reduc join:dep
plan result:nmod
optim construct:advcl
