algebra function:amod
function comput:nsubj
function combin:nsubj
distinct function:conj
distinct comput:nsubj
nest plan:amod
plan distinct:nmod
foreach plan:nmod
map comput:obl
combin comput:conj
phase combin:obj
foreach statement:compound
statement ad:nsubj
initi form:amod
intermedi initi:conj
intermedi form:amod
form statement:nmod
algebra function:amod
function form:nmod
map ad:xcomp
combin ad:xcomp
combin map:conj
plan map:obj
bag portion:compound
group portion:nmod
result group:nmod
project result:acl
algebra udf:amod
express udf:compound
udf group:nmod
udf result:conj
input bag:nmod
case combin:nmod
perform degrad:obj
data reduct:nmod
combin serial:compound
stage combin:obj
offset combin:advcl
cost offset:obj
addit number:amod
number cost:nmod
time number:nmod
serial size:nmod
area major:dep
enhanc area:nmod
order limit:compound
limit queri:nmod
nest foreach:amod
foreach queri:conj
group foreach:nmod
algebra express:amod
combin translat:obl
partial agg combin:compound
combin oper:compound
partial oper:amod
aggreg oper:compound
oper translat:obl
find list:dep
algebra oper:amod
oper find:obj
check find:conj
check list:dep
foreach statement:amod
statement suitabl:nsubj
suitabl check:advcl
plan combin:nsubj
foreach plan:nmod
null combin:dep
plan combin:nsubj
combin suitabl:xcomp
combin oper:amod
oper list:nmod
algebra pou func:amod
successor pou func:nmod
call project:acl
skip call:advcl
project skip:obj
proj pplan:compound
project pplan:compound
pplan physic:obl
physic plan:amod
plan null:obl
oper project:compound
algebra pou func:amod
pou func project:conj
algebra pou func:amod
pou func return:nsubj
foreach add:nsubj
scope foreach:nmod
alia scope:appos
foreach alia:nmod
add creat:ccomp
plan add:obj
project plan:acl
group column:compound
column project:obj
input type:compound
foreach type:compound
sourc type:compound
foreach type:compound
key type type:compound
group type:nmod
key foreach:amod
foreach group:nmod
plan creat:obj
add creat:conj
clone add:obj
oper alg:compound
alg clone:nmod
predecessor add:obj
predecessor clone:conj
physic pplan:amod
plan pplan:compound
pplan predecessor:nmod
algebra pplan:amod
oper pplan:compound
pplan alg:dep
physic plan:amod
plan alg:dep
predecessor pplan:dep
add pplan:conj
pplan newplan:compound
newplan add:obl
algebra function:amod
function add:obj
project add:obl
foreach add:obl
combin cfe:compound
cfe foreach:nmod
combin map:compound
map foreach:nmod
physic oper:amod
oper map:nmod
posit oper:nmod
input posit:nmod
local rearrang replac:obj
add replac:dep
map foreach:compound
foreach add:obj
map pre combin:compound
local pre combin:amod
rearrang local:ccomp
connect local:ccomp
connect rearrang:conj
map plan pre combin:amod
pre combin foreach:appos
mfe mlr:compound
map agg mlr:compound
mlr pre combin:dep
index plan:compound
algebriac type:compound
function type:compound
type chang:obj
algebra function:amod
function chang:obl
map function:nmod
combin chang:conj
map combin:obl
combin chang:conj
algebra function:amod
function leaf:nsubj
leaf combin:ccomp
plan leaf:nmod
type plan:dep
local rearrang:nsubj
local add:nsubj
rearrang creat:ccomp
clone rearrang:advcl
exist clone:obj
add creat:ccomp
add rearrang:conj
plan add:obj
project add:advcl
key rearrang:nsubj
rearrang project:ccomp
algebra interfac:amod
replac visitor:acl
project replac:obj
bag project:appos
pou func visitor:nmod
data bag pou func:appos
plan walker:compound
plan walker:compound
