logic plan view:nsubj
logic view:amod
relat oper:amod
oper view:nmod
pig execut:nsubj
execut oper:acl
script execut:obl
relat oper:amod
relat oper:amod
equal check:nsubj
call check:advcl
equal call:ccomp
leaf equal:obl
plan leaf:nmod
plan connect:nsubj
connect assum:ccomp
graph connect:obj
leaf test:nsubj
test ineffici:advcl
equal test:obj
predecessor chosen:nsubj
oppos predecessor:dep
successor oppos:obl
chosen check:ccomp
split depend:nsubj
multipl successor:amod
depend chosen:advcl
order depend:obl
output order:nmod
correct output:nmod
join depend:advcl
multipl predecessor:amod
predecessor chosen:obl
output revers:obj
split output:nmod
graph revers:obl
correct implic:compound
input revers:obj
join input:acl
method equal:nsubj
detect equal:ccomp
predecessor detect:obj
order predecessor:nmod
successor detect:obj
successor predecessor:conj
order successor:nmod
fals return:xcomp
determinist eval func:amod
signatur return:dep
logic plan signatur:nmod
signatur identifi:nsubj
uniqu identifi:amod
plan identifi:nmod
generat plan:acl
pig script:compound
script generat:obl
script guarante:nsubj
run script:acl
multipl time:amod
time run:obl
version run:obl
pig version:nmod
produc guarante:xcomp
signatur produc:obj
input locat:compound
output input:conj
output locat:compound
locat differ:nsubj
differ guarante:advcl
uniqu identifi:amod
logic plan:amod
plan identifi:obl
