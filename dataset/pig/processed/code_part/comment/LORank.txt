oper implement:compound
implement rank:dep
oper syntax:compound
list plan:nsubj
logic express:amod
express list:nmod
rank plan:obl
ascend column:amod
column list:nmod
rank list:nmod
dens rank:amod
consecut rank:amod
rank assign:obj
tupl assign:obl
simpl rank:amod
rank assign:obl
row mode:compound
number mode:compound
mode assign:nsubj
consecut number:amod
number mode:acl
tupl assign:obl
generat uid:acl
rank column:compound
column generat:obl
uid persist:nsubj
call persist:obl
reset schema call:nmod
schema call:nmod
schema reset schema:conj
rank output:nmod
long valu:amod
valu compos:obl
prepend valu:acl
rest prepend:obl
input schema:compound
schema rest:nmod
schema prepend:obj
dens rank:amod
set dens rank:dep
dens rank:amod
dens rank:amod
rank dens rank:advcl
simpl oper:amod
rank oper:compound
row number:compound
attach number:acl
tupl attach:obl
simpl oper:amod
rank oper:compound
oper set:advcl
row oper:compound
number oper:compound
oper row number:dep
