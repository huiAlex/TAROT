core process:compound
process implement:compound
backend implement:nmod
pig backend:nmod
execut engin decid:nsubj
chosen execut engin:acl
deleg decid:xcomp
work deleg:ccomp
class work:nmod
util method:compound
method set:nmod
hadoop center:obl
state reset:obj
launch reset:obl
pig job:compound
job execut:nsubj
execut explain:ccomp
infrastructur execut:obl
explain physic plan:dep
pig context explain:obj
output write:obj
format write:nsubj
write format:acl
verbos amount:amod
amount write:obl
inform amount:nmod
print format:nmod
progress comput:obj
current job:amod
job progress:nmod
submit job:acl
job control object:compound
object job:dep
submit object:acl
job client submit:obj
submit job client:acl
progress submit:obj
precentag submit:obl
doubl format:amod
format precentag:nmod
progress return:dep
part progress:acl
submit object:amod
job control object:compound
object part:nmod
progress job:nsubj
num scale:obl
job num:nmod
present job:acl
job control present:obl
job requir:nsubj
progress job:nmod
return requir:iobj
percentag progress:compound
progress return:dep
handler class:compound
class thrown:nsubj
handl class:acl
job thread:compound
control thread:compound
thread thrown:obl
local class:amod
class thread:dep
catch mechan:acl
handl catch:advcl
handler regist:nsubj
regist handl:advcl
default handler:compound
handler null:nsubj
null catch:advcl
null handl:conj
string represent:compound
represent handl:nsubj
intern pig:amod
pig handl:obj
subclass handl:obj
subclass pig:conj
overrid pig:acl
string method:compound
method overrid:obj
object method:dep
string represent:compound
represent stack trace:nsubj
print stack trace represent:nmod
input stack trace:compound
stack trace method:acl
array stack trace line:dep
string array:nmod
repres string:acl
print stack trace output:compound
output repres:obj
split output:acl
newlin split:obl
object stack trace line:dep
string represent:compound
represent stack trace:nsubj
print stack trace represent:nmod
input stack trace:compound
stack trace object:acl
string line:dep
represent return:nsubj
stack trace:compound
trace represent:nmod
return line:parataxis
stack trace element object:compound
repres return:advcl
stack trace:compound
trace repres:obj
