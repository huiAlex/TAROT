load func data:compound
load data:compound
pig data:nmod
hdfs file:compound
file read:obl
sourc read:obl
sourc file:conj
load func coupl:nsubj
hadoop coupl:obl
load func sit:nmod
input format sit:nmod
translat sit:nmod
translat input format:conj
key translat:obl
valu translat:obl
valu key:conj
hadoop key:nmod
pig tupl:nmod
tupl translat:obl
basic featur:amod
load function:compound
function major:nmod
advanc function:amod
interfac separ:ccomp
load function:compound
function implement:nsubj
implement interfac:ccomp
load metadata load caster:conj
load push load caster:conj
order load func load caster:conj
collect load func load caster:conj
index load func load caster:conj
method call:nsubj
pig runtim:compound
runtim call:obl
convert call:xcomp
input locat:compound
locat convert:obj
absolut path:amod
path convert:obl
locat relat:nsubj
relat convert:advcl
load func implement:compound
implement free:nsubj
choos free:xcomp
convert choos:ccomp
relat locat:amod
locat convert:obj
absolut locat:amod
locat convert:obl
depend convert:advcl
locat string:compound
string repres:nsubj
repres depend:advcl
hdfs path:compound
path repres:obj
data sourc:compound
sourc repres:obj
sourc path:conj
locat path:nmod
load statement:compound
statement repres:advcl
script statement:nmod
current direct:amod
work direct:amod
direct base:nsubj
base free:advcl
statement base:obl
script base:obl
load statement:compound
statement base:obl
home directori:compound
absolut locat:amod
locat pass:nsubj
base argument:case
argument locat:nmod
pass directori:parataxis
loader communic:obl
locat communic:obj
object locat:nmod
load object:acl
locat string:compound
string valu:nsubj
pass string:acl
load func pass:obl
return valu:compound
locat communic:obj
inform communic:obj
inform locat:conj
object communic:obl
method call:nsubj
frontend call:obl
backend time:amod
multipl time:amod
time call:obl
time frontend:conj
implement bear:nsubj
mind bear:obl
method call:nsubj
method ensur:nsubj
call bear:ccomp
multipl time:amod
time call:obl
ensur bear:ccomp
ensur call:conj
inconsist effect:amod
side effect:compound
multipl call:amod
return locat:dep
path string:appos
job return:obl
job store:compound
object store:compound
store job:dep
retriev inform:compound
store retriev:dep
inform return:obl
inform job:conj
udf context locat:nmod
plan call:obl
input format instanc:nmod
load function:compound
input format instanti:obj
control instanti:advcl
construct control:ccomp
execut call:obl
return support:csubj
null return:xcomp
byte array:compound
array cast:obl
loader support:obl
initi load func:compound
read data:amod
data load func:nmod
execut call:obl
instanti pass:advcl
input split instanti:obl
reader record reader:compound
load func split:compound
split instanc:nmod
input split:dep
pig split record reader:dep
process record reader:nmod
tupl retriev:obj
process retriev:advcl
implement reus:nsubj
tupl object:amod
object reus:obj
member object:compound
object reus:obj
return object:acl
call return:obl
return object:acl
tupl object:compound
object return:obj
call return:obl
tupl process:nsubj
tupl null:nsubj
null process:conj
process tupl:acl
multipl string:amod
string join:obj
string join:obl
delimit string:acl
string collect:nmod
separ delimit:acl
string separ:obj
comma separ:obl
separ string:amod
path string:compound
string pars:obj
string array:compound
array pars:obl
method escap:nsubj
comma escap:obj
hadoop pattern:compound
glob pattern:compound
pattern comma:nmod
path pattern:nmod
method borrow:nsubj
jira open:nsubj
mapreduc jira:dep
jira fix:nsubj
comma separ path separ:nsubj
comma comma separ path:dep
string separ:obj
array separ:xcomp
path string:compound
string array:nmod
absolut path:amod
path construct:obj
file locat:compound
locat construct:obl
current directori:amod
directori construct:obl
directori locat:conj
current directori:amod
code form:dep
hdfs form:dep
code mode:compound
hadoop map reduc:compound
map reduc code:nmod
mode hdfs:nmod
form code:compound
hadoop mode:compound
local mode:amod
mode code:nmod
load statement:compound
current directori:amod
file directori:compound
system directori:compound
directori statement:nmod
absolut path:amod
path directori:dep
file path:nmod
file system:compound
file system:compound
system scheme:nmod
method call:nsubj
method call:nsubj
pig call:obl
pass call:ccomp
uniqu signatur:amod
signatur pass:obj
load func pass:obl
udf context store:obl
inform store:obj
method invoc:compound
invoc store:obl
requir field list store:obj
pass requir field list:acl
load push requir field list:compound
requir field list pass:obl
return store:advcl
tupl return:obj
method call:nsubj
method call:nmod
load func method:nmod
signatur load func:dep
uniqu signatur:amod
signatur load func:dep
identifi call:acl
load func identifi:obj
warn sue:dep
warn messag:compound
messag aggreg:nsubj
messag report:nsubj
report aggreg:conj
user aggreg:obl
msg messag:compound
string messag:compound
warn type:compound
warn enum type:compound
type messag:obl
warn type:nmod
file list:nmod
distribut cach:amod
default implement:compound
implement return:nsubj
null return:xcomp
file list:obl
file list:nmod
locat file:dep
backend ship:obl
distribut cach:amod
cach file:nmod
check return:dep
func util check:obl
util function:compound
function func util:nmod
facilit check:xcomp
default implement:compound
implement return:nsubj
null return:xcomp
file list:obl
