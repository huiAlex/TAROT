visitor expand:nsubj
walk visitor:acl
oper walk:obj
nest plan:amod
translat plan:conj
project translat:obj
list oper:nmod
project oper:compound
oper list:nmod
project list:appos
project list:appos
project list:dep
project list:appos
input schema:compound
schema null:nsubj
project rang:compound
rang expand:obj
project rang:compound
input schema:compound
schema null:nsubj
expand plan:compound
multipl plan:amod
project star:compound
star project:dep
return list:amod
list star:obj
plan argument:compound
project star:compound
star find:obj
foreach statement:amod
statement star:nmod
project star:compound
project star:compound
star plan:compound
exp plan express:compound
express plan:compound
relat plan:amod
foreach project express:compound
project express plan:nmod
satisfi plan:acl
condit satisfi:obj
plan expand:obj
project star:compound
multipl plan:amod
project plan:acl
singl column:amod
column proj:compound
exp plan proj:compound
proj project:obj
logic plan:amod
plan creat:obj
project creat:obl
attach project:acl
logic relat attach rel:compound
attach rel attach:obl
project attach:obl
project attach rel:conj
column attach:obl
input attach rel:compound
attach rel col num:compound
input num col num:compound
col num column:nmod
logic express plan argument:compound
project output:compound
star output:compound
output return:nsubj
null exp plan:amod
exp plan return:obj
